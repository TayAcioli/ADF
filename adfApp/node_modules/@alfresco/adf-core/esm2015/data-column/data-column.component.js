/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
export class DataColumnComponent {
    constructor() {
        /**
         * Value type for the column. Possible settings are 'text', 'image',
         * 'date', 'fileSize' and 'location'.
         */
        this.type = 'text';
        /**
         * Toggles ability to sort by this column, for example by clicking the column header.
         */
        this.sortable = true;
        /**
         * Display title of the column, typically used for column headers. You can use the
         * i18n resource key to get it translated automatically.
         */
        this.title = '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (!this.srTitle && this.key === '$thumbnail') {
            this.srTitle = 'Thumbnail';
        }
    }
}
DataColumnComponent.decorators = [
    { type: Component, args: [{
                selector: 'data-column',
                template: ''
            }] }
];
DataColumnComponent.propDecorators = {
    key: [{ type: Input }],
    type: [{ type: Input }],
    format: [{ type: Input }],
    sortable: [{ type: Input }],
    title: [{ type: Input }],
    template: [{ type: ContentChild, args: [TemplateRef,] }],
    formatTooltip: [{ type: Input }],
    srTitle: [{ type: Input, args: ['sr-title',] }],
    cssClass: [{ type: Input, args: ['class',] }]
};
if (false) {
    /**
     * Data source key. Can be either a column/property key like `title`
     *  or a property path like `createdBy.name`.
     * @type {?}
     */
    DataColumnComponent.prototype.key;
    /**
     * Value type for the column. Possible settings are 'text', 'image',
     * 'date', 'fileSize' and 'location'.
     * @type {?}
     */
    DataColumnComponent.prototype.type;
    /**
     * Value format (if supported by the parent component), for example format of the date.
     * @type {?}
     */
    DataColumnComponent.prototype.format;
    /**
     * Toggles ability to sort by this column, for example by clicking the column header.
     * @type {?}
     */
    DataColumnComponent.prototype.sortable;
    /**
     * Display title of the column, typically used for column headers. You can use the
     * i18n resource key to get it translated automatically.
     * @type {?}
     */
    DataColumnComponent.prototype.title;
    /** @type {?} */
    DataColumnComponent.prototype.template;
    /**
     * Custom tooltip formatter function.
     * @type {?}
     */
    DataColumnComponent.prototype.formatTooltip;
    /**
     * Title to be used for screen readers.
     * @type {?}
     */
    DataColumnComponent.prototype.srTitle;
    /**
     * Additional CSS class to be applied to column (header and cells).
     * @type {?}
     */
    DataColumnComponent.prototype.cssClass;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsiZGF0YS1jb2x1bW4vZGF0YS1jb2x1bW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNcEYsTUFBTTs7Ozs7O29CQVlhLE1BQU07Ozs7d0JBUUQsSUFBSTs7Ozs7cUJBTVIsRUFBRTs7Ozs7SUFpQmxCLFFBQVE7UUFDSixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxLQUFLLFlBQVksRUFBRTtZQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLFdBQVcsQ0FBQztTQUM5QjtLQUNKOzs7WUFuREosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUUsRUFBRTthQUNmOzs7a0JBTUksS0FBSzttQkFNTCxLQUFLO3FCQUlMLEtBQUs7dUJBSUwsS0FBSztvQkFNTCxLQUFLO3VCQUdMLFlBQVksU0FBQyxXQUFXOzRCQUl4QixLQUFLO3NCQUlMLEtBQUssU0FBQyxVQUFVO3VCQUloQixLQUFLLFNBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbiAvKiB0c2xpbnQ6ZGlzYWJsZTpjb21wb25lbnQtc2VsZWN0b3Igbm8taW5wdXQtcmVuYW1lICAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIE9uSW5pdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdkYXRhLWNvbHVtbicsXG4gICAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIERhdGFDb2x1bW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgLyoqIERhdGEgc291cmNlIGtleS4gQ2FuIGJlIGVpdGhlciBhIGNvbHVtbi9wcm9wZXJ0eSBrZXkgbGlrZSBgdGl0bGVgXG4gICAgICogIG9yIGEgcHJvcGVydHkgcGF0aCBsaWtlIGBjcmVhdGVkQnkubmFtZWAuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBrZXk6IHN0cmluZztcblxuICAgIC8qKiBWYWx1ZSB0eXBlIGZvciB0aGUgY29sdW1uLiBQb3NzaWJsZSBzZXR0aW5ncyBhcmUgJ3RleHQnLCAnaW1hZ2UnLFxuICAgICAqICdkYXRlJywgJ2ZpbGVTaXplJyBhbmQgJ2xvY2F0aW9uJy5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHR5cGU6IHN0cmluZyA9ICd0ZXh0JztcblxuICAgIC8qKiBWYWx1ZSBmb3JtYXQgKGlmIHN1cHBvcnRlZCBieSB0aGUgcGFyZW50IGNvbXBvbmVudCksIGZvciBleGFtcGxlIGZvcm1hdCBvZiB0aGUgZGF0ZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGZvcm1hdDogc3RyaW5nO1xuXG4gICAgLyoqIFRvZ2dsZXMgYWJpbGl0eSB0byBzb3J0IGJ5IHRoaXMgY29sdW1uLCBmb3IgZXhhbXBsZSBieSBjbGlja2luZyB0aGUgY29sdW1uIGhlYWRlci4gKi9cbiAgICBASW5wdXQoKVxuICAgIHNvcnRhYmxlOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBEaXNwbGF5IHRpdGxlIG9mIHRoZSBjb2x1bW4sIHR5cGljYWxseSB1c2VkIGZvciBjb2x1bW4gaGVhZGVycy4gWW91IGNhbiB1c2UgdGhlXG4gICAgICogaTE4biByZXNvdXJjZSBrZXkgdG8gZ2V0IGl0IHRyYW5zbGF0ZWQgYXV0b21hdGljYWxseS5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlOiBzdHJpbmcgPSAnJztcblxuICAgIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYpXG4gICAgdGVtcGxhdGU6IGFueTtcblxuICAgIC8qKiBDdXN0b20gdG9vbHRpcCBmb3JtYXR0ZXIgZnVuY3Rpb24uICovXG4gICAgQElucHV0KClcbiAgICBmb3JtYXRUb29sdGlwOiBGdW5jdGlvbjtcblxuICAgIC8qKiBUaXRsZSB0byBiZSB1c2VkIGZvciBzY3JlZW4gcmVhZGVycy4gKi9cbiAgICBASW5wdXQoJ3NyLXRpdGxlJylcbiAgICBzclRpdGxlOiBzdHJpbmc7XG5cbiAgICAvKiogQWRkaXRpb25hbCBDU1MgY2xhc3MgdG8gYmUgYXBwbGllZCB0byBjb2x1bW4gKGhlYWRlciBhbmQgY2VsbHMpLiAqL1xuICAgIEBJbnB1dCgnY2xhc3MnKVxuICAgIGNzc0NsYXNzOiBzdHJpbmc7XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNyVGl0bGUgJiYgdGhpcy5rZXkgPT09ICckdGh1bWJuYWlsJykge1xuICAgICAgICAgICAgdGhpcy5zclRpdGxlID0gJ1RodW1ibmFpbCc7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=