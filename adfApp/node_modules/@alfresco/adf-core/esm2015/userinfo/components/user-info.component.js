/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { AuthenticationService } from '../../services/authentication.service';
import { BpmUserModel } from './../models/bpm-user.model';
import { EcmUserModel } from './../models/ecm-user.model';
import { BpmUserService } from './../services/bpm-user.service';
import { EcmUserService } from './../services/ecm-user.service';
export class UserInfoComponent {
    /**
     * @param {?} ecmUserService
     * @param {?} bpmUserService
     * @param {?} authService
     */
    constructor(ecmUserService, bpmUserService, authService) {
        this.ecmUserService = ecmUserService;
        this.bpmUserService = bpmUserService;
        this.authService = authService;
        /**
         * Custom path for the background banner image for ACS users.
         */
        this.ecmBackgroundImage = './assets/images/ecm-background.png';
        /**
         * Custom path for the background banner image for APS users.
         */
        this.bpmBackgroundImage = './assets/images/bpm-background.png';
        /**
         * Custom choice for opening the menu at the bottom. Can be `before` or `after`.
         */
        this.menuPositionX = 'after';
        /**
         * Custom choice for opening the menu at the bottom. Can be `above` or `below`.
         */
        this.menuPositionY = 'below';
        /**
         * Shows/hides the username next to the user info button.
         */
        this.showName = true;
        /**
         * When the username is shown, this defines its position relative to the user info button.
         * Can be `right` or `left`.
         */
        this.namePosition = 'right';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getUserInfo();
    }
    /**
     * @return {?}
     */
    getUserInfo() {
        this.loadEcmUserInfo();
        this.loadBpmUserInfo();
    }
    /**
     * @return {?}
     */
    isLoggedIn() {
        return this.authService.isLoggedIn();
    }
    /**
     * @return {?}
     */
    loadEcmUserInfo() {
        if (this.authService.isEcmLoggedIn()) {
            this.ecmUserService.getCurrentUserInfo()
                .subscribe((res) => {
                this.ecmUser = new EcmUserModel(res);
                this.getEcmAvatar();
            });
        }
        else {
            this.ecmUser = null;
            this.ecmUserImage = null;
        }
    }
    /**
     * @return {?}
     */
    loadBpmUserInfo() {
        if (this.authService.isBpmLoggedIn()) {
            this.bpmUserService.getCurrentUserInfo()
                .subscribe((res) => {
                this.bpmUser = new BpmUserModel(res);
            });
            this.bpmUserImage = this.bpmUserService.getCurrentUserProfileImage();
        }
        else {
            this.bpmUser = null;
            this.bpmUserImage = null;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    stopClosing(event) {
        event.stopPropagation();
    }
    /**
     * @return {?}
     */
    getEcmAvatar() {
        this.ecmUserImage = this.ecmUserService.getUserProfileImage(this.ecmUser.avatarId);
    }
    /**
     * @return {?}
     */
    showOnRight() {
        return this.namePosition === 'right';
    }
    /**
     * @return {?}
     */
    hasBpmUserPictureId() {
        return !!this.bpmUser.pictureId;
    }
    /**
     * @return {?}
     */
    hasEcmUserAvatarId() {
        return !!this.ecmUser.avatarId;
    }
}
UserInfoComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-userinfo',
                template: "<div id=\"userinfo_container\"\n    [class.adf-userinfo-name-right]=\"showOnRight()\"\n    class=\"adf-userinfo-container\" *ngIf=\"isLoggedIn()\">\n    <span *ngIf=\"ecmUser && showName\" id=\"adf-userinfo-ecm-name-display\"\n          class=\"adf-userinfo-name\">{{ecmUser.fullNameDisplay}}</span>\n    <span *ngIf=\"bpmUser && !ecmUser && showName\" id=\"adf-userinfo-bpm-name-display\"\n          class=\"adf-userinfo-name\">{{bpmUser.fullNameDisplay}}</span>\n    <button mat-button [matMenuTriggerFor]=\"menu\" class=\"adf-userinfo-menu_button\" data-automation-id=\"adf-user-profile\">\n        <div class=\"adf-userinfo-button-profile\" id=\"user-profile\">\n            <div *ngIf=\"bpmUser && !ecmUser\" id=\"bpm-user-image\">\n                <div *ngIf=\"!hasBpmUserPictureId()\" [outerHTML]=\"bpmUser | usernameInitials:'adf-userinfo-pic'\"></div>\n                <div *ngIf=\"hasBpmUserPictureId()\" class=\"adf-userinfo-profile-container\">\n                    <img id=\"logged-user-img\" [src]=\"bpmUserImage\" alt=\"user-info-profile-button\"\n                        class=\"adf-userinfo-profile-image\"/>\n                </div>\n            </div>\n            <div *ngIf=\"ecmUser\" id=\"ecm-user-image\">\n                    <div *ngIf=\"!hasEcmUserAvatarId()\"\n                         [outerHTML]=\"ecmUser | usernameInitials:'adf-userinfo-pic'\"></div>\n                    <div *ngIf=\"hasEcmUserAvatarId()\" class=\"adf-userinfo-profile-container\">\n                        <img id=\"logged-user-img\" [src]=\"ecmUserImage\" alt=\"user-info-profile-button\"\n                            class=\"adf-userinfo-profile-image\"/>\n                    </div>\n            </div>\n    </div>\n</button>\n    <mat-menu #menu=\"matMenu\" id=\"user-profile-lists\" [xPosition]=\"menuPositionX\" [yPosition]=\"menuPositionY\" [overlapTrigger]=\"false\" class=\"adf-userinfo-menu\">\n        <mat-tab-group id=\"tab-group-env\" (click)=\"stopClosing($event)\"\n            class=\"adf-userinfo-tab\" [class.adf-hide-tab]=\"!bpmUser || !ecmUser\">\n            <mat-tab id=\"ecm-panel\" label=\"{{ 'USER_PROFILE.TAB.CS' | translate }}\" *ngIf=\"ecmUser\">\n                <mat-card class=\"adf-userinfo-card\">\n                    <mat-card-header class=\"adf-userinfo-card-header\" [style.background-image]=\"'url(' + ecmBackgroundImage + ')'\">\n                        <div *ngIf=\"!hasEcmUserAvatarId()\"\n                             [outerHTML]=\"ecmUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\">\n                        </div>\n                        <div *ngIf=\"hasEcmUserAvatarId()\" class=\"adf-userinfo-profile-container adf-hide-small\">\n                            <img class=\"adf-userinfo-profile-picture\" id=\"ecm-user-detail-image\"\n                                alt=\"ecm-profile-image\" [src]=\"ecmUserImage\" />\n                        </div>\n                       <div class=\"adf-userinfo-title\" id=\"ecm-username\">{{ecmUser.fullNameDisplay}}</div>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"adf-userinfo-supporting-text\">\n                                <div class=\"adf-userinfo-detail\">\n                                    <span id=\"ecm-full-name\" class=\"adf-userinfo__detail-title\">{{ecmUser.fullNameDisplay}}</span>\n                                    <span class=\"adf-userinfo__detail-profile\" id=\"ecm-email\"> {{ecmUser.email}} </span>\n                                </div>\n                                <div class=\"adf-userinfo-detail\">\n                                    <span class=\"adf-userinfo__secondary-info\" id=\"ecm-job-title-label\">\n                                        {{ 'USER_PROFILE.LABELS.ECM.JOB_TITLE' | translate }}\n                                        <span id=\"ecm-job-title\" class=\"adf-userinfo__detail-profile\"> {{ ecmUser.jobTitle ? ecmUser.jobTitle : 'N/A' }} </span>\n                                    </span>\n                                </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </mat-tab>\n            <mat-tab id=\"bpm-panel\" label=\"{{ 'USER_PROFILE.TAB.PS' | translate }}\" *ngIf=\"bpmUser\">\n            <mat-card class=\"adf-userinfo-card\">\n                <mat-card-header class=\"adf-userinfo-card-header\" [style.background-image]=\"'url(' + bpmBackgroundImage + ')'\">\n                    <div *ngIf=\"!hasBpmUserPictureId()\" [outerHTML]=\"bpmUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\"></div>\n                    <img *ngIf=\"hasBpmUserPictureId()\" class=\"adf-userinfo-profile-picture adf-hide-small\" id=\"bpm-user-detail-image\"\n                            alt=\"bpm-profile-image\" [src]=\"bpmUserImage\"/>\n                   <div class=\"adf-userinfo-title\" id=\"bpm-username\">{{bpmUser.fullNameDisplay}}</div>\n                </mat-card-header>\n                <mat-card-content>\n                    <div class=\"adf-userinfo-supporting-text\">\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"bpm-full-name\" class=\"adf-userinfo__detail-title\">{{ bpmUser.fullNameDisplay }}</span>\n                                <span class=\"adf-userinfo__detail-profile\" id=\"bpm-email\"> {{bpmUser.email}} </span>\n                            </div>\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"bpm-tenant\" class=\"adf-userinfo__secondary-info\">\n                                    {{ 'USER_PROFILE.LABELS.BPM.TENANT' | translate }}\n                                    <span class=\"adf-userinfo__detail-profile\">{{ bpmUser.tenantName ? bpmUser.tenantName : '' }}</span>\n                                </span>\n                            </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-menu>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [""]
            }] }
];
/** @nocollapse */
UserInfoComponent.ctorParameters = () => [
    { type: EcmUserService },
    { type: BpmUserService },
    { type: AuthenticationService }
];
UserInfoComponent.propDecorators = {
    ecmBackgroundImage: [{ type: Input }],
    bpmBackgroundImage: [{ type: Input }],
    menuPositionX: [{ type: Input }],
    menuPositionY: [{ type: Input }],
    showName: [{ type: Input }],
    namePosition: [{ type: Input }]
};
if (false) {
    /**
     * Custom path for the background banner image for ACS users.
     * @type {?}
     */
    UserInfoComponent.prototype.ecmBackgroundImage;
    /**
     * Custom path for the background banner image for APS users.
     * @type {?}
     */
    UserInfoComponent.prototype.bpmBackgroundImage;
    /**
     * Custom choice for opening the menu at the bottom. Can be `before` or `after`.
     * @type {?}
     */
    UserInfoComponent.prototype.menuPositionX;
    /**
     * Custom choice for opening the menu at the bottom. Can be `above` or `below`.
     * @type {?}
     */
    UserInfoComponent.prototype.menuPositionY;
    /**
     * Shows/hides the username next to the user info button.
     * @type {?}
     */
    UserInfoComponent.prototype.showName;
    /**
     * When the username is shown, this defines its position relative to the user info button.
     * Can be `right` or `left`.
     * @type {?}
     */
    UserInfoComponent.prototype.namePosition;
    /** @type {?} */
    UserInfoComponent.prototype.ecmUser;
    /** @type {?} */
    UserInfoComponent.prototype.bpmUser;
    /** @type {?} */
    UserInfoComponent.prototype.bpmUserImage;
    /** @type {?} */
    UserInfoComponent.prototype.ecmUserImage;
    /** @type {?} */
    UserInfoComponent.prototype.selectedIndex;
    /** @type {?} */
    UserInfoComponent.prototype.ecmUserService;
    /** @type {?} */
    UserInfoComponent.prototype.bpmUserService;
    /** @type {?} */
    UserInfoComponent.prototype.authService;
}

//# sourceMappingURL=data:application/json;base64,