/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @abstract
 */
var /**
 * @abstract
 */
CardViewBaseItemModel = /** @class */ (function () {
    function CardViewBaseItemModel(obj) {
        this.label = obj.label || '';
        this.value = obj.value;
        this.key = obj.key;
        this.default = obj.default;
        this.editable = !!obj.editable;
        this.clickable = !!obj.clickable;
        this.icon = obj.icon || '';
        this.validators = obj.validators || [];
        this.data = obj.data || null;
    }
    /**
     * @return {?}
     */
    CardViewBaseItemModel.prototype.isEmpty = /**
     * @return {?}
     */
    function () {
        return this.value === undefined || this.value === null || this.value === '';
    };
    /**
     * @param {?} newValue
     * @return {?}
     */
    CardViewBaseItemModel.prototype.isValid = /**
     * @param {?} newValue
     * @return {?}
     */
    function (newValue) {
        if (!this.validators.length) {
            return true;
        }
        return this.validators
            .map(function (validator) { return validator.isValid(newValue); })
            .reduce(function (isValidUntilNow, isValid) { return isValidUntilNow && isValid; }, true);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    CardViewBaseItemModel.prototype.getValidationErrors = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (!this.validators.length) {
            return [];
        }
        return this.validators.filter(function (validator) { return !validator.isValid(value); }).map(function (validator) { return validator.message; });
    };
    return CardViewBaseItemModel;
}());
/**
 * @abstract
 */
export { CardViewBaseItemModel };
if (false) {
    /** @type {?} */
    CardViewBaseItemModel.prototype.label;
    /** @type {?} */
    CardViewBaseItemModel.prototype.value;
    /** @type {?} */
    CardViewBaseItemModel.prototype.key;
    /** @type {?} */
    CardViewBaseItemModel.prototype.default;
    /** @type {?} */
    CardViewBaseItemModel.prototype.editable;
    /** @type {?} */
    CardViewBaseItemModel.prototype.clickable;
    /** @type {?} */
    CardViewBaseItemModel.prototype.icon;
    /** @type {?} */
    CardViewBaseItemModel.prototype.validators;
    /** @type {?} */
    CardViewBaseItemModel.prototype.data;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12aWV3LWJhc2VpdGVtLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsiY2FyZC12aWV3L21vZGVscy9jYXJkLXZpZXctYmFzZWl0ZW0ubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkE7OztBQUFBO0lBV0ksK0JBQVksR0FBMkI7UUFDbkMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUM3QixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO1FBQ25CLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztRQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUM7UUFDakMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7S0FDaEM7Ozs7SUFFRCx1Q0FBTzs7O0lBQVA7UUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssRUFBRSxDQUFDO0tBQy9FOzs7OztJQUVELHVDQUFPOzs7O0lBQVAsVUFBUSxRQUFhO1FBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRTtZQUN6QixPQUFPLElBQUksQ0FBQztTQUNmO1FBRUQsT0FBTyxJQUFJLENBQUMsVUFBVTthQUNqQixHQUFHLENBQUMsVUFBQSxTQUFTLElBQUksT0FBQSxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUEzQixDQUEyQixDQUFDO2FBQzdDLE1BQU0sQ0FBQyxVQUFDLGVBQWUsRUFBRSxPQUFPLElBQUssT0FBQSxlQUFlLElBQUksT0FBTyxFQUExQixDQUEwQixFQUFFLElBQUksQ0FBQyxDQUFDO0tBQy9FOzs7OztJQUVELG1EQUFtQjs7OztJQUFuQixVQUFvQixLQUFLO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRTtZQUN6QixPQUFPLEVBQUUsQ0FBQztTQUNiO1FBRUQsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxVQUFBLFNBQVMsSUFBSSxPQUFBLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBekIsQ0FBeUIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLFNBQVMsSUFBSSxPQUFBLFNBQVMsQ0FBQyxPQUFPLEVBQWpCLENBQWlCLENBQUMsQ0FBQztLQUM3RztnQ0E5REw7SUErREMsQ0FBQTs7OztBQTVDRCxpQ0E0Q0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDYXJkVmlld0l0ZW1Qcm9wZXJ0aWVzLCBDYXJkVmlld0l0ZW1WYWxpZGF0b3IgfSBmcm9tICcuLi9pbnRlcmZhY2VzL2NhcmQtdmlldy5pbnRlcmZhY2VzJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENhcmRWaWV3QmFzZUl0ZW1Nb2RlbCB7XG4gICAgbGFiZWw6IHN0cmluZztcbiAgICB2YWx1ZTogYW55O1xuICAgIGtleTogYW55O1xuICAgIGRlZmF1bHQ6IGFueTtcbiAgICBlZGl0YWJsZTogYm9vbGVhbjtcbiAgICBjbGlja2FibGU6IGJvb2xlYW47XG4gICAgaWNvbj86IHN0cmluZztcbiAgICB2YWxpZGF0b3JzPzogQ2FyZFZpZXdJdGVtVmFsaWRhdG9yW107XG4gICAgZGF0YT86IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKG9iajogQ2FyZFZpZXdJdGVtUHJvcGVydGllcykge1xuICAgICAgICB0aGlzLmxhYmVsID0gb2JqLmxhYmVsIHx8ICcnO1xuICAgICAgICB0aGlzLnZhbHVlID0gb2JqLnZhbHVlO1xuICAgICAgICB0aGlzLmtleSA9IG9iai5rZXk7XG4gICAgICAgIHRoaXMuZGVmYXVsdCA9IG9iai5kZWZhdWx0O1xuICAgICAgICB0aGlzLmVkaXRhYmxlID0gISFvYmouZWRpdGFibGU7XG4gICAgICAgIHRoaXMuY2xpY2thYmxlID0gISFvYmouY2xpY2thYmxlO1xuICAgICAgICB0aGlzLmljb24gPSBvYmouaWNvbiB8fCAnJztcbiAgICAgICAgdGhpcy52YWxpZGF0b3JzID0gb2JqLnZhbGlkYXRvcnMgfHwgW107XG4gICAgICAgIHRoaXMuZGF0YSA9IG9iai5kYXRhIHx8IG51bGw7XG4gICAgfVxuXG4gICAgaXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUgPT09IHVuZGVmaW5lZCB8fCB0aGlzLnZhbHVlID09PSBudWxsIHx8IHRoaXMudmFsdWUgPT09ICcnO1xuICAgIH1cblxuICAgIGlzVmFsaWQobmV3VmFsdWU6IGFueSk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAoIXRoaXMudmFsaWRhdG9ycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMudmFsaWRhdG9yc1xuICAgICAgICAgICAgLm1hcCh2YWxpZGF0b3IgPT4gdmFsaWRhdG9yLmlzVmFsaWQobmV3VmFsdWUpKVxuICAgICAgICAgICAgLnJlZHVjZSgoaXNWYWxpZFVudGlsTm93LCBpc1ZhbGlkKSA9PiBpc1ZhbGlkVW50aWxOb3cgJiYgaXNWYWxpZCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgZ2V0VmFsaWRhdGlvbkVycm9ycyh2YWx1ZSk6IHN0cmluZ1tdIHtcbiAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy52YWxpZGF0b3JzLmZpbHRlcih2YWxpZGF0b3IgPT4gIXZhbGlkYXRvci5pc1ZhbGlkKHZhbHVlKSkubWFwKHZhbGlkYXRvciA9PiB2YWxpZGF0b3IubWVzc2FnZSk7XG4gICAgfVxufVxuIl19