/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var BpmUserModel = /** @class */ (function () {
    function BpmUserModel(obj) {
        if (obj) {
            this.apps = obj.apps;
            this.capabilities = obj.capabilities;
            this.company = obj.company;
            this.created = obj.created;
            this.email = obj.email;
            this.externalId = obj.externalId;
            this.firstName = obj.firstName;
            this.lastName = obj.lastName;
            this.fullname = obj.fullname;
            this.fullNameDisplay = obj ? this.formatValue(obj.firstName).trim() + ' ' + this.formatValue(obj.lastName).trim() : null;
            this.groups = obj.groups;
            this.id = obj.id;
            this.lastUpdate = obj.lastUpdate;
            this.latestSyncTimeStamp = obj.latestSyncTimeStamp;
            this.password = obj.password;
            this.pictureId = obj.pictureId;
            this.status = obj.status;
            this.tenantId = obj.tenantId;
            this.tenantName = obj.tenantName;
            this.tenantPictureId = obj.tenantPictureId;
            this.type = obj.type;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    BpmUserModel.prototype.formatValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value && value !== 'null' ? value : '';
    };
    return BpmUserModel;
}());
export { BpmUserModel };
if (false) {
    /** @type {?} */
    BpmUserModel.prototype.apps;
    /** @type {?} */
    BpmUserModel.prototype.capabilities;
    /** @type {?} */
    BpmUserModel.prototype.company;
    /** @type {?} */
    BpmUserModel.prototype.created;
    /** @type {?} */
    BpmUserModel.prototype.email;
    /** @type {?} */
    BpmUserModel.prototype.externalId;
    /** @type {?} */
    BpmUserModel.prototype.firstName;
    /** @type {?} */
    BpmUserModel.prototype.lastName;
    /** @type {?} */
    BpmUserModel.prototype.fullname;
    /** @type {?} */
    BpmUserModel.prototype.fullNameDisplay;
    /** @type {?} */
    BpmUserModel.prototype.groups;
    /** @type {?} */
    BpmUserModel.prototype.id;
    /** @type {?} */
    BpmUserModel.prototype.lastUpdate;
    /** @type {?} */
    BpmUserModel.prototype.latestSyncTimeStamp;
    /** @type {?} */
    BpmUserModel.prototype.password;
    /** @type {?} */
    BpmUserModel.prototype.pictureId;
    /** @type {?} */
    BpmUserModel.prototype.status;
    /** @type {?} */
    BpmUserModel.prototype.tenantId;
    /** @type {?} */
    BpmUserModel.prototype.tenantName;
    /** @type {?} */
    BpmUserModel.prototype.tenantPictureId;
    /** @type {?} */
    BpmUserModel.prototype.type;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnBtLXVzZXIubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJ1c2VyaW5mby9tb2RlbHMvYnBtLXVzZXIubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEsSUFBQTtJQXVCSSxzQkFBWSxHQUFTO1FBQ2pCLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQztZQUNyQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7WUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDO1lBQzNCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUM7WUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDO1lBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQztZQUM3QixJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUM7WUFDN0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQ3pILElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztZQUN6QixJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxHQUFHLENBQUMsbUJBQW1CLENBQUM7WUFDbkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO1lBQzdCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQUMvQixJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFDekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO1lBQzdCLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztZQUNqQyxJQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsQ0FBQyxlQUFlLENBQUM7WUFDM0MsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDO1NBQ3hCO0tBQ0o7Ozs7O0lBRU8sa0NBQVc7Ozs7Y0FBQyxLQUFhO1FBQzdCLE9BQU8sS0FBSyxJQUFJLEtBQUssS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDOzt1QkFyRXREO0lBdUVDLENBQUE7QUFwREQsd0JBb0RDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgVXNlclJlcHJlc2VudGF0aW9uIH0gZnJvbSAnYWxmcmVzY28tanMtYXBpJztcblxuZXhwb3J0IGNsYXNzIEJwbVVzZXJNb2RlbCBpbXBsZW1lbnRzIFVzZXJSZXByZXNlbnRhdGlvbiB7XG4gICAgYXBwczogYW55O1xuICAgIGNhcGFiaWxpdGllczogc3RyaW5nW107XG4gICAgY29tcGFueTogc3RyaW5nO1xuICAgIGNyZWF0ZWQ6IERhdGU7XG4gICAgZW1haWw6IHN0cmluZztcbiAgICBleHRlcm5hbElkOiBzdHJpbmc7XG4gICAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gICAgbGFzdE5hbWU6IHN0cmluZztcbiAgICBmdWxsbmFtZTogc3RyaW5nO1xuICAgIGZ1bGxOYW1lRGlzcGxheTogc3RyaW5nO1xuICAgIGdyb3VwczogYW55O1xuICAgIGlkOiBudW1iZXI7XG4gICAgbGFzdFVwZGF0ZTogRGF0ZTtcbiAgICBsYXRlc3RTeW5jVGltZVN0YW1wOiBEYXRlO1xuICAgIHBhc3N3b3JkOiBzdHJpbmc7XG4gICAgcGljdHVyZUlkOiBudW1iZXI7XG4gICAgc3RhdHVzOiBzdHJpbmc7XG4gICAgdGVuYW50SWQ6IG51bWJlcjtcbiAgICB0ZW5hbnROYW1lOiBzdHJpbmc7XG4gICAgdGVuYW50UGljdHVyZUlkOiBudW1iZXI7XG4gICAgdHlwZTogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgIHRoaXMuYXBwcyA9IG9iai5hcHBzO1xuICAgICAgICAgICAgdGhpcy5jYXBhYmlsaXRpZXMgPSBvYmouY2FwYWJpbGl0aWVzO1xuICAgICAgICAgICAgdGhpcy5jb21wYW55ID0gb2JqLmNvbXBhbnk7XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZWQgPSBvYmouY3JlYXRlZDtcbiAgICAgICAgICAgIHRoaXMuZW1haWwgPSBvYmouZW1haWw7XG4gICAgICAgICAgICB0aGlzLmV4dGVybmFsSWQgPSBvYmouZXh0ZXJuYWxJZDtcbiAgICAgICAgICAgIHRoaXMuZmlyc3ROYW1lID0gb2JqLmZpcnN0TmFtZTtcbiAgICAgICAgICAgIHRoaXMubGFzdE5hbWUgPSBvYmoubGFzdE5hbWU7XG4gICAgICAgICAgICB0aGlzLmZ1bGxuYW1lID0gb2JqLmZ1bGxuYW1lO1xuICAgICAgICAgICAgdGhpcy5mdWxsTmFtZURpc3BsYXkgPSBvYmogPyB0aGlzLmZvcm1hdFZhbHVlKG9iai5maXJzdE5hbWUpLnRyaW0oKSArICcgJyArIHRoaXMuZm9ybWF0VmFsdWUob2JqLmxhc3ROYW1lKS50cmltKCkgOiBudWxsO1xuICAgICAgICAgICAgdGhpcy5ncm91cHMgPSBvYmouZ3JvdXBzO1xuICAgICAgICAgICAgdGhpcy5pZCA9IG9iai5pZDtcbiAgICAgICAgICAgIHRoaXMubGFzdFVwZGF0ZSA9IG9iai5sYXN0VXBkYXRlO1xuICAgICAgICAgICAgdGhpcy5sYXRlc3RTeW5jVGltZVN0YW1wID0gb2JqLmxhdGVzdFN5bmNUaW1lU3RhbXA7XG4gICAgICAgICAgICB0aGlzLnBhc3N3b3JkID0gb2JqLnBhc3N3b3JkO1xuICAgICAgICAgICAgdGhpcy5waWN0dXJlSWQgPSBvYmoucGljdHVyZUlkO1xuICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSBvYmouc3RhdHVzO1xuICAgICAgICAgICAgdGhpcy50ZW5hbnRJZCA9IG9iai50ZW5hbnRJZDtcbiAgICAgICAgICAgIHRoaXMudGVuYW50TmFtZSA9IG9iai50ZW5hbnROYW1lO1xuICAgICAgICAgICAgdGhpcy50ZW5hbnRQaWN0dXJlSWQgPSBvYmoudGVuYW50UGljdHVyZUlkO1xuICAgICAgICAgICAgdGhpcy50eXBlID0gb2JqLnR5cGU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGZvcm1hdFZhbHVlKHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdmFsdWUgJiYgdmFsdWUgIT09ICdudWxsJyA/IHZhbHVlIDogJyc7XG4gICAgfVxufVxuIl19