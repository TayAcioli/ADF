/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as tslib_1 from "tslib";
import { Component, ViewEncapsulation } from '@angular/core';
import { DataTableCellComponent } from './datatable-cell.component';
import { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';
var DateCellComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DateCellComponent, _super);
    function DateCellComponent(userPreferenceService) {
        var _this = _super.call(this) || this;
        if (userPreferenceService) {
            userPreferenceService
                .select(UserPreferenceValues.Locale)
                .subscribe(function (locale) {
                _this.currentLocale = locale;
            });
        }
        return _this;
    }
    Object.defineProperty(DateCellComponent.prototype, "format", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.column) {
                return this.column.format || 'medium';
            }
            return 'medium';
        },
        enumerable: true,
        configurable: true
    });
    DateCellComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-date-cell',
                    template: "\n        <ng-container>\n            <span title=\"{{ tooltip | date:'medium' }}\" *ngIf=\"format === 'timeAgo' else standard_date\">\n                {{ value | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span title=\"{{ tooltip | date:format }}\">\n                {{ value | date:format }}\n            </span>\n        </ng-template>\n    ",
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-date-cell' }
                }] }
    ];
    /** @nocollapse */
    DateCellComponent.ctorParameters = function () { return [
        { type: UserPreferencesService }
    ]; };
    return DateCellComponent;
}(DataTableCellComponent));
export { DateCellComponent };
if (false) {
    /** @type {?} */
    DateCellComponent.prototype.currentLocale;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1jZWxsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImRhdGF0YWJsZS9jb21wb25lbnRzL2RhdGF0YWJsZS9kYXRlLWNlbGwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFDSCxzQkFBc0IsRUFDdEIsb0JBQW9CLEVBQ3ZCLE1BQU0sNENBQTRDLENBQUM7O0lBb0JiLDZDQUFzQjtJQVV6RCwyQkFBWSxxQkFBNkM7UUFBekQsWUFDSSxpQkFBTyxTQVNWO1FBUEcsSUFBSSxxQkFBcUIsRUFBRTtZQUN2QixxQkFBcUI7aUJBQ2hCLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUM7aUJBQ25DLFNBQVMsQ0FBQyxVQUFBLE1BQU07Z0JBQ2IsS0FBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUM7YUFDL0IsQ0FBQyxDQUFDO1NBQ1Y7O0tBQ0o7SUFqQkQsc0JBQUkscUNBQU07Ozs7UUFBVjtZQUNJLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFDYixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLFFBQVEsQ0FBQzthQUN6QztZQUNELE9BQU8sUUFBUSxDQUFDO1NBQ25COzs7T0FBQTs7Z0JBMUJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZUFBZTtvQkFFekIsUUFBUSxFQUFFLDZhQVdUO29CQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFO2lCQUNuQzs7OztnQkFyQkcsc0JBQXNCOzs0QkFwQjFCO0VBMEN1QyxzQkFBc0I7U0FBaEQsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0YVRhYmxlQ2VsbENvbXBvbmVudCB9IGZyb20gJy4vZGF0YXRhYmxlLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7XG4gICAgVXNlclByZWZlcmVuY2VzU2VydmljZSxcbiAgICBVc2VyUHJlZmVyZW5jZVZhbHVlc1xufSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy91c2VyLXByZWZlcmVuY2VzLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1kYXRlLWNlbGwnLFxuXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPG5nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwie3sgdG9vbHRpcCB8IGRhdGU6J21lZGl1bScgfX1cIiAqbmdJZj1cImZvcm1hdCA9PT0gJ3RpbWVBZ28nIGVsc2Ugc3RhbmRhcmRfZGF0ZVwiPlxuICAgICAgICAgICAgICAgIHt7IHZhbHVlIHwgYWRmVGltZUFnbzogY3VycmVudExvY2FsZSB9fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPG5nLXRlbXBsYXRlICNzdGFuZGFyZF9kYXRlPlxuICAgICAgICAgICAgPHNwYW4gdGl0bGU9XCJ7eyB0b29sdGlwIHwgZGF0ZTpmb3JtYXQgfX1cIj5cbiAgICAgICAgICAgICAgICB7eyB2YWx1ZSB8IGRhdGU6Zm9ybWF0IH19XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgYCxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHsgY2xhc3M6ICdhZGYtZGF0ZS1jZWxsJyB9XG59KVxuZXhwb3J0IGNsYXNzIERhdGVDZWxsQ29tcG9uZW50IGV4dGVuZHMgRGF0YVRhYmxlQ2VsbENvbXBvbmVudCB7XG4gICAgY3VycmVudExvY2FsZTtcblxuICAgIGdldCBmb3JtYXQoKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKHRoaXMuY29sdW1uKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW4uZm9ybWF0IHx8ICdtZWRpdW0nO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnbWVkaXVtJztcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih1c2VyUHJlZmVyZW5jZVNlcnZpY2U6IFVzZXJQcmVmZXJlbmNlc1NlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoKTtcblxuICAgICAgICBpZiAodXNlclByZWZlcmVuY2VTZXJ2aWNlKSB7XG4gICAgICAgICAgICB1c2VyUHJlZmVyZW5jZVNlcnZpY2VcbiAgICAgICAgICAgICAgICAuc2VsZWN0KFVzZXJQcmVmZXJlbmNlVmFsdWVzLkxvY2FsZSlcbiAgICAgICAgICAgICAgICAuc3Vic2NyaWJlKGxvY2FsZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudExvY2FsZSA9IGxvY2FsZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==