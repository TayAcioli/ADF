/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ContentChild, TemplateRef, HostListener, ElementRef, ViewEncapsulation } from '@angular/core';
var PdfThumbListComponent = /** @class */ (function () {
    function PdfThumbListComponent(element) {
        this.element = element;
        this.virtualHeight = 0;
        this.translateY = 0;
        this.renderItems = [];
        this.width = 91;
        this.currentHeight = 0;
        this.items = [];
        this.margin = 15;
        this.itemHeight = 114 + this.margin;
        this.calculateItems = this.calculateItems.bind(this);
        this.onPageChange = this.onPageChange.bind(this);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    PdfThumbListComponent.prototype.onResize = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.calculateItems();
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);
        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);
        this.setHeight(this.pdfViewer.currentPageNumber);
        this.items = this.getPages();
        this.calculateItems();
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout(function () { return _this.scrollInto(_this.pdfViewer.currentPageNumber); }, 0);
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);
        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    PdfThumbListComponent.prototype.trackByFn = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return item.id;
    };
    /**
     * @param {?} pageNum
     * @return {?}
     */
    PdfThumbListComponent.prototype.isSelected = /**
     * @param {?} pageNum
     * @return {?}
     */
    function (pageNum) {
        return this.pdfViewer.currentPageNumber === pageNum;
    };
    /**
     * @param {?} pageNum
     * @return {?}
     */
    PdfThumbListComponent.prototype.goTo = /**
     * @param {?} pageNum
     * @return {?}
     */
    function (pageNum) {
        this.pdfViewer.currentPageNumber = pageNum;
    };
    /**
     * @param {?} item
     * @return {?}
     */
    PdfThumbListComponent.prototype.scrollInto = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (this.items.length) {
            /** @type {?} */
            var index = this.items.findIndex(function (element) { return element.id === item; });
            if (index < 0 || index >= this.items.length) {
                return;
            }
            this.element.nativeElement.scrollTop = index * this.itemHeight;
            this.calculateItems();
        }
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.getPages = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return this.pdfViewer._pages.map(function (page) { return ({
            id: page.id,
            getWidth: function () { return _this.width; },
            getHeight: function () { return _this.currentHeight; },
            getPage: function () { return _this.pdfViewer.pdfDocument.getPage(page.id); }
        }); });
    };
    /**
     * @param {?} id
     * @return {?}
     */
    PdfThumbListComponent.prototype.setHeight = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        var _this = this;
        /** @type {?} */
        var height = this.pdfViewer.pdfDocument.getPage(id).then(function (page) { return _this.calculateHeight(page); });
        return height;
    };
    /**
     * @param {?} page
     * @return {?}
     */
    PdfThumbListComponent.prototype.calculateHeight = /**
     * @param {?} page
     * @return {?}
     */
    function (page) {
        /** @type {?} */
        var viewport = page.getViewport(1);
        /** @type {?} */
        var pageRatio = viewport.width / viewport.height;
        /** @type {?} */
        var height = Math.floor(this.width / pageRatio);
        this.currentHeight = height;
        this.itemHeight = height + this.margin;
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.calculateItems = /**
     * @return {?}
     */
    function () {
        var _a = this.getContainerSetup(), element = _a.element, viewPort = _a.viewPort, itemsInView = _a.itemsInView;
        /** @type {?} */
        var indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;
        /** @type {?} */
        var start = Math.floor(indexByScrollTop);
        /** @type {?} */
        var end = Math.ceil(indexByScrollTop) + (itemsInView);
        this.translateY = this.itemHeight * Math.ceil(start);
        this.virtualHeight = this.itemHeight * this.items.length - this.translateY;
        this.renderItems = this.items.slice(start, end);
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.getContainerSetup = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var element = this.element.nativeElement;
        /** @type {?} */
        var elementRec = element.getBoundingClientRect();
        /** @type {?} */
        var itemsInView = Math.ceil(elementRec.height / this.itemHeight);
        /** @type {?} */
        var viewPort = (this.itemHeight * this.items.length) / itemsInView;
        return {
            element: element,
            viewPort: viewPort,
            itemsInView: itemsInView
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PdfThumbListComponent.prototype.onPageChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var index = this.renderItems.findIndex(function (element) { return element.id === event.pageNumber; });
        if (index < 0) {
            this.scrollInto(event.pageNumber);
        }
        if (index >= this.renderItems.length - 1) {
            this.element.nativeElement.scrollTop += this.itemHeight;
        }
    };
    PdfThumbListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-pdf-thumbnails',
                    template: "<div class=\"pdf-thumbnails__content\"\n     data-automation-id='adf-thumbnails-content'\n    [style.height.px]=\"virtualHeight\"\n    [style.transform]=\"'translate(-50%, ' + translateY + 'px)'\">\n    <adf-pdf-thumb *ngFor=\"let page of renderItems; trackBy: trackByFn\"\n        class=\"pdf-thumbnails__thumb\"\n        [ngClass]=\"{'pdf-thumbnails__thumb--selected' : isSelected(page.id)}\"\n        [page]=\"page\"\n        (click)=\"goTo(page.id)\">\n    </adf-pdf-thumb>\n</div>\n",
                    host: { 'class': 'pdf-thumbnails' },
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PdfThumbListComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PdfThumbListComponent.propDecorators = {
        pdfViewer: [{ type: Input }],
        template: [{ type: ContentChild, args: [TemplateRef,] }],
        onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]
    };
    return PdfThumbListComponent;
}());
export { PdfThumbListComponent };
if (false) {
    /** @type {?} */
    PdfThumbListComponent.prototype.pdfViewer;
    /** @type {?} */
    PdfThumbListComponent.prototype.virtualHeight;
    /** @type {?} */
    PdfThumbListComponent.prototype.translateY;
    /** @type {?} */
    PdfThumbListComponent.prototype.renderItems;
    /** @type {?} */
    PdfThumbListComponent.prototype.width;
    /** @type {?} */
    PdfThumbListComponent.prototype.currentHeight;
    /** @type {?} */
    PdfThumbListComponent.prototype.items;
    /** @type {?} */
    PdfThumbListComponent.prototype.margin;
    /** @type {?} */
    PdfThumbListComponent.prototype.itemHeight;
    /** @type {?} */
    PdfThumbListComponent.prototype.template;
    /** @type {?} */
    PdfThumbListComponent.prototype.element;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmVmlld2VyLXRodW1ibmFpbHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsidmlld2VyL2NvbXBvbmVudHMvcGRmVmlld2VyLXRodW1ibmFpbHMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFDSCxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUMxQyxVQUFVLEVBQWEsaUJBQWlCLEVBQzFELE1BQU0sZUFBZSxDQUFDOztJQThCbkIsK0JBQW9CLE9BQW1CO1FBQW5CLFlBQU8sR0FBUCxPQUFPLENBQVk7NkJBbEJmLENBQUM7MEJBQ0osQ0FBQzsyQkFDUixFQUFFO3FCQUNBLEVBQUU7NkJBQ00sQ0FBQztxQkFFVCxFQUFFO3NCQUNPLEVBQUU7MEJBQ0UsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNO1FBVzFDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNwRDs7Ozs7SUFQRCx3Q0FBUTs7OztJQURSLFVBQ1MsS0FBSztRQUNWLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztLQUN6Qjs7OztJQU9ELHdDQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRWpGLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzdCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztLQUV6Qjs7OztJQUVELCtDQUFlOzs7SUFBZjtRQUFBLGlCQUVDO1FBREcsVUFBVSxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLEtBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsRUFBakQsQ0FBaUQsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUMxRTs7OztJQUVELDJDQUFXOzs7SUFBWDtRQUNJLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3BGLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0tBQ2hFOzs7Ozs7SUFFRCx5Q0FBUzs7Ozs7SUFBVCxVQUFVLEtBQWEsRUFBRSxJQUFTO1FBQzlCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQztLQUNsQjs7Ozs7SUFFRCwwQ0FBVTs7OztJQUFWLFVBQVcsT0FBZTtRQUN0QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEtBQUssT0FBTyxDQUFDO0tBQ3ZEOzs7OztJQUVELG9DQUFJOzs7O0lBQUosVUFBSyxPQUFlO1FBQ2hCLElBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEdBQUcsT0FBTyxDQUFDO0tBQzlDOzs7OztJQUVELDBDQUFVOzs7O0lBQVYsVUFBVyxJQUFTO1FBQ2hCLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7O1lBQ25CLElBQU0sS0FBSyxHQUFXLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFVBQUMsT0FBTyxJQUFLLE9BQUEsT0FBTyxDQUFDLEVBQUUsS0FBSyxJQUFJLEVBQW5CLENBQW1CLENBQUMsQ0FBQztZQUU3RSxJQUFJLEtBQUssR0FBRyxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO2dCQUN6QyxPQUFPO2FBQ1Y7WUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7WUFFL0QsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3pCO0tBQ0o7Ozs7SUFFRCx3Q0FBUTs7O0lBQVI7UUFBQSxpQkFPQztRQU5HLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSSxJQUFLLE9BQUEsQ0FBQztZQUN4QyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7WUFDWCxRQUFRLEVBQUUsY0FBUSxPQUFPLEtBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN0QyxTQUFTLEVBQUUsY0FBUSxPQUFPLEtBQUksQ0FBQyxhQUFhLENBQUMsRUFBRTtZQUMvQyxPQUFPLEVBQUUsY0FBTSxPQUFBLEtBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQTNDLENBQTJDO1NBQzdELENBQUMsRUFMeUMsQ0FLekMsQ0FBQyxDQUFDO0tBQ1A7Ozs7O0lBRU8seUNBQVM7Ozs7Y0FBQyxFQUFFOzs7UUFDaEIsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLElBQUksSUFBSyxPQUFBLEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQTFCLENBQTBCLENBQUMsQ0FBQztRQUNqRyxPQUFPLE1BQU0sQ0FBQzs7Ozs7O0lBR1YsK0NBQWU7Ozs7Y0FBQyxJQUFJOztRQUN4QixJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDOztRQUNyQyxJQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7O1FBQ25ELElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsQ0FBQztRQUVsRCxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQztRQUM1QixJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDOzs7OztJQUduQyw4Q0FBYzs7OztRQUNsQixtQ0FBUSxvQkFBTyxFQUFFLHNCQUFRLEVBQUUsNEJBQVcsQ0FBOEI7O1FBRXBFLElBQU0sZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLFNBQVMsR0FBRyxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsV0FBVyxDQUFDOztRQUV4RixJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7O1FBRTNDLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRXhELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBSSxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQzVFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDOzs7OztJQUc1QyxpREFBaUI7Ozs7O1FBQ3JCLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDOztRQUMzQyxJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMscUJBQXFCLEVBQUUsQ0FBQzs7UUFDbkQsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzs7UUFDbkUsSUFBTSxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsV0FBVyxDQUFDO1FBRXJFLE9BQU87WUFDSCxPQUFPLFNBQUE7WUFDUCxRQUFRLFVBQUE7WUFDUixXQUFXLGFBQUE7U0FDZCxDQUFDOzs7Ozs7SUFHRSw0Q0FBWTs7OztjQUFDLEtBQUs7O1FBQ3RCLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLFVBQUMsT0FBTyxJQUFLLE9BQUEsT0FBTyxDQUFDLEVBQUUsS0FBSyxLQUFLLENBQUMsVUFBVSxFQUEvQixDQUErQixDQUFDLENBQUM7UUFFdkYsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO1lBQ1gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDckM7UUFFRCxJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDM0Q7OztnQkF6SVIsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLG1mQUFvRDtvQkFFcEQsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFO29CQUNuQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3hDOzs7O2dCQVRrQixVQUFVOzs7NEJBV3hCLEtBQUs7MkJBWUwsWUFBWSxTQUFDLFdBQVc7MkJBR3hCLFlBQVksU0FBQyxlQUFlLEVBQUUsQ0FBQyxRQUFRLENBQUM7O2dDQTdDN0M7O1NBNkJhLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7XG4gICAgQ29tcG9uZW50LCBJbnB1dCwgQ29udGVudENoaWxkLCBUZW1wbGF0ZVJlZiwgSG9zdExpc3RlbmVyLCBPbkluaXQsXG4gICAgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgT25EZXN0cm95LCBWaWV3RW5jYXBzdWxhdGlvblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtcGRmLXRodW1ibmFpbHMnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wZGZWaWV3ZXItdGh1bWJuYWlscy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcGRmVmlld2VyLXRodW1ibmFpbHMuY29tcG9uZW50LnNjc3MnXSxcbiAgICBob3N0OiB7ICdjbGFzcyc6ICdwZGYtdGh1bWJuYWlscycgfSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFBkZlRodW1iTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgICBASW5wdXQoKSBwZGZWaWV3ZXI6IGFueTtcblxuICAgIHZpcnR1YWxIZWlnaHQ6IG51bWJlciA9IDA7XG4gICAgdHJhbnNsYXRlWTogbnVtYmVyID0gMDtcbiAgICByZW5kZXJJdGVtcyA9IFtdO1xuICAgIHdpZHRoOiBudW1iZXIgPSA5MTtcbiAgICBjdXJyZW50SGVpZ2h0OiBudW1iZXIgPSAwO1xuXG4gICAgcHJpdmF0ZSBpdGVtcyA9IFtdO1xuICAgIHByaXZhdGUgbWFyZ2luOiBudW1iZXIgPSAxNTtcbiAgICBwcml2YXRlIGl0ZW1IZWlnaHQ6IG51bWJlciA9IDExNCArIHRoaXMubWFyZ2luO1xuXG4gICAgQENvbnRlbnRDaGlsZChUZW1wbGF0ZVJlZilcbiAgICB0ZW1wbGF0ZTogYW55O1xuXG4gICAgQEhvc3RMaXN0ZW5lcignd2luZG93OnJlc2l6ZScsIFsnJGV2ZW50J10pXG4gICAgb25SZXNpemUoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5jYWxjdWxhdGVJdGVtcygpO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmNhbGN1bGF0ZUl0ZW1zID0gdGhpcy5jYWxjdWxhdGVJdGVtcy5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLm9uUGFnZUNoYW5nZSA9IHRoaXMub25QYWdlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMucGRmVmlld2VyLmV2ZW50QnVzLm9uKCdwYWdlY2hhbmdlJywgdGhpcy5vblBhZ2VDaGFuZ2UpO1xuICAgICAgICB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmNhbGN1bGF0ZUl0ZW1zLCB0cnVlKTtcblxuICAgICAgICB0aGlzLnNldEhlaWdodCh0aGlzLnBkZlZpZXdlci5jdXJyZW50UGFnZU51bWJlcik7XG4gICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmdldFBhZ2VzKCk7XG4gICAgICAgIHRoaXMuY2FsY3VsYXRlSXRlbXMoKTtcblxuICAgIH1cblxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLnNjcm9sbEludG8odGhpcy5wZGZWaWV3ZXIuY3VycmVudFBhZ2VOdW1iZXIpLCAwKTtcbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5jYWxjdWxhdGVJdGVtcywgdHJ1ZSk7XG4gICAgICAgIHRoaXMucGRmVmlld2VyLmV2ZW50QnVzLm9mZigncGFnZWNoYW5nZScsIHRoaXMub25QYWdlQ2hhbmdlKTtcbiAgICB9XG5cbiAgICB0cmFja0J5Rm4oaW5kZXg6IG51bWJlciwgaXRlbTogYW55KTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uaWQ7XG4gICAgfVxuXG4gICAgaXNTZWxlY3RlZChwYWdlTnVtOiBudW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGRmVmlld2VyLmN1cnJlbnRQYWdlTnVtYmVyID09PSBwYWdlTnVtO1xuICAgIH1cblxuICAgIGdvVG8ocGFnZU51bTogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMucGRmVmlld2VyLmN1cnJlbnRQYWdlTnVtYmVyID0gcGFnZU51bTtcbiAgICB9XG5cbiAgICBzY3JvbGxJbnRvKGl0ZW06IGFueSkge1xuICAgICAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4OiBudW1iZXIgPSB0aGlzLml0ZW1zLmZpbmRJbmRleCgoZWxlbWVudCkgPT4gZWxlbWVudC5pZCA9PT0gaXRlbSk7XG5cbiAgICAgICAgICAgIGlmIChpbmRleCA8IDAgfHwgaW5kZXggPj0gdGhpcy5pdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnNjcm9sbFRvcCA9IGluZGV4ICogdGhpcy5pdGVtSGVpZ2h0O1xuXG4gICAgICAgICAgICB0aGlzLmNhbGN1bGF0ZUl0ZW1zKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXRQYWdlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGRmVmlld2VyLl9wYWdlcy5tYXAoKHBhZ2UpID0+ICh7XG4gICAgICAgICAgICBpZDogcGFnZS5pZCxcbiAgICAgICAgICAgIGdldFdpZHRoOiAoKSA9PiB7IHJldHVybiB0aGlzLndpZHRoOyB9LFxuICAgICAgICAgICAgZ2V0SGVpZ2h0OiAoKSA9PiB7IHJldHVybiB0aGlzLmN1cnJlbnRIZWlnaHQ7IH0sXG4gICAgICAgICAgICBnZXRQYWdlOiAoKSA9PiB0aGlzLnBkZlZpZXdlci5wZGZEb2N1bWVudC5nZXRQYWdlKHBhZ2UuaWQpXG4gICAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldEhlaWdodChpZCk6IG51bWJlciB7XG4gICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMucGRmVmlld2VyLnBkZkRvY3VtZW50LmdldFBhZ2UoaWQpLnRoZW4oKHBhZ2UpID0+IHRoaXMuY2FsY3VsYXRlSGVpZ2h0KHBhZ2UpKTtcbiAgICAgICAgcmV0dXJuIGhlaWdodDtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNhbGN1bGF0ZUhlaWdodChwYWdlKSB7XG4gICAgICAgIGNvbnN0IHZpZXdwb3J0ID0gcGFnZS5nZXRWaWV3cG9ydCgxKTtcbiAgICAgICAgY29uc3QgcGFnZVJhdGlvID0gdmlld3BvcnQud2lkdGggLyB2aWV3cG9ydC5oZWlnaHQ7XG4gICAgICAgIGNvbnN0IGhlaWdodCA9IE1hdGguZmxvb3IodGhpcy53aWR0aCAvIHBhZ2VSYXRpbyk7XG5cbiAgICAgICAgdGhpcy5jdXJyZW50SGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLml0ZW1IZWlnaHQgPSBoZWlnaHQgKyB0aGlzLm1hcmdpbjtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNhbGN1bGF0ZUl0ZW1zKCkge1xuICAgICAgICBjb25zdCB7IGVsZW1lbnQsIHZpZXdQb3J0LCBpdGVtc0luVmlldyB9ID0gdGhpcy5nZXRDb250YWluZXJTZXR1cCgpO1xuXG4gICAgICAgIGNvbnN0IGluZGV4QnlTY3JvbGxUb3AgPSBlbGVtZW50LnNjcm9sbFRvcCAvIHZpZXdQb3J0ICogdGhpcy5pdGVtcy5sZW5ndGggLyBpdGVtc0luVmlldztcblxuICAgICAgICBjb25zdCBzdGFydCA9IE1hdGguZmxvb3IoaW5kZXhCeVNjcm9sbFRvcCk7XG5cbiAgICAgICAgY29uc3QgZW5kID0gTWF0aC5jZWlsKGluZGV4QnlTY3JvbGxUb3ApICsgKGl0ZW1zSW5WaWV3KTtcblxuICAgICAgICB0aGlzLnRyYW5zbGF0ZVkgPSB0aGlzLml0ZW1IZWlnaHQgKiBNYXRoLmNlaWwoc3RhcnQpO1xuICAgICAgICB0aGlzLnZpcnR1YWxIZWlnaHQgPSB0aGlzLml0ZW1IZWlnaHQgKiB0aGlzLml0ZW1zLmxlbmd0aCAgLSB0aGlzLnRyYW5zbGF0ZVk7XG4gICAgICAgIHRoaXMucmVuZGVySXRlbXMgPSB0aGlzLml0ZW1zLnNsaWNlKHN0YXJ0LCBlbmQpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0Q29udGFpbmVyU2V0dXAoKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcbiAgICAgICAgY29uc3QgZWxlbWVudFJlYyA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnN0IGl0ZW1zSW5WaWV3ID0gTWF0aC5jZWlsKGVsZW1lbnRSZWMuaGVpZ2h0IC8gdGhpcy5pdGVtSGVpZ2h0KTtcbiAgICAgICAgY29uc3Qgdmlld1BvcnQgPSAodGhpcy5pdGVtSGVpZ2h0ICogdGhpcy5pdGVtcy5sZW5ndGgpIC8gaXRlbXNJblZpZXc7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVsZW1lbnQsXG4gICAgICAgICAgICB2aWV3UG9ydCxcbiAgICAgICAgICAgIGl0ZW1zSW5WaWV3XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblBhZ2VDaGFuZ2UoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnJlbmRlckl0ZW1zLmZpbmRJbmRleCgoZWxlbWVudCkgPT4gZWxlbWVudC5pZCA9PT0gZXZlbnQucGFnZU51bWJlcik7XG5cbiAgICAgICAgaWYgKGluZGV4IDwgMCkge1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxJbnRvKGV2ZW50LnBhZ2VOdW1iZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluZGV4ID49IHRoaXMucmVuZGVySXRlbXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc2Nyb2xsVG9wICs9IHRoaXMuaXRlbUhlaWdodDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==