/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation, ElementRef } from '@angular/core';
import { ContentService } from '../../services/content.service';
var ImgViewerComponent = /** @class */ (function () {
    function ImgViewerComponent(contentService, el) {
        this.contentService = contentService;
        this.el = el;
        this.showToolbar = true;
        this.rotate = 0;
        this.scaleX = 1.0;
        this.scaleY = 1.0;
        this.offsetX = 0;
        this.offsetY = 0;
        this.isDragged = false;
        this.drag = { x: 0, y: 0 };
        this.delta = { x: 0, y: 0 };
    }
    Object.defineProperty(ImgViewerComponent.prototype, "transform", {
        get: /**
         * @return {?}
         */
        function () {
            return "scale(" + this.scaleX + ", " + this.scaleY + ") rotate(" + this.rotate + "deg) translate(" + this.offsetX + "px, " + this.offsetY + "px)";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImgViewerComponent.prototype, "currentScaleText", {
        get: /**
         * @return {?}
         */
        function () {
            return Math.round(this.scaleX * 100) + '%';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ImgViewerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.element = /** @type {?} */ (this.el.nativeElement.querySelector('#viewer-image'));
        if (this.element) {
            this.element.addEventListener('mousedown', this.onMouseDown.bind(this));
            this.element.addEventListener('mouseup', this.onMouseUp.bind(this));
            this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this));
            this.element.addEventListener('mouseout', this.onMouseOut.bind(this));
            this.element.addEventListener('mousemove', this.onMouseMove.bind(this));
        }
    };
    /**
     * @return {?}
     */
    ImgViewerComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.element) {
            this.element.removeEventListener('mousedown', this.onMouseDown);
            this.element.removeEventListener('mouseup', this.onMouseUp);
            this.element.removeEventListener('mouseleave', this.onMouseLeave);
            this.element.removeEventListener('mouseout', this.onMouseOut);
            this.element.removeEventListener('mousemove', this.onMouseMove);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ImgViewerComponent.prototype.onMouseDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        this.isDragged = true;
        this.drag = { x: event.pageX, y: event.pageY };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ImgViewerComponent.prototype.onMouseMove = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDragged) {
            event.preventDefault();
            this.delta.x = event.pageX - this.drag.x;
            this.delta.y = event.pageY - this.drag.y;
            this.drag.x = event.pageX;
            this.drag.y = event.pageY;
            /** @type {?} */
            var scaleX = (this.scaleX !== 0 ? this.scaleX : 1.0);
            /** @type {?} */
            var scaleY = (this.scaleY !== 0 ? this.scaleY : 1.0);
            this.offsetX += (this.delta.x / scaleX);
            this.offsetY += (this.delta.y / scaleY);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ImgViewerComponent.prototype.onMouseUp = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDragged) {
            event.preventDefault();
            this.isDragged = false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ImgViewerComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDragged) {
            event.preventDefault();
            this.isDragged = false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ImgViewerComponent.prototype.onMouseOut = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDragged) {
            event.preventDefault();
            this.isDragged = false;
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ImgViewerComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        /** @type {?} */
        var blobFile = changes['blobFile'];
        if (blobFile && blobFile.currentValue) {
            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);
            return;
        }
        if (!this.urlFile && !this.blobFile) {
            throw new Error('Attribute urlFile or blobFile is required');
        }
    };
    /**
     * @return {?}
     */
    ImgViewerComponent.prototype.zoomIn = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ratio = +((this.scaleX + 0.2).toFixed(1));
        this.scaleX = this.scaleY = ratio;
    };
    /**
     * @return {?}
     */
    ImgViewerComponent.prototype.zoomOut = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ratio = +((this.scaleX - 0.2).toFixed(1));
        if (ratio < 0.2) {
            ratio = 0.2;
        }
        this.scaleX = this.scaleY = ratio;
    };
    /**
     * @return {?}
     */
    ImgViewerComponent.prototype.rotateLeft = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var angle = this.rotate - 90;
        this.rotate = Math.abs(angle) < 360 ? angle : 0;
    };
    /**
     * @return {?}
     */
    ImgViewerComponent.prototype.rotateRight = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var angle = this.rotate + 90;
        this.rotate = Math.abs(angle) < 360 ? angle : 0;
    };
    /**
     * @return {?}
     */
    ImgViewerComponent.prototype.reset = /**
     * @return {?}
     */
    function () {
        this.rotate = 0;
        this.scaleX = 1.0;
        this.scaleY = 1.0;
        this.offsetX = 0;
        this.offsetY = 0;
    };
    ImgViewerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-img-viewer',
                    template: "<div class=\"image-container\" [ngStyle]=\"{ transform: transform }\" data-automation-id=\"adf-image-container\">\n    <img id=\"viewer-image\" [src]=\"urlFile\" [alt]=\"nameFile\" [ngStyle]=\"{ 'cursor' : isDragged ? 'move': 'default' } \" />\n</div>\n\n<div class=\"adf-image-viewer__toolbar\" *ngIf=\"showToolbar\">\n    <adf-toolbar>\n        <button\n            id=\"viewer-zoom-in-button\"\n            mat-icon-button\n            title=\"{{ 'ADF_VIEWER.ARIA.ZOOM_IN' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.ZOOM_IN' | translate }}\"\n            (click)=\"zoomIn()\">\n            <mat-icon>zoom_in</mat-icon>\n        </button>\n\n        <button\n            id=\"viewer-zoom-out-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.ZOOM_OUT' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.ZOOM_OUT' | translate }}\"\n            mat-icon-button\n            (click)=\"zoomOut()\">\n            <mat-icon>zoom_out</mat-icon>\n        </button>\n\n        <div class=\"adf-viewer__toolbar-page-scale\" data-automation-id=\"adf-page-scale\">\n            {{ currentScaleText }}\n        </div>\n\n        <button\n            id=\"viewer-rotate-left-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.ROTATE_LEFT' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.ROTATE_LEFT' | translate }}\"\n            mat-icon-button\n            (click)=\"rotateLeft()\">\n            <mat-icon>rotate_left</mat-icon>\n        </button>\n\n        <button\n            id=\"viewer-rotate-right-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.ROTATE_RIGHT' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.ROTATE_RIGHT' | translate }}\"\n            mat-icon-button\n            (click)=\"rotateRight()\">\n            <mat-icon>rotate_right</mat-icon>\n        </button>\n\n        <button\n            id=\"viewer-reset-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.RESET' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.RESET' | translate }}\"\n            mat-icon-button\n            (click)=\"reset()\">\n            <mat-icon>zoom_out_map</mat-icon>\n        </button>\n    </adf-toolbar>\n</div>\n",
                    host: { 'class': 'adf-image-viewer' },
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ImgViewerComponent.ctorParameters = function () { return [
        { type: ContentService },
        { type: ElementRef }
    ]; };
    ImgViewerComponent.propDecorators = {
        showToolbar: [{ type: Input }],
        urlFile: [{ type: Input }],
        blobFile: [{ type: Input }],
        nameFile: [{ type: Input }]
    };
    return ImgViewerComponent;
}());
export { ImgViewerComponent };
if (false) {
    /** @type {?} */
    ImgViewerComponent.prototype.showToolbar;
    /** @type {?} */
    ImgViewerComponent.prototype.urlFile;
    /** @type {?} */
    ImgViewerComponent.prototype.blobFile;
    /** @type {?} */
    ImgViewerComponent.prototype.nameFile;
    /** @type {?} */
    ImgViewerComponent.prototype.rotate;
    /** @type {?} */
    ImgViewerComponent.prototype.scaleX;
    /** @type {?} */
    ImgViewerComponent.prototype.scaleY;
    /** @type {?} */
    ImgViewerComponent.prototype.offsetX;
    /** @type {?} */
    ImgViewerComponent.prototype.offsetY;
    /** @type {?} */
    ImgViewerComponent.prototype.isDragged;
    /** @type {?} */
    ImgViewerComponent.prototype.drag;
    /** @type {?} */
    ImgViewerComponent.prototype.delta;
    /** @type {?} */
    ImgViewerComponent.prototype.element;
    /** @type {?} */
    ImgViewerComponent.prototype.contentService;
    /** @type {?} */
    ImgViewerComponent.prototype.el;
}

//# sourceMappingURL=data:application/json;base64,