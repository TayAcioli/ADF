/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Injectable } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { AppConfigService } from '../app-config/app-config.service';
import { TranslationService } from './translation.service';
var PageTitleService = /** @class */ (function () {
    function PageTitleService(titleService, appConfig, translationService) {
        var _this = this;
        this.titleService = titleService;
        this.appConfig = appConfig;
        this.translationService = translationService;
        this.originalTitle = '';
        this.translatedTitle = '';
        translationService.translate.onLangChange.subscribe(function () { return _this.onLanguageChanged(); });
        translationService.translate.onTranslationChange.subscribe(function () { return _this.onLanguageChanged(); });
    }
    /**
     * Sets the page title.
     * @param value The new title
     */
    /**
     * Sets the page title.
     * @param {?=} value The new title
     * @return {?}
     */
    PageTitleService.prototype.setTitle = /**
     * Sets the page title.
     * @param {?=} value The new title
     * @return {?}
     */
    function (value) {
        if (value === void 0) { value = ''; }
        this.originalTitle = value;
        this.translatedTitle = this.translationService.instant(value);
        this.updateTitle();
    };
    /**
     * @return {?}
     */
    PageTitleService.prototype.onLanguageChanged = /**
     * @return {?}
     */
    function () {
        this.translatedTitle = this.translationService.instant(this.originalTitle);
        this.updateTitle();
    };
    /**
     * @return {?}
     */
    PageTitleService.prototype.updateTitle = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var name = this.appConfig.get('application.name') || 'Alfresco ADF Application';
        /** @type {?} */
        var title = this.translatedTitle ? this.translatedTitle + " - " + name : "" + name;
        this.titleService.setTitle(title);
    };
    PageTitleService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PageTitleService.ctorParameters = function () { return [
        { type: Title },
        { type: AppConfigService },
        { type: TranslationService }
    ]; };
    return PageTitleService;
}());
export { PageTitleService };
if (false) {
    /** @type {?} */
    PageTitleService.prototype.originalTitle;
    /** @type {?} */
    PageTitleService.prototype.translatedTitle;
    /** @type {?} */
    PageTitleService.prototype.titleService;
    /** @type {?} */
    PageTitleService.prototype.appConfig;
    /** @type {?} */
    PageTitleService.prototype.translationService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS10aXRsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsic2VydmljZXMvcGFnZS10aXRsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztJQVF2RCwwQkFDWSxjQUNBLFdBQ0E7UUFIWixpQkFNQztRQUxXLGlCQUFZLEdBQVosWUFBWTtRQUNaLGNBQVMsR0FBVCxTQUFTO1FBQ1QsdUJBQWtCLEdBQWxCLGtCQUFrQjs2QkFORSxFQUFFOytCQUNBLEVBQUU7UUFNaEMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxpQkFBaUIsRUFBRSxFQUF4QixDQUF3QixDQUFDLENBQUM7UUFDcEYsa0JBQWtCLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLGlCQUFpQixFQUFFLEVBQXhCLENBQXdCLENBQUMsQ0FBQztLQUM5RjtJQUVEOzs7T0FHRzs7Ozs7O0lBQ0gsbUNBQVE7Ozs7O0lBQVIsVUFBUyxLQUFrQjtRQUFsQixzQkFBQSxFQUFBLFVBQWtCO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUU5RCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDdEI7Ozs7SUFFTyw0Q0FBaUI7Ozs7UUFDckIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7Ozs7O0lBR2Ysc0NBQVc7Ozs7O1FBQ2YsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsSUFBSSwwQkFBMEIsQ0FBQzs7UUFFbEYsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUksSUFBSSxDQUFDLGVBQWUsV0FBTSxJQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUcsSUFBTSxDQUFDO1FBQ3JGLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDOzs7Z0JBbEN6QyxVQUFVOzs7O2dCQUpGLEtBQUs7Z0JBQ0wsZ0JBQWdCO2dCQUNoQixrQkFBa0I7OzJCQXBCM0I7O1NBdUJhLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRpdGxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBBcHBDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vYXBwLWNvbmZpZy9hcHAtY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi90cmFuc2xhdGlvbi5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBhZ2VUaXRsZVNlcnZpY2Uge1xuXG4gICAgcHJpdmF0ZSBvcmlnaW5hbFRpdGxlOiBzdHJpbmcgPSAnJztcbiAgICBwcml2YXRlIHRyYW5zbGF0ZWRUaXRsZTogc3RyaW5nID0gJyc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSB0aXRsZVNlcnZpY2U6IFRpdGxlLFxuICAgICAgICBwcml2YXRlIGFwcENvbmZpZzogQXBwQ29uZmlnU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSB0cmFuc2xhdGlvblNlcnZpY2U6IFRyYW5zbGF0aW9uU2VydmljZSkge1xuICAgICAgICB0cmFuc2xhdGlvblNlcnZpY2UudHJhbnNsYXRlLm9uTGFuZ0NoYW5nZS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5vbkxhbmd1YWdlQ2hhbmdlZCgpKTtcbiAgICAgICAgdHJhbnNsYXRpb25TZXJ2aWNlLnRyYW5zbGF0ZS5vblRyYW5zbGF0aW9uQ2hhbmdlLnN1YnNjcmliZSgoKSA9PiB0aGlzLm9uTGFuZ3VhZ2VDaGFuZ2VkKCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHBhZ2UgdGl0bGUuXG4gICAgICogQHBhcmFtIHZhbHVlIFRoZSBuZXcgdGl0bGVcbiAgICAgKi9cbiAgICBzZXRUaXRsZSh2YWx1ZTogc3RyaW5nID0gJycpIHtcbiAgICAgICAgdGhpcy5vcmlnaW5hbFRpdGxlID0gdmFsdWU7XG4gICAgICAgIHRoaXMudHJhbnNsYXRlZFRpdGxlID0gdGhpcy50cmFuc2xhdGlvblNlcnZpY2UuaW5zdGFudCh2YWx1ZSk7XG5cbiAgICAgICAgdGhpcy51cGRhdGVUaXRsZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25MYW5ndWFnZUNoYW5nZWQoKSB7XG4gICAgICAgIHRoaXMudHJhbnNsYXRlZFRpdGxlID0gdGhpcy50cmFuc2xhdGlvblNlcnZpY2UuaW5zdGFudCh0aGlzLm9yaWdpbmFsVGl0bGUpO1xuICAgICAgICB0aGlzLnVwZGF0ZVRpdGxlKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB1cGRhdGVUaXRsZSgpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IHRoaXMuYXBwQ29uZmlnLmdldCgnYXBwbGljYXRpb24ubmFtZScpIHx8ICdBbGZyZXNjbyBBREYgQXBwbGljYXRpb24nO1xuXG4gICAgICAgIGNvbnN0IHRpdGxlID0gdGhpcy50cmFuc2xhdGVkVGl0bGUgPyBgJHt0aGlzLnRyYW5zbGF0ZWRUaXRsZX0gLSAke25hbWV9YCA6IGAke25hbWV9YDtcbiAgICAgICAgdGhpcy50aXRsZVNlcnZpY2Uuc2V0VGl0bGUodGl0bGUpO1xuICAgIH1cbn1cbiJdfQ==