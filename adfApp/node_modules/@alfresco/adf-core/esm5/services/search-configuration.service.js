/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Injectable } from '@angular/core';
var SearchConfigurationService = /** @class */ (function () {
    function SearchConfigurationService() {
    }
    /**
     * Generates a QueryBody object with custom search parameters.
     * @param {?} searchTerm Term text to search for
     * @param {?} maxResults Maximum number of search results to show in a page
     * @param {?} skipCount The offset of the start of the page within the results list
     * @return {?} Query body defined by the parameters
     */
    SearchConfigurationService.prototype.generateQueryBody = /**
     * Generates a QueryBody object with custom search parameters.
     * @param {?} searchTerm Term text to search for
     * @param {?} maxResults Maximum number of search results to show in a page
     * @param {?} skipCount The offset of the start of the page within the results list
     * @return {?} Query body defined by the parameters
     */
    function (searchTerm, maxResults, skipCount) {
        /** @type {?} */
        var defaultQueryBody = {
            query: {
                query: searchTerm ? searchTerm + "* OR name:" + searchTerm + "*" : searchTerm
            },
            include: ['path', 'allowableOperations'],
            paging: {
                maxItems: maxResults,
                skipCount: skipCount
            },
            filterQueries: [
                { query: "TYPE:'cm:folder' OR TYPE:'cm:content'" },
                { query: 'NOT cm:creator:System' }
            ]
        };
        return defaultQueryBody;
    };
    SearchConfigurationService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    SearchConfigurationService.ctorParameters = function () { return []; };
    return SearchConfigurationService;
}());
export { SearchConfigurationService };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWNvbmZpZ3VyYXRpb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbInNlcnZpY2VzL3NlYXJjaC1jb25maWd1cmF0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7SUFPdkM7S0FDQzs7Ozs7Ozs7SUFTTSxzREFBaUI7Ozs7Ozs7Y0FBQyxVQUFrQixFQUFFLFVBQWtCLEVBQUUsU0FBaUI7O1FBQzlFLElBQUksZ0JBQWdCLEdBQWM7WUFDOUIsS0FBSyxFQUFFO2dCQUNILEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFJLFVBQVUsa0JBQWEsVUFBVSxNQUFHLENBQUMsQ0FBQyxDQUFDLFVBQVU7YUFDM0U7WUFDRCxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUUscUJBQXFCLENBQUM7WUFDeEMsTUFBTSxFQUFFO2dCQUNKLFFBQVEsRUFBRSxVQUFVO2dCQUNwQixTQUFTLEVBQUUsU0FBUzthQUN2QjtZQUNELGFBQWEsRUFBRTtnQkFDWCxFQUFFLEtBQUssRUFBRSx1Q0FBdUMsRUFBRTtnQkFDbEQsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUU7YUFBQztTQUMxQyxDQUFDO1FBRUYsT0FBTyxnQkFBZ0IsQ0FBQzs7O2dCQTVCL0IsVUFBVTs7OztxQ0FyQlg7O1NBc0JhLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFF1ZXJ5Qm9keSB9IGZyb20gJ2FsZnJlc2NvLWpzLWFwaSc7XG5pbXBvcnQgeyBTZWFyY2hDb25maWd1cmF0aW9uSW50ZXJmYWNlIH0gZnJvbSAnLi4vaW50ZXJmYWNlL3NlYXJjaC1jb25maWd1cmF0aW9uLmludGVyZmFjZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTZWFyY2hDb25maWd1cmF0aW9uU2VydmljZSBpbXBsZW1lbnRzIFNlYXJjaENvbmZpZ3VyYXRpb25JbnRlcmZhY2Uge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgUXVlcnlCb2R5IG9iamVjdCB3aXRoIGN1c3RvbSBzZWFyY2ggcGFyYW1ldGVycy5cbiAgICAgKiBAcGFyYW0gc2VhcmNoVGVybSBUZXJtIHRleHQgdG8gc2VhcmNoIGZvclxuICAgICAqIEBwYXJhbSBtYXhSZXN1bHRzIE1heGltdW0gbnVtYmVyIG9mIHNlYXJjaCByZXN1bHRzIHRvIHNob3cgaW4gYSBwYWdlXG4gICAgICogQHBhcmFtIHNraXBDb3VudCBUaGUgb2Zmc2V0IG9mIHRoZSBzdGFydCBvZiB0aGUgcGFnZSB3aXRoaW4gdGhlIHJlc3VsdHMgbGlzdFxuICAgICAqIEByZXR1cm5zIFF1ZXJ5IGJvZHkgZGVmaW5lZCBieSB0aGUgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgIHB1YmxpYyBnZW5lcmF0ZVF1ZXJ5Qm9keShzZWFyY2hUZXJtOiBzdHJpbmcsIG1heFJlc3VsdHM6IG51bWJlciwgc2tpcENvdW50OiBudW1iZXIpOiBRdWVyeUJvZHkge1xuICAgICAgICBsZXQgZGVmYXVsdFF1ZXJ5Qm9keTogUXVlcnlCb2R5ID0ge1xuICAgICAgICAgICAgcXVlcnk6IHtcbiAgICAgICAgICAgICAgICBxdWVyeTogc2VhcmNoVGVybSA/IGAke3NlYXJjaFRlcm19KiBPUiBuYW1lOiR7c2VhcmNoVGVybX0qYCA6IHNlYXJjaFRlcm1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbmNsdWRlOiBbJ3BhdGgnLCAnYWxsb3dhYmxlT3BlcmF0aW9ucyddLFxuICAgICAgICAgICAgcGFnaW5nOiB7XG4gICAgICAgICAgICAgICAgbWF4SXRlbXM6IG1heFJlc3VsdHMsXG4gICAgICAgICAgICAgICAgc2tpcENvdW50OiBza2lwQ291bnRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmaWx0ZXJRdWVyaWVzOiBbXG4gICAgICAgICAgICAgICAgeyBxdWVyeTogXCJUWVBFOidjbTpmb2xkZXInIE9SIFRZUEU6J2NtOmNvbnRlbnQnXCIgfSxcbiAgICAgICAgICAgICAgICB7IHF1ZXJ5OiAnTk9UIGNtOmNyZWF0b3I6U3lzdGVtJyB9XVxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBkZWZhdWx0UXVlcnlCb2R5O1xuICAgIH1cbn1cbiJdfQ==