/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';
var EmptyContentComponent = /** @class */ (function () {
    function EmptyContentComponent() {
        /**
         * Material Icon to use.
         */
        this.icon = 'cake';
        /**
         * String or Resource Key for the title.
         */
        this.title = '';
        /**
         * String or Resource Key for the subtitle.
         */
        this.subtitle = '';
    }
    EmptyContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-empty-content',
                    template: "<div class=\"adf-empty-content\">\n    <mat-icon class=\"adf-empty-content__icon\">{{ icon }}</mat-icon>\n    <p class=\"adf-empty-content__title\">{{ title | translate }}</p>\n    <p class=\"adf-empty-content__subtitle\">{{ subtitle | translate }}</p>\n    <ng-content></ng-content>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-empty-content' },
                    styles: [""]
                }] }
    ];
    EmptyContentComponent.propDecorators = {
        icon: [{ type: Input }],
        title: [{ type: Input }],
        subtitle: [{ type: Input }]
    };
    return EmptyContentComponent;
}());
export { EmptyContentComponent };
if (false) {
    /**
     * Material Icon to use.
     * @type {?}
     */
    EmptyContentComponent.prototype.icon;
    /**
     * String or Resource Key for the title.
     * @type {?}
     */
    EmptyContentComponent.prototype.title;
    /**
     * String or Resource Key for the subtitle.
     * @type {?}
     */
    EmptyContentComponent.prototype.subtitle;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHktY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJ0ZW1wbGF0ZXMvZW1wdHktY29udGVudC9lbXB0eS1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O29CQWNsRixNQUFNOzs7O3FCQUlMLEVBQUU7Ozs7d0JBSUMsRUFBRTs7O2dCQXBCaEIsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLGlUQUE2QztvQkFFN0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsbUJBQW1CLEVBQUU7O2lCQUN2Qzs7O3VCQUlJLEtBQUs7d0JBSUwsS0FBSzsyQkFJTCxLQUFLOztnQ0F0Q1Y7O1NBMkJhLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIFZpZXdFbmNhcHN1bGF0aW9uLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1lbXB0eS1jb250ZW50JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZW1wdHktY29udGVudC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZW1wdHktY29udGVudC5jb21wb25lbnQuc2NzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyBjbGFzczogJ2FkZi1lbXB0eS1jb250ZW50JyB9XG59KVxuZXhwb3J0IGNsYXNzIEVtcHR5Q29udGVudENvbXBvbmVudCB7XG5cbiAgICAvKiogTWF0ZXJpYWwgSWNvbiB0byB1c2UuICovXG4gICAgQElucHV0KClcbiAgICBpY29uID0gJ2Nha2UnO1xuXG4gICAgLyoqIFN0cmluZyBvciBSZXNvdXJjZSBLZXkgZm9yIHRoZSB0aXRsZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlID0gJyc7XG5cbiAgICAvKiogU3RyaW5nIG9yIFJlc291cmNlIEtleSBmb3IgdGhlIHN1YnRpdGxlLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc3VidGl0bGUgPSAnJztcblxufVxuIl19