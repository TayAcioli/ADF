/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ChangeDetectionStrategy, Input, ViewEncapsulation } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { TranslationService } from '../../services/translation.service';
var ErrorContentComponent = /** @class */ (function () {
    function ErrorContentComponent(route, router, translateService) {
        this.route = route;
        this.router = router;
        this.translateService = translateService;
        /**
         * Target URL for the secondary button.
         */
        this.secondaryButtonUrl = 'report-issue';
        /**
         * Target URL for the return button.
         */
        this.returnButtonUrl = '/';
    }
    /**
     * @return {?}
     */
    ErrorContentComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.route) {
            this.route.params.forEach(function (params) {
                if (params['id'] && !_this.errorCode) {
                    _this.errorCode = params['id'];
                    /** @type {?} */
                    var unknown_1 = '';
                    _this.translateService.get('ERROR_CONTENT.' + _this.errorCode + '.TITLE').subscribe(function (errorTranslation) {
                        unknown_1 = errorTranslation;
                    });
                    if (unknown_1 === 'ERROR_CONTENT.' + _this.errorCode + '.TITLE') {
                        _this.errorCode = 'UNKNOWN';
                    }
                }
            });
        }
    };
    /**
     * @return {?}
     */
    ErrorContentComponent.prototype.getTranslations = /**
     * @return {?}
     */
    function () {
        this.hasSecondButton = this.translateService.instant('ERROR_CONTENT.' + this.errorCode + '.SECONDARY_BUTTON.TEXT') ? true : false;
    };
    /**
     * @return {?}
     */
    ErrorContentComponent.prototype.ngAfterContentChecked = /**
     * @return {?}
     */
    function () {
        this.getTranslations();
    };
    /**
     * @return {?}
     */
    ErrorContentComponent.prototype.onSecondButton = /**
     * @return {?}
     */
    function () {
        this.router.navigate(['/' + this.secondaryButtonUrl]);
    };
    /**
     * @return {?}
     */
    ErrorContentComponent.prototype.onReturnButton = /**
     * @return {?}
     */
    function () {
        this.router.navigate(['/' + this.returnButtonUrl]);
    };
    ErrorContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-error-content',
                    template: "<div class=\"adf-error-content\">\n    <p class=\"adf-error-content-code\">\n        {{ errorCode }}\n    </p>\n    <div class=\"adf-error-content-shadow\"></div>\n    <p class=\"adf-error-content-title\">\n        {{ 'ERROR_CONTENT.' + errorCode + '.TITLE' | translate }}\n    </p>\n    <p class=\"adf-error-content-description\">\n        {{ 'ERROR_CONTENT.' + errorCode + '.DESCRIPTION' | translate }}\n    </p>\n    <div class=\"adf-error-content-buttons\">\n        <a a id=\"adf-secondary-button\" mat-raised-button color=\"primary\"\n            *ngIf=\"hasSecondButton\" (click)=\"onSecondButton()\"\n            class=\"adf-error-content-description-link\">\n            {{ 'ERROR_CONTENT.' + errorCode + '.SECONDARY_BUTTON.TEXT' | translate | uppercase }}\n        </a>\n        <a id=\"adf-return-button\" mat-raised-button color=\"primary\" (click)=\"onReturnButton()\">\n            {{ 'ERROR_CONTENT.' + this.errorCode + '.RETURN_BUTTON.TEXT' | translate | uppercase }}\n        </a>\n    </div>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-error-content' },
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ErrorContentComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: Router },
        { type: TranslationService }
    ]; };
    ErrorContentComponent.propDecorators = {
        secondaryButtonUrl: [{ type: Input }],
        returnButtonUrl: [{ type: Input }],
        errorCode: [{ type: Input }]
    };
    return ErrorContentComponent;
}());
export { ErrorContentComponent };
if (false) {
    /**
     * Target URL for the secondary button.
     * @type {?}
     */
    ErrorContentComponent.prototype.secondaryButtonUrl;
    /**
     * Target URL for the return button.
     * @type {?}
     */
    ErrorContentComponent.prototype.returnButtonUrl;
    /**
     * Error code associated with this error.
     * @type {?}
     */
    ErrorContentComponent.prototype.errorCode;
    /** @type {?} */
    ErrorContentComponent.prototype.hasSecondButton;
    /** @type {?} */
    ErrorContentComponent.prototype.route;
    /** @type {?} */
    ErrorContentComponent.prototype.router;
    /** @type {?} */
    ErrorContentComponent.prototype.translateService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJ0ZW1wbGF0ZXMvZXJyb3ItY29udGVudC9lcnJvci1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQ0gsU0FBUyxFQUNULHVCQUF1QixFQUN2QixLQUFLLEVBQ0wsaUJBQWlCLEVBR3BCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBVSxjQUFjLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7O0lBMEJwRSwrQkFBb0IsS0FBcUIsRUFDckIsUUFDQTtRQUZBLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBQ3JCLFdBQU0sR0FBTixNQUFNO1FBQ04scUJBQWdCLEdBQWhCLGdCQUFnQjs7OztrQ0FkUCxjQUFjOzs7OytCQUlqQixHQUFHO0tBVzVCOzs7O0lBRUQsd0NBQVE7OztJQUFSO1FBQUEsaUJBZUM7UUFkRyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQyxNQUFjO2dCQUNyQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxTQUFTLEVBQUU7b0JBQ2pDLEtBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDOztvQkFDOUIsSUFBSSxTQUFPLEdBQUcsRUFBRSxDQUFDO29CQUNqQixLQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLGdCQUFnQixHQUFHLEtBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQUMsZ0JBQXdCO3dCQUN2RyxTQUFPLEdBQUcsZ0JBQWdCLENBQUM7cUJBQzlCLENBQUMsQ0FBQztvQkFDSCxJQUFJLFNBQU8sS0FBSyxnQkFBZ0IsR0FBRyxLQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsRUFBRTt3QkFDMUQsS0FBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7cUJBQzlCO2lCQUNKO2FBQ0osQ0FBQyxDQUFDO1NBQ047S0FDSjs7OztJQUVELCtDQUFlOzs7SUFBZjtRQUNJLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FDaEQsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFNBQVMsR0FBRyx3QkFBd0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztLQUNwRjs7OztJQUVELHFEQUFxQjs7O0lBQXJCO1FBQ0ksSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0tBQzFCOzs7O0lBRUQsOENBQWM7OztJQUFkO1FBQ0ksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztLQUN6RDs7OztJQUVELDhDQUFjOzs7SUFBZDtRQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0tBQ3REOztnQkE3REosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLHVnQ0FBNkM7b0JBRTdDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFOztpQkFDdkM7Ozs7Z0JBVmdCLGNBQWM7Z0JBQUUsTUFBTTtnQkFDOUIsa0JBQWtCOzs7cUNBYXRCLEtBQUs7a0NBSUwsS0FBSzs0QkFJTCxLQUFLOztnQ0EvQ1Y7O1NBb0NhLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7XG4gICAgQ29tcG9uZW50LFxuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIElucHV0LFxuICAgIFZpZXdFbmNhcHN1bGF0aW9uLFxuICAgIE9uSW5pdCxcbiAgICBBZnRlckNvbnRlbnRDaGVja2VkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFyYW1zLCBBY3RpdmF0ZWRSb3V0ZSwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFRyYW5zbGF0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RyYW5zbGF0aW9uLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1lcnJvci1jb250ZW50JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZXJyb3ItY29udGVudC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZXJyb3ItY29udGVudC5jb21wb25lbnQuc2NzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyBjbGFzczogJ2FkZi1lcnJvci1jb250ZW50JyB9XG59KVxuZXhwb3J0IGNsYXNzIEVycm9yQ29udGVudENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50Q2hlY2tlZCB7XG5cbiAgICAvKiogVGFyZ2V0IFVSTCBmb3IgdGhlIHNlY29uZGFyeSBidXR0b24uICovXG4gICAgQElucHV0KClcbiAgICBzZWNvbmRhcnlCdXR0b25Vcmw6IHN0cmluZyA9ICdyZXBvcnQtaXNzdWUnO1xuXG4gICAgLyoqIFRhcmdldCBVUkwgZm9yIHRoZSByZXR1cm4gYnV0dG9uLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgcmV0dXJuQnV0dG9uVXJsOiBzdHJpbmcgPSAnLyc7XG5cbiAgICAvKiogRXJyb3IgY29kZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBlcnJvci4gKi9cbiAgICBASW5wdXQoKVxuICAgIGVycm9yQ29kZTogc3RyaW5nO1xuXG4gICAgaGFzU2Vjb25kQnV0dG9uOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcbiAgICAgICAgICAgICAgICBwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0aW9uU2VydmljZSkge1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZiAodGhpcy5yb3V0ZSkge1xuICAgICAgICAgICAgdGhpcy5yb3V0ZS5wYXJhbXMuZm9yRWFjaCgocGFyYW1zOiBQYXJhbXMpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocGFyYW1zWydpZCddICYmICF0aGlzLmVycm9yQ29kZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVycm9yQ29kZSA9IHBhcmFtc1snaWQnXTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHVua25vd24gPSAnJztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmdldCgnRVJST1JfQ09OVEVOVC4nICsgdGhpcy5lcnJvckNvZGUgKyAnLlRJVExFJykuc3Vic2NyaWJlKChlcnJvclRyYW5zbGF0aW9uOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVua25vd24gPSBlcnJvclRyYW5zbGF0aW9uO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVua25vd24gPT09ICdFUlJPUl9DT05URU5ULicgKyB0aGlzLmVycm9yQ29kZSArICcuVElUTEUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVycm9yQ29kZSA9ICdVTktOT1dOJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0VHJhbnNsYXRpb25zKCkge1xuICAgICAgICB0aGlzLmhhc1NlY29uZEJ1dHRvbiA9IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KFxuICAgICAgICAgICAgJ0VSUk9SX0NPTlRFTlQuJyArIHRoaXMuZXJyb3JDb2RlICsgJy5TRUNPTkRBUllfQlVUVE9OLlRFWFQnKSA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG5cbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKSB7XG4gICAgICAgIHRoaXMuZ2V0VHJhbnNsYXRpb25zKCk7XG4gICAgfVxuXG4gICAgb25TZWNvbmRCdXR0b24oKSB7XG4gICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFsnLycgKyB0aGlzLnNlY29uZGFyeUJ1dHRvblVybF0pO1xuICAgIH1cblxuICAgIG9uUmV0dXJuQnV0dG9uKCkge1xuICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbJy8nICsgdGhpcy5yZXR1cm5CdXR0b25VcmxdKTtcbiAgICB9XG59XG4iXX0=