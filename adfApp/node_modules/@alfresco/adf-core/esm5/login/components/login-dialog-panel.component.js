/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';
import { LoginComponent } from './login.component';
var LoginDialogPanelComponent = /** @class */ (function () {
    function LoginDialogPanelComponent() {
        this.success = new EventEmitter();
    }
    /**
     * @return {?}
     */
    LoginDialogPanelComponent.prototype.submitForm = /**
     * @return {?}
     */
    function () {
        this.login.submit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LoginDialogPanelComponent.prototype.onLoginSuccess = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.success.emit(event);
    };
    /**
     * @return {?}
     */
    LoginDialogPanelComponent.prototype.isValid = /**
     * @return {?}
     */
    function () {
        return this.login && this.login.form ? this.login.form.valid : false;
    };
    LoginDialogPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-login-dialog-panel',
                    template: "<div>\n    <adf-login #adfLogin\n               [showRememberMe]=\"false\"\n               [showLoginActions]=\"false\"\n               [backgroundImageUrl]=\"''\"\n               (success)=\"onLoginSuccess($event)\">\n        <login-header><ng-template></ng-template></login-header>\n        <login-footer><ng-template></ng-template></login-footer>\n    </adf-login>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    LoginDialogPanelComponent.propDecorators = {
        success: [{ type: Output }],
        login: [{ type: ViewChild, args: ['adfLogin',] }]
    };
    return LoginDialogPanelComponent;
}());
export { LoginDialogPanelComponent };
if (false) {
    /** @type {?} */
    LoginDialogPanelComponent.prototype.success;
    /** @type {?} */
    LoginDialogPanelComponent.prototype.login;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tZGlhbG9nLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImxvZ2luL2NvbXBvbmVudHMvbG9naW4tZGlhbG9nLXBhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7O3VCQVlyQyxJQUFJLFlBQVksRUFBcUI7Ozs7O0lBSy9DLDhDQUFVOzs7SUFBVjtRQUNJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDdkI7Ozs7O0lBRUQsa0RBQWM7Ozs7SUFBZCxVQUFlLEtBQXdCO1FBQ25DLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQzVCOzs7O0lBRUQsMkNBQU87OztJQUFQO1FBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztLQUN4RTs7Z0JBeEJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxxWUFBa0Q7b0JBRWxELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOztpQkFDeEM7OzswQkFHSSxNQUFNO3dCQUdOLFNBQVMsU0FBQyxVQUFVOztvQ0FoQ3pCOztTQTJCYSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uLCBWaWV3Q2hpbGQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2dpbkNvbXBvbmVudCB9IGZyb20gJy4vbG9naW4uY29tcG9uZW50JztcbmltcG9ydCB7IExvZ2luU3VjY2Vzc0V2ZW50IH0gZnJvbSAnLi4vbW9kZWxzL2xvZ2luLXN1Y2Nlc3MuZXZlbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1sb2dpbi1kaWFsb2ctcGFuZWwnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sb2dpbi1kaWFsb2ctcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xvZ2luLWRpYWxvZy1wYW5lbC5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgTG9naW5EaWFsb2dQYW5lbENvbXBvbmVudCB7XG5cbiAgICBAT3V0cHV0KClcbiAgICBzdWNjZXNzID0gbmV3IEV2ZW50RW1pdHRlcjxMb2dpblN1Y2Nlc3NFdmVudD4oKTtcblxuICAgIEBWaWV3Q2hpbGQoJ2FkZkxvZ2luJylcbiAgICBsb2dpbjogTG9naW5Db21wb25lbnQ7XG5cbiAgICBzdWJtaXRGb3JtKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmxvZ2luLnN1Ym1pdCgpO1xuICAgIH1cblxuICAgIG9uTG9naW5TdWNjZXNzKGV2ZW50OiBMb2dpblN1Y2Nlc3NFdmVudCkge1xuICAgICAgICB0aGlzLnN1Y2Nlc3MuZW1pdChldmVudCk7XG4gICAgfVxuXG4gICAgaXNWYWxpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9naW4gJiYgdGhpcy5sb2dpbi5mb3JtID8gdGhpcy5sb2dpbi5mb3JtLnZhbGlkIDogZmFsc2U7XG4gICAgfVxufVxuIl19