/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as tslib_1 from "tslib";
import { CookieService } from '../services/cookie.service';
var CookieServiceMock = /** @class */ (function (_super) {
    tslib_1.__extends(CookieServiceMock, _super);
    function CookieServiceMock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** @override */
    /**
     * @override
     * @return {?}
     */
    CookieServiceMock.prototype.isEnabled = /**
     * @override
     * @return {?}
     */
    function () {
        return true;
    };
    /** @override */
    /**
     * @override
     * @param {?} key
     * @return {?}
     */
    CookieServiceMock.prototype.getItem = /**
     * @override
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return this[key] && this[key].data || null;
    };
    /** @override */
    /**
     * @override
     * @param {?} key
     * @param {?} data
     * @param {?} expiration
     * @param {?} path
     * @return {?}
     */
    CookieServiceMock.prototype.setItem = /**
     * @override
     * @param {?} key
     * @param {?} data
     * @param {?} expiration
     * @param {?} path
     * @return {?}
     */
    function (key, data, expiration, path) {
        this[key] = { data: data, expiration: expiration, path: path };
    };
    /** @override */
    /**
     * @override
     * @return {?}
     */
    CookieServiceMock.prototype.clear = /**
     * @override
     * @return {?}
     */
    function () {
        var _this = this;
        Object.keys(this).forEach(function (key) {
            if (_this.hasOwnProperty(key) && typeof (_this[key]) !== 'function') {
                _this[key] = undefined;
            }
        });
    };
    return CookieServiceMock;
}(CookieService));
export { CookieServiceMock };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLnNlcnZpY2UubW9jay5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbIm1vY2svY29va2llLnNlcnZpY2UubW9jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTNELElBQUE7SUFBdUMsNkNBQWE7Ozs7SUFFaEQsZ0JBQWdCOzs7OztJQUNoQixxQ0FBUzs7OztJQUFUO1FBQ0ksT0FBTyxJQUFJLENBQUM7S0FDZjtJQUVELGdCQUFnQjs7Ozs7O0lBQ2hCLG1DQUFPOzs7OztJQUFQLFVBQVEsR0FBVztRQUNmLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDO0tBQzlDO0lBRUQsZ0JBQWdCOzs7Ozs7Ozs7SUFDaEIsbUNBQU87Ozs7Ozs7O0lBQVAsVUFBUSxHQUFXLEVBQUUsSUFBWSxFQUFFLFVBQXVCLEVBQUUsSUFBbUI7UUFDM0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUMsSUFBSSxNQUFBLEVBQUUsVUFBVSxZQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUMsQ0FBQztLQUN4QztJQUVELGdCQUFnQjs7Ozs7SUFDaEIsaUNBQUs7Ozs7SUFBTDtRQUFBLGlCQU1DO1FBTEcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHO1lBQ3pCLElBQUksS0FBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxPQUFNLENBQUMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssVUFBVSxFQUFFO2dCQUM5RCxLQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDO2FBQ3pCO1NBQ0osQ0FBQyxDQUFDO0tBQ047NEJBM0NMO0VBbUJ1QyxhQUFhLEVBeUJuRCxDQUFBO0FBekJELDZCQXlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvb2tpZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9jb29raWUuc2VydmljZSc7XG5cbmV4cG9ydCBjbGFzcyBDb29raWVTZXJ2aWNlTW9jayBleHRlbmRzIENvb2tpZVNlcnZpY2Uge1xuXG4gICAgLyoqIEBvdmVycmlkZSAqL1xuICAgIGlzRW5hYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLyoqIEBvdmVycmlkZSAqL1xuICAgIGdldEl0ZW0oa2V5OiBzdHJpbmcpOiBzdHJpbmcgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXNba2V5XSAmJiB0aGlzW2tleV0uZGF0YSB8fCBudWxsO1xuICAgIH1cblxuICAgIC8qKiBAb3ZlcnJpZGUgKi9cbiAgICBzZXRJdGVtKGtleTogc3RyaW5nLCBkYXRhOiBzdHJpbmcsIGV4cGlyYXRpb246IERhdGUgfCBudWxsLCBwYXRoOiBzdHJpbmcgfCBudWxsKTogdm9pZCB7XG4gICAgICAgIHRoaXNba2V5XSA9IHtkYXRhLCBleHBpcmF0aW9uLCBwYXRofTtcbiAgICB9XG5cbiAgICAvKiogQG92ZXJyaWRlICovXG4gICAgY2xlYXIoKSB7XG4gICAgICAgIE9iamVjdC5rZXlzKHRoaXMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmhhc093blByb3BlcnR5KGtleSkgJiYgdHlwZW9mKHRoaXNba2V5XSkgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICB0aGlzW2tleV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdfQ==