/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as tslib_1 from "tslib";
import { FormWidgetModel } from './form-widget.model';
var FormOutcomeModel = /** @class */ (function (_super) {
    tslib_1.__extends(FormOutcomeModel, _super);
    function FormOutcomeModel(form, json) {
        var _this = _super.call(this, form, json) || this;
        _this.isSystem = false;
        _this.isSelected = false;
        if (json) {
            _this.isSystem = json.isSystem ? true : false;
            _this.isSelected = form && json.name === form.selectedOutcome ? true : false;
        }
        return _this;
    }
    FormOutcomeModel.SAVE_ACTION = 'Save';
    FormOutcomeModel.COMPLETE_ACTION = 'Complete';
    FormOutcomeModel.START_PROCESS_ACTION = 'Start Process';
    return FormOutcomeModel;
}(FormWidgetModel));
export { FormOutcomeModel };
if (false) {
    /** @type {?} */
    FormOutcomeModel.SAVE_ACTION;
    /** @type {?} */
    FormOutcomeModel.COMPLETE_ACTION;
    /** @type {?} */
    FormOutcomeModel.START_PROCESS_ACTION;
    /** @type {?} */
    FormOutcomeModel.prototype.isSystem;
    /** @type {?} */
    FormOutcomeModel.prototype.isSelected;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1vdXRjb21lLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsiZm9ybS9jb21wb25lbnRzL3dpZGdldHMvY29yZS9mb3JtLW91dGNvbWUubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7SUFHaEIsNENBQWU7SUFTakQsMEJBQVksSUFBZSxFQUFFLElBQVU7UUFBdkMsWUFDSSxrQkFBTSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBTXBCO3lCQVZtQixLQUFLOzJCQUNILEtBQUs7UUFLdkIsSUFBSSxJQUFJLEVBQUU7WUFDTixLQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQzdDLEtBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDL0U7O0tBQ0o7bUNBZDRCLE1BQU07dUNBQ0YsVUFBVTs0Q0FDTCxlQUFlOzJCQTFCekQ7RUFzQnNDLGVBQWU7U0FBeEMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuIC8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3RvciAgKi9cblxuaW1wb3J0IHsgRm9ybVdpZGdldE1vZGVsIH0gZnJvbSAnLi9mb3JtLXdpZGdldC5tb2RlbCc7XG5pbXBvcnQgeyBGb3JtTW9kZWwgfSBmcm9tICcuL2Zvcm0ubW9kZWwnO1xuXG5leHBvcnQgY2xhc3MgRm9ybU91dGNvbWVNb2RlbCBleHRlbmRzIEZvcm1XaWRnZXRNb2RlbCB7XG5cbiAgICBzdGF0aWMgU0FWRV9BQ1RJT046IHN0cmluZyA9ICdTYXZlJzsgICAgICAgICAgICAvLyBBY3Rpdml0aSAnU2F2ZScgYWN0aW9uIG5hbWVcbiAgICBzdGF0aWMgQ09NUExFVEVfQUNUSU9OOiBzdHJpbmcgPSAnQ29tcGxldGUnOyAgICAvLyBBY3Rpdml0aSAnQ29tcGxldGUnIGFjdGlvbiBuYW1lXG4gICAgc3RhdGljIFNUQVJUX1BST0NFU1NfQUNUSU9OOiBzdHJpbmcgPSAnU3RhcnQgUHJvY2Vzcyc7ICAgIC8vIEFjdGl2aXRpICdTdGFydCBQcm9jZXNzJyBhY3Rpb24gbmFtZVxuXG4gICAgaXNTeXN0ZW06IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBpc1NlbGVjdGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3Rvcihmb3JtOiBGb3JtTW9kZWwsIGpzb24/OiBhbnkpIHtcbiAgICAgICAgc3VwZXIoZm9ybSwganNvbik7XG5cbiAgICAgICAgaWYgKGpzb24pIHtcbiAgICAgICAgICAgIHRoaXMuaXNTeXN0ZW0gPSBqc29uLmlzU3lzdGVtID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5pc1NlbGVjdGVkID0gZm9ybSAmJiBqc29uLm5hbWUgPT09IGZvcm0uc2VsZWN0ZWRPdXRjb21lID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19