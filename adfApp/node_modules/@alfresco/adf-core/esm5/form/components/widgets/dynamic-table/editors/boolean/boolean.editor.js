/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input } from '@angular/core';
import { DynamicTableModel } from './../../dynamic-table.widget.model';
var BooleanEditorComponent = /** @class */ (function () {
    function BooleanEditorComponent() {
    }
    /**
     * @param {?} row
     * @param {?} column
     * @param {?} event
     * @return {?}
     */
    BooleanEditorComponent.prototype.onValueChanged = /**
     * @param {?} row
     * @param {?} column
     * @param {?} event
     * @return {?}
     */
    function (row, column, event) {
        /** @type {?} */
        var value = (/** @type {?} */ (event)).checked;
        row.value[column.id] = value;
    };
    BooleanEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-boolean-editor',
                    template: " <label [attr.for]=\"column.id\">\n    <mat-checkbox\n        color=\"primary\"\n        [id]=\"column.id\"\n        [checked]=\"table.getCellValue(row, column)\"\n        [required]=\"column.required\"\n        [disabled]=\"!column.editable\"\n        (change)=\"onValueChanged(row, column, $event)\">\n    <span class=\"adf-checkbox-label\">{{column.name}}</span>\n    </mat-checkbox>\n</label>\n",
                    styles: [".adf-checkbox-label{position:relative;cursor:pointer;font-size:16px;line-height:24px;margin:0}"]
                }] }
    ];
    BooleanEditorComponent.propDecorators = {
        table: [{ type: Input }],
        row: [{ type: Input }],
        column: [{ type: Input }]
    };
    return BooleanEditorComponent;
}());
export { BooleanEditorComponent };
if (false) {
    /** @type {?} */
    BooleanEditorComponent.prototype.table;
    /** @type {?} */
    BooleanEditorComponent.prototype.row;
    /** @type {?} */
    BooleanEditorComponent.prototype.column;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vbGVhbi5lZGl0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJmb3JtL2NvbXBvbmVudHMvd2lkZ2V0cy9keW5hbWljLXRhYmxlL2VkaXRvcnMvYm9vbGVhbi9ib29sZWFuLmVkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdqRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7Ozs7Ozs7OztJQWtCbkUsK0NBQWM7Ozs7OztJQUFkLFVBQWUsR0FBb0IsRUFBRSxNQUEwQixFQUFFLEtBQVU7O1FBQ3ZFLElBQUksS0FBSyxHQUFZLG1CQUFvQixLQUFLLEVBQUMsQ0FBQyxPQUFPLENBQUM7UUFDeEQsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDO0tBQ2hDOztnQkFuQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLDBaQUFvQzs7aUJBRXZDOzs7d0JBR0ksS0FBSztzQkFHTCxLQUFLO3lCQUdMLEtBQUs7O2lDQXJDVjs7U0E2QmEsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yICAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEeW5hbWljVGFibGVDb2x1bW4gfSBmcm9tICcuLy4uLy4uL2R5bmFtaWMtdGFibGUtY29sdW1uLm1vZGVsJztcbmltcG9ydCB7IER5bmFtaWNUYWJsZVJvdyB9IGZyb20gJy4vLi4vLi4vZHluYW1pYy10YWJsZS1yb3cubW9kZWwnO1xuaW1wb3J0IHsgRHluYW1pY1RhYmxlTW9kZWwgfSBmcm9tICcuLy4uLy4uL2R5bmFtaWMtdGFibGUud2lkZ2V0Lm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtYm9vbGVhbi1lZGl0b3InLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ib29sZWFuLmVkaXRvci5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9ib29sZWFuLmVkaXRvci5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQm9vbGVhbkVkaXRvckNvbXBvbmVudCB7XG5cbiAgICBASW5wdXQoKVxuICAgIHRhYmxlOiBEeW5hbWljVGFibGVNb2RlbDtcblxuICAgIEBJbnB1dCgpXG4gICAgcm93OiBEeW5hbWljVGFibGVSb3c7XG5cbiAgICBASW5wdXQoKVxuICAgIGNvbHVtbjogRHluYW1pY1RhYmxlQ29sdW1uO1xuXG4gICAgb25WYWx1ZUNoYW5nZWQocm93OiBEeW5hbWljVGFibGVSb3csIGNvbHVtbjogRHluYW1pY1RhYmxlQ29sdW1uLCBldmVudDogYW55KSB7XG4gICAgICAgIGxldCB2YWx1ZTogYm9vbGVhbiA9ICg8SFRNTElucHV0RWxlbWVudD4gZXZlbnQpLmNoZWNrZWQ7XG4gICAgICAgIHJvdy52YWx1ZVtjb2x1bW4uaWRdID0gdmFsdWU7XG4gICAgfVxuXG59XG4iXX0=