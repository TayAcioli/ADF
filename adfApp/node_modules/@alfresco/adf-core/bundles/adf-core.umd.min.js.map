{"version":3,"sources":["null","ng://@alfresco/adf-core/utils/object-utils.ts","ng://@alfresco/adf-core/app-config/app-config.service.ts","ng://@alfresco/adf-core/services/storage.service.ts","ng://@alfresco/adf-core/services/alfresco-api.service.ts","ng://@alfresco/adf-core/services/cookie.service.ts","ng://@alfresco/adf-core/models/log-levels.model.ts","ng://@alfresco/adf-core/services/log.service.ts","ng://@alfresco/adf-core/services/authentication.service.ts","ng://@alfresco/adf-core/models/product-version.model.ts","ng://@alfresco/adf-core/services/discovery-api.service.ts","ng://@alfresco/adf-core/utils/file-utils.ts","ng://@alfresco/adf-core/utils/moment-date-formats.model.ts","ng://@alfresco/adf-core/utils/momentDateAdapter.ts","ng://@alfresco/adf-core/datatable/data/object-datarow.model.ts","ng://@alfresco/adf-core/datatable/data/object-datacolumn.model.ts","ng://@alfresco/adf-core/datatable/data/data-sorting.model.ts","ng://@alfresco/adf-core/datatable/data/object-datatable-adapter.ts","ng://@alfresco/adf-core/about/about.component.ts","ng://@alfresco/adf-core/material.module.ts","ng://@alfresco/adf-core/context-menu/context-menu.service.ts","ng://@alfresco/adf-core/context-menu/context-menu-holder.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.ts","ng://@alfresco/adf-core/context-menu/context-menu.tokens.ts","ng://@alfresco/adf-core/context-menu/animations.ts","ng://@alfresco/adf-core/context-menu/context-menu-list.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.service.ts","ng://@alfresco/adf-core/context-menu/context-menu.directive.ts","ng://@alfresco/adf-core/context-menu/context-menu.module.ts","ng://@alfresco/adf-core/services/user-preferences.service.ts","ng://@alfresco/adf-core/services/translation.service.ts","ng://@alfresco/adf-core/pipes/file-size.pipe.ts","ng://@alfresco/adf-core/models/permissions.enum.ts","ng://@alfresco/adf-core/services/content.service.ts","ng://@alfresco/adf-core/services/thumbnail.service.ts","ng://@alfresco/adf-core/pipes/mime-type-icon.pipe.ts","ng://@alfresco/adf-core/pipes/node-name-tooltip.pipe.ts","ng://@alfresco/adf-core/services/highlight-transform.service.ts","ng://@alfresco/adf-core/pipes/text-highlight.pipe.ts","ng://@alfresco/adf-core/pipes/time-ago.pipe.ts","ng://@alfresco/adf-core/pipes/user-initial.pipe.ts","ng://@alfresco/adf-core/pipes/pipe.module.ts","ng://@alfresco/adf-core/directives/highlight.directive.ts","ng://@alfresco/adf-core/directives/logout.directive.ts","ng://@alfresco/adf-core/directives/node-delete.directive.ts","ng://@alfresco/adf-core/directives/node-favorite.directive.ts","ng://@alfresco/adf-core/interface/injection.tokens.ts","ng://@alfresco/adf-core/directives/node-permission.directive.ts","ng://@alfresco/adf-core/directives/node-restore.directive.ts","ng://@alfresco/adf-core/directives/upload.directive.ts","ng://@alfresco/adf-core/directives/directive.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable-cell.component.ts","ng://@alfresco/adf-core/data-column/data-column.component.ts","ng://@alfresco/adf-core/data-column/data-column-list.component.ts","ng://@alfresco/adf-core/events/base.event.ts","ng://@alfresco/adf-core/events/base-ui.event.ts","ng://@alfresco/adf-core/models/file.model.ts","ng://@alfresco/adf-core/events/file.event.ts","ng://@alfresco/adf-core/datatable/data/data-row-event.model.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-cell.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-row-action.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/date-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/empty-list.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/filesize-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/location-cell.component.ts","ng://@alfresco/adf-core/datatable/directives/loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/empty-custom-content.directive.ts","ng://@alfresco/adf-core/datatable/datatable.module.ts","ng://@alfresco/adf-core/data-column/data-column.module.ts","ng://@alfresco/adf-core/about/about.module.ts","ng://@alfresco/adf-core/viewer/services/view-util.service.ts","ng://@alfresco/adf-core/viewer/components/viewer-more-actions.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-open-with.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-sidebar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer.component.ts","ng://@alfresco/adf-core/viewer/components/imgViewer.component.ts","ng://@alfresco/adf-core/viewer/components/mediaPlayer.component.ts","ng://@alfresco/adf-core/viewer/services/rendering-queue.services.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-password-dialog.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumbnails.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumb.component.ts","ng://@alfresco/adf-core/viewer/components/txtViewer.component.ts","ng://@alfresco/adf-core/viewer/components/unknown-format/unknown-format.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar-actions.component.ts","ng://@alfresco/adf-core/viewer/directives/viewer-extension.directive.ts","ng://@alfresco/adf-core/toolbar/toolbar-divider.component.ts","ng://@alfresco/adf-core/toolbar/toolbar-title.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.module.ts","ng://@alfresco/adf-core/viewer/viewer.module.ts","ng://@alfresco/adf-core/userinfo/models/bpm-user.model.ts","ng://@alfresco/adf-core/userinfo/models/ecm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/bpm-user.service.ts","ng://@alfresco/adf-core/userinfo/services/ecm-user.service.ts","ng://@alfresco/adf-core/userinfo/components/user-info.component.ts","ng://@alfresco/adf-core/userinfo/userinfo.module.ts","ng://@alfresco/adf-core/settings/host-settings.component.ts","ng://@alfresco/adf-core/settings/host-settings.module.ts","ng://@alfresco/adf-core/pagination/pagination.component.ts","ng://@alfresco/adf-core/pagination/infinite-pagination.component.ts","ng://@alfresco/adf-core/pagination/pagination.module.ts","ng://@alfresco/adf-core/services/settings.service.ts","ng://@alfresco/adf-core/login/models/login-error.event.ts","ng://@alfresco/adf-core/login/models/login-submit.event.ts","ng://@alfresco/adf-core/login/models/login-success.event.ts","ng://@alfresco/adf-core/login/components/login.component.ts","ng://@alfresco/adf-core/login/directives/login-header.directive.ts","ng://@alfresco/adf-core/login/directives/login-footer.directive.ts","ng://@alfresco/adf-core/login/components/login-dialog.component.ts","ng://@alfresco/adf-core/login/components/login-dialog-panel.component.ts","ng://@alfresco/adf-core/login/login.module.ts","ng://@alfresco/adf-core/language-menu/language-menu.component.ts","ng://@alfresco/adf-core/language-menu/language-menu.module.ts","ng://@alfresco/adf-core/info-drawer/info-drawer-layout.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.module.ts","ng://@alfresco/adf-core/datatable/data/data-table.schema.ts","ng://@alfresco/adf-core/collapsable/accordion-group.component.ts","ng://@alfresco/adf-core/collapsable/accordion.component.ts","ng://@alfresco/adf-core/collapsable/collapsable.module.ts","ng://@alfresco/adf-core/card-view/components/card-view/card-view.component.ts","ng://@alfresco/adf-core/card-view/services/card-view-update.service.ts","ng://@alfresco/adf-core/card-view/components/card-view-boolitem/card-view-boolitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-dateitem/card-view-dateitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-mapitem/card-view-mapitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-textitem/card-view-textitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-selectitem/card-view-selectitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component.ts","ng://@alfresco/adf-core/services/get-type.ts","ng://@alfresco/adf-core/services/dynamic-component-mapper.service.ts","ng://@alfresco/adf-core/card-view/services/card-item-types.service.ts","ng://@alfresco/adf-core/card-view/directives/card-view-content-proxy.directive.ts","ng://@alfresco/adf-core/card-view/components/card-view-item-dispatcher/card-view-item-dispatcher.component.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-int.validator.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-float.validator.ts","ng://@alfresco/adf-core/card-view/models/card-view-baseitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-boolitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-dateitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-datetimeitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-textitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-floatitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-intitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-mapitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-keyvaluepairs.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-selectitem.model.ts","ng://@alfresco/adf-core/card-view/card-view.module.ts","ng://@alfresco/adf-core/app-config/debug-app-config.service.ts","ng://@alfresco/adf-core/app-config/app-config.pipe.ts","ng://@alfresco/adf-core/app-config/app-config.module.ts","ng://@alfresco/adf-core/form/events/form.event.ts","ng://@alfresco/adf-core/form/events/form-error.event.ts","ng://@alfresco/adf-core/form/events/form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form.event.ts","ng://@alfresco/adf-core/form/events/validate-dynamic-table-row.event.ts","ng://@alfresco/adf-core/form/services/ecm-model.service.ts","ng://@alfresco/adf-core/form/models/form-definition.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-types.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container-column.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/error-message.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-validator.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/tab.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome-event.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/content-link.model.ts","ng://@alfresco/adf-core/form/services/form.service.ts","ng://@alfresco/adf-core/form/models/node-metadata.model.ts","ng://@alfresco/adf-core/form/services/node.service.ts","ng://@alfresco/adf-core/form/services/widget-visibility.service.ts","ng://@alfresco/adf-core/form/components/form.component.ts","ng://@alfresco/adf-core/form/components/form-list.component.ts","ng://@alfresco/adf-core/form/services/process-content.service.ts","ng://@alfresco/adf-core/form/components/widgets/content/content.widget.ts","ng://@alfresco/adf-core/form/components/start-form.component.ts","ng://@alfresco/adf-core/form/components/widgets/widget.component.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.ts","ng://@alfresco/adf-core/form/components/widgets/tabs/tabs.widget.ts","ng://@alfresco/adf-core/form/components/widgets/unknown/unknown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/amount/amount.widget.ts","ng://@alfresco/adf-core/form/components/widgets/checkbox/checkbox.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date/date.widget.ts","ng://@alfresco/adf-core/form/components/widgets/display-text/display-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/document/document.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dropdown/dropdown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/date-cell-validator-model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-row-validation-summary.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/number-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/required-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/boolean/boolean.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/date/date.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/datetime/datetime.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/dropdown/dropdown.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/row.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/text/text.editor.ts","ng://@alfresco/adf-core/form/components/widgets/error/error.component.ts","ng://@alfresco/adf-core/form/components/widgets/functional-group/functional-group.widget.ts","ng://@alfresco/adf-core/form/components/widgets/hyperlink/hyperlink.widget.ts","ng://@alfresco/adf-core/form/components/widgets/multiline-text/multiline-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/number/number.widget.ts","ng://@alfresco/adf-core/services/people-process.service.ts","ng://@alfresco/adf-core/form/components/widgets/people/people.widget.ts","ng://@alfresco/adf-core/form/components/widgets/radio-buttons/radio-buttons.widget.ts","ng://@alfresco/adf-core/form/components/widgets/text/text-mask.component.ts","ng://@alfresco/adf-core/form/components/widgets/text/text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/typeahead/typeahead.widget.ts","ng://@alfresco/adf-core/form/components/widgets/upload/upload.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date-time/date-time.widget.ts","ng://@alfresco/adf-core/form/components/widgets/index.ts","ng://@alfresco/adf-core/form/services/form-rendering.service.ts","ng://@alfresco/adf-core/form/services/activiti-alfresco.service.ts","ng://@alfresco/adf-core/form/components/form-custom-button.directive.ts","ng://@alfresco/adf-core/form/components/form-field/form-field.component.ts","ng://@alfresco/adf-core/form/form.module.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-content.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-header.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-navigation.directive.ts","ng://@alfresco/adf-core/layout/components/sidenav-layout/sidenav-layout.component.ts","ng://@alfresco/adf-core/layout/helpers/animations.ts","ng://@alfresco/adf-core/layout/components/layout-container/layout-container.component.ts","ng://@alfresco/adf-core/layout/components/sidebar-action/sidebar-action-menu.component.ts","ng://@alfresco/adf-core/layout/components/header/header.component.ts","ng://@alfresco/adf-core/layout/layout.module.ts","ng://@alfresco/adf-core/comments/comment-list.component.ts","ng://@alfresco/adf-core/models/comment.model.ts","ng://@alfresco/adf-core/models/user-process.model.ts","ng://@alfresco/adf-core/services/comment-process.service.ts","ng://@alfresco/adf-core/services/comment-content.service.ts","ng://@alfresco/adf-core/comments/comments.component.ts","ng://@alfresco/adf-core/comments/comments.module.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.component.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.module.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.component.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.module.ts","ng://@alfresco/adf-core/templates/error-content/error-content.component.ts","ng://@alfresco/adf-core/templates/empty-content/empty-content.component.ts","ng://@alfresco/adf-core/templates/template.module.ts","ng://@alfresco/adf-core/services/auth-guard.service.ts","ng://@alfresco/adf-core/services/auth-guard-ecm.service.ts","ng://@alfresco/adf-core/services/auth-guard-bpm.service.ts","ng://@alfresco/adf-core/services/apps-process.service.ts","ng://@alfresco/adf-core/services/page-title.service.ts","ng://@alfresco/adf-core/services/renditions.service.ts","ng://@alfresco/adf-core/services/notification.service.ts","ng://@alfresco/adf-core/models/component.model.ts","ng://@alfresco/adf-core/services/translate-loader.service.ts","ng://@alfresco/adf-core/services/upload.service.ts","ng://@alfresco/adf-core/services/deleted-nodes-api.service.ts","ng://@alfresco/adf-core/services/favorites-api.service.ts","ng://@alfresco/adf-core/services/nodes-api.service.ts","ng://@alfresco/adf-core/services/people-content.service.ts","ng://@alfresco/adf-core/services/search-configuration.service.ts","ng://@alfresco/adf-core/services/search.service.ts","ng://@alfresco/adf-core/services/shared-links-api.service.ts","ng://@alfresco/adf-core/services/sites.service.ts","ng://@alfresco/adf-core/services/login-dialog.service.ts","ng://@alfresco/adf-core/services/external-alfresco-api.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.directive.ts","ng://@alfresco/adf-core/clipboard/clipboard.module.ts","ng://@alfresco/adf-core/models/ecm-company.model.ts","ng://@alfresco/adf-core/models/redirection.model.ts","ng://@alfresco/adf-core/models/comment-process.model.ts","ng://@alfresco/adf-core/models/pagination.model.ts","ng://@alfresco/adf-core/mock/AlfrescoApi.mock.ts","ng://@alfresco/adf-core/mock/app-config.service.mock.ts","ng://@alfresco/adf-core/mock/authentication.service.mock.ts","ng://@alfresco/adf-core/mock/bpm-user.service.mock.ts","ng://@alfresco/adf-core/mock/comment-process-service.mock.ts","ng://@alfresco/adf-core/mock/cookie.service.mock.ts","ng://@alfresco/adf-core/mock/event.mock.ts","ng://@alfresco/adf-core/mock/search.service.mock.ts","ng://@alfresco/adf-core/mock/translation.service.mock.ts","ng://@alfresco/adf-core/mock/alfresco-api.service.mock.ts","ng://@alfresco/adf-core/mock/form/widget-visibility.service.mock.ts","ng://@alfresco/adf-core/testing/setupTestBed.ts","ng://@alfresco/adf-core/services/startup-service-factory.ts","ng://@alfresco/adf-core/core.module.ts","ng://@alfresco/adf-core/mock/apps-service.mock.ts","ng://@alfresco/adf-core/mock/ecm-user.service.mock.ts","ng://@alfresco/adf-core/mock/renditionsService.mock.ts","ng://@alfresco/adf-core/mock/form/form.component.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinition.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionReadonly.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionVisibiity.mock.ts","ng://@alfresco/adf-core/mock/form/start-form.component.mock.ts","ng://@alfresco/adf-core/mock/form/form.service.mock.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","ObjectUtils","getValue","target","key","undefined","keys","split","shift","merge","objects","_i","forEach","source","prop","isArray","APP_CONFIG_LANGUAGES_KEY","PROVIDERS","OAUTHCONFIG","ECMHOST","BASESHAREURL","BPMHOST","AUTHTYPE","CONTEXTROOTECM","CONTEXTROOTBPM","ALFRESCO_REPOSITORY_NAME","LOG_LEVEL","LOGIN_ROUTE","DISABLECSRF","AppConfigService","http","application","name","ecmHost","bpmHost","logLevel","alfrescoRepositoryName","onLoadSubject","Subject","onLoad","asObservable","select","property","pipe","map","config","distinctUntilChanged","get","defaultValue","keywords","Map","set","getLocationHostname","getLocationPort","getLocationProtocol","formatString","location","protocol","hostname","prefix","port","load","_this","configUrl","Date","now","subscribe","data","str","expr","RegExp","replace","Injectable","HttpClient","StorageService","useLocalStorage","storageAvailable","getItem","localStorage","memoryStore","setItem","toString","clear","removeItem","hasItem","type","storage","window","AlfrescoApiService","appConfig","getInstance","alfrescoApi","defineProperty","activiti","taskApi","modelsApi","content","nodes","core","renditionsApi","sharedlinksApi","sitesApi","favoritesApi","peopleApi","search","searchApi","versionsApi","classesApi","groupsApi","initAlfrescoApi","_a","reset","oauth","AppConfigValues","redirectUri","origin","redirectUriLogout","provider","getProvider","hostEcm","hostBpm","authType","contextRootBpm","contextRoot","disableCsrf","getDisableCSRF","oauth2","configureJsApi","CookieService","isEnabled","navigator","cookieEnabled","document","cookie","indexOf","exec","expiration","path","toUTCString","tslib_1.__extends","Number","logLevels","level","LogLevelsEnum","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","LogService","onMessage","configLevel","getLogLevel","message","optionalParams","currentLogLevel","messageBus","console","debug","info","log","trace","warn","assert","test","group","groupTitle","groupEnd","referencedLevel","find","currentLevel","toLocaleLowerCase","text","REMEMBER_ME_COOKIE_KEY","AuthenticationService","logService","isLoggedIn","isOauth","isRememberMeSet","isOauthConfiguration","isECMProvider","isEcmConfiguration","isBPMProvider","isBpmConfiguration","isALLProvider","isEcmBpmConfiguration","login","username","password","rememberMe","from","response","saveRememberMeCookie","onLogin","ticket","catchError","err","handleError","ssoImplicitLogin","implicitLogin","expireTime","getTime","setTime","logout","callApiLogout","tap","onLogout","getTicketEcm","getTicketBpm","getTicketEcmBase64","btoa","isEcmLoggedIn","isBpmLoggedIn","getEcmUsername","getBpmUsername","setRedirect","url","redirectUrl","getRedirect","hasValidRedirection","getBpmLoggedUser","profileApi","getProfile","hasSelectedProviderAll","throwError","getBearerExcludedUrls","bearerExcludedUrls","getToken","addTokenToHeader","headersArg","Observable","observer","headers","HttpHeaders","token","complete","BpmProductVersionModel","obj","edition","majorVersion","revisionVersion","minorVersion","VersionModel","major","minor","patch","hotfix","schema","display","LicenseModel","issuedAt","expiresAt","remainingDays","holder","mode","isClusterEnabled","isCryptodocEnabled","VersionStatusModel","isReadOnly","isAuditEnabled","isQuickShareEnabled","isThumbnailGenerationEnabled","VersionModuleModel","id","title","description","version","installDate","installState","versionMin","versionMax","EcmProductVersionModel","entry","repository","license","status","modules","module","DiscoveryApiService","apiService","getEcmProductInfo","discovery","discoveryApi","getRepositoryInformation","res","getBpmProductInfo","aboutApi","getAppVersion","FileUtils","flattern","folder","reader","createReader","files","iterations","traverse","readEntries","entries","all","isFile","resolveFile","file","relativeFolder","fullPath","toFileArray","fileList","MOMENT_DATE_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MomentDateAdapter","_super","moment","localeData","getYear","date","year","getMonth","month","getDate","getDayOfWeek","day","getMonthNames","style","months","monthsShort","getDateNames","dateNames","String","getDayOfWeekNames","weekdays","weekdaysShort","getYearName","getFirstDayOfWeek","firstDayOfWeek","getNumDaysInMonth","daysInMonth","clone","locale","createDate","today","parseFormat","isValid","overrideDisplyaFormat","currentYear","getFullYear","isAfter","format","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","getISODateString","toISOString","setLocale","compareDate","first","second","diff","sameDate","isMoment","isSame","clampDate","min","max","isBefore","isDateInstance","isValidDateInstance","_isAMomentObject","toIso8601","fromIso8601","iso8601String","ISO_8601","invalid","DateAdapter","ObjectDataRow","isSelected","Error","hasValue","imageErrorResolver","event","ObjectDataColumn","sortable","srTitle","cssClass","template","DataSorting","direction","ObjectDataTableAdapter","_rows","_columns","item","filter","c","sort","rowsChanged","generateSchema","rowToExaminate","getRows","setRows","rows","getColumns","setColumns","columns","row","col","getSorting","_sorting","setSorting","sorting","a","left","valueOf","right","localeCompare","AboutComponent","authService","ngOnInit","ecmVers","ecmVersion","bpmVers","bpmVersion","regexp","alfrescoPackages","dependencies","val","alfrescoPackagesTableRepresentation","gitHubLinkCreation","corePackage","packageUp","commitIsh","githubUrlCommitAlpha","Component","args","selector","encapsulation","ViewEncapsulation","None","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatNativeDateModule","MatOptionModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatMenuModule","MatProgressBarModule","MatSidenavModule","MatSnackBarModule","MatToolbarModule","MatTooltipModule","MatDatetimepickerModule","MatNativeDatetimeModule","MatExpansionModule","NgModule","imports","exports","ContextMenuHolderComponent","viewport","overlayContainer","contextMenuService","renderer","top","onShowContextMenu","preventDefault","onResize","mdMenuElement","updatePosition","subscriptions","show","showMenu","menuTrigger","onMenuOpen","container","getContainerElement","contextMenuListenerFn","listen","menuElement","getContextMenuElement","onMenuClose","ngOnDestroy","subscription","unsubscribe","onMenuItemClick","menuItem","model","disabled","stopImmediatePropagation","subject","links","mouseLocation","clientX","clientY","openMenu","locationCss","setTimeout","parentElement","clientWidth","getViewportRect","width","menu","xPosition","clientHeight","height","yPosition","querySelector","ViewportRuler","OverlayContainer","ContextMenuService","Renderer2","Input","ViewChild","MatMenuTrigger","HostListener","ContextMenuOverlayRef","overlayRef","close","dispose","CONTEXT_MENU_DATA","InjectionToken","contextMenuAnimation","state","opacity","transform","transition","sequence","query","animate","ContextMenuListComponent","contextMenuOverlayRef","handleKeydownEscape","handleKeydownEvent","keyCode","UP_ARROW","DOWN_ARROW","keyManager","onKeydown","ngAfterViewInit","FocusKeyManager","items","setFirstItemActive","host","role","class","animations","trigger","decorators","Inject","Optional","ViewChildren","MatMenuItem","DEFAULT_CONFIG","panelClass","backdropClass","hasBackdrop","ContextMenuOverlayService","injector","overlay","open","overlayConfig","createOverlay","attachDialogContainer","backdropClick","_backdropElement","addEventListener","_backdropClick","getOverlayConfig","createInjector","containerPortal","ComponentPortal","attach","instance","injectionTokens","WeakMap","PortalInjector","fakeElement","getBoundingClientRect","bottom","positionStrategy","position","connectedTo","ElementRef","originX","originY","overlayX","overlayY","withFallbackPosition","OverlayConfig","scrollStrategy","scrollStrategies","Injector","Overlay","ContextMenuDirective","enabled","Directive","CommonModule","MaterialModule","TranslateModule","forChild","declarations","entryComponents","PaginationSize","Locale","SupportedPageSizes","UserPreferencesService","translate","paginationSize","supportedPageSizes","defaults","initUserPreferenceStatus","bind","localeSubject","BehaviorSubject","UserPreferenceValues","getDefaultLocale","locale$","onChangeSubject","userPreferenceStatus","onChange","getPropertyKey","getStoragePrefix","setStoragePrefix","getDefaultPageSizes","getBrowserLang","TranslateService","TRANSLATION_PROVIDER","TranslationService","userPreference","providers","customLoader","defaultLang","setDefaultLang","providers_1","tslib_1.__values","providers_1_1","addTranslationFolder","userLang","use","providerRegistered","registerProvider","loadTranslation","lang","fallback","getTranslation","onTranslationChanged","onTranslationChange","translations","getFullTranslationJSON","init","interpolateParams","instant","FileSizePipe","translation","bytes","decimals","dm","Math","floor","i18nSize","parseFloat","pow","toFixed","Pipe","pure","ContentService","sanitizer","saveData","createElement","appendChild","fileName","blob","Blob","json","JSON","stringify","msSaveOrOpenBlob","URL","createObjectURL","href","download","click","revokeObjectURL","downloadBlob","downloadData","downloadJSON","createTrustedUrl","bypassSecurityTrustUrl","getDocumentThumbnailUrl","node","attachment","contentApi","getContentUrl","getNodeContent","nodeId","nodesApi","getFileContent","createFolder","relativePath","parentId","folderCreated","getNode","opts","hasPermission","permission","hasAllowableOperations","startsWith","allowableOperations","currentPermission","PermissionsEnum","COPY","LOCK","isLocked","DomSanitizer","ThumbnailService","contentService","matIconRegistry","image/png","image/jpeg","image/gif","image/bmp","image/cgm","image/ief","image/jp2","image/tiff","image/vnd.adobe.photoshop","image/vnd.adobe.premiere","image/x-cmu-raster","image/x-dwt","image/x-portable-anymap","image/x-portable-bitmap","image/x-portable-graymap","image/x-portable-pixmap","image/x-raw-adobe","image/x-raw-canon","image/x-raw-fuji","image/x-raw-hasselblad","image/x-raw-kodak","image/x-raw-leica","image/x-raw-minolta","image/x-raw-nikon","image/x-raw-olympus","image/x-raw-panasonic","image/x-raw-pentax","image/x-raw-red","image/x-raw-sigma","image/x-raw-sony","image/x-xbitmap","image/x-xpixmap","image/x-xwindowdump","image/svg+xml","application/eps","application/illustrator","application/pdf","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/vnd.ms-excel.addin.macroenabled.12","application/vnd.ms-excel.sheet.binary.macroenabled.12","application/vnd.ms-excel.sheet.macroenabled.12","application/vnd.ms-excel.template.macroenabled.12","application/vnd.sun.xml.calc","application/vnd.sun.xml.calc.template","application/vnd.ms-outlook","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-word.document.macroenabled.12","application/vnd.ms-word.template.macroenabled.12","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.template","application/rtf","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.presentationml.slideshow","application/vnd.oasis.opendocument.presentation","application/vnd.oasis.opendocument.presentation-template","application/vnd.openxmlformats-officedocument.presentationml.slide","application/vnd.sun.xml.impress","application/vnd.sun.xml.impress.template","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.spreadsheet-template","application/vnd.ms-powerpoint.addin.macroenabled.12","application/vnd.ms-powerpoint.presentation.macroenabled.12","application/vnd.ms-powerpoint.slide.macroenabled.12","application/vnd.ms-powerpoint.slideshow.macroenabled.12","application/vnd.ms-powerpoint.template.macroenabled.12","video/mp4","video/3gpp","video/3gpp2","video/mp2t","video/mpeg","video/mpeg2","video/ogg","video/quicktime","video/webm","video/x-flv","video/x-m4v","video/x-ms-asf","video/x-ms-wmv","video/x-msvideo","video/x-rad-screenplay","video/x-sgi-movie","video/x-matroska","audio/mpeg","audio/ogg","audio/wav","audio/basic","audio/mp4","audio/vnd.adobe.soundbooth","audio/vorbis","audio/x-aiff","audio/x-flac","audio/x-ms-wma","audio/x-wav","x-world/x-vrml","text/plain","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.text-template","application/x-javascript","application/json","text/csv","text/xml","text/html","application/x-compressed","application/x-zip-compressed","application/zip","application/x-tar","application/vnd.apple.keynote","application/vnd.apple.pages","application/vnd.apple.numbers","application/vnd.visio","application/wordperfect","application/x-cpio","smartFolder","disable/folder","selected","mimeTypeIcons","addSvgIcon","bypassSecurityTrustResourceUrl","DEFAULT_ICON","getMimeTypeIcon","mimeType","getDefaultMimeTypeIcon","MatIconRegistry","MimeTypeIconPipe","thumbnailService","NodeNameTooltipPipe","getNodeTooltip","containsLine","lines","line","some","toLowerCase","removeDuplicateLines","reduce","acc","properties","join","HighlightTransformService","highlight","wrapperClass","isMatching","pattern","regex","match","changed","HighlightPipe","highlightTransformService","TimeAgoPipe","actualLocale","defaultLocale","fromNow","InitialUsernamePipe","sanitized","user","className","delimiter","initialResult","getInitialUserName","firstName","lastName","bypassSecurityTrustHtml","HighlightDirective","el","classToApply","nativeElement","querySelectorAll","element","innerHTML","setProperty","LogoutDirective","elementRef","router","auth","evt","redirectToUri","enabelRedirect","navigate","Router","NodeDeleteDirective","alfrescoApiService","EventEmitter","onClick","process","selection","ngOnChanges","setDisableAttribute","hasAttribute","disable","batch","getDeleteNodesBatch","forkJoin","processedItems","processStatus","getMessage","delete","emit","deleteNode","promise","purgeDeletedNode","permanent","of","success","failed","someFailed","someSucceeded","oneFailed","oneSucceeded","allSucceeded","allFailed","number","Output","NodeFavoriteDirective","toggleFavorite","changes","currentValue","markFavoritesNodes","favorites","every","isFavorite","removeFavoriteSite","toggle","notFavorite_1","createFavoriteBody","addFavorite","newFavorites","getProcessBatch","hasFavorites","getFavorite","isFolder","getNodeType","guid","list","ids","includes","comparator","exportAs","EXTENDIBLE_COMPONENT","NodePermissionDirective","changeDetector","parentComponent","firstChange","updateElement","enable","detectChanges","enableElement","disableElement","removeAttribute","setAttribute","ChangeDetectorRef","Host","RestoreMessageModel","NodeRestoreDirective","restoreProcessStatus","recover","nodesWithPath","getNodesWithPath","fail","notification","restoreNodesBatch","restoredNodes","_b","mergeMap","getDeletedNodes","deletedNodesList","nodelist","restoreErrorNodes","selectedNodes","remainingNodes","restoreNode","include","statusCode","fromList","getRestoreMessage","action","restore","UploadDirective","ngZone","isClickMode","inputUpload","upload","onSelectFiles","multiple","accept","directory","isDropMode","runOutsideAngular","onDragEnter","onDragOver","onDragLeave","onDrop","removeEventListener","classList","cssClassName","isDragging","remove","stopPropagation","dataTranfer","getDataTransfer","getFilesDropped","onUploadFiles","CustomEvent","detail","sender","bubbles","dispatchEvent","hasMode","dataTransfer","originalEvent","webkitGetAsEntry","item_1","getAsFile","isDirectory","resolveFolder","input","NgZone","DataTableCellComponent","column","tooltip","changeDetection","ChangeDetectionStrategy","OnPush","DataColumnComponent","ContentChild","TemplateRef","ContentChildren","BaseEvent","isDefaultPrevented","BaseUIEvent","Pending","Complete","Starting","Progress","Cancelled","Aborted","Deleted","FileModel","options","FileUploadStatus","size","progress","loaded","total","percent","newVersion","slice","lastIndexOf","Infinity","FileUploadEvent","FileUploadCompleteEvent","totalComplete","totalAborted","FileUploadDeleteEvent","FileUploadErrorEvent","totalError","DataRowEvent","domEvent","DataCellEventModel","actions","DataCellEvent","DataRowActionModel","DataRowActionEvent","List","Gallery","DataTableComponent","differs","DisplayMode","differ","click$","clickObserver","share","ngAfterContentInit","columnList","setTableSchema","datatableLayoutFix","initAndSubscribeClickStream","isPropertyChanged","isTableEmpty","initTable","resetSelection","setTableRows","isFirstChange","emitRowSelectionEvent","setTableSorting","ngDoCheck","convertToRowsData","convertToDataSorting","unsubscribeClickStream","singleClickStream","buffer","debounceTime","x","singleClickStreamSub","handleRowSelection","rowClick","defaultPrevented","multiClickStream","multiClickStreamSub","rowDblClick","rowMenuCache","getSchemaFromHtml","onRowClick","dataRowEvent","onEnterKeyPressed","isSingleSelectionMode","selectRow","isMultiSelectionMode","modifier","metaKey","ctrlKey","newValue","domEventName","isSelectAllChecked","onRowDblClick","onRowKeyUp","keyboardEvent","onKeyboardNavigate","onColumnHeaderClick","current","newDirection","emitSortingChangedEvent","onSelectAllClick","checked","multiselect","onCheckboxChange","onImageLoadingError","fallbackThumbnail","src","isIconValue","asIconValue","iconAltTextKey","substring","isColumnSorted","getContextMenuActions","showRowContextMenu","getRowActions","event_1","showRowActionsMenu","rowMenuCacheEnabled","onExecuteRowAction","executeRowAction","rowAllowsDrop","isDropTarget","hasSelectionMode","selectionMode","getRowStyle","rowStyleClass","getFilename","getSortingKey","idx","splice","getCellTooltip","formatTooltip","getSortableColumns","isEmpty","isHeaderVisible","showHeader","loading","dataRowsChanged","fakeRows","IterableDiffers","DataColumnListComponent","DateCellComponent","userPreferenceService","currentLocale","LocationCellComponent","elements","displayText","parent_1","link","LoadingContentTemplateDirective","dataTable","loadingTemplate","NoContentTemplateDirective","noContentTemplate","NoPermissionTemplateDirective","noPermissionTemplate","RouterModule","ContextMenuModule","PipeModule","DirectiveModule","EmptyListComponent","EmptyListHeaderDirective","EmptyListBodyDirective","EmptyListFooterDirective","FileSizeCellComponent","EmptyCustomContentDirective","DataTableModule","DataColumnModule","ViewUtilService","pdf","image","media","printFile","pwa","TARGET","ContentGroup","IMAGE","onfocus","onload","print","printFileGeneric","objectId","getViewerTypeByMimeType","getRendition","PDF","getRenditionUrl","printType","TEXT","catch","renditionExists","waitRendition","renditionId","retries","rendition","maxRetries","wait","editorTypes","mimeTypes","editorTypes_1","editorTypes_1_1","ms","getRenditions","supported","createRendition","err_1","MEDIA","providedIn","ViewerComponent","viewUtils","isSourceDefined","urlFile","blobFile","sharedLinkId","nodeUpdated","onNodeUpdated","generateCacheBusterNumber","isLoading","setUpNodeFile","showViewer","setUpBlobData","setUpUrlFile","getNodeInfo","sharedLinksApi","getSharedLink","details","setUpSharedLinkFile","invalidSharedLink","fileTitle","getDisplayName","viewerType","allowDownload","extensionChange","scrollTop","filenameFromUrl","getFilenameFromUrl","extension","getFileExtension","urlFileContent","downloadUrl","displayName","urlFileViewer","getViewerTypeByExtension","cacheBusterNumber","setupNode","displayNodeRendition","sidebarTemplateContext","sidebarLeftTemplateContext","getSharedLinkContentUrl","displaySharedLinkRendition","toggleSidebar","showSidebar","toggleLeftSidebar","showLeftSidebar","scrollTo","isCustomViewerExtension","extensions","onBackButtonClick","overlayMode","goBack","back","onNavigateBeforeClick","navigateBefore","onNavigateNextClick","navigateNext","otherMenu","hidden","showViewerChange","anchor","end","externalExtensions","handleKeyboardEvent","canNavigateBefore","canNavigateNext","enterFullScreen","downloadContent","removeChild","printContent","allowPrint","shareContent","allowShare","allowFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","resolveRendition","sharedId","getSharedLinkRendition","getSharedLinkRenditionUrl","error_1","error_2","err_2","currentRetry","intervalId","setInterval","clearInterval","Location","ViewerToolbarComponent","ViewerSidebarComponent","ViewerOpenWithComponent","ViewerMoreActionsComponent","ImgViewerComponent","scaleX","scaleY","rotate","offsetX","offsetY","round","onMouseDown","onMouseUp","onMouseLeave","onMouseOut","onMouseMove","isDragged","drag","pageX","pageY","delta","zoomIn","ratio","zoomOut","rotateLeft","angle","abs","rotateRight","MediaPlayerComponent","INITIAL","RUNNING","PAUSED","FINISHED","RenderingQueueServices","setViewer","pdfViewer","setThumbnailViewer","pdfThumbnailViewer","isHighestPriority","view","highestPriorityPage","renderingId","renderHighestPriority","currentlyVisiblePages","idleTimeout","clearTimeout","forceRendering","isThumbnailViewEnabled","printing","onIdle","CLEANUP_TIMEOUT","getHighestPriority","visible","views","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","last","previousPageIndex","renderingState","renderingStates","renderView","resume","continueRendering","draw","PdfPasswordDialogComponent","dialogRef","passwordFormControl","FormControl","Validators","required","isError","reason","pdfjsLib","PasswordResponses","INCORRECT_PASSWORD","hasError","submit","MatDialogRef","MAT_DIALOG_DATA","PdfViewerComponent","dialog","renderingQueueServices","viewer","onPageChange","onPagesLoaded","onPagerendered","currentScale","reader_1","FileReader","executePdf","readAsArrayBuffer","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","onPassword","callback","onPdfPassword","onProgress","progressData","loadingPercent","pdfDocument","currentPdfDocument","totalPages","numPages","page","displayPage","initPDFViewer","getPage","scalePage","getElementById","documentContainer","pdfjsViewer","PDFViewer","renderingQueue","setDocument","pdfThumbnailsContext","destroy","toggleThumbnails","showThumbnails","scaleMode","currentScaleMode","viewerContainer","widthContainer","heightContainer","currentPage","_pages","_currentPageNumber","pageWidthScale","scale","pageHeightScale","horizontalScale","isLandscape","MAX_AUTO_SCALE","setScaleUpdatePages","newScale","isSameScale","update","oldScale","pageFit","ticks","DEFAULT_SCALE_DELTA","ceil","MAX_SCALE","MIN_SCALE","previousPage","currentPageNumber","nextPage","inputPage","pageInput","parseInt","isNaN","pageNumber","disableClose","afterClosed","rendered","isPanelDisabled","MatDialog","PdfThumbListComponent","margin","calculateItems","eventBus","on","setHeight","getPages","scrollInto","off","trackByFn","index","pageNum","goTo","findIndex","itemHeight","getWidth","getHeight","currentHeight","calculateHeight","getViewport","pageRatio","getContainerSetup","viewPort","itemsInView","indexByScrollTop","start","translateY","virtualHeight","renderItems","elementRec","PdfThumbComponent","image$","getThumb","canvas","getCanvas","render","canvasContext","getContext","imageSource","toDataURL","TxtViewerComponent","readBlob","getUrlContent","responseType","onerror","readAsText","ViewerExtensionDirective","viewerComponent","templateModel","isVisible","extensionTemplates","fileExtension","supportedExtensions","supportedExtension","ToolbarComponent","ToolbarTitleComponent","ToolbarDividerComponent","FormsModule","ReactiveFormsModule","ToolbarModule","FlexLayoutModule","UnknownFormatComponent","ViewerToolbarActionsComponent","BpmUserModel","apps","capabilities","company","created","email","externalId","fullname","fullNameDisplay","formatValue","trim","groups","lastUpdate","latestSyncTimeStamp","pictureId","tenantId","tenantName","tenantPictureId","EcmUserModel","avatarId","skypeId","googleId","instantMessageId","jobTitle","mobile","telephone","statusUpdatedAt","userStatus","emailNotificationsEnabled","BpmUserService","getCurrentUserInfo","getCurrentUserProfileImage","getProfilePictureUrl","EcmUserService","getUserInfo","userName","getPerson","getUserProfileImage","nodeObj","UserInfoComponent","ecmUserService","bpmUserService","loadEcmUserInfo","loadBpmUserInfo","ecmUser","getEcmAvatar","ecmUserImage","bpmUser","bpmUserImage","stopClosing","showOnRight","namePosition","hasBpmUserPictureId","hasEcmUserAvatarId","HostSettingsComponent","formBuilder","storageService","showSelectProviders","providerSelected","form","providersControl","addFormGroups","addOAuthFormGroup","valueChanges","removeControl","removeFormGroups","addBPMFormControl","addECMFormControl","oauthFormGroup","createOAuthFormGroup","addControl","isBPM","isALL","isOAUTH","bpmFormControl","createBPMFormControl","isECM","ecmFormControl","createECMFormControl","HOST_REGEX","clientId","scope","secret","silentLogin","implicitFlow","onCancel","cancel","onSubmit","values","saveBPMValues","saveECMValues","saveOAuthValues","invalidateSession","oauthConfig","FormBuilder","PaginationComponent","cdr","userPreferencesService","pagination","defaultPagination","DEFAULT_PAGINATION","maxItems","paginationSubscription","count","isFirstPage","goPrevious","totalItems","skipCount","lastPage","isLastPage","hasItems","fill","goNext","handlePaginationEvent","ACTIONS","NEXT_PAGE","previous","PREV_PAGE","onChangePageNumber","CHANGE_PAGE_NUMBER","onChangePageSize","CHANGE_PAGE_SIZE","params","change","changePageNumber","changePageSize","prevPage","updatePagination","HostBinding","InfinitePaginationComponent","DEFAULT_PAGE_SIZE","pageSize","onLoadMore","loadMore","hasMoreItems","SettingsService","ecmHostUrl","csrfDisabled","bpmHostUrl","getBPMApiBaseUrl","getProviders","setProviders","LoginErrorEvent","LoginSubmitEvent","_values","_defaultPrevented","LoginSuccessEvent","Landing","Checking","Welcome","LoginComponent","_fb","translateService","userPreferences","settingsService","LoginSteps","initFormError","initFormFieldsMessages","hasCustomFieldsValidation","fieldsValidation","initFormFieldsDefault","initFormFieldsMessagesDefault","onValueChanged","disableError","controls","executeSubmit","performLogin","field","formError","errors","dirty","valid","_message","actualLoginStep","navigateByUrl","successRoute","displayErrorMessage","enableError","crossDomain","errorMsg","addCustomFormError","msg","addCustomValidationError","ruleId","toggleShowPassword","isPasswordShow","isErrorStyle","pristine","trimUsername","minLength","LoginHeaderDirective","alfrescoLoginComponent","headerTemplate","LoginFooterDirective","footerTemplate","LoginDialogComponent","buttonActionName","actionName","toUpperCase","logged","submitForm","loginPanel","onLoginSuccess","isFormValid","LoginDialogPanelComponent","LanguageMenuComponent","languagesCongifApp","languages","changeLanguage","InfoDrawerComponent","showTabLayout","contentBlocks","onTabChange","currentTab","InfoDrawerTabComponent","InfoDrawerLayoutComponent","InfoDrawerTitleDirective","InfoDrawerButtonsDirective","InfoDrawerContentDirective","DataTableSchema","appConfigService","presetKey","presetsModel","createDatatableSchema","loadLayoutPresets","mergeJsonAndHtmlSchema","externalSettings","layoutPresets","customSchemaColumns","getSchemaFromConfig","presetColumn","getDefaultLayoutPreset","presetColoumn","AccordionGroupComponent","_isOpen","_isSelected","hasContent","contentWrapper","children","hasHeadingIcon","headingIcon","onHeaderClick","headingClick","heading","isExpandable","isOpen","expandPanel","expansionPanel","expanded","toggleExpansion","AccordionComponent","transformKeyToObject","reverse","previousValue","itemUpdatedSource","itemClickedSource","CardViewUpdateService","clicked","CardViewBoolItemComponent","cardViewUpdateService","isEditable","editable","ɵ1","MAT_MOMENT_DATETIME_FORMATS","CardViewDateItemComponent","dateAdapter","preferences","SHOW_FORMAT","valueDate","showProperty","displayEmpty","showDatePicker","datepicker","onDateChanged","newDateValue","momentDate","toDate","provide","useClass","MAT_DATE_FORMATS","useValue","ɵ0","DatetimeAdapter","MomentDatetimeAdapter","MAT_DATETIME_FORMATS","CardViewMapItemComponent","isClickable","clickable","CardViewTextItemComponent","editedValue","hasIcon","icon","hasErrors","errorMessages","setEditMode","editStatus","inEdit","editorInput","getValidationErrors","CardViewSelectItemComponent","getOptions","options$","CardViewKeyValuePairsItemComponent","matTableValues","MatTableDataSource","save","onBlur","validValues","getType","DynamicComponentResolver","fromType","DynamicComponentMapper","getComponentTypeResolver","types","setComponentTypeResolver","resolver","override","resolveComponentType","int","float","datetime","bool","keyvaluepairs","CardViewContentProxyDirective","viewContainerRef","ViewContainerRef","CardViewItemDispatcherComponent","cardItemTypeService","dynamicLifecycleMethod","proxy","loadComponent","changeName","inputParamName","simpleChange","componentReference","factoryClass","factory","resolveComponentFactory","createComponent","methodName","CardItemTypeService","ComponentFactoryResolver","CardViewItemIntValidator","CardViewItemFloatValidator","isFinite","CardViewBaseItemModel","default","validators","validator","isValidUntilNow","CardViewBoolItemModel","CardViewDateItemModel","CardViewDatetimeItemModel","CardViewTextItemModel","multiline","pipes","applyPipes","displayValue","accumulator","CardViewFloatItemModel","CardViewIntItemModel","CardViewMapItemModel","CardViewKeyValuePairsItemModel","CardViewSelectItemModel","switchMap","option","CardViewComponent","DebugAppConfigService","AppConfigPipe","HttpClientModule","FormEvent","FormErrorEvent","FormFieldEvent","ValidateFormFieldEvent","ValidateFormEvent","ValidateDynamicTableRowEvent","summary","EcmModelService","createEcmTypeForActivitiForm","formName","searchActivitiEcmModel","saveFomType","typeForm","createActivitiEcmModel","getEcmModels","ecmModels","MODEL_NAME","createEcmModel","MODEL_NAMESPACE","activeEcmModel","modelActive","createEcmTypeWithProperties","typeCreated","searchEcmType","ecmType","createEcmType","TYPE_MODEL","addPropertyToAType","properyAdded","typeName","modelName","getEcmType","customTypes","prefixedName","customModelApi","activateCustomModel","toJson","nameSpace","createCustomModel","getAllCustomModel","getAllCustomType","parentType","cleanNameType","createCustomType","formFields","dataType","multiValued","mandatory","mandatoryEnforced","addPropertyToType","cleanName","FormDefinitionModel","lastUpdatedByFullName","lastUpdated","metadata","formRepresentation","lastUpdatedBy","stencilSetId","referenceId","formDefinition","fields","fieldType","numberOfColumns","readOnly","sizeX","sizeY","1","metadataToFields","gridsterForm","javascriptEvents","outcomes","tabs","variables","colspan","existingColspan","maxColspan","layout","FormFieldTypes","isReadOnlyType","READONLY_TYPES","isContainerType","CONTAINER","GROUP","HYPERLINK","DISPLAY_VALUE","READONLY_TEXT","FormWidgetModel","tab","ContainerColumnModel","hasFields","ErrorMessageModel","attributes","isActive","getAttributesAsJsonObj","obj_1","RequiredFieldValidator","MULTILINE_TEXT","NUMBER","BOOLEAN","TYPEAHEAD","DROPDOWN","PEOPLE","FUNCTIONAL_GROUP","RADIO_BUTTONS","UPLOAD","AMOUNT","DYNAMIC_TABLE","DATE","DATETIME","isSupported","supportedTypes","validate","hasEmptyValue","emptyOption","opt","NumberFieldValidator","isNumber","valueStr","enableFractions","validationSummary","DateFieldValidator","isValidDate","inputDate","dateFormat","dateDisplayFormat","MinDateFieldValidator","minValue","checkDate","fieldValueData","toLocaleUpperCase","MaxDateFieldValidator","maxValue","MAX_DATE_FORMAT","MinDateTimeFieldValidator","checkDateTime","fieldValueDate","MIN_DATETIME_FORMAT","MaxDateTimeFieldValidator","MAX_DATETIME_FORMAT","MinLengthFieldValidator","toLocaleString","MaxLengthFieldValidator","maxLength","MinValueFieldValidator","MaxValueFieldValidator","RegExFieldValidator","regexPattern","FixedValueFieldValidator","hasValidNameOrValidId","hasValidName","hasValidId","hasStringValue","hasOptions","FORM_FIELD_VALIDATORS","FormFieldModel","defaultDateFormat","_required","_readOnly","overrideId","restUrl","restResponsePath","restIdProperty","restLabelProperty","optionType","hyperlinkUrl","visibilityCondition","currency","getDefaultDateFormat","_value","parseValue","placeholder","processVariables","processVariable","getProcessVariableValue","responseVariable","formVariable","getVariablesValue","containerFactory","updateForm","_isValid","markAsInvalid","fieldValidators","validators_1","validators_1_1","jsonField","originalType","deafultDateTimeFormat","isTypeaHeadFieldType","getFieldNameWithLabel","fieldName","findProcessVariableValue","variableName","variable","currentVariable","rowspan","currentField","colFields","isDateField","isDateTimeField","dateValue","rbEntry","elem","taEntry","dateTimeValue","isInvalidFieldType","onFormFieldChanged","getOptionName","ContainerModel","FormOutcomeModel","isSystem","selectedOutcome","TabModel","FormModel","formService","UNSET_TASK_NAME","taskId","taskName","processDefinitionId","customFieldTemplates","tabCache_1","parseRootFields","loadData","saveOutcome","SAVE_OUTCOME","completeOutcome","COMPLETE_OUTCOME","startProcessOutcome","START_PROCESS_OUTCOME","customOutcomes","validateForm","hasTabs","hasOutcomes","validateField","formFieldValueChanged","getFieldById","fieldId","getFormFields","validateFormEvent","errorsField","validateFieldEvent","validateFormField","fields_1","fields_1_1","_c","FormOutcomeEvent","outcome","_outcome","ContentLinkModel","contentAvailable","createdBy","previewStatus","relatedContent","simpleType","thumbnailStatus","hasPreviewStatus","isTypeImage","isTypePdf","isTypeDoc","isThumbnailReady","isThumbnailSupported","FormService","ecmModelService","editorApi","processApi","processInstanceVariablesApi","usersWorkflowApi","parseForm","SAVE_ACTION","createFormFromANode","createForm","customType","formDefinitionModel","addFieldsToAForm","formData","dataModel","modelType","stencilSet","createModel","saveForm","formId","formModel","searchFrom","getModels","forms","formdata","getForms","toJsonArray","getProcessDefinitions","getProcessVarablesById","processInstanceId","getProcessInstanceVariables","getTasks","listTasks","getTask","saveTaskForm","formValues","completeTaskForm","getTaskForm","getFormDefinitionById","getForm","getFormDefinitionByName","filterText","getFormId","getStartFormInstance","processId","getProcessInstanceStartForm","getProcessIntance","getProcessInstance","getStartFormDefinition","getProcessDefinitionStartForm","getRestFieldValues","getRestFieldValuesByProcessId","getRestFieldValuesColumnByProcessId","getRestTableFieldValues","getRestFieldValuesColumn","getUserProfileImageApi","userId","userApi","getUserProfilePictureUrl","getWorkflowUsers","groupId","getUsers","userImage","combineAll","defaultIfEmpty","getWorkflowGroups","getGroups","errMsg","UNKNOWN_ERROR_MESSAGE","statusText","GENERIC_ERROR_MESSAGE","NodeMetadata","nodeType","NodeService","getNodeMetadata","cleanMetadataFromSemicolon","createNodeMetadata","createNode","generateUuid","addNode","random","WidgetVisibilityService","refreshVisibility","tabModel","refreshEntityVisibility","evaluateVisibility","visibilityObj","isLeftFieldPresent","leftFormFieldId","leftRestResponseId","isFieldVisible","leftValue","getLeftValue","rightValue","getRightValue","actualResult","evaluateCondition","operator","nextCondition","evaluateLogicalOperation","nextConditionOperator","getVariableValue","processVarList","getFormValue","rightRestResponseId","rightFormFieldId","getFieldValue","searchValueInForm","valueList","dropDownFilterByName","valueFound","fieldValue","formField","isSearchedField","getObjectValue","getValueFromOption","fieldToFind","formattedFieldName","removeLabel","getFormVariableValue","formVar","logicOp","cleanProcessVariable","getTaskProcessVariable","taskFormsApi","getTaskFormVariables","jsonRes","FormComponent","visibilityService","nodeService","hasForm","isTitleEnabled","showTitle","getColorForOutcome","outcomeName","COMPLETE_OUTCOME_NAME","COMPLETE_BUTTON_COLOR","isOutcomeButtonEnabled","COMPLETE_ACTION","disableCompleteButton","START_PROCESS_ACTION","disableStartProcessButton","isOutcomeButtonVisible","isFormReadOnly","showCompleteButton","showSaveButton","formContentClicked","getFormByTaskId","getFormDefinitionByFormId","getFormDefinitionByFormName","loadFormForEcmNode","refreshFormData","onOutcomeClicked","onExecuteOutcome","SAVE_OUTCOME_ID","COMPLETE_OUTCOME_ID","START_PROCESS_OUTCOME_ID","CUSTOM_OUTCOME_ID","onTaskSaved","storeFormAsMetadata","onRefreshClicked","loadForm","findProcessVariablesByTaskId","task","isAProcessTask","taskRepresentation","processDefinitionDeploymentId","parsedForm","onFormLoaded","onTaskSavedError","onTaskCompleted","onTaskCompletedError","onError","getFormDefinitionOutcomes","checkVisibility","onFormDataRefreshed","loadFormFromActiviti","loadFormFromFormId","formMetadata","saveMetadata","nameNode","formLoaded","formDataRefreshed","formSaved","taskSaved","taskSavedError","formCompleted","taskCompleted","taskCompletedError","executeOutcome","FormListComponent","ProcessContentService","createTemporaryRawRelatedContent","contentId","getContent","getFileRawContent","getRawContent","getContentPreview","getFileRawContentUrl","getRawContentUrl","getContentThumbnail","getTaskRelatedContent","getRelatedContentForTask","getProcessRelatedContent","getRelatedContentForProcessInstance","deleteRelatedContent","deleteContent","createProcessRelatedContent","createRelatedContentOnProcessInstance","createTaskRelatedContent","createRelatedContentOnTask","ContentWidgetComponent","processContentService","loadContent","contentLoaded","loadThumbnailUrl","observable","thumbnailUrl","thumbnailLoaded","openViewer","fetch","contentBlob","contentClick","StartFormComponent","loadStartForm","readOnlyForm","processDefinitionName","outcomeClick","baseHost","(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)","WidgetComponent","hasField","isRequired","isInvalidFieldRequired","fieldChanged","onFieldChanged","getHyperlinkUrl","DEFAULT_HYPERLINK_URL","DEFAULT_HYPERLINK_SCHEME","getHyperlinkText","formEvents","ContainerWidgetComponentModel","isExpanded","isCollapsedByDefault","isGroup","isCollapsible","allowCollapse","collapseByDefault","ContainerWidgetComponent","onExpanderClicked","rowContainsElement","rowIndex","getColumnWith","TabsWidgetComponent","ngAfterContentChecked","filterVisibleTabs","visibleTabs","tabChanged","formTabChanged","UnknownWidgetComponent","AmountWidgetComponent","DEFAULT_CURRENCY","CheckboxWidgetComponent","DateWidgetComponent","minDate","maxDate","displayDate","ɵ0$1","DisplayTextWidgetComponentComponent","DocumentWidgetComponent","fileId","hasFile","DropdownWidgetComponent","getValuesByTaskId","getValuesByProcessDefinitionId","getOptionValue","DateCellValidator","DynamicRowValidationSummary","NumberCellValidator","RequiredCellValidator","DynamicTableModel","visibleColumns","_validators","_selectedRow","definitions","columnDefinitions","flushValue","moveRow","offset","oldIndex","newIndex","arr","deleteRow","selectedRow","addRow","validateRow","validateDynamicTableRow","_d","_e","_f","getCellValue","getDisplayText","amountCurrency","DynamicTableWidgetComponent","cd","forceFocusOnAddButton","buttonAddRow","isDynamicTableReady","focus","editMode","onRowClicked","onKeyPressed","$event","isEnterOrSpacePressed","keycode","selectArrayCode","hasSelection","moveSelectionUp","moveSelectionDown","deleteSelection","addNewRow","editRow","isNew","editSelection","copyRow","onSaveChanges","copyObject","ERROR_MODEL_NOT_FOUND","onCancelChanges","BooleanEditorComponent","DateEditorComponent","DATE_FORMAT","table","ɵ0$2","ɵ1$1","DateTimeEditorComponent","ɵ0$3","DropdownEditorComponent","RowEditorComponent","TextEditorComponent","ErrorWidgetComponent","_subscriptAnimationState","translateParameters","FunctionalGroupWidgetComponent","restrictWithGroup","onKeyUp","minTermLength","oldValue","ESCAPE","ENTER","onItemClick","onItemSelect","HyperlinkWidgetComponent","linkUrl","linkText","MultilineTextWidgetComponentComponent","NumberWidgetComponent","PeopleProcessService","alfrescoJsApi","searchWord","excludeTaskId","getWorkflowUserApi","getUserImage","involveUserWithTask","idToInvolve","involveUserToTaskApi","removeInvolvedUser","idToRemove","removeInvolvedUserFromTaskApi","taskActionsApi","involveUser","PeopleWidgetComponent","peopleProcessService","searchTerm","searchTerms$","checkUserAndValidateForm","peopleSelected","setValue","isValidUser","users","selectedUser","RadioButtonsWidgetComponent","getOptionsByTaskId","getOptionsByProcessDefinitionId","onOptionClick","optionSelected","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","InputMaskDirective","multi","0","9","optional","#","recursive","A","S","onTextInput","inputMask","mask","maskValue","selectionStart","isReversed","_onChange","writeValue","registerOnChange","fn","registerOnTouched","_onTouched","actualValue","startCaret","maskToApply","isMaskReversed","byPassKeys","getMasked","calculatedCaret","calculateCaretPosition","setCaretPosition","caretPosition","moveStart","moveEnd","newValueLength","oldValueLength","skipMaskChars","lastMaskChar","lastUntranslatedMaskChar","check","buf","maskIndex","maskLen","valueIndex","valueLength","addMethod","resetPos","isToCheck","maskDigit","charAt","valDigit","translationMask","invalidCharacters","digit","translated","lastMaskCharDigit","TextWidgetComponent","TypeaheadWidgetComponent","toSelect","isValidOptionName","optionName","isValueDefined","UploadWidgetComponent","getMultipleFileParam","removeFile","removeElementFromList","onFileChanged","filesSaved","uploadRawContent","multipleOption","resetFormValueWithNoFiles","getIcon","fileClicked","ɵ1$2","DateTimeWidgetComponent","ɵ0$4","WIDGET_DIRECTIVES","MASK_DIRECTIVE","FormRenderingService","string","integer","multi-line-text","boolean","dropdown","amount","radio-buttons","hyperlink","readonly-text","typeahead","people","functional-group","dynamic-table","ActivitiContentService","getAlfrescoNodes","accountId","folderId","accountShortId","getContentInFolder","getAlfrescoRepositories","includeAccount","includeAccounts","getRepositories","linkAlfrescoNode","siteId","createTemporaryRelatedContent","sourceId","applyAlfrescoNode","currentSideId","getSiteNameFromNodePath","siteName","foundNode","pathNode","FormFieldComponent","formRenderingService","componentFactoryResolver","compiler","w","adf","originalField","getField","customTemplate","hasController","getComponentFactorySync","componentRef","componentType","wrappedField","components","componentInfo","createComponentFactorySync","componentClass","cmpClass","RuntimeComponent","decoratedCmp","compileModuleAndAllComponentsSync","RuntimeComponentModule","componentFactories","focusToggle","Compiler","read","StartFormCustomButtonDirective","SidenavLayoutComponent","mediaMatcher","toggleMenu","isMenuMinimized","onMediaQueryChange","initialMenuState","expandedSidenav","menuOpenStateSubject","menuOpenState$","stepOver","STEP_OVER","mediaQueryList","matchMedia","addListener","templateContext","removeListener","matches","_isMenuMinimized","menuState","headerDirective","emptyTemplate","navigationDirective","contentDirective","MediaMatcher","SidenavLayoutHeaderDirective","SidenavLayoutNavigationDirective","SidenavLayoutContentDirective","sidenavAnimation","contentAnimationLeft","margin-left","contentAnimationRight","margin-right","LayoutContainerComponent","MOBILE","EXPANDED","COMPACT","SIDENAV_STATES","sidenavMax","sidenavMin","CONTENT_STATES","isMobileScreenSize","sidenavAnimationState","contentAnimationState","sidenav","toggledSidenavAnimation","toggledContentAnimation","getContentAnimationStateLeft","getContentAnimationStateRight","MatSidenav","SidebarActionMenuComponent","HeaderLayoutComponent","logo","SidebarMenuDirective","SidebarMenuExpandIconDirective","SidebarMenuTitleIconDirective","CommentListComponent","selectComment","comment","selectedComment","clickRow","getUserShortName","shortName","isPictureDefined","isAContentUsers","CommentModel","UserProcessModel","CommentProcessService","addTaskComment","getTaskComments","comments","getProcessInstanceComments","commentsApi","addProcessInstanceComment","CommentContentService","addNodeComment","addComment","createdAt","getNodeComments","getComments","CommentsComponent","commentProcessService","commentContentService","comment$","commentObserver","resetComments","isATask","comment1","comment2","date1","date2","isANode","beingAdded","sanitize","unshift","ButtonsMenuComponent","buttons","isMenuEmpty","isMobile","userAgent","SortingPickerComponent","onChanged","raiseChangedEvent","toggleSortDirection","ascending","ErrorContentComponent","route","errorCode","unknown_1","errorTranslation","getTranslations","hasSecondButton","onSecondButton","secondaryButtonUrl","onReturnButton","returnButtonUrl","ActivatedRoute","EmptyContentComponent","AuthGuard","canActivate","checkLogin","canActivateChild","isOAuthWithoutSilentLogin","pathToLogin","getRouteDestinationForLogin","AuthGuardEcm","AuthGuardBpm","AppsProcessService","getDeployedApplications","appsApi","getAppDefinitions","getDeployedApplicationsByName","app","getApplicationDetailsById","appId","PageTitleService","titleService","translationService","onLangChange","onLanguageChanged","setTitle","originalTitle","translatedTitle","updateTitle","Title","RenditionsService","isRenditionAvailable","encoding","isAvailable","isConversionPossible","getRenditionsListByNodeId","convert","pollingInterval","concatMap","pollRendition","intervalSize","attempts","interval","takeWhile","NotificationService","snackBar","openSnackMessage","DEFAULT_DURATION_MESSAGE","translatedMessage","duration","openSnackMessageAction","MatSnackBar","ComponentTranslationModel","TranslateLoaderService","registered","getComponentToFetch","observableBatch","queue","component","isComponentInQueue","translationUrl_1","suffix","retry","hasFailures","fullTranslation","UploadService","isUploading","activeTask","getQueue","addToQueue","allowedFiles","currentFile","filterElement","queueChanged","isAllowed","excludedFileList","matchingOptions","Minimatch","uploadFilesInTheQueue","emitter","onUploadStarting","beginUpload","cache","next_1","cancelUpload","abort","getAction","performAction","clearQueue","getUploadPromise","renditions","overwrite","autoRename","updateFile","uploadFile","onUploadProgress","onUploadAborted","onUploadError","onUploadComplete","fileUpload","fileUploadStarting","event_2","fileUploadProgress","event_3","fileUploadError","event_4","fileUploadComplete","event_5","fileUploadAborted","onUploadCancelled","event_6","fileUploadCancelled","onUploadDeleted","event_7","fileUploadDeleted","DeletedNodesApiService","defaultOptions","queryOptions","FavoritesApiService","remapEntry","cm:title","cm:description","remapFavoritesData","remapFavoriteEntries","getFavorites","personId","where","NodesApiService","api","getEntryFromEntity","entity","getNodeChildren","parentNodeId","nodeBody","updateNode","PeopleContentService","getCurrentPerson","SearchConfigurationService","generateQueryBody","maxResults","paging","filterQueries","SearchService","searchConfigurationService","getNodeQueryResults","term","queriesApi","findNodes","dataLoaded","searchQuery","searchByQueryBody","queryBody","SharedLinksApiService","getSharedLinks","findSharedLinks","createSharedLinks","addSharedLink","deleteSharedLink","SitesService","getSites","getSite","deleteSite","permanentFlag","getSiteContent","relations","getSiteMembers","getEcmCurrentLoggedUserName","LoginDialogService","openLogin","openLoginDialog","currentPanelClass","chosenWidth","closeAll","ExternalAlfrescoApiService","domainPrefix","createPrefixFromHost","ClipboardService","notificationService","isTargetValid","HTMLInputElement","HTMLTextAreaElement","copyToClipboard","setSelectionRange","execCommand","notify","DOCUMENT","ClipboardDirective","clipboardService","handleClickEvent","EcmCompanyModel","RedirectionModel","CommentProcessModel","PaginationModel","AlfrescoApiMock","changeConfig","AppConfigServiceMock","AuthenticationMock","setRedirectUrl","getRedirectUrl","fakeBpmUserNoImage","fakeUser1","fakeTasksComment","fakeProcessComment","CookieServiceMock","EventMock","keyDown","createEvent","initEvent","keyUp","resizeMobileView","Event","fakeSearch","mimetype","createdByUser","modifiedByUser","searchMockApi","TranslationMock","AlfrescoApiServiceMock","formTest","resetTestingModule","TestBed","startupServiceFactory","createTranslateLoader","DatePipe","AboutModule","ViewerModule","SidenavLayoutModule","ClipboardModule","HostSettingsModule","UserInfoModule","AppConfigModule","PaginationModule","CardViewModule","CollapsableModule","FormModule","CommentsModule","LoginModule","LanguageMenuModule","InfoDrawerModule","ButtonsMenuModule","TemplateModule","loader","TranslateLoader","useFactory","ɵ0$6","deps","SortingPickerModule","ɵ2","CoreModule","forRoot","ngModule","APP_INITIALIZER","CoreModuleLazy","ɵ1$4","defaultAppId","modelId","theme","deploymentId","organization","address1","address2","address3","postcode","fax","mimeTypeName","errorKey","briefSummary","stackTrace","descriptionURL","processDefinitionKey","taskDefinitionKey","endpoint","requestHeaders","2","customFieldsValueInfo","globalDateFormat","rightType","test_1","test_2","test_3","test_4","test_5","moduleDef","beforeAll","sessionStorage","configureTestingModule","compileComponents","afterAll"],"mappings":"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ra,GACA4a,GACAU,GACAM,GACAtrF,GACAw+E,GACAO,GACAkL,GACAsF,EAAAA,SACAj/F,EACAkf,GACA+C,GACA+kE,GACAtuB,GACAwtB,GACA3d,GACAyE,GACAsH,GACA9G,GACAtqB,GACAJ,GACA9X,GACAywD,GACAM,qEAIPngF,EAAAA,SAAQlC,KAAA,CAAC,CACNmC,QAAS,CACLqjF,GACAC,GACAC,GACA90D,GACA7lB,EAAAA,aACA8lB,GACA80D,GACA1+C,EAAAA,YACAC,EAAAA,oBACAsX,EAAAA,iBACAonC,GACAC,GACA76E,GACA86E,GACAC,GACA5+C,GACAxW,GACAq1D,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAj1D,GACAD,GACAm1D,GACAC,GACAv7E,EAAAA,gBAAgBC,SAAS,CACrBu7E,OAAQ,CACJ7tC,QAAS8tC,EAAAA,gBACTC,WAAUC,GACVC,KAAM,CAAC39F,EAAAA,WAAY6E,MAG3B+4F,IAEJ1kF,QAAS,CACLojF,GACAC,GACAC,GACA90D,GACA7lB,EAAAA,aACA8lB,GACA80D,GACA1+C,EAAAA,YACAC,EAAAA,oBACAsX,EAAAA,iBACAonC,GACAC,GACA76E,GACA86E,GACAC,GACA5+C,GACAxW,GACAq1D,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAj1D,GACAD,GACAnmB,EAAAA,gBACAs7E,GACAC,GACAM,mBAsC2CC,GA0C3B1B,iBAgCpB,SAAA2B,EAAYx4E,GACRA,EAAYjB,qBAAqB,WAAY,0BAxB1Cy5E,EAAAC,QAAP,WACI,MAAO,CACHC,SAAUF,EACVh6E,UAASxoB,EACFwoB,KAAW,CACd,CACI4rC,QAASuuC,EAAAA,gBACTR,WAAYtB,GACZwB,KAAM,CACF58F,GAEJ29E,OAAO,OAMhBof,EAAA97E,SAAP,WACI,MAAO,CACHg8E,SAAUE,yBAtGrBllF,EAAAA,SAAQlC,KAAA,CAAC,CACNmC,QAAS,CACLqjF,GACAC,GACAC,GACA90D,GACA7lB,EAAAA,aACA8lB,GACAoW,EAAAA,YACAC,EAAAA,oBACAsX,EAAAA,iBACAonC,GACAC,GACA76E,GACA86E,GACAC,GACA5+C,GACAxW,GACAq1D,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAj1D,GACAD,GACAm1D,GACAC,GACAv7E,EAAAA,gBAAgBg8E,QAAQ,CACpBR,OAAQ,CACJ7tC,QAAS8tC,EAAAA,gBACTC,WAAUU,GACVR,KAAM,CAAC39F,EAAAA,WAAY6E,MAG3B+4F,IAEJ1kF,QAAS,CACLojF,GACAC,GACAC,GACA90D,GACA7lB,EAAAA,aACA8lB,GACA80D,GACA1+C,EAAAA,YACAC,EAAAA,oBACAsX,EAAAA,iBACAonC,GACAC,GACA76E,GACA86E,GACAC,GACA5+C,GACAxW,GACAq1D,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAj1D,GACAD,GACAnmB,EAAAA,gBACAs7E,GACAC,GACAM,IAEJ95E,UAASxoB,EACFwoB,KAAW,CACd,CACI4rC,QAASuuC,EAAAA,gBACTR,WAAUI,GACVF,KAAM,CACF58F,GAEJ29E,OAAO,kDA1OV96D,2gOC/Da,CAClBkb,KAAM,EAAGG,MAAO,EAAG8c,MAAO,EAC1Br8C,KAAM,CACF,CACIqM,GAAI,EAAGqyF,aAAc,KAAM7gG,KAAM,kBAAmB0O,YAAa,aAAcoyF,QAAS,GACxFC,MAAO,eAAgB9tC,KAAM,qBAAsB+tC,aAAgB,MAAOn/C,SAAY,MAE1F,CACIrzC,GAAI,EAAGqyF,aAAc,KAAM7gG,KAAM,mBAAoB0O,YAAa,aAAcoyF,QAAS,GACzFC,MAAO,eAAgB9tC,KAAM,qBAAsB+tC,aAAgB,MAAOn/C,SAAY,sEXczE,CACrBd,KAAM,GACNC,aAAc,KACdC,QAAS,eACTC,QAAS,mBACTC,MAAO,mBACPC,WAAY,mBACZjrB,UAAW,sBACXC,SAAU,qBACVirB,SAAU,qBACVI,OAAQ,GACRjzC,GAAI,UACJkzC,WAAY,mBACZC,oBAAqB,iBACrB93C,SAAU,gBACV+3C,UAAW,GACXxyC,OAAQ,cACRyyC,SAAU,iBACVC,WAAY,mBACZC,gBAAiB,yBACjB1+C,KAAM,iCAGqB,CAC3B09C,KAAM,GACNC,aAAc,kBACdC,QAAS,eACTC,QAAS,mBACTC,MAAO,mBACPC,WAAY,mBACZjrB,UAAW,kBACXC,SAAU,iBACVirB,SAAU,iBACVI,OAAQ,GACRjzC,GAAI,UACJkzC,WAAY,mBACZC,oBAAqB,iBACrB93C,SAAU,gBACV+3C,UAAW,+BACXxyC,OAAQ,cACRyyC,SAAU,iBACVC,WAAY,mBACZC,gBAAiB,yBACjB1+C,KAAM,wCC7Da,CAAEmL,GAAI,KAAM2yC,MAAO,yBAA0BhrB,UAAW,OAAQC,SAAU,6FWHpD,CACzC6qE,aAAc,oBACdC,SAAU,iBACVC,SAAU,iBACVC,SAAU,iBACVC,SAAU,OACV9+C,UAAW,WACX++C,IAAK,WACLngD,MAAO,sCAGc,CACrB3yC,GAAI,UACJ2nB,UAAW,sBACXC,SAAU,qBACV1nB,YAAa,4BACbuzC,SAAU,iBACVd,MAAO,sBACPe,QAAS,gBACTC,SAAU,mBACVC,iBAAkB,2BAClBnB,QAAS,KACToB,SAAU,eACV7gD,SAAU,gBACV8gD,OAAQ,YACRC,UAAW,WACXC,gBAAiB,YACjBC,WAAY,SACZr+B,SAAS,EACTs+B,2BAA2B,wBAGC,CAC5Bl0C,GAAI,UACJ2nB,UAAW,kBACXC,SAAU,iBACV1nB,YAAa,4BACbuzC,SAAU,KACVd,MAAO,sBACPe,QAAS,gBACTC,SAAU,mBACVC,iBAAkB,2BAClBnB,QAAS,KACToB,SAAU,KACV7gD,SAAU,gBACV8gD,OAAQ,YACRC,UAAW,WACXC,gBAAiB,YACjBC,WAAY,SACZr+B,SAAS,EACTs+B,2BAA2B,uBAGA,CAC3Bl0C,GAAI,UACJ2nB,UAAW,KACXC,SAAU,iBACV1nB,YAAa,4BACbuzC,SAAU,iBACVd,MAAO,sBACPe,QAAS,gBACTC,SAAU,mBACVC,iBAAkB,2BAClBnB,QAAS,KACToB,SAAU,WACV7gD,SAAU,gBACV8gD,OAAQ,YACRC,UAAW,WACXC,gBAAiB,YACjBC,WAAY,SACZr+B,SAAS,EACTs+B,2BAA2B,iCCzEL,CACtBzzC,MAAS,CACLT,GAAM,MACNxK,QAAW,CAAC6vB,SAAY,kBAAmB0tE,aAAgB,sBAC3DnyF,OAAU,sCAIe,CAC7BH,MAAS,CACLT,GAAM,MACNxK,QAAW,CAAC6vB,SAAY,kBAAmB0tE,aAAgB,sBAC3DnyF,OAAU,gCAIa,CAC3BwrB,KAAQ,CACJosB,WAAc,CACVK,MAAS,EACT+B,cAAgB,EAChB5B,WAAc,EACdC,UAAa,EACbN,SAAY,KAEhBz2C,QAAW,CAAC,CACRzB,MAAS,CACLT,GAAM,SACNxK,QAAW,CAAC6vB,SAAY,YAAa0tE,aAAgB,aACrDnyF,OAAU,gBAEf,CACCH,MAAS,CACLT,GAAM,WACNxK,QAAW,CAAC6vB,SAAY,YAAa0tE,aAAgB,aACrDnyF,OAAU,gBAEf,CACCH,MAAS,CACLT,GAAM,SACNxK,QAAW,CAAC6vB,SAAY,YAAa0tE,aAAgB,aACrDnyF,OAAU,gBAEf,CACCH,MAAS,CACLT,GAAM,aACNxK,QAAW,CAAC6vB,SAAY,aAAc0tE,aAAgB,cACtDnyF,OAAU,gBAEf,CACCH,MAAS,CACLT,GAAM,SACNxK,QAAW,CAAC6vB,SAAY,aAAc0tE,aAAgB,cACtDnyF,OAAU,gBAEf,CACCH,MAAS,CACLT,GAAM,MACNxK,QAAW,CAAC6vB,SAAY,kBAAmB0tE,aAAgB,sBAC3DnyF,OAAU,+CT9BH,CACnBtR,MAAO,CACH0jG,SAAU,gBACVrkE,WAAY,IACZskE,aAAc,yBACdC,WAAY,+GACZC,eAAgB,qHUnCF,CAClBnzF,GAAI,KACJxO,KAAM,aACNylE,oBAAqB,mBACrB6Q,sBAAuB,YACvBsrB,qBAAsB,YACtBr8B,OAAQ,OACRs8B,kBAAmB,2CACnBtlC,KAAM,GACNX,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,QACJxO,KAAM,QACNqD,KAAM,WACNzH,MAAO,gBACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,eAAe,EACf39B,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,iBAEV,CACIwO,GAAI,WACJxO,KAAM,SAEV,CACIwO,GAAI,WACJxO,KAAM,SAEV,CACIwO,GAAI,WACJxO,KAAM,UAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBy/B,SAAU,KACVC,eAAgB,OAGxBC,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,QACJxO,KAAM,QACNqD,KAAM,gBACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,CACL,CACI7yB,GAAI,WACJxO,KAAM,YAEV,CACIwO,GAAI,WACJxO,KAAM,YAEV,CACIwO,GAAI,WACJxO,KAAM,aAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBy/B,SAAU,KACVC,eAAgB,SAKhC,CACIlmC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,OACJxO,KAAM,OACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAG7B2/B,EAAG,MAIf1lC,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,0CChQmB,CACrC1zF,GAAI,GACJxO,KAAM,qBACNylE,oBAAqB,uBACrB6Q,sBAAuB,iBACvBsrB,qBAAsB,iBACtBr8B,OAAQ,MACRs8B,kBAAmB,2CACnBtlC,KAAM,GACNX,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAK,CACD,CACIL,UAAW,0BACXrtD,GAAI,YACJxO,KAAM,YACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAG7B2/B,EAAK,CACD,CACInmC,UAAW,0BACXrtD,GAAI,WACJxO,KAAM,WACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,UAMzC/F,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,0CAGmB,CACrC1zF,GAAI,GACJxO,KAAM,qBACNylE,oBAAqB,uBACrB6Q,sBAAuB,iBACvBsrB,qBAAsB,iBACtBr8B,OAAQ,MACRs8B,kBAAmB,2CACnBtlC,KAAM,GACNX,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAK,CACD,CACIL,UAAW,0BACXrtD,GAAI,UACJxO,KAAM,UACNqD,KAAM,WACNzH,MAAO,gBACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,eAAe,EACf39B,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,iBAEV,CACIwO,GAAI,WACJxO,KAAM,kBAEV,CACIwO,GAAI,WACJxO,KAAM,SAEV,CACIwO,GAAI,WACJxO,KAAM,WAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBy/B,SAAU,KACVC,eAAgB,OAGxBC,EAAK,MAIjB1lC,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,0CAGmB,CACrC1zF,GAAI,GACJxO,KAAM,qBACNylE,oBAAqB,uBACrB6Q,sBAAuB,iBACvBsrB,qBAAsB,iBACtBr8B,OAAQ,MACRs8B,kBAAmB,2CACnBtlC,KAAM,GACNX,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAK,CACD,CACIL,UAAW,0BACXrtD,GAAI,UACJxO,KAAM,UACNqD,KAAM,WACNzH,MAAO,gBACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,eAAe,EACf39B,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,iBAEV,CACIwO,GAAI,WACJxO,KAAM,kBAEV,CACIwO,GAAI,WACJxO,KAAM,SAEV,CACIwO,GAAI,WACJxO,KAAM,WAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBy/B,SAAU,KACVC,eAAgB,OAGxBC,EAAK,MAIjB1lC,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,wCClYiB,CACnC1zF,GAAI,GACJxO,KAAM,qBACNylE,oBAAqB,uBACrB6Q,sBAAuB,iBACvBsrB,qBAAsB,iBACtBr8B,OAAQ,MACRs8B,kBAAmB,2CACnBtlC,KAAM,GACNX,OAAQ,CACN,CACEC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACNM,EAAK,CACH,CACEL,UAAW,0BACXrtD,GAAI,YACJxO,KAAM,YACNqD,KAAM,WACNzH,MAAO,gBACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACNkU,gBAAiB,EACjBC,WAAY,EACZtR,MAAO,CACL78C,GAAI,YACJxO,KAAM,YACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,IAAK,EACLC,IAAK,EACL0qD,oBAAqB,OAGzBzC,kBAAmB,KACnBhD,OAAQ,CACNllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEXT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAGzB2/B,EAAK,CACH,CACEnmC,UAAW,0BACXrtD,GAAI,WACJxO,KAAM,WACNqD,KAAM,WACNzH,MAAO,eACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACNkU,gBAAiB,EACjBC,WAAY,EACZtR,MAAO,CACL78C,GAAI,WACJxO,KAAM,WACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,IAAK,EACLC,IAAK,EACL0qD,oBAAqB,OAGzBzC,kBAAmB,KACnBhD,OAAQ,CACNllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEXT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,UAM/B/F,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,qDC9M8B,CAChD1zF,GAAI,GACJi3D,oBAAqB,mBACrB6Q,sBAAuB,aACvBsrB,qBAAsB,aACtBrlC,KAAM,GACNX,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAK,CACD,CACIL,UAAW,0BACXrtD,GAAI,UACJxO,KAAM,UACNqD,KAAM,WACNzH,MAAO,gBACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,eAAe,EACf39B,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,iBAEV,CACIwO,GAAI,WACJxO,KAAM,UAEV,CACIwO,GAAI,WACJxO,KAAM,OAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,CACjBuL,gBAAiB,OACjBC,mBAAoB,KACpBQ,SAAU,KACVJ,WAAY,QACZk0B,UAAW,KACXtzB,iBAAkB,GAClBD,oBAAqB,GACrBJ,sBAAuB,GACvBF,cAAe,MAEnBwzB,SAAU,KACVC,eAAgB,OAGxBC,EAAK,CACD,CACInmC,UAAW,0BACXrtD,GAAI,OACJxO,KAAM,OACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,UAMzC/F,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,yDAGkC,CACpD1zF,GAAI,GACJi3D,oBAAqB,mBACrB6Q,sBAAuB,aACvBsrB,qBAAsB,aACtBrlC,KAAM,GACNX,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAK,CACD,CACIL,UAAW,0BACXrtD,GAAI,OACJxO,KAAM,OACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAG7B2/B,EAAK,CACD,CACInmC,UAAW,0BACXrtD,GAAI,UACJxO,KAAM,UACNqD,KAAM,WACNzH,MAAO,gBACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,eAAe,EACf39B,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,iBAEV,CACIwO,GAAI,WACJxO,KAAM,UAEV,CACIwO,GAAI,WACJxO,KAAM,OAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,CACjBuL,gBAAiB,OACjBC,mBAAoB,KACpBQ,SAAU,KACVJ,WAAY,QACZk0B,UAAW,KACXtzB,iBAAkB,GAClBD,oBAAqB,GACrBJ,sBAAuB,GACvBF,cAAe,MAEnBwzB,SAAU,KACVC,eAAgB,UAMpCzlC,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,sCC3Ue,CACjC1zF,GAAI,EACJxO,KAAM,uBACNylE,oBAAqB,2BACrB7J,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACPmgE,UAAU,EACVH,OAAQ,CACJM,EAAG,CAAC,CACIL,UAAW,0BACXrtD,GAAI,OACJxO,KAAM,OACNqD,KAAM,OACNzH,MAAO,uCAKQ,CACnC4S,GAAI,EACJxO,KAAM,uBACNylE,oBAAqB,2BACrB7J,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACPmgE,UAAU,EACVH,OAAQ,CACJM,EAAG,CAAC,CACIL,UAAW,0BACXrtD,GAAI,SACJxO,KAAM,gBACNqD,KAAM,UACNzH,MAAO,uCAKQ,CACnC4S,GAAI,EACJxO,KAAM,uBACNylE,oBAAqB,2BACrB7J,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACPmgE,UAAU,EACVH,OAAQ,CACJM,EAAG,CAAC,CACIL,UAAW,0BACXrtD,GAAI,SACJxO,KAAM,gBACNqD,KAAM,SACNzH,MAAO,4CAKa,CACxC4S,GAAI,EACJxO,KAAM,uBACNylE,oBAAqB,2BACrB7J,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACPmgE,UAAU,EACVH,OAAQ,CACJM,EAAG,CAAC,CACIL,UAAW,0BACXrtD,GAAI,YACJxO,KAAM,gBACNqD,KAAM,gBACNzH,MAAO,yCAKU,CACrC4S,GAAI,EACJxO,KAAM,uBACNylE,oBAAqB,2BACrB7J,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACPmgE,UAAU,EACVH,OAAQ,CACJM,EAAG,CAAC,CACIL,UAAW,0BACXrtD,GAAI,WACJxO,KAAM,WACNqD,KAAM,OACNzH,MAAO,6CAKc,CACzC4S,GAAI,EACJxO,KAAM,uBACNylE,oBAAqB,2BACrB7J,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACPmgE,UAAU,EACVH,OAAQ,CACJM,EAAG,CAAC,CAEIL,UAAW,0BACXrtD,GAAI,mBACJxO,KAAM,gBACNqD,KAAM,WACNzH,MAAO,eACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZzgC,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,gBAEV,CACIwO,GAAI,OACJxO,KAAM,YAEV,CACIwO,GAAI,OACJxO,KAAM,YAEV,CACIwO,GAAI,OACJxO,KAAM,YAEV,CACIwO,GAAI,OACJxO,KAAM,mCAOX,CACvBwO,GAAI,EACJxO,KAAM,uBACNylE,oBAAqB,2BACrB6Q,sBAAuB,qBACvBsrB,qBAAsB,qBACtBrlC,KAAM,GACNX,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,aACJxO,KAAM,aACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAG7B2/B,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,WACJxO,KAAM,WACNqD,KAAM,UACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,kBACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,SAKrC,CACIxG,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,aACJxO,KAAM,aACNqD,KAAM,UACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,kBACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAG7B2/B,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,WACJxO,KAAM,WACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,WACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,SAKrC,CACIxG,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,YACJxO,KAAM,YACNqD,KAAM,WACNzH,MAAO,eACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,eAAe,EACf39B,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,gBAEV,CACIwO,GAAI,WACJxO,KAAM,YAEV,CACIwO,GAAI,gBACJxO,KAAM,kBAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBy/B,SAAU,KACVC,eAAgB,OAGxBC,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,eACJxO,KAAM,eACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,oBACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,UAMzC/F,SAAU,CACN,CACI9tD,GAAI,UACJxO,KAAM,WAEV,CACIwO,GAAI,WACJxO,KAAM,YAEV,CACIwO,GAAI,gBACJxO,KAAM,kBAGdq8D,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPgpD,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,uCAGY,CAC9B1zF,GAAI,EACJg3D,SAAU,aACVC,oBAAqB,2BACrB6Q,sBAAuB,qBACvBsrB,qBAAsB,qBACtBrlC,KAAM,CACF,CACI/tD,GAAI,QACJxO,KAAM,SAEV,CACIwO,GAAI,QACJxO,KAAM,UAGd47D,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,aACJxO,KAAM,aACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAG7B2/B,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,WACJxO,KAAM,WACNqD,KAAM,UACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,kBACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,SAKrC,CACIxG,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,aACJxO,KAAM,aACNqD,KAAM,UACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,kBACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAG7B2/B,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,WACJxO,KAAM,WACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,WACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,SAKrC,CACIxG,UAAW,0BACXrtD,GAAI,cACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,YACJxO,KAAM,YACNqD,KAAM,WACNzH,MAAO,eACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,eAAe,EACf39B,QAAS,CACL,CACI7yB,GAAI,QACJxO,KAAM,gBAEV,CACIwO,GAAI,WACJxO,KAAM,YAEV,CACIwO,GAAI,gBACJxO,KAAM,kBAGd+hE,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBy/B,SAAU,KACVC,eAAgB,OAGxBC,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,eACJxO,KAAM,eACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,oBACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACJkU,gBAAiB,EACjBC,WAAY,GAEhBiD,kBAAmB,KACnBhD,OAAQ,CACJllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEbT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,UAMzC/F,SAAU,CACN,CACI9tD,GAAI,UACJxO,KAAM,WAEV,CACIwO,GAAI,WACJxO,KAAM,aAGdq8D,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPgpD,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,EACd8lC,iBAAkB,gCCl+BK,CACvB1zF,GAAI,GACJxO,KAAM,cACN0O,YAAa,GACbC,QAAS,EACT6sD,cAAe,EACfJ,sBAAuB,YACvBC,YAAa,+BACbI,aAAc,KACdC,YAAa,KACbC,eAAgB,CACdY,KAAM,GACNX,OAAQ,CACN,CACEC,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACNM,EAAK,CACH,CACEL,UAAW,4BACXrtD,GAAI,QACJxO,KAAM,QACNqD,KAAM,SACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACNkU,gBAAiB,EACjBC,WAAY,GAEdiD,kBAAmB,KACnBhD,OAAQ,CACNllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEXT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrB/C,iBAAiB,EACjBgD,SAAU,OAGd0/B,EAAK,CACH,CACEnmC,UAAW,0BACXrtD,GAAI,SACJxO,KAAM,SACNqD,KAAM,OACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACNkU,gBAAiB,EACjBC,WAAY,GAEdiD,kBAAmB,KACnBhD,OAAQ,CACNllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEXT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,SAK7B,CACExG,UAAW,0BACXrtD,GAAI,gBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACX6pC,kBAAmB,KACnBhD,OAAQ,KACRZ,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,KACrBvG,gBAAiB,EACjBF,OAAQ,CACNM,EAAK,CACH,CACEL,UAAW,0BACXrtD,GAAI,SACJxO,KAAM,SACNqD,KAAM,UACNzH,MAAO,KACP07C,UAAU,EACVykB,UAAU,EACV+F,YAAY,EACZrF,QAAS,EACTiG,YAAa,KACb/V,UAAW,EACXmU,UAAW,EACXhB,SAAU,KACVK,SAAU,KACVe,aAAc,KACdiB,WAAY,KACZnD,cAAe,KACf39B,QAAS,KACT0gC,QAAS,KACTC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KACnB3E,IAAK,KACLxnC,UAAW,KACXyyB,OAAQ,CACNkU,gBAAiB,EACjBC,WAAY,GAEdiD,kBAAmB,KACnBhD,OAAQ,CACNllD,KAAM,EACNuoB,QAAS,EACTw8B,QAAS,GAEXT,MAAO,EACPC,MAAO,EACPvkD,KAAM,EACNC,KAAM,EACN0qD,oBAAqB,OAGzB2/B,EAAK,MAIX1lC,SAAU,GACVD,iBAAkB,GAClBtmC,UAAW,GACXzjB,MAAO,GACPozD,qBAAsB,GACtBpK,SAAU,GACVkB,UAAW,GACXylC,sBAAuB,GACvB7lC,cAAc,kDZ9NuB,CACvC,CAAC5tD,GAAI,aAAcnL,KAAM,SAAUzH,MAAO,gBAC1C,CAAC4S,GAAI,aAAcnL,KAAM,SAAUzH,MAAO,gBAC1C,CAAC4S,GAAI,aAAcnL,KAAM,SAAUzH,MAAO,8BAGV,CAChCwmG,OAAU,UACVC,OAAU,UACVC,OAAU,UACVC,OAAU,cACVC,OAAU,iBACVpc,SAAY,CAAC53E,GAAM,cAAexO,KAAQ,kCAGpB,CACtBwO,GAAI,OACJxO,KAAM,kBACNylE,oBAAqB,sBACrB6Q,sBAAuB,eACvBsrB,qBAAsB,eACtBr8B,OAAQ,MACRC,SAAU,OACV5J,OAAQ,CACJ,CACIC,UAAW,0BACXrtD,GAAI,qBACJxO,KAAM,QACNqD,KAAM,YACNzH,MAAO,KACPkgE,gBAAiB,EACjBF,OAAQ,CACJM,EAAG,CACC,CACIL,UAAW,0BACXrtD,GAAI,aACJxO,KAAM,aACNqD,KAAM,OACNzH,MAAO,yBACPymE,oBAAqB,KACrBriB,WAAW,GAEf,CACI6b,UAAW,0BACXrtD,GAAI,uBACJxO,KAAM,uBACNqD,KAAM,OACNzH,MAAO,6BACPymE,oBAAqB,KACrBriB,WAAW,GAEf,CACI6b,UAAW,0BACXrtD,GAAI,qBACJxO,KAAM,uBACNqD,KAAM,OACNzH,MAAO,wBACPymE,oBAAqB,KACrBriB,WAAW,IAGnBgiD,EAAG,CACC,CACInmC,UAAW,0BACXrtD,GAAI,sBACJxO,KAAM,wBACNqD,KAAM,OACNzH,MAAO,yBACPymE,oBAAqB,KACrBriB,WAAW,uBC3DP,SAACyiD,GACzBC,UAAU,SAAAxmG,GACN,sFAMI,OALA4G,aAAaI,QACby/F,eAAez/F,QACfw7F,KAR+BC,EAAAA,QAAQD,mBAAqB,WAAM,OAAAC,EAAAA,SAUlEA,EAAAA,QAAQiE,uBAAuBH,GAC/B,CAAA,EAAM9D,EAAAA,QAAQkE,mCAAd/9F,EAAAnI,OAGAgiG,EAAAA,QAAQD,mBAAqB,WAAM,OAAAC,EAAAA,kBAElCxiG,KAAKD,GACL+vC,SAAM/vC,EAAKmgC,QAGpBymE,SAAS,WAAM,OAnBgBnE,EAAAA,QAAQD,mBAAqBA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectUtils {\n    /**\n     * Gets a value from an object by composed key\n     * ObjectUtils.getValue({ item: { nodeType: 'cm:folder' }}, 'item.nodeType') ==> 'cm:folder'\n     * @param target\n     * @param key\n     */\n    static getValue(target: any, key: string): any {\n\n        if (!target) {\n            return undefined;\n        }\n\n        let keys = key.split('.');\n        key = '';\n\n        do {\n            key += keys.shift();\n            let value = target[key];\n            if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n                target = value;\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n\n        return target;\n    }\n\n    static merge(...objects): any {\n        let result = {};\n\n        objects.forEach(source => {\n            Object.keys(source).forEach(prop => {\n                if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = result[prop].concat(source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = ObjectUtils.merge(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            });\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { Observable, Subject } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nexport enum AppConfigValues {\n    APP_CONFIG_LANGUAGES_KEY = 'languages',\n    PROVIDERS = 'providers',\n    OAUTHCONFIG = 'oauth2',\n    ECMHOST = 'ecmHost',\n    BASESHAREURL = 'baseShareUrl',\n    BPMHOST = 'bpmHost',\n    AUTHTYPE = 'authType',\n    CONTEXTROOTECM = 'contextRootEcm',\n    CONTEXTROOTBPM = 'contextRootBpm',\n    ALFRESCO_REPOSITORY_NAME = 'alfrescoRepositoryName',\n    LOG_LEVEL = 'logLevel',\n    LOGIN_ROUTE = 'loginRoute',\n    DISABLECSRF = 'disableCSRF'\n}\n\n@Injectable()\nexport class AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent',\n        alfrescoRepositoryName: 'alfresco-1'\n    };\n\n    private onLoadSubject: Subject<any>;\n    onLoad: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.onLoadSubject = new Subject();\n        this.onLoad = this.onLoadSubject.asObservable();\n    }\n\n    /**\n     * Requests notification of a property value when it is loaded.\n     * @param property The desired property value\n     * @returns Property value, when loaded\n     */\n    select(property: string): Observable<any> {\n        return this.onLoadSubject\n            .pipe(\n                map((config) => config[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets the value of a named property.\n     * @param key Name of the property\n     * @param defaultValue Value to return if the key is not found\n     * @returns Value of the property\n     */\n    get<T>(key: string, defaultValue?: T): T {\n        let result: any = ObjectUtils.getValue(this.config, key);\n        if (typeof result === 'string') {\n            const keywords = new Map<string, string>();\n            keywords.set('hostname', this.getLocationHostname());\n            keywords.set(':port', this.getLocationPort(':'));\n            keywords.set('port', this.getLocationPort());\n            keywords.set('protocol', this.getLocationProtocol());\n            result = this.formatString(result, keywords);\n        }\n        if (result === undefined) {\n            return defaultValue;\n        }\n        return <T> result;\n    }\n\n    /**\n     * Gets the location.protocol value.\n     * @returns The location.protocol string\n     */\n    getLocationProtocol(): string {\n        return location.protocol;\n    }\n\n    /**\n     * Gets the location.hostname property.\n     * @returns Value of the property\n     */\n    getLocationHostname(): string {\n        return location.hostname;\n    }\n\n    /**\n     * Gets the location.port property.\n     * @param prefix Text added before port value\n     * @returns Port with prefix\n     */\n    getLocationPort(prefix: string = ''): string {\n        return location.port ? prefix + location.port : '';\n    }\n\n    /**\n     * Loads the config file.\n     * @returns Notification when loading is complete\n     */\n    load(): Promise<any> {\n        return new Promise(resolve => {\n            const configUrl = `app.config.json?v=${Date.now()}`;\n\n            this.http.get(configUrl).subscribe(\n                (data: any) => {\n                    this.config = Object.assign({}, this.config, data || {});\n                    this.onLoadSubject.next(this.config);\n                    resolve(this.config);\n                },\n                () => {\n                    resolve(this.config);\n                }\n            );\n        });\n    }\n\n    private formatString(str: string, keywords: Map<string, string>): string {\n        let result = str;\n\n        keywords.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StorageService {\n\n    private memoryStore: { [key: string]: any } = {};\n    private useLocalStorage: boolean = false;\n\n    constructor() {\n        this.useLocalStorage = this.storageAvailable('localStorage');\n    }\n\n    /**\n     * Gets an item.\n     * @param key Key to identify the item\n     * @returns The item (if any) retrieved by the key\n     */\n    getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key);\n        } else {\n            return this.memoryStore.hasOwnProperty(key) ? this.memoryStore[key] : null;\n        }\n    }\n\n    /**\n     * Stores an item\n     * @param key Key to identify the item\n     * @param data Data to store\n     */\n    setItem(key: string, data: string) {\n        if (this.useLocalStorage) {\n            localStorage.setItem(key, data);\n        } else {\n            this.memoryStore[key] = data.toString();\n        }\n    }\n\n    /** Removes all currently stored items. */\n    clear() {\n        if (this.useLocalStorage) {\n            localStorage.clear();\n        } else {\n            this.memoryStore = {};\n        }\n    }\n\n    /**\n     * Removes a single item.\n     * @param key Key to identify the item\n     */\n    removeItem(key: string) {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(key);\n        } else {\n            delete this.memoryStore[key];\n        }\n    }\n\n    /**\n     * Is any item currently stored under `key`?\n     * @param key Key identifying item to check\n     * @returns True if key retrieves an item, false otherwise\n     */\n    hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key) ? true : false;\n        } else {\n            return this.memoryStore.hasOwnProperty(key);\n        }\n    }\n\n    private storageAvailable(type: string): boolean {\n        try {\n            let storage = window[type];\n            const key = '__storage_test__';\n            storage.setItem(key, key);\n            storage.removeItem(key, key);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApi,\n    ContentApi,\n    FavoritesApi,\n    NodesApi,\n    PeopleApi,\n    RenditionsApi,\n    SharedlinksApi,\n    SitesApi,\n    VersionsApi,\n    ClassesApi,\n    SearchApi,\n    GroupsApi,\n    MinimalNodeEntryEntity\n} from 'alfresco-js-api';\nimport * as alfrescoApi from 'alfresco-js-api';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from './storage.service';\nimport { Subject } from 'rxjs';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n/* tslint:disable:adf-file-name */\n\n@Injectable()\nexport class AlfrescoApiService {\n    /**\n     * Publish/subscribe to events related to node updates.\n     */\n    nodeUpdated = new Subject<MinimalNodeEntryEntity>();\n\n    protected alfrescoApi: AlfrescoApi;\n\n    getInstance(): AlfrescoApi {\n        return this.alfrescoApi;\n    }\n\n    get taskApi(): alfrescoApi.TaskApi {\n        return this.getInstance().activiti.taskApi;\n    }\n\n    get modelsApi(): alfrescoApi.ModelsApi {\n        return this.getInstance().activiti.modelsApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    get renditionsApi(): RenditionsApi {\n        return this.getInstance().core.renditionsApi;\n    }\n\n    get sharedLinksApi(): SharedlinksApi {\n        return this.getInstance().core.sharedlinksApi;\n    }\n\n    get sitesApi(): SitesApi {\n        return this.getInstance().core.sitesApi;\n    }\n\n    get favoritesApi(): FavoritesApi {\n        return this.getInstance().core.favoritesApi;\n    }\n\n    get peopleApi(): PeopleApi {\n        return this.getInstance().core.peopleApi;\n    }\n\n    get searchApi(): SearchApi {\n        return this.getInstance().search.searchApi;\n    }\n\n    get versionsApi(): VersionsApi {\n        return this.getInstance().core.versionsApi;\n    }\n\n    get classesApi(): ClassesApi {\n        return this.getInstance().core.classesApi;\n    }\n\n    get groupsApi(): GroupsApi {\n        return this.getInstance().core.groupsApi;\n    }\n\n    constructor(protected appConfig: AppConfigService,\n                protected storage: StorageService) {\n    }\n\n    async load() {\n        await this.appConfig.load().then(() => {\n            this.initAlfrescoApi();\n        });\n    }\n\n    async reset() {\n        this.initAlfrescoApi();\n    }\n\n    protected initAlfrescoApi() {\n        let oauth: OauthConfigModel = Object.assign({}, this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null));\n        if (oauth) {\n            oauth.redirectUri = window.location.origin + (oauth.redirectUri || '/');\n            oauth.redirectUriLogout = window.location.origin + (oauth.redirectUriLogout || '/');\n        }\n\n        const config = {\n            provider: this.getProvider(),\n            hostEcm: this.appConfig.get<string>(AppConfigValues.ECMHOST),\n            hostBpm: this.appConfig.get<string>(AppConfigValues.BPMHOST),\n            authType: this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC'),\n            contextRootBpm: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTBPM),\n            contextRoot: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTECM),\n            disableCsrf: this.getDisableCSRF(),\n            oauth2: oauth\n        };\n\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.alfrescoApi = <AlfrescoApi> new alfrescoApi(config);\n        }\n    }\n\n    // @deprecated 3.0.0 get only from app config\n    private getDisableCSRF(): boolean {\n        if (this.storage.getItem(AppConfigValues.DISABLECSRF) === 'true') {\n            return true;\n        } else {\n            return this.appConfig.get<boolean>(AppConfigValues.DISABLECSRF);\n        }\n    }\n\n    // @deprecated 3.0.0 get only from app config\n    private getProvider() {\n        return this.storage.getItem(AppConfigValues.PROVIDERS) || this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookieService {\n\n    /**\n     * Checks if cookies are enabled.\n     * @returns True if enabled, false otherwise\n     */\n    isEnabled(): boolean {\n        // for certain scenarios Chrome may say 'true' but have cookies still disabled\n        if (navigator.cookieEnabled === false) {\n            return false;\n        }\n\n        document.cookie = 'test-cookie';\n        return document.cookie.indexOf('test-cookie') >= 0;\n    }\n\n    /**\n     * Retrieves a cookie by its key.\n     * @param key Key to identify the cookie\n     * @returns The cookie data or null if it is not found\n     */\n    getItem(key: string): string | null {\n        const regexp = new RegExp('(?:' + key + '|;\\s*' + key + ')=(.*?)(?:;|$)', 'g');\n        const result = regexp.exec(document.cookie);\n        return (result === null) ? null : result[1];\n    }\n\n    /**\n     * Sets a cookie.\n     * @param key Key to identify the cookie\n     * @param data Data value to set for the cookie\n     * @param expiration Expiration date of the data\n     * @param path \"Pathname\" to store the cookie\n     */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        document.cookie = `${key}=${data}` +\n            (expiration ? ';expires=' + expiration.toUTCString() : '') +\n            (path ? `;path=${path}` : ';path=/');\n    }\n\n    /** Placeholder for testing purposes - do not use. */\n    clear() {\n        /* placeholder for testing purposes */\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LogLevelsEnum extends Number {\n    static TRACE: number = 5;\n    static DEBUG: number = 4;\n    static INFO: number = 3;\n    static WARN: number = 2;\n    static ERROR: number = 1;\n    static SILENT: number = 0;\n}\n\nexport let logLevels: any[] = [\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\n];\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-console  */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { logLevels, LogLevelsEnum } from '../models/log-levels.model';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class LogService {\n\n    get currentLogLevel() {\n        let configLevel: string = this.appConfig.get<string>(AppConfigValues.LOG_LEVEL);\n\n        if (configLevel) {\n            return this.getLogLevel(configLevel);\n        }\n\n        return LogLevelsEnum.TRACE;\n    }\n\n    onMessage: Subject<any>;\n\n    constructor(private appConfig: AppConfigService) {\n        this.onMessage = new Subject();\n    }\n\n    /**\n     * Logs a message at the \"ERROR\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\n\n            this.messageBus(message, 'ERROR');\n\n            console.error(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"DEBUG\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\n\n            this.messageBus(message, 'DEBUG');\n\n            console.debug(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"INFO\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.INFO) {\n\n            this.messageBus(message, 'INFO');\n\n            console.info(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at any level from \"TRACE\" upwards.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'LOG');\n\n            console.log(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"TRACE\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'TRACE');\n\n            console.trace(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"WARN\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.WARN) {\n\n            this.messageBus(message, 'WARN');\n\n            console.warn(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message if a boolean test fails.\n     * @param test Test value (typically a boolean expression)\n     * @param message Message to show if test is false\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    assert(test?: boolean, message?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n\n            this.messageBus(message, 'ASSERT');\n\n            console.assert(test, message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Starts an indented group of log messages.\n     * @param groupTitle Title shown at the start of the group\n     * @param optionalParams Interpolation values for the title in \"printf\" format\n     */\n    group(groupTitle?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.group(groupTitle, ...optionalParams);\n        }\n    }\n\n    /**\n     * Ends a indented group of log messages.\n     */\n    groupEnd() {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.groupEnd();\n        }\n    }\n\n    /**\n     * Converts a log level name string into its numeric equivalent.\n     * @param level Level name\n     * @returns Numeric log level\n     */\n    getLogLevel(level: string): LogLevelsEnum {\n        let referencedLevel = logLevels.find((currentLevel: any) => {\n            return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\n        });\n\n        return referencedLevel ? referencedLevel.level : 5;\n    }\n\n    /**\n     * Triggers notification callback for log messages.\n     * @param text Message text\n     * @param logLevel Log level for the message\n     */\n    messageBus(text: string, logLevel: string) {\n        this.onMessage.next({ text: text, type: logLevel });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, throwError, Observer } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { CookieService } from './cookie.service';\nimport { LogService } from './log.service';\nimport { RedirectionModel } from '../models/redirection.model';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserRepresentation } from 'alfresco-js-api';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst REMEMBER_ME_COOKIE_KEY = 'ALFRESCO_REMEMBER_ME';\nconst REMEMBER_ME_UNTIL = 1000 * 60 * 60 * 24 * 30 ;\n\n@Injectable()\nexport class AuthenticationService {\n    private redirectUrl: RedirectionModel = null;\n\n    private bearerExcludedUrls: string[] = ['auth/realms', 'resources/', 'assets/'];\n\n    onLogin: Subject<any> = new Subject<any>();\n    onLogout: Subject<any> = new Subject<any>();\n\n    constructor(\n        private appConfig: AppConfigService,\n        private alfrescoApi: AlfrescoApiService,\n        private cookie: CookieService,\n        private logService: LogService) {\n    }\n\n    /**\n     * Checks if the user logged in.\n     * @returns True if logged in, false otherwise\n     */\n    isLoggedIn(): boolean {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isLoggedIn();\n    }\n\n    /**\n     * Does the provider support OAuth?\n     * @returns True if supported, false otherwise\n     */\n    isOauth(): boolean {\n        return this.alfrescoApi.getInstance().isOauthConfiguration();\n    }\n\n    /**\n     * Does the provider support ECM?\n     * @returns True if supported, false otherwise\n     */\n    isECMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmConfiguration();\n    }\n\n    /**\n     * Does the provider support BPM?\n     * @returns True if supported, false otherwise\n     */\n    isBPMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isBpmConfiguration();\n    }\n\n    /**\n     * Does the provider support both ECM and BPM?\n     * @returns True if both are supported, false otherwise\n     */\n    isALLProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmBpmConfiguration();\n    }\n\n    /**\n     * Logs the user in.\n     * @param username Username for the login\n     * @param password Password for the login\n     * @param rememberMe Stores the user's login details if true\n     * @returns Object with auth type (\"ECM\", \"BPM\" or \"ALL\") and auth ticket\n     */\n    login(username: string, password: string, rememberMe: boolean = false): Observable<{ type: string, ticket: any }> {\n        return from(this.alfrescoApi.getInstance().login(username, password))\n            .pipe(\n                map((response: any) => {\n                    this.saveRememberMeCookie(rememberMe);\n                    this.onLogin.next(response);\n                    return {\n                        type: this.appConfig.get(AppConfigValues.PROVIDERS),\n                        ticket: response\n                    };\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Logs the user in with SSO\n     */\n    ssoImplicitLogin() {\n        this.alfrescoApi.getInstance().implicitLogin();\n    }\n\n    /**\n     * Saves the \"remember me\" cookie as either a long-life cookie or a session cookie.\n     * @param rememberMe Enables a long-life cookie\n     */\n    private saveRememberMeCookie(rememberMe: boolean): void {\n        let expiration = null;\n\n        if (rememberMe) {\n            expiration = new Date();\n            const time = expiration.getTime();\n            const expireTime = time + REMEMBER_ME_UNTIL;\n            expiration.setTime(expireTime);\n        }\n        this.cookie.setItem(REMEMBER_ME_COOKIE_KEY, '1', expiration, null);\n    }\n\n    /**\n     * Checks whether the \"remember me\" cookie was set or not.\n     * @returns True if set, false otherwise\n     */\n    isRememberMeSet(): boolean {\n        return (this.cookie.getItem(REMEMBER_ME_COOKIE_KEY) === null) ? false : true;\n    }\n\n    /**\n     * Logs the user out.\n     * @returns Response event called when logout is complete\n     */\n    logout() {\n        return from(this.callApiLogout())\n            .pipe(\n                tap(response => {\n                    this.onLogout.next(response);\n                    return response;\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    private callApiLogout(): Promise<any> {\n        if (this.alfrescoApi.getInstance()) {\n            return this.alfrescoApi.getInstance().logout();\n        }\n    }\n\n    /**\n     * Gets the ECM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketEcm();\n    }\n\n    /**\n     * Gets the BPM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketBpm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketBpm();\n    }\n\n    /**\n     * Gets the BPM ticket from the Storage in Base 64 format.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcmBase64(): string | null {\n        let ticket = this.alfrescoApi.getInstance().getTicketEcm();\n        if (ticket) {\n            return 'Basic ' + btoa(ticket);\n        }\n        return null;\n    }\n\n    /**\n     * Checks if the user is logged in on an ECM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isEcmLoggedIn(): boolean {\n        if (this.isECMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isEcmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Checks if the user is logged in on a BPM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isBpmLoggedIn(): boolean {\n        if (this.isBPMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isBpmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Gets the ECM username.\n     * @returns The ECM username\n     */\n    getEcmUsername(): string {\n        return this.alfrescoApi.getInstance().getEcmUsername();\n    }\n\n    /**\n     * Gets the BPM username\n     * @returns The BPM username\n     */\n    getBpmUsername(): string {\n        return this.alfrescoApi.getInstance().getBpmUsername();\n    }\n\n    /** Sets the URL to redirect to after login.\n     * @param url URL to redirect to\n     */\n    setRedirect(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    /** Gets the URL to redirect to after login.\n     * @param provider Service provider. Can be \"ECM\", \"BPM\" or \"ALL\".\n     * @returns The redirect URL\n     */\n    getRedirect(provider: string): string {\n        return this.hasValidRedirection(provider) ? this.redirectUrl.url : null;\n    }\n\n    /**\n     * Gets information about the user currently logged into APS.\n     * @returns User information\n     */\n    getBpmLoggedUser(): Observable<UserRepresentation> {\n        return from(this.alfrescoApi.getInstance().activiti.profileApi.getProfile());\n    }\n\n    private hasValidRedirection(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === provider || this.hasSelectedProviderAll(provider));\n    }\n\n    private hasSelectedProviderAll(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === 'ALL' || provider === 'ALL');\n    }\n\n    /**\n     * Prints an error message in the console browser\n     * @param error Error message\n     * @returns Object representing the error message\n     */\n    handleError(error: any): Observable<any> {\n        this.logService.error('Error when logging in', error);\n        return throwError(error || 'Server error');\n    }\n\n    getBearerExcludedUrls(): string[] {\n        return this.bearerExcludedUrls;\n    }\n\n    getToken(): string {\n        return localStorage.getItem('access_token');\n    }\n\n    addTokenToHeader(headersArg?: HttpHeaders): Observable<HttpHeaders> {\n        return Observable.create(async (observer: Observer<any>) => {\n            let headers = headersArg;\n            if (!headers) {\n                headers = new HttpHeaders();\n            }\n            try {\n                const token: string = this.getToken();\n                headers = headers.set('Authorization', 'bearer ' + token);\n                observer.next(headers);\n                observer.complete();\n            } catch (error) {\n                observer.error(error);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class BpmProductVersionModel {\n    edition: string;\n    majorVersion: string;\n    revisionVersion: string;\n    minorVersion: string;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.edition = obj.edition || null;\n            this.majorVersion = obj.majorVersion || null;\n            this.revisionVersion = obj.revisionVersion || null;\n            this.minorVersion = obj.minorVersion || null;\n            this.type = obj.type || null;\n        }\n    }\n}\n\nexport class VersionModel {\n    major: string;\n    minor: string;\n    patch: string;\n    hotfix: string;\n    schema: number;\n    label: string;\n    display: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.major = obj.major || null;\n            this.minor = obj.minor || null;\n            this.patch = obj.patch || null;\n            this.hotfix = obj.hotfix || null;\n            this.schema = obj.schema || null;\n            this.label = obj.label || null;\n            this.display = obj.display || null;\n        }\n    }\n}\n\nexport class LicenseModel {\n    issuedAt: string;\n    expiresAt: string;\n    remainingDays: number;\n    holder: string;\n    mode: string;\n    isClusterEnabled: boolean;\n    isCryptodocEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.issuedAt = obj.issuedAt || null;\n            this.expiresAt = obj.expiresAt || null;\n            this.remainingDays = obj.remainingDays || null;\n            this.holder = obj.holder || null;\n            this.mode = obj.mode || null;\n            this.isClusterEnabled = obj.isClusterEnabled ? true : false;\n            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionStatusModel {\n    isReadOnly: boolean;\n    isAuditEnabled: boolean;\n    isQuickShareEnabled: boolean;\n    isThumbnailGenerationEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.isReadOnly = obj.isReadOnly ? true : false;\n            this.isAuditEnabled = obj.isAuditEnabled ? true : false;\n            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;\n            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionModuleModel {\n    id: string;\n    title: string;\n    description: string;\n    version: string;\n    installDate: string;\n    installState: string;\n    versionMin: string;\n    versionMax: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.title = obj.title || null;\n            this.description = obj.description || null;\n            this.version = obj.version || null;\n            this.installDate = obj.installDate || null;\n            this.installState = obj.installState || null;\n            this.versionMin = obj.versionMin || null;\n            this.versionMax = obj.versionMax || null;\n        }\n    }\n}\n\nexport class EcmProductVersionModel {\n    edition: string;\n    version: VersionModel;\n    license: LicenseModel;\n    status: VersionStatusModel;\n    modules: VersionModuleModel[] = [];\n\n    constructor(obj?: any) {\n        if (obj && obj.entry && obj.entry.repository) {\n            this.edition = obj.entry.repository.edition || null;\n            this.version = new VersionModel(obj.entry.repository.version);\n            this.license = new LicenseModel(obj.entry.repository.license);\n            this.status = new VersionStatusModel(obj.entry.repository.status);\n            if (obj.entry.repository.modules) {\n                obj.entry.repository.modules.forEach((module) => {\n                    this.modules.push(new VersionModuleModel(module));\n                });\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { from, throwError } from 'rxjs';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class DiscoveryApiService {\n\n    constructor(private apiService: AlfrescoApiService) { }\n\n    /**\n     * Gets product information for Content Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getEcmProductInfo(): Observable<EcmProductVersionModel> {\n        return from(this.apiService.getInstance().discovery.discoveryApi.getRepositoryInformation())\n            .pipe(\n                map(res => new EcmProductVersionModel(res)),\n                catchError(err => throwError(err))\n            );\n    }\n\n    /**\n     * Gets product information for Process Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getBpmProductInfo(): Observable<BpmProductVersionModel> {\n        return from(this.apiService.getInstance().activiti.aboutApi.getAppVersion())\n            .pipe(\n                map(res => new BpmProductVersionModel(res)),\n                catchError(err => throwError(err))\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileInfo {\n    entry?: WebKitFileEntry;\n    file?: File;\n    relativeFolder?: string;\n}\n\nexport class FileUtils {\n\n    static flattern(folder: any): Promise<FileInfo[]> {\n        let reader = folder.createReader();\n        let files: FileInfo[] = [];\n        return new Promise(resolve => {\n            let iterations = [];\n            (function traverse() {\n                reader.readEntries((entries) => {\n                    if (!entries.length) {\n                        Promise.all(iterations).then(result => resolve(files));\n                    } else {\n                        iterations.push(Promise.all(entries.map(entry => {\n                            if (entry.isFile) {\n                                return new Promise(resolveFile => {\n                                    entry.file(function (file: File) {\n                                        files.push({\n                                            entry: entry,\n                                            file: file,\n                                            relativeFolder: entry.fullPath.replace(/\\/[^\\/]*$/, '')\n                                        });\n                                        resolveFile();\n                                    });\n                                });\n                            } else {\n                                return FileUtils.flattern(entry).then(result => {\n                                    files.push(...result);\n                                });\n                            }\n                        })));\n                        // Try calling traverse() again for the same dir, according to spec\n                        traverse();\n                    }\n                });\n            })();\n        });\n    }\n\n    static toFileArray(fileList: FileList): File[] {\n        let result = [];\n\n        if (fileList && fileList.length > 0) {\n            for (let i = 0; i < fileList.length; i++) {\n                result.push(fileList[i]);\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDateFormats } from '@angular/material';\n\nexport const MOMENT_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD/MM/YYYY'\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM Y',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM Y'\n    }\n};\n\nconst dateNames: string[] = [];\nfor (let date = 1; date <= 31; date++) {\n    dateNames.push(String(date));\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateAdapter } from '@angular/material';\nimport { isMoment, Moment } from 'moment';\nimport moment from 'moment-es6';\n\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private localeData: any = moment.localeData();\n\n    overrideDisplyaFormat: string;\n\n    getYear(date: Moment): number {\n        return date.year();\n    }\n\n    getMonth(date: Moment): number {\n        return date.month();\n    }\n\n    getDate(date: Moment): number {\n        return date.date();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return date.day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.months();\n            case 'short':\n                return this.localeData.monthsShort();\n            case 'narrow':\n                return this.localeData.monthsShort().map(month => month[0]);\n            default :\n                return;\n        }\n    }\n\n    getDateNames(): string[] {\n        const dateNames: string[] = [];\n        for (let date = 1; date <= 31; date++) {\n            dateNames.push(String(date));\n        }\n\n        return dateNames;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.weekdays();\n            case 'short':\n                return this.localeData.weekdaysShort();\n            case 'narrow':\n                return this.localeData.weekdaysShort();\n            default :\n                return;\n        }\n    }\n\n    getYearName(date: Moment): string {\n        return String(date.year());\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek();\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return date.daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        let locale = this.locale || 'en';\n        return date.clone().locale(locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        return moment([year, month, date]);\n    }\n\n    today(): Moment {\n        let locale = this.locale || 'en';\n        return moment().locale(locale);\n    }\n\n    parse(value: any, parseFormat: any): Moment {\n        let locale = this.locale || 'en';\n\n        if (value && typeof value === 'string') {\n            let m = moment(value, parseFormat, locale, true);\n            if (!m.isValid()) {\n                // use strict parsing because Moment's parser is very forgiving, and this can lead to undesired behavior.\n                m = moment(value, this.overrideDisplyaFormat, locale, true);\n            }\n            if (m.isValid()) {\n                // if user omits year, it defaults to 2001, so check for that issue.\n                if (m.year() === 2001 && value.indexOf('2001') === -1) {\n                    // if 2001 not actually in the value string, change to current year\n                    const currentYear = new Date().getFullYear();\n                    m.set('year', currentYear);\n                    // if date is in the future, set previous year\n                    if (m.isAfter(moment())) {\n                        m.set('year', currentYear - 1);\n                    }\n                }\n            }\n            return m;\n        }\n\n        return value ? moment(value).locale(locale) : null;\n    }\n\n    format(date: Moment, displayFormat: any): string {\n        date = this.clone(date);\n        displayFormat = this.overrideDisplyaFormat ? this.overrideDisplyaFormat : displayFormat;\n\n        if (date && date.format) {\n            return date.format(displayFormat);\n        } else {\n            return '';\n        }\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return date.clone().add(years, 'y');\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return date.clone().add(months, 'M');\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return date.clone().add(days, 'd');\n    }\n\n    getISODateString(date: Moment): string {\n        return date.toISOString();\n    }\n\n    setLocale(locale: any): void {\n        super.setLocale(locale);\n\n        this.localeData = moment.localeData(locale);\n    }\n\n    compareDate(first: Moment, second: Moment): number {\n        return first.diff(second, 'seconds', true);\n    }\n\n    sameDate(first: any | Moment, second: any | Moment): boolean {\n        if (first == null) {\n            // same if both null\n            return second == null;\n        } else if (isMoment(first)) {\n            return first.isSame(second);\n        } else {\n            const isSame = super.sameDate(first, second);\n            return isSame;\n        }\n    }\n\n    clampDate(date: Moment, min?: any | Moment, max?: any | Moment): Moment {\n        if (min && date.isBefore(min)) {\n            return min;\n        } else if (max && date.isAfter(max)) {\n            return max;\n        } else {\n            return date;\n        }\n    }\n\n    isDateInstance(date: any) {\n        let isValidDateInstance = false;\n\n        if (date) {\n            isValidDateInstance = date._isAMomentObject;\n        }\n\n        return isValidDateInstance;\n    }\n\n    isValid(date: Moment): boolean {\n        return date.isValid();\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    fromIso8601(iso8601String: string): Moment | null {\n        let locale = this.locale || 'en';\n        let d = moment(iso8601String, moment.ISO_8601).locale(locale);\n        return this.isValid(d) ? d : null;\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectUtils } from '../../utils';\nimport { DataRow } from './data-row.model';\n\n// Simple implementation of the DataRow interface.\nexport class ObjectDataRow implements DataRow {\n\n    constructor(private obj: any, public isSelected: boolean = false) {\n        if (!obj) {\n            throw new Error('Object source not found');\n        }\n\n    }\n\n    getValue(key: string): any {\n        return ObjectUtils.getValue(this.obj, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n\n    imageErrorResolver(event: Event): string {\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { DataColumn } from './data-column.model';\n\n// Simple implementation of the DataColumn interface.\nexport class ObjectDataColumn implements DataColumn {\n\n    key: string;\n    type: string; // text|image\n    format: string;\n    sortable: boolean;\n    title: string;\n    srTitle: string;\n    cssClass: string;\n    template?: TemplateRef<any>;\n\n    constructor(obj: any) {\n        this.key = obj.key;\n        this.type = obj.type || 'text';\n        this.format = obj.format;\n        this.sortable = obj.sortable;\n        this.title = obj.title;\n        this.srTitle = obj.srTitle;\n        this.cssClass = obj.cssClass;\n        this.template = obj.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DataSorting {\n    constructor(\n        public key?: string,\n        public direction?: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn } from './data-column.model';\nimport { DataRow } from './data-row.model';\nimport { ObjectDataRow } from './object-datarow.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\nimport { DataSorting } from './data-sorting.model';\nimport { DataTableAdapter } from './datatable-adapter';\nimport { Subject } from 'rxjs';\n\n// Simple implementation of the DataTableAdapter interface.\nexport class ObjectDataTableAdapter implements DataTableAdapter {\n\n    private _sorting: DataSorting;\n    private _rows: DataRow[];\n    private _columns: DataColumn[];\n\n    selectedRow: DataRow;\n    rowsChanged: Subject<Array<DataRow>>;\n\n    static generateSchema(data: any[]) {\n        let schema = [];\n\n        if (data && data.length) {\n            let rowToExaminate = data[0];\n\n            if (typeof rowToExaminate === 'object') {\n                for (let key in rowToExaminate) {\n                    if (rowToExaminate.hasOwnProperty(key)) {\n                        schema.push({\n                            type: 'text',\n                            key: key,\n                            title: key,\n                            sortable: false\n                        });\n                    }\n                }\n            }\n\n        }\n        return schema;\n    }\n\n    constructor(data: any[] = [], schema: DataColumn[] = []) {\n        this._rows = [];\n        this._columns = [];\n\n        if (data && data.length > 0) {\n            this._rows = data.map(item => {\n                return new ObjectDataRow(item);\n            });\n        }\n\n        if (schema && schema.length > 0) {\n            this._columns = schema.map(item => {\n                return new ObjectDataColumn(item);\n            });\n\n            // Sort by first sortable or just first column\n            let sortable = this._columns.filter(c => c.sortable);\n            if (sortable.length > 0) {\n                this.sort(sortable[0].key, 'asc');\n            }\n        }\n\n        this.rowsChanged = new Subject<Array<DataRow>>();\n    }\n\n    getRows(): Array<DataRow> {\n        return this._rows;\n    }\n\n    setRows(rows: Array<DataRow>) {\n        this._rows = rows || [];\n        this.sort();\n        this.rowsChanged.next(this._rows);\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this._columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this._columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error('Row not found');\n        }\n        if (!col) {\n            throw new Error('Column not found');\n        }\n\n        let value = row.getValue(col.key);\n\n        if (col.type === 'icon') {\n            const icon = row.getValue(col.key);\n            return icon;\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this._sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this._sorting = sorting;\n\n        if (sorting && sorting.key) {\n            this._rows.sort((a: DataRow, b: DataRow) => {\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right)\n                    : right.localeCompare(left);\n            });\n        }\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this._sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { DiscoveryApiService } from '../services/discovery-api.service';\nimport { ObjectDataTableAdapter } from '../datatable/data/object-datatable-adapter';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AboutComponent implements OnInit {\n\n    data: ObjectDataTableAdapter;\n    status: ObjectDataTableAdapter;\n    license: ObjectDataTableAdapter;\n    modules: ObjectDataTableAdapter;\n    githubUrlCommitAlpha = 'https://github.com/Alfresco/alfresco-ng2-components/commits/';\n\n    ecmHost = '';\n    bpmHost = '';\n\n    ecmVersion: EcmProductVersionModel = null;\n    bpmVersion: BpmProductVersionModel = null;\n\n    constructor(private http: HttpClient,\n                private appConfig: AppConfigService,\n                private authService: AuthenticationService,\n                private discovery: DiscoveryApiService) {\n    }\n\n    ngOnInit() {\n\n        if (this.authService.isEcmLoggedIn()) {\n            this.discovery.getEcmProductInfo().subscribe((ecmVers) => {\n                this.ecmVersion = ecmVers;\n\n                this.modules = new ObjectDataTableAdapter(this.ecmVersion.modules, [\n                    { type: 'text', key: 'id', title: 'ID', sortable: true },\n                    { type: 'text', key: 'title', title: 'Title', sortable: true },\n                    { type: 'text', key: 'version', title: 'Description', sortable: true },\n                    { type: 'text', key: 'installDate', title: 'Install Date', sortable: true },\n                    { type: 'text', key: 'installState', title: 'Install State', sortable: true },\n                    { type: 'text', key: 'versionMin', title: 'Version Minor', sortable: true },\n                    { type: 'text', key: 'versionMax', title: 'Version Max', sortable: true }\n                ]);\n\n                this.status = new ObjectDataTableAdapter([this.ecmVersion.status], [\n                    { type: 'text', key: 'isReadOnly', title: 'ReadOnly', sortable: true },\n                    { type: 'text', key: 'isAuditEnabled', title: 'Is Audit Enable', sortable: true },\n                    { type: 'text', key: 'isQuickShareEnabled', title: 'Is quick shared enable', sortable: true },\n                    { type: 'text', key: 'isThumbnailGenerationEnabled', title: 'Thumbnail Generation', sortable: true }\n                ]);\n\n                this.license = new ObjectDataTableAdapter([this.ecmVersion.license], [\n                    { type: 'text', key: 'issuedAt', title: 'Issued At', sortable: true },\n                    { type: 'text', key: 'expiresAt', title: 'Expires At', sortable: true },\n                    { type: 'text', key: 'remainingDays', title: 'Remaining Days', sortable: true },\n                    { type: 'text', key: 'holder', title: 'Holder', sortable: true },\n                    { type: 'text', key: 'mode', title: 'Mode', sortable: true },\n                    { type: 'text', key: 'isClusterEnabled', title: 'Is Cluster Enabled', sortable: true },\n                    { type: 'text', key: 'isCryptodocEnabled', title: 'Is Cryptodoc Enable', sortable: true }\n                ]);\n            });\n        }\n\n        if (this.authService.isBpmLoggedIn()) {\n            this.discovery.getBpmProductInfo().subscribe((bpmVers) => {\n                this.bpmVersion = bpmVers;\n            });\n        }\n\n        this.http.get('/versions.json?' + new Date()).subscribe((response: any) => {\n            const regexp = new RegExp('^(@alfresco)');\n\n            const alfrescoPackages = Object.keys(response.dependencies).filter((val) => {\n                return regexp.test(val);\n            });\n\n            const alfrescoPackagesTableRepresentation = [];\n            alfrescoPackages.forEach((val) => {\n                alfrescoPackagesTableRepresentation.push({\n                    name: val,\n                    version: response.dependencies[val].version\n                });\n            });\n\n            this.gitHubLinkCreation(alfrescoPackagesTableRepresentation);\n\n            this.data = new ObjectDataTableAdapter(alfrescoPackagesTableRepresentation, [\n                { type: 'text', key: 'name', title: 'Name', sortable: true },\n                { type: 'text', key: 'version', title: 'Version', sortable: true }\n            ]);\n\n        });\n\n        this.ecmHost = this.appConfig.get<string>(AppConfigValues.ECMHOST);\n        this.bpmHost = this.appConfig.get<string>(AppConfigValues.BPMHOST);\n    }\n\n    private gitHubLinkCreation(alfrescoPackagesTableRepresentation): void {\n        const corePackage = alfrescoPackagesTableRepresentation.find((packageUp) => {\n            return packageUp.name === '@alfresco/adf-core';\n        });\n\n        if (corePackage) {\n            const commitIsh = corePackage.version.split('-');\n            if (commitIsh.length > 1) {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + commitIsh[1];\n            } else {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + corePackage.version;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n    MatTooltipModule, MatExpansionModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule, MatExpansionModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ContextMenuService {\n    public show: Subject<{event: MouseEvent, obj: any[]}> = new Subject<{event: MouseEvent, obj: any[]}>();\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Component, HostListener, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { ContextMenuService } from './context-menu.service';\n\n/**\n * @deprecated: context-menu-holder is deprecated, use adf-context-menu-holder instead.\n */\n@Component({\n    selector: 'adf-context-menu-holder, context-menu-holder',\n    template: `\n        <button mat-button [matMenuTriggerFor]=\"contextMenu\"></button>\n        <mat-menu #contextMenu=\"matMenu\" class=\"context-menu\">\n            <ng-container *ngFor=\"let link of links\">\n                <button *ngIf=\"link.model?.visible\"\n                        [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                        mat-menu-item\n                        [disabled]=\"link.model?.disabled\"\n                        (click)=\"onMenuItemClick($event, link)\">\n                    <mat-icon *ngIf=\"showIcons && link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                    {{ (link.title || link.model?.title) | translate }}\n                </button>\n            </ng-container>\n        </mat-menu>\n    `\n})\nexport class ContextMenuHolderComponent implements OnInit, OnDestroy {\n    links = [];\n\n    private mouseLocation: { left: number, top: number } = { left: 0, top: 0 };\n    private menuElement = null;\n    private subscriptions: Subscription[] = [];\n    private contextMenuListenerFn: () => void;\n\n    @Input()\n    showIcons: boolean = false;\n\n    @ViewChild(MatMenuTrigger)\n    menuTrigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    constructor(\n        private viewport: ViewportRuler,\n        private overlayContainer: OverlayContainer,\n        private contextMenuService: ContextMenuService,\n        private renderer: Renderer2\n    ) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.contextMenuService.show.subscribe(e => this.showMenu(e.event, e.obj)),\n\n            this.menuTrigger.onMenuOpen.subscribe(() => {\n                const container = this.overlayContainer.getContainerElement();\n                if (container) {\n                    this.contextMenuListenerFn = this.renderer.listen(container, 'contextmenu', (e: Event) => {\n                        e.preventDefault();\n                    });\n                }\n                this.menuElement = this.getContextMenuElement();\n            }),\n\n            this.menuTrigger.onMenuClose.subscribe(() => {\n                this.menuElement = null;\n                if (this.contextMenuListenerFn) {\n                    this.contextMenuListenerFn();\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.contextMenuListenerFn) {\n            this.contextMenuListenerFn();\n        }\n\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        this.menuElement = null;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any): void {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n        menuItem.subject.next(menuItem);\n    }\n\n    showMenu(e, links) {\n        this.links = links;\n\n        if (e) {\n            this.mouseLocation = {\n                left: e.clientX,\n                top: e.clientY\n            };\n        }\n\n        this.menuTrigger.openMenu();\n\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    get mdMenuElement() {\n        return this.menuElement;\n    }\n\n    private locationCss() {\n        return {\n            left: this.mouseLocation.left + 'px',\n            top: this.mouseLocation.top + 'px'\n        };\n    }\n\n    private updatePosition() {\n        setTimeout(() => {\n            if (this.mdMenuElement.parentElement) {\n                if (this.mdMenuElement.clientWidth + this.mouseLocation.left > this.viewport.getViewportRect().width) {\n                    this.menuTrigger.menu.xPosition = 'before';\n                    this.mdMenuElement.parentElement.style.left = this.mouseLocation.left - this.mdMenuElement.clientWidth + 'px';\n                } else {\n                    this.menuTrigger.menu.xPosition = 'after';\n                    this.mdMenuElement.parentElement.style.left = this.locationCss().left;\n                }\n\n                if (this.mdMenuElement.clientHeight + this.mouseLocation.top > this.viewport.getViewportRect().height) {\n                    this.menuTrigger.menu.yPosition = 'above';\n                    this.mdMenuElement.parentElement.style.top = this.mouseLocation.top - this.mdMenuElement.clientHeight + 'px';\n                } else {\n                    this.menuTrigger.menu.yPosition = 'below';\n                    this.mdMenuElement.parentElement.style.top = this.locationCss().top;\n                }\n            }\n        }, 0);\n    }\n\n    private getContextMenuElement() {\n        return this.overlayContainer.getContainerElement().querySelector('.context-menu');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nexport class ContextMenuOverlayRef {\n\n    constructor(private overlayRef: OverlayRef) { }\n\n    close(): void {\n        this.overlayRef.dispose();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_DATA = new InjectionToken<any>('CONTEXT_MENU_DATA');\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    sequence,\n    AnimationStateMetadata,\n    AnimationTransitionMetadata\n} from '@angular/animations';\n\nexport const contextMenuAnimation: ( AnimationStateMetadata | AnimationTransitionMetadata)[] = [\n    state('void', style({\n        opacity: 0,\n        transform: 'scale(0.01, 0.01)'\n    })),\n    transition('void => *', sequence([\n        query('.mat-menu-content', style({ opacity: 0 })),\n        animate('100ms linear', style({ opacity: 1, transform: 'scale(1, 0.5)' })),\n        group([\n            query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n                style({ opacity: 1 })\n            )),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ transform: 'scale(1, 1)' }))\n        ])\n    ])),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n];\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, ViewEncapsulation, HostListener, AfterViewInit,\n    Optional, Inject, QueryList, ViewChildren\n} from '@angular/core';\nimport { trigger } from '@angular/animations';\nimport { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { MatMenuItem } from '@angular/material';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { contextMenuAnimation } from './animations';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\n\n@Component({\n    selector: 'adf-context-menu',\n    template: `\n        <div mat-menu class=\"mat-menu-panel\" @panelAnimation>\n            <div id=\"adf-context-menu-content\" class=\"mat-menu-content\">\n                <ng-container *ngFor=\"let link of links\">\n                    <button *ngIf=\"link.model?.visible\"\n                            [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                            mat-menu-item\n                            [disabled]=\"link.model?.disabled\"\n                            (click)=\"onMenuItemClick($event, link)\">\n                        <mat-icon *ngIf=\"link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                        <span>{{ (link.title || link.model?.title) | translate }}</span>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    host: {\n        role: 'menu',\n        class: 'adf-context-menu'\n    },\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('panelAnimation', contextMenuAnimation)\n    ]\n})\nexport class ContextMenuListComponent implements AfterViewInit {\n    private keyManager: FocusKeyManager<MatMenuItem>;\n    @ViewChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n    links: any[];\n\n    @HostListener('document:keydown.Escape', ['$event'])\n    handleKeydownEscape(event: KeyboardEvent) {\n        if (event) {\n            this.contextMenuOverlayRef.close();\n        }\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeydownEvent(event: KeyboardEvent) {\n        if (event) {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                this.keyManager.onKeydown(event);\n            }\n        }\n    }\n\n    constructor(\n        @Inject(ContextMenuOverlayRef) private contextMenuOverlayRef: ContextMenuOverlayRef,\n        @Optional() @Inject(CONTEXT_MENU_DATA) private data: any\n    ) {\n        this.links = this.data;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any) {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n\n        menuItem.subject.next(menuItem);\n        this.contextMenuOverlayRef.close();\n    }\n\n    ngAfterViewInit() {\n        this.keyManager = new FocusKeyManager<MatMenuItem>(this.items);\n        this.keyManager.setFirstItemActive();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Injector, ElementRef, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { ContextMenuOverlayConfig } from './interfaces';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\nconst DEFAULT_CONFIG: ContextMenuOverlayConfig = {\n    panelClass: 'cdk-overlay-pane',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n    hasBackdrop: true\n};\n\n@Injectable()\nexport class ContextMenuOverlayService {\n\n    constructor( private injector: Injector, private overlay: Overlay) { }\n\n    open(config: ContextMenuOverlayConfig): ContextMenuOverlayRef {\n        const overlayConfig = { ...DEFAULT_CONFIG, ...config };\n\n        const overlay = this.createOverlay(overlayConfig);\n\n        const overlayRef = new ContextMenuOverlayRef(overlay);\n\n        this.attachDialogContainer(overlay, config, overlayRef);\n\n        overlay.backdropClick().subscribe(() => overlayRef.close());\n\n        // prevent native contextmenu on overlay element if config.hasBackdrop is true\n        if (overlayConfig.hasBackdrop) {\n            (<any> overlay)._backdropElement\n                .addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    (<any> overlay)._backdropClick.next(null);\n                }, true);\n        }\n\n        return overlayRef;\n    }\n\n    private createOverlay(config: ContextMenuOverlayConfig): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(overlay: OverlayRef, config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef) {\n        const injector = this.createInjector(config, contextMenuOverlayRef);\n\n        const containerPortal = new ComponentPortal(ContextMenuListComponent, null, injector);\n        const containerRef: ComponentRef<ContextMenuListComponent> = overlay.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private createInjector(config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(ContextMenuOverlayRef, contextMenuOverlayRef);\n        injectionTokens.set(CONTEXT_MENU_DATA, config.data);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    private getOverlayConfig(config: ContextMenuOverlayConfig): OverlayConfig {\n        const { clientY, clientX  } = config.source;\n\n        const fakeElement: any = {\n            getBoundingClientRect: (): ClientRect => ({\n                bottom: clientY,\n                height: 0,\n                left: clientX,\n                right: clientX,\n                top: clientY,\n                width: 0\n            })\n        };\n\n        const positionStrategy = this.overlay.position()\n            .connectedTo(\n                new ElementRef(fakeElement),\n                { originX: 'start', originY: 'bottom' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'top' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'center' },\n                { overlayX: 'start', overlayY: 'center' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'center' },\n                { overlayX: 'end', overlayY: 'center' }\n            );\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass,\n            panelClass: config.panelClass,\n            scrollStrategy: this.overlay.scrollStrategies.close(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { ContextMenuOverlayService } from './context-menu-overlay.service';\n\n// @deprecated 2.3.0 context-menu tag removed\n@Directive({\n    selector: '[adf-context-menu], [context-menu]'\n})\nexport class ContextMenuDirective {\n    /** Items for the menu. */\n    @Input('context-menu')\n    links: any[];\n\n    /** Is the menu enabled? */\n    @Input('context-menu-enabled')\n    enabled: boolean = false;\n\n    constructor(private contextMenuService: ContextMenuOverlayService) {}\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (this.enabled) {\n            if (event) {\n                event.preventDefault();\n            }\n\n            if (this.links && this.links.length > 0) {\n                this.contextMenuService.open({\n                    source: event,\n                    data: this.links\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContextMenuHolderComponent } from './context-menu-holder.component';\nimport { ContextMenuDirective } from './context-menu.directive';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective,\n        ContextMenuListComponent\n    ],\n    exports: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    entryComponents: [\n        ContextMenuListComponent\n    ]\n})\nexport class ContextMenuModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { StorageService } from './storage.service';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport enum UserPreferenceValues {\n    PaginationSize = 'PAGINATION_SIZE',\n    Locale = 'LOCALE',\n    SupportedPageSizes = 'supportedPageSizes'\n}\n\n@Injectable()\nexport class UserPreferencesService {\n\n    defaults = {\n        paginationSize: 25,\n        supportedPageSizes: [5, 10, 15, 20],\n        locale: 'en'\n    };\n\n    private userPreferenceStatus: any = this.defaults;\n\n    /**\n     * @deprecated we are grouping every value changed on the user preference in a single stream : userPreferenceValue$\n     */\n    locale$: Observable<string>;\n    private localeSubject: BehaviorSubject<string>;\n\n    private onChangeSubject: BehaviorSubject<any>;\n    onChange: Observable<any>;\n\n    constructor(public translate: TranslateService,\n                private appConfig: AppConfigService,\n                private storage: StorageService) {\n        this.appConfig.onLoad.subscribe(this.initUserPreferenceStatus.bind(this));\n        this.localeSubject = new BehaviorSubject(this.get(UserPreferenceValues.Locale, this.getDefaultLocale()));\n        this.locale$ = this.localeSubject.asObservable();\n        this.onChangeSubject = new BehaviorSubject(this.userPreferenceStatus);\n        this.onChange = this.onChangeSubject.asObservable();\n    }\n\n    private initUserPreferenceStatus() {\n        this.userPreferenceStatus[UserPreferenceValues.Locale] = this.locale || this.getDefaultLocale();\n        this.userPreferenceStatus[UserPreferenceValues.PaginationSize] = this.appConfig.get('pagination.size', this.defaults.paginationSize);\n        this.userPreferenceStatus[UserPreferenceValues.SupportedPageSizes] = this.appConfig.get('pagination.supportedPageSizes', this.defaults.supportedPageSizes);\n    }\n\n    /**\n     * Sets up a callback to notify when a property has changed.\n     * @param property The property to watch\n     * @returns Notification callback\n     */\n    select(property: string): Observable<any> {\n        return this.onChange\n            .pipe(\n                map((userPreferenceStatus) => userPreferenceStatus[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets a preference property.\n     * @param property Name of the property\n     * @param defaultValue Default to return if the property is not found\n     * @returns Preference property\n     */\n    get(property: string, defaultValue?: string): string {\n        const key = this.getPropertyKey(property);\n        const value = this.storage.getItem(key);\n        if (value === undefined || value === null) {\n            return defaultValue;\n        }\n        return value;\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    set(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.storage.setItem(\n            this.getPropertyKey(property),\n            value\n        );\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Check if an item is present in the storage\n     * @param property Name of the property\n     * @returns True if the item is present, false otherwise\n     */\n    hasItem(property: string) {\n        if (!property) {\n            return;\n        }\n        return this.storage.hasItem(\n            this.getPropertyKey(property)\n        );\n    }\n\n    /**\n     * Gets the active storage prefix for preferences.\n     * @returns Storage prefix\n     */\n    getStoragePrefix(): string {\n        return this.storage.getItem('USER_PROFILE') || 'GUEST';\n    }\n\n    /**\n     * Sets the active storage prefix for preferences.\n     * @param value Name of the prefix\n     */\n    setStoragePrefix(value: string) {\n        this.storage.setItem('USER_PROFILE', value || 'GUEST');\n    }\n\n    /**\n     * Gets the full property key with prefix.\n     * @param property The property name\n     * @returns Property key\n     */\n    getPropertyKey(property: string): string {\n        return `${this.getStoragePrefix()}__${property}`;\n    }\n\n    /**\n     * Gets an array containing the available page sizes.\n     * @returns Array of page size values\n     */\n    getDefaultPageSizes(): number[] {\n        return this.userPreferenceStatus[UserPreferenceValues.SupportedPageSizes];\n    }\n\n    /** Pagination size. */\n    set paginationSize(value: number) {\n        this.set(UserPreferenceValues.PaginationSize, value);\n    }\n\n    get paginationSize(): number {\n        return Number(this.get(UserPreferenceValues.PaginationSize, this.userPreferenceStatus[UserPreferenceValues.PaginationSize])) || this.defaults.paginationSize;\n    }\n\n    /** Current locale setting. */\n    get locale(): string {\n        const locale = this.get(UserPreferenceValues.Locale, this.userPreferenceStatus[UserPreferenceValues.Locale]);\n        return locale;\n    }\n\n    set locale(value: string) {\n        this.localeSubject.next(value);\n        this.set(UserPreferenceValues.Locale, value);\n    }\n\n    /**\n     * Gets the default locale.\n     * @returns Default locale language code\n     */\n    public getDefaultLocale(): string {\n        return this.appConfig.get<string>('locale') || this.translate.getBrowserLang() || 'en';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { TranslateLoaderService } from './translate-loader.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\nexport const TRANSLATION_PROVIDER = new InjectionToken('Injection token for translation providers.');\n\nexport interface TranslationProvider {\n    name: string;\n    source: string;\n}\n\n@Injectable()\nexport class TranslationService {\n    defaultLang: string;\n    userLang: string;\n    customLoader: TranslateLoaderService;\n\n    constructor(public translate: TranslateService,\n                userPreference: UserPreferencesService,\n                @Optional() @Inject(TRANSLATION_PROVIDER) providers: TranslationProvider[]) {\n        this.customLoader = <TranslateLoaderService> this.translate.currentLoader;\n\n        this.defaultLang = 'en';\n        translate.setDefaultLang(this.defaultLang);\n\n        if (providers && providers.length > 0) {\n            for (let provider of providers) {\n                this.addTranslationFolder(provider.name, provider.source);\n            }\n        }\n\n        userPreference.locale$.subscribe((locale) => {\n            this.userLang = locale;\n            this.use(this.userLang);\n        });\n    }\n\n    /**\n     * Adds a new folder of translation source files.\n     * @param name Name for the translation provider\n     * @param path Path to the folder\n     */\n    addTranslationFolder(name: string = '', path: string = '') {\n        if (!this.customLoader.providerRegistered(name)) {\n            this.customLoader.registerProvider(name, path);\n\n            if (this.userLang) {\n                this.loadTranslation(this.userLang, this.defaultLang);\n            } else {\n                this.loadTranslation(this.defaultLang);\n            }\n        }\n    }\n\n    loadTranslation(lang: string, fallback?: string) {\n        this.translate.getTranslation(lang).subscribe(\n            () => {\n                this.translate.use(lang);\n                this.onTranslationChanged(lang);\n            },\n            () => {\n                if (fallback && fallback !== lang) {\n                    this.loadTranslation(fallback);\n                }\n            }\n        );\n    }\n\n    /**\n     * Triggers a notification callback when the translation language changes.\n     * @param lang The new language code\n     */\n    onTranslationChanged(lang: string): void {\n        this.translate.onTranslationChange.next({\n            lang: lang,\n            translations: this.customLoader.getFullTranslationJSON(lang)\n        });\n    }\n\n    /**\n     * Sets the target language for translations.\n     * @param lang Code name for the language\n     * @returns Translations available for the language\n     */\n    use(lang: string): Observable<any> {\n        this.customLoader.init(lang);\n        return this.translate.use(lang);\n    }\n\n    /**\n     * Gets the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n    /**\n     * Directly returns the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key ? this.translate.instant(key, interpolateParams) : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n    name: 'adfFileSize',\n    pure: false\n})\nexport class FileSizePipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(bytes: number, decimals: number = 2): string {\n        if (bytes == null || bytes === undefined) {\n            return '';\n        }\n\n        if (bytes === 0) {\n            return '0 ' + this.translation.instant('CORE.FILE_SIZE.BYTES');\n        }\n\n        const k = 1024,\n            dm = decimals || 2,\n            sizes = ['BYTES', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        const i18nSize = this.translation.instant(`CORE.FILE_SIZE.${sizes[i]}`);\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + i18nSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionsEnum extends String {\n    static DELETE: string = 'delete';\n    static UPDATE: string = 'update';\n    static CREATE: string = 'create';\n    static COPY: string = 'copy';\n    static LOCK: string = 'lock';\n    static UPDATEPERMISSIONS: string = 'updatePermissions';\n    static NOT_DELETE: string = '!delete';\n    static NOT_UPDATE: string = '!update';\n    static NOT_CREATE: string = '!create';\n    static NOT_UPDATEPERMISSIONS: string = '!updatePermissions';\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentApi, MinimalNodeEntryEntity, Node, NodeEntry } from 'alfresco-js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ContentService {\n\n    private saveData: Function;\n\n    folderCreated: Subject<FolderCreatedEvent> = new Subject<FolderCreatedEvent>();\n    folderCreate: Subject<MinimalNodeEntryEntity> = new Subject<MinimalNodeEntryEntity>();\n    folderEdit: Subject<MinimalNodeEntryEntity> = new Subject<MinimalNodeEntryEntity>();\n\n    constructor(public authService: AuthenticationService,\n                public apiService: AlfrescoApiService,\n                private logService: LogService,\n                private sanitizer: DomSanitizer) {\n        this.saveData = (function () {\n            let a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n\n            return function (data, format, fileName) {\n                let blob = null;\n\n                if (format === 'blob' || format === 'data') {\n                    blob = new Blob([data], { type: 'octet/stream' });\n                }\n\n                if (format === 'object' || format === 'json') {\n                    let json = JSON.stringify(data);\n                    blob = new Blob([json], { type: 'octet/stream' });\n                }\n\n                if (blob) {\n\n                    if (typeof window.navigator !== 'undefined' && window.navigator.msSaveOrOpenBlob) {\n                        navigator.msSaveOrOpenBlob(blob, fileName);\n                    } else {\n                        let url = window.URL.createObjectURL(blob);\n                        a.href = url;\n                        a.download = fileName;\n                        a.click();\n\n                        window.URL.revokeObjectURL(url);\n                    }\n                }\n            };\n        }());\n    }\n\n    /**\n     * Invokes content download for a Blob with a file name.\n     * @param blob Content to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.saveData(blob, 'blob', fileName);\n    }\n\n    /**\n     * Invokes content download for a data array with a file name.\n     * @param data Data to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadData(data: any, fileName: string): void {\n        this.saveData(data, 'data', fileName);\n    }\n\n    /**\n     * Invokes content download for a JSON object with a file name.\n     * @param json JSON object to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadJSON(json: any, fileName: string): void {\n        this.saveData(json, 'json', fileName);\n    }\n\n    /**\n     * Creates a trusted object URL from the Blob.\n     * WARNING: calling this method with untrusted user data exposes your application to XSS security risks!\n     * @param  blob Data to wrap into object URL\n     * @returns URL string\n     */\n    createTrustedUrl(blob: Blob): string {\n        let url = window.URL.createObjectURL(blob);\n        return <string> this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    private get contentApi(): ContentApi {\n        return this.apiService.getInstance().content;\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getDocumentThumbnailUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getDocumentThumbnailUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getContentUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getContentUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets content for the given node.\n     * @param nodeId ID of the target node\n     * @returns Content data\n     */\n    getNodeContent(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().core.nodesApi.getFileContent(nodeId))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Creates a folder.\n     * @param relativePath Location to create the folder\n     * @param name Folder name\n     * @param parentId Node ID of parent folder\n     * @returns Information about the new folder\n     */\n    createFolder(relativePath: string, name: string, parentId?: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.createFolder(name, relativePath, parentId))\n            .pipe(\n                tap(data => {\n                    this.folderCreated.next(<FolderCreatedEvent> {\n                        relativePath: relativePath,\n                        name: name,\n                        parentId: parentId,\n                        node: data\n                    });\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @param opts Options supported by JSAPI\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, opts?: any): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts));\n    }\n\n    /**\n     * Checks if the user has permissions on that node\n     * @param node Node to check allowableOperations\n     * @param permission Create, delete, update, updatePermissions, !create, !delete, !update, !updatePermissions\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasPermission(node: Node, permission: PermissionsEnum | string): boolean {\n        let hasPermission = false;\n\n        if (this.hasAllowableOperations(node)) {\n            if (permission && permission.startsWith('!')) {\n                hasPermission = node.allowableOperations.find(currentPermission => currentPermission === permission.replace('!', '')) ? false : true;\n            } else {\n                hasPermission = node.allowableOperations.find(currentPermission => currentPermission === permission) ? true : false;\n            }\n\n        } else {\n            if (permission && permission.startsWith('!')) {\n                hasPermission = true;\n            }\n        }\n\n        if (permission === PermissionsEnum.COPY) {\n            hasPermission = true;\n        }\n\n        if (permission === PermissionsEnum.LOCK) {\n            hasPermission = node.isFile;\n\n            if (node.isLocked && this.hasAllowableOperations(node)) {\n                hasPermission = !!~node.allowableOperations.indexOf('updatePermissions');\n            }\n        }\n\n        return hasPermission;\n    }\n\n    /**\n     * Checks if the node has the properties allowableOperations\n     * @param node Node to check allowableOperations\n     * @returns True if the node has the property, false otherwise\n     */\n    hasAllowableOperations(node: any): boolean {\n        return node && node.allowableOperations ? true : false;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentService } from './content.service';\n\n@Injectable()\nexport class ThumbnailService {\n\n    DEFAULT_ICON: string = './assets/images/ft_ic_miscellaneous.svg';\n\n    mimeTypeIcons: any = {\n        'image/png': './assets/images/ft_ic_raster_image.svg',\n        'image/jpeg': './assets/images/ft_ic_raster_image.svg',\n        'image/gif': './assets/images/ft_ic_raster_image.svg',\n        'image/bmp': './assets/images/ft_ic_raster_image.svg',\n        'image/cgm': './assets/images/ft_ic_raster_image.svg',\n        'image/ief': './assets/images/ft_ic_raster_image.svg',\n        'image/jp2': './assets/images/ft_ic_raster_image.svg',\n        'image/tiff': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.photoshop': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.premiere': './assets/images/ft_ic_raster_image.svg',\n        'image/x-cmu-raster': './assets/images/ft_ic_raster_image.svg',\n        'image/x-dwt': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-anymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-bitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-graymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-pixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-adobe': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-canon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-fuji': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-hasselblad': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-kodak': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-leica': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-minolta': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-nikon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-olympus': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-panasonic': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-pentax': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-red': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sigma': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sony': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xbitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xpixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xwindowdump': './assets/images/ft_ic_raster_image.svg',\n        'image/svg+xml': './assets/images/ft_ic_vector_image.svg',\n        'application/eps': './assets/images/ft_ic_raster_image.svg',\n        'application/illustrator': './assets/images/ft_ic_raster_image.svg',\n        'application/pdf': './assets/images/ft_ic_pdf.svg',\n        'application/vnd.ms-excel': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.addin.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.binary.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.template.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-outlook': './assets/images/ft_ic_document.svg',\n        'application/msword': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.document.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.template.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer.template': './assets/images/ft_ic_ms_word.svg',\n        'application/rtf': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-powerpoint': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation-template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slide': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.spreadsheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.oasis.opendocument.spreadsheet-template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-powerpoint.addin.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.presentation.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slide.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slideshow.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.template.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'video/mp4': './assets/images/ft_ic_video.svg',\n        'video/3gpp': './assets/images/ft_ic_video.svg',\n        'video/3gpp2': './assets/images/ft_ic_video.svg',\n        'video/mp2t': './assets/images/ft_ic_video.svg',\n        'video/mpeg': './assets/images/ft_ic_video.svg',\n        'video/mpeg2': './assets/images/ft_ic_video.svg',\n        'video/ogg': './assets/images/ft_ic_video.svg',\n        'video/quicktime': './assets/images/ft_ic_video.svg',\n        'video/webm': './assets/images/ft_ic_video.svg',\n        'video/x-flv': './assets/images/ft_ic_video.svg',\n        'video/x-m4v': './assets/images/ft_ic_video.svg',\n        'video/x-ms-asf': './assets/images/ft_ic_video.svg',\n        'video/x-ms-wmv': './assets/images/ft_ic_video.svg',\n        'video/x-msvideo': './assets/images/ft_ic_video.svg',\n        'video/x-rad-screenplay':  './assets/images/ft_ic_video.svg',\n        'video/x-sgi-movie': './assets/images/ft_ic_video.svg',\n        'video/x-matroska': './assets/images/ft_ic_video.svg',\n        'audio/mpeg': './assets/images/ft_ic_audio.svg',\n        'audio/ogg': './assets/images/ft_ic_audio.svg',\n        'audio/wav': './assets/images/ft_ic_audio.svg',\n        'audio/basic': './assets/images/ft_ic_audio.svg',\n        'audio/mp4': './assets/images/ft_ic_audio.svg',\n        'audio/vnd.adobe.soundbooth': './assets/images/ft_ic_audio.svg',\n        'audio/vorbis': './assets/images/ft_ic_audio.svg',\n        'audio/x-aiff': './assets/images/ft_ic_audio.svg',\n        'audio/x-flac': './assets/images/ft_ic_audio.svg',\n        'audio/x-ms-wma': './assets/images/ft_ic_audio.svg',\n        'audio/x-wav': './assets/images/ft_ic_audio.svg',\n        'x-world/x-vrml': './assets/images/ft_ic_video.svg',\n        'text/plain': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text-template': './assets/images/ft_ic_document.svg',\n        'application/x-javascript': './assets/images/ft_ic_document.svg',\n        'application/json': './assets/images/ft_ic_document.svg',\n        'text/csv': './assets/images/ft_ic_document.svg',\n        'text/xml': './assets/images/ft_ic_document.svg',\n        'text/html': './assets/images/ft_ic_website.svg',\n        'application/x-compressed': './assets/images/ft_ic_archive.svg',\n        'application/x-zip-compressed': './assets/images/ft_ic_archive.svg',\n        'application/zip': './assets/images/ft_ic_archive.svg',\n        'application/x-tar': './assets/images/ft_ic_archive.svg',\n        'application/vnd.apple.keynote': './assets/images/ft_ic_presentation.svg',\n        'application/vnd.apple.pages': './assets/images/ft_ic_document.svg',\n        'application/vnd.apple.numbers': './assets/images/ft_ic_spreadsheet.svg',\n        'application/vnd.visio': './assets/images/ft_ic_document.svg',\n        'application/wordperfect': './assets/images/ft_ic_document.svg',\n        'application/x-cpio': './assets/images/ft_ic_document.svg',\n        'folder': './assets/images/ft_ic_folder.svg',\n        'smartFolder': './assets/images/ft_ic_smart_folder.svg',\n        'disable/folder': './assets/images/ft_ic_folder_disable.svg',\n        'selected': './assets/images/ft_ic_selected.svg'\n    };\n\n    constructor(public contentService: ContentService, matIconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n        Object.keys(this.mimeTypeIcons).forEach(key => {\n            matIconRegistry.addSvgIcon(key, sanitizer.bypassSecurityTrustResourceUrl(this.mimeTypeIcons[key]));\n        });\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns URL string\n     */\n    public getDocumentThumbnailUrl(node: any): string {\n        let thumbnail = this.contentService.getDocumentThumbnailUrl(node);\n        return thumbnail || this.DEFAULT_ICON;\n    }\n\n    /**\n     * Gets a thumbnail URL for a MIME type.\n     * @param mimeType MIME type for the thumbnail\n     * @returns URL string\n     */\n    public getMimeTypeIcon(mimeType: string): string {\n        let icon = this.mimeTypeIcons[mimeType];\n        return (icon || this.DEFAULT_ICON);\n    }\n\n    /**\n     * Gets a \"miscellaneous\" thumbnail URL for types with no other icon defined.\n     * @returns URL string\n     */\n    public getDefaultMimeTypeIcon(): string {\n        return this.DEFAULT_ICON;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@Pipe({\n    name: 'adfMimeTypeIcon'\n})\nexport class MimeTypeIconPipe implements PipeTransform {\n\n    constructor(private thumbnailService: ThumbnailService) { }\n\n    transform(text: string): string {\n        return this.thumbnailService.getMimeTypeIcon(text);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\n\n@Pipe({\n    name: 'adfNodeNameTooltip'\n})\nexport class NodeNameTooltipPipe implements PipeTransform {\n\n    transform(node: MinimalNodeEntity): string {\n        if (node) {\n            return this.getNodeTooltip(node);\n        }\n        return null;\n    }\n\n    private containsLine(lines: string[], line: string): boolean {\n        return lines.some((item: string) => {\n            return item.toLowerCase() === line.toLowerCase();\n        });\n    }\n\n    private removeDuplicateLines(lines: string[]): string[] {\n        const reducer = (acc: string[], line: string): string[] => {\n            if (!this.containsLine(acc, line)) { acc.push(line); }\n            return acc;\n        };\n\n        return lines.reduce(reducer, []);\n    }\n\n    private getNodeTooltip(node: MinimalNodeEntity): string {\n        if (!node || !node.entry) {\n            return null;\n        }\n\n        const { entry: { properties, name } } = node;\n        const lines = [ name ];\n\n        if (properties) {\n            const {\n                'cm:title': title,\n                'cm:description': description\n            } = properties;\n\n            if (title && description) {\n                lines[0] = title;\n                lines[1] = description;\n            }\n\n            if (title) {\n                lines[1] = title;\n            }\n\n            if (description) {\n                lines[1] = description;\n            }\n        }\n\n        return this.removeDuplicateLines(lines).join(`\\n`);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface HightlightTransformResult {\n    text: string;\n    changed: boolean;\n}\n\nexport class HighlightTransformService {\n\n    /**\n     * Searches for `search` string(s) within `text` and highlights all occurrences.\n     * @param text Text to search within\n     * @param search Text pattern to search for\n     * @param wrapperClass CSS class used to provide highlighting style\n     * @returns New text along with boolean value to indicate whether anything was highlighted\n     */\n    public highlight(text: string, search: string, wrapperClass: string = 'highlight'): HightlightTransformResult {\n        let isMatching = false,\n            result = text;\n\n        if (search && text) {\n            let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n            pattern = pattern.split(' ').filter((t) => {\n                return t.length > 0;\n            }).join('|');\n\n            const regex = new RegExp(pattern, 'gi');\n            result = text.replace(regex, (match) => {\n                isMatching = true;\n                return `<span class=\"${wrapperClass}\">${match}</span>`;\n            });\n            return { text: result, changed: isMatching };\n        } else {\n            return { text: result, changed: isMatching };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HighlightTransformService, HightlightTransformResult } from '../services/highlight-transform.service';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    constructor(private highlightTransformService: HighlightTransformService) { }\n\n    transform(text: string, search: string): string {\n        const result: HightlightTransformResult = this.highlightTransformService.highlight(text, search);\n        return result.text;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'adfTimeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform {\n\n    defaultLocale = 'en-US';\n\n    transform(value: Date, locale?: string) {\n        if (value !== null && value !== undefined ) {\n            const actualLocale = locale ? locale : this.defaultLocale;\n            const then = moment(value);\n            const diff = moment().locale(actualLocale).diff(then, 'days');\n            return diff > 7 ? then.locale(actualLocale).format('DD/MM/YYYY HH:mm') : then.locale(actualLocale).fromNow();\n        }\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { EcmUserModel } from '../userinfo/models/ecm-user.model';\n\n@Pipe({\n    name: 'usernameInitials'\n})\nexport class InitialUsernamePipe implements PipeTransform {\n\n    constructor(private sanitized: DomSanitizer) {\n    }\n\n    transform(user: UserProcessModel | EcmUserModel, className: string = '', delimiter: string = ''): SafeHtml {\n        let result: SafeHtml = '';\n        if (user) {\n            let initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);\n            result = this.sanitized.bypassSecurityTrustHtml(`<div id=\"user-initials-image\" class=\"${className}\">${initialResult}</div>`);\n        }\n        return result;\n    }\n\n    getInitialUserName(firstName: string, lastName: string, delimiter: string) {\n        firstName = (firstName ? firstName[0] : '');\n        lastName = (lastName ? lastName[0] : '');\n        return firstName + delimiter + lastName;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nimport { MimeTypeIconPipe } from './mime-type-icon.pipe';\nimport { NodeNameTooltipPipe } from './node-name-tooltip.pipe';\nimport { HighlightPipe } from './text-highlight.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { InitialUsernamePipe } from './user-initial.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe\n    ],\n    providers: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe\n    ],\n    exports: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe\n    ]\n})\nexport class PipeModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { HighlightTransformService, HightlightTransformResult } from '../services/highlight-transform.service';\n\n@Directive({\n    selector: '[adf-highlight]'\n})\nexport class HighlightDirective {\n\n    /** Class selector for highlightable elements. */\n    @Input('adf-highlight-selector')\n    selector: string = '';\n\n    /** Text to highlight. */\n    @Input('adf-highlight')\n    search: string = '';\n\n    /** CSS class used to apply highlighting. */\n    @Input('adf-highlight-class')\n    classToApply: string = 'adf-highlight';\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private highlightTransformService: HighlightTransformService) { }\n\n    public highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {\n        if (search && selector) {\n            const elements = this.el.nativeElement.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const result: HightlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);\n                if (result.changed) {\n                    this.renderer.setProperty(element, 'innerHTML', result.text);\n                }\n            });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Directive({\n    selector: '[adf-logout]'\n})\nexport class LogoutDirective implements OnInit {\n\n    /** Uri to be redirect after the logout default value login */\n    @Input()\n    redirectUri: string = '/login';\n\n    /** Enable redirect after logout */\n    @Input()\n    enabelRedirect: boolean = true;\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private router: Router,\n                private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        if (this.elementRef.nativeElement) {\n            this.renderer.listen(this.elementRef.nativeElement, 'click', (evt) => {\n                evt.preventDefault();\n                this.logout();\n            });\n        }\n    }\n\n    logout() {\n        this.auth.logout().subscribe(\n            () => this.redirectToUri(),\n            () => this.redirectToUri()\n        );\n    }\n\n    redirectToUri() {\n        if (this.enabelRedirect) {\n            this.router.navigate([this.redirectUri]);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, DeletedNodeEntity, DeletedNodeMinimalEntry } from 'alfresco-js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { map, catchError } from 'rxjs/operators';\n\ninterface ProcessedNodeData {\n    entry: MinimalNodeEntryEntity | DeletedNodeMinimalEntry;\n    status: number;\n}\n\ninterface ProcessStatus {\n    success: ProcessedNodeData[];\n    failed: ProcessedNodeData[];\n\n    someFailed();\n\n    someSucceeded();\n\n    oneFailed();\n\n    oneSucceeded();\n\n    allSucceeded();\n\n    allFailed();\n}\n\n@Directive({\n    selector: '[adf-delete]'\n})\nexport class NodeDeleteDirective implements OnChanges {\n    /** Array of nodes to delete. */\n    @Input('adf-delete')\n    selection: MinimalNodeEntity[] | DeletedNodeEntity[];\n\n    /** If true then the nodes are deleted immediately rather than being put in the trash */\n    @Input()\n    permanent: boolean = false;\n\n    /** Emitted when the nodes have been deleted. */\n    @Output()\n    delete: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.process(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (!this.selection || (this.selection && this.selection.length === 0)) {\n            this.setDisableAttribute(true);\n        } else {\n            if (!this.elementRef.nativeElement.hasAttribute('adf-node-permission')) {\n                this.setDisableAttribute(false);\n            }\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    private process(selection: MinimalNodeEntity[] | DeletedNodeEntity[]) {\n        if (selection && selection.length) {\n\n            const batch = this.getDeleteNodesBatch(selection);\n\n            forkJoin(...batch)\n                .subscribe((data: ProcessedNodeData[]) => {\n                    const processedItems: ProcessStatus = this.processStatus(data);\n                    const message = this.getMessage(processedItems);\n\n                    this.delete.emit(message);\n                });\n        }\n    }\n\n    private getDeleteNodesBatch(selection: any): Observable<ProcessedNodeData>[] {\n        return selection.map((node) => this.deleteNode(node));\n    }\n\n    private deleteNode(node: MinimalNodeEntity | DeletedNodeEntity): Observable<ProcessedNodeData> {\n        const id = (<any> node.entry).nodeId || node.entry.id;\n\n        let promise;\n\n        if (node.entry.hasOwnProperty('archivedAt')) {\n            promise = this.alfrescoApiService.nodesApi.purgeDeletedNode(id);\n        } else {\n            promise = this.alfrescoApiService.nodesApi.deleteNode(id, { permanent: this.permanent });\n        }\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: node.entry,\n                status: 1\n            })),\n            catchError(() => of({\n                entry: node.entry,\n                status: 0\n            }))\n        );\n    }\n\n    private processStatus(data): ProcessStatus {\n        const deleteStatus = {\n            success: [],\n            failed: [],\n            get someFailed() {\n                return !!(this.failed.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.failed.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            }\n        };\n\n        return data.reduce(\n            (acc, next) => {\n                if (next.status === 1) {\n                    acc.success.push(next);\n                } else {\n                    acc.failed.push(next);\n                }\n\n                return acc;\n            },\n            deleteStatus\n        );\n    }\n\n    private getMessage(status): string {\n        if (status.allFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_PLURAL',\n                { number: status.failed.length }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PLURAL',\n                { number: status.success.length }\n            );\n        }\n\n        if (status.someFailed && status.someSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_PLURAL',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.someFailed && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_SINGULAR',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.oneFailed && !status.someSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_SINGULAR',\n                { name: status.failed[0].entry.name }\n            );\n        }\n\n        if (status.oneSucceeded && !status.someFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.SINGULAR',\n                { name: status.success[0].entry.name }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { FavoriteBody, MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable, from, forkJoin, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Directive({\n    selector: '[adf-node-favorite]',\n    exportAs: 'adfFavorite'\n})\nexport class NodeFavoriteDirective implements OnChanges {\n    favorites: any[] = [];\n\n    /** Array of nodes to toggle as favorites. */\n    @Input('adf-node-favorite')\n    selection: MinimalNodeEntity[] = [];\n\n    /** Emitted when the favorite setting is complete. */\n    @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the favorite setting has fail. */\n    @Output() error: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.toggleFavorite();\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnChanges(changes) {\n        if (!changes.selection.currentValue.length) {\n            this.favorites = [];\n\n            return;\n        }\n\n        this.markFavoritesNodes(changes.selection.currentValue);\n    }\n\n    toggleFavorite() {\n        if (!this.favorites.length) {\n            return;\n        }\n\n        const every = this.favorites.every((selected) => selected.entry.isFavorite);\n\n        if (every) {\n            const batch = this.favorites.map((selected) => {\n                // shared files have nodeId\n                const id = selected.entry.nodeId || selected.entry.id;\n\n                return from(this.alfrescoApiService.favoritesApi.removeFavoriteSite('-me-', id));\n            });\n\n            forkJoin(batch).subscribe(\n                () => {\n                    this.favorites.map(selected => selected.entry.isFavorite = false);\n                    this.toggle.emit();\n                },\n                error => this.error.emit(error)\n            );\n        }\n\n        if (!every) {\n            const notFavorite = this.favorites.filter((node) => !node.entry.isFavorite);\n            const body: FavoriteBody[] = notFavorite.map((node) => this.createFavoriteBody(node));\n\n            from(this.alfrescoApiService.favoritesApi.addFavorite('-me-', <any> body))\n                .subscribe(\n                    () => {\n                        notFavorite.map(selected => selected.entry.isFavorite = true);\n                        this.toggle.emit();\n                    },\n                    error => this.error.emit(error)\n                );\n        }\n    }\n\n    markFavoritesNodes(selection: MinimalNodeEntity[]) {\n        if (selection.length <= this.favorites.length) {\n            const newFavorites = this.reduce(this.favorites, selection);\n            this.favorites = newFavorites;\n        }\n\n        const result = this.diff(selection, this.favorites);\n        const batch = this.getProcessBatch(result);\n\n        forkJoin(batch).subscribe(data => {\n            this.favorites.push(...data);\n        });\n    }\n\n    hasFavorites(): boolean {\n        if (this.favorites && !this.favorites.length) {\n            return false;\n        }\n\n        return this.favorites.every((selected) => selected.entry.isFavorite);\n    }\n\n    private getProcessBatch(selection): any[] {\n        return selection.map((selected: MinimalNodeEntity) => this.getFavorite(selected));\n    }\n\n    private getFavorite(selected: MinimalNodeEntity): Observable<any> {\n        const node = selected.entry;\n\n        // ACS 6.x with 'isFavorite' include\n        if (node && node.hasOwnProperty('isFavorite')) {\n            return of(selected);\n        }\n\n        // ACS 5.x and 6.x without 'isFavorite' include\n        const { name, isFile, isFolder } = node;\n        // shared files have nodeId\n        const id = node.nodeId || node.id;\n\n        const promise = this.alfrescoApiService.favoritesApi.getFavorite('-me-', id);\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: {\n                    id,\n                    isFolder,\n                    isFile,\n                    name,\n                    isFavorite: true\n                }\n            })),\n            catchError(() => {\n                return of({\n                    entry: {\n                        id,\n                        isFolder,\n                        isFile,\n                        name,\n                        isFavorite: false\n                    }\n                });\n            })\n        );\n    }\n\n    private createFavoriteBody(node): FavoriteBody {\n        const type = this.getNodeType(node);\n        // shared files have nodeId\n        const id = node.entry.nodeId || node.entry.id;\n\n        return {\n            target: {\n                [type]: {\n                    guid: id\n                }\n            }\n        };\n    }\n\n    private getNodeType(node): string {\n        // shared could only be files\n        if (!node.entry.isFile && !node.entry.isFolder) {\n            return 'file';\n        }\n\n        return node.entry.isFile ? 'file' : 'folder';\n    }\n\n    private diff(list, patch): any[] {\n        const ids = patch.map(item => item.entry.id);\n\n        return list.filter(item => ids.includes(item.entry.id) ? null : item);\n    }\n\n    private reduce(patch, comparator): any[] {\n        const ids = comparator.map(item => item.entry.id);\n\n        return patch.filter(item => ids.includes(item.entry.id) ? item : null);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, InjectionToken } from '@angular/core';\n\nexport const EXTENDIBLE_COMPONENT = new InjectionToken<Component>('extendible.component');\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ChangeDetectorRef, Directive, ElementRef, Host, Inject, Input, OnChanges, Optional, Renderer2,  SimpleChanges } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { ContentService } from './../services/content.service';\nimport { EXTENDIBLE_COMPONENT } from './../interface/injection.tokens';\n\nexport interface NodePermissionSubject {\n    disabled: boolean;\n}\n\n@Directive({\n    selector: '[adf-node-permission]'\n})\nexport class NodePermissionDirective implements OnChanges {\n\n    /** Node permission to check (create, delete, update, updatePermissions,\n     * !create, !delete, !update, !updatePermissions).\n     */\n    @Input('adf-node-permission')\n    permission: string  = null;\n\n    /** Nodes to check permission for. */\n    @Input('adf-nodes')\n    nodes: MinimalNodeEntity[] = [];\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private contentService: ContentService,\n                private changeDetector: ChangeDetectorRef,\n\n                @Host()\n                @Optional()\n                @Inject(EXTENDIBLE_COMPONENT) private parentComponent?: NodePermissionSubject) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && !changes.nodes.firstChange) {\n            this.updateElement();\n        }\n    }\n\n    /**\n     * Updates disabled state for the decorated elememtn\n     *\n     * @memberof NodePermissionDirective\n     */\n    updateElement(): boolean {\n        let enable = this.hasPermission(this.nodes, this.permission);\n\n        if (enable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n\n        return enable;\n    }\n\n    private enable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = false;\n            this.changeDetector.detectChanges();\n        } else {\n            this.enableElement();\n        }\n    }\n\n    private disable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = true;\n            this.changeDetector.detectChanges();\n        } else {\n            this.disableElement();\n        }\n    }\n\n    /**\n     * Enables decorated element\n     *\n     * @memberof NodePermissionDirective\n     */\n    enableElement(): void {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n    }\n\n    /**\n     * Disables decorated element\n     *\n     * @memberof NodePermissionDirective\n     */\n    disableElement(): void {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n    }\n\n    /**\n     * Checks whether all nodes have a particular permission\n     *\n     * @param  nodes Node collection to check\n     * @param  permission Permission to check for each node\n     * @memberof NodePermissionDirective\n     */\n    hasPermission(nodes: MinimalNodeEntity[], permission: string): boolean {\n        if (nodes && nodes.length > 0) {\n            return nodes.every(node => this.contentService.hasPermission(node.entry, permission));\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { DeletedNodeEntry, DeletedNodesPaging, PathInfoEntity } from 'alfresco-js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\n\nexport class RestoreMessageModel {\n    message: string;\n    path: PathInfoEntity;\n    action: string;\n}\n\n@Directive({\n    selector: '[adf-restore]'\n})\nexport class NodeRestoreDirective {\n    private restoreProcessStatus;\n\n    /** Array of deleted nodes to restore. */\n    @Input('adf-restore')\n    selection: DeletedNodeEntry[];\n\n    /**\n     * Path to restored node.\n     * @deprecated 2.4.0\n     */\n    @Input()\n    location: string = '';\n\n    /** Emitted when restoration is complete. */\n    @Output()\n    restore: EventEmitter<RestoreMessageModel> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.recover(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService) {\n        this.restoreProcessStatus = this.processStatus();\n    }\n\n    private recover(selection: any) {\n        if (!selection.length) {\n            return;\n        }\n\n        const nodesWithPath = this.getNodesWithPath(selection);\n\n        if (selection.length && nodesWithPath.length) {\n\n            this.restoreNodesBatch(nodesWithPath).pipe(\n                tap(restoredNodes => {\n                    const status = this.processStatus(restoredNodes);\n\n                    this.restoreProcessStatus.fail.push(...status.fail);\n                    this.restoreProcessStatus.success.push(...status.success);\n                }),\n                mergeMap(() => this.getDeletedNodes())\n            )\n            .subscribe(deletedNodesList => {\n                const { entries: nodelist } = deletedNodesList.list;\n                const { fail: restoreErrorNodes } = this.restoreProcessStatus;\n                const selectedNodes = this.diff(restoreErrorNodes, selection, false);\n                const remainingNodes = this.diff(selectedNodes, nodelist);\n\n                if (!remainingNodes.length) {\n                    this.notification();\n                } else {\n                    this.recover(remainingNodes);\n                }\n            });\n        } else {\n            this.restoreProcessStatus.fail.push(...selection);\n            this.notification();\n            return;\n        }\n    }\n\n    private restoreNodesBatch(batch: DeletedNodeEntry[]): Observable<DeletedNodeEntry[]> {\n        return forkJoin(batch.map((node) => this.restoreNode(node)));\n    }\n\n    private getNodesWithPath(selection): DeletedNodeEntry[] {\n        return selection.filter((node) => node.entry.path);\n    }\n\n    private getDeletedNodes(): Observable<DeletedNodesPaging> {\n        const promise = this.alfrescoApiService.getInstance()\n            .core.nodesApi.getDeletedNodes({ include: ['path'] });\n\n        return from(promise);\n    }\n\n    private restoreNode(node): Observable<any> {\n        const { entry } = node;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.restoreNode(entry.id);\n\n        return from(promise).pipe(\n            map(() => ({\n                status: 1,\n                entry\n            })),\n            catchError((error) => {\n                const { statusCode } = (JSON.parse(error.message)).error;\n\n                return of({\n                    status: 0,\n                    statusCode,\n                    entry\n                });\n            })\n        );\n    }\n\n    private diff(selection, list, fromList = true): any {\n        const ids = selection.map(item => item.entry.id);\n\n        return list.filter(item => {\n            if (fromList) {\n                return ids.includes(item.entry.id) ? item : null;\n            } else {\n                return !ids.includes(item.entry.id) ? item : null;\n            }\n        });\n    }\n\n    private processStatus(data = []): any {\n        const status = {\n            fail: [],\n            success: [],\n            get someFailed() {\n                return !!(this.fail.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.fail.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            },\n            reset() {\n                this.fail = [];\n                this.success = [];\n            }\n        };\n\n        return data.reduce(\n            (acc, node) => {\n                if (node.status) {\n                    acc.success.push(node);\n                } else {\n                    acc.fail.push(node);\n                }\n\n                return acc;\n            },\n            status\n        );\n    }\n\n    private getRestoreMessage(): string {\n        const { restoreProcessStatus: status } = this;\n\n        if (status.someFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.PARTIAL_PLURAL',\n                {\n                    number: status.fail.length\n                }\n            );\n        }\n\n        if (status.oneFailed && status.fail[0].statusCode) {\n            if (status.fail[0].statusCode === 409) {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.NODE_EXISTS',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            } else {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.GENERIC',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            }\n        }\n\n        if (status.oneFailed && !status.fail[0].statusCode) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.LOCATION_MISSING',\n                {\n                    name: status.fail[0].entry.name\n                }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant('CORE.RESTORE_NODE.PLURAL');\n        }\n\n        if (status.allSucceeded && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.SINGULAR',\n                {\n                    name: status.success[0].entry.name\n                }\n            );\n        }\n    }\n\n    private notification(): void {\n        const status = Object.assign({}, this.restoreProcessStatus);\n\n        let message = this.getRestoreMessage();\n        this.reset();\n\n        const action = (status.oneSucceeded && !status.someFailed) ? this.translation.instant('CORE.RESTORE_NODE.VIEW') : '';\n\n        let path;\n        if (status.success && status.success.length > 0) {\n            path = status.success[0].entry.path;\n        }\n        this.restore.emit({\n            message: message,\n            action: action,\n            path: path\n        });\n    }\n\n    private reset(): void {\n        this.restoreProcessStatus.reset();\n        this.selection = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FileInfo, FileUtils } from '../utils/file-utils';\n\n@Directive({\n    selector: '[adf-upload]'\n})\nexport class UploadDirective implements OnInit, OnDestroy {\n\n    /** Enables/disables uploading. */\n    @Input('adf-upload')\n    enabled: boolean = true;\n\n    /** Data to upload. */\n    @Input('adf-upload-data')\n    data: any;\n\n    /** Upload mode. Can be \"drop\" (receives dropped files) or \"click\"\n     * (clicking opens a file dialog). Both modes can be active at once.\n     */\n    @Input()\n    mode: string[] = ['drop']; // click|drop\n\n    /** Toggles multiple file uploads. */\n    @Input()\n    multiple: boolean;\n\n    /** (Click mode only) MIME type filter for files to accept. */\n    @Input()\n    accept: string;\n\n    /** (Click mode only) Toggles uploading of directories. */\n    @Input()\n    directory: boolean;\n\n    isDragging: boolean = false;\n\n    private cssClassName: string = 'adf-upload__dragging';\n    private upload: HTMLInputElement;\n    private element: HTMLElement;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        if (this.isClickMode() && this.renderer) {\n            let inputUpload = this.renderer.createElement('input');\n            this.upload = this.el.nativeElement.parentElement.appendChild(inputUpload);\n\n            this.upload.type = 'file';\n            this.upload.style.display = 'none';\n            this.upload.addEventListener('change', e => this.onSelectFiles(e));\n\n            if (this.multiple) {\n                this.upload.setAttribute('multiple', '');\n            }\n\n            if (this.accept) {\n                this.upload.setAttribute('accept', this.accept);\n            }\n\n            if (this.directory) {\n                this.upload.setAttribute('webkitdirectory', '');\n            }\n        }\n\n        if (this.isDropMode()) {\n            this.ngZone.runOutsideAngular(() => {\n                this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n                this.element.addEventListener('dragover', this.onDragOver.bind(this));\n                this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n                this.element.addEventListener('drop', this.onDrop.bind(this));\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isClickMode() && this.upload) {\n            event.preventDefault();\n            this.upload.click();\n        }\n    }\n\n    onDragEnter(event: Event) {\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n    }\n\n    onDragOver(event: Event) {\n        event.preventDefault();\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n        return false;\n    }\n\n    onDragLeave(event) {\n        if (this.isDropMode()) {\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n        }\n    }\n\n    onDrop(event: Event) {\n        if (this.isDropMode()) {\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n\n            const dataTranfer = this.getDataTransfer(event);\n            if (dataTranfer) {\n                this.getFilesDropped(dataTranfer).then(files => {\n                    this.onUploadFiles(files);\n                });\n\n            }\n        }\n        return false;\n    }\n\n    onUploadFiles(files: FileInfo[]) {\n        if (this.enabled && files.length > 0) {\n            let e = new CustomEvent('upload-files', {\n                detail: {\n                    sender: this,\n                    data: this.data,\n                    files: files\n                },\n                bubbles: true\n            });\n\n            this.el.nativeElement.dispatchEvent(e);\n        }\n    }\n\n    protected hasMode(mode: string): boolean {\n        return this.enabled && mode && this.mode && this.mode.indexOf(mode) > -1;\n    }\n\n    protected isDropMode(): boolean {\n        return this.hasMode('drop');\n    }\n\n    protected isClickMode(): boolean {\n        return this.hasMode('click');\n    }\n\n    getDataTransfer(event: Event | any): DataTransfer {\n        if (event && event.dataTransfer) {\n            return event.dataTransfer;\n        }\n        if (event && event.originalEvent && event.originalEvent.dataTransfer) {\n            return event.originalEvent.dataTransfer;\n        }\n        return null;\n    }\n\n    /**\n     * Extract files from the DataTransfer object used to hold the data that is being dragged during a drag and drop operation.\n     * @param dataTransfer DataTransfer object\n     */\n    getFilesDropped(dataTransfer: DataTransfer): Promise<FileInfo[]> {\n        return new Promise(resolve => {\n            const iterations = [];\n\n            if (dataTransfer) {\n                const items = dataTransfer.items;\n                if (items) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                            let item = items[i].webkitGetAsEntry();\n                            if (item) {\n                                if (item.isFile) {\n                                    iterations.push(Promise.resolve(<FileInfo> {\n                                        entry: item,\n                                        file: items[i].getAsFile(),\n                                        relativeFolder: '/'\n                                    }));\n                                } else if (item.isDirectory) {\n                                    iterations.push(new Promise(resolveFolder => {\n                                        FileUtils.flattern(item).then(files => resolveFolder(files));\n                                    }));\n                                }\n                            }\n                        } else {\n                            iterations.push(Promise.resolve(<FileInfo> {\n                                entry: null,\n                                file: items[i].getAsFile(),\n                                relativeFolder: '/'\n                            }));\n                        }\n                    }\n                } else {\n                    // safari or FF\n                    let files = FileUtils\n                        .toFileArray(dataTransfer.files)\n                        .map(file => <FileInfo> {\n                            entry: null,\n                            file: file,\n                            relativeFolder: '/'\n                        });\n\n                    iterations.push(Promise.resolve(files));\n                }\n            }\n\n            Promise.all(iterations).then(result => {\n                resolve(result.reduce((a, b) => a.concat(b), []));\n            });\n        });\n    }\n\n    /**\n     * Invoked when user selects files or folders by means of File Dialog\n     * @param e DOM event\n     */\n    onSelectFiles(e: any): void {\n        if (this.isClickMode()) {\n            const input = (<HTMLInputElement> e.currentTarget);\n            const files = FileUtils.toFileArray(input.files);\n            this.onUploadFiles(files.map(file => <FileInfo> {\n                entry: null,\n                file: file,\n                relativeFolder: '/'\n            }));\n            e.target.value = '';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HighlightDirective } from './highlight.directive';\nimport { LogoutDirective } from './logout.directive';\nimport { NodeDeleteDirective } from './node-delete.directive';\nimport { NodeFavoriteDirective } from './node-favorite.directive';\nimport { NodePermissionDirective } from './node-permission.directive';\nimport { NodeRestoreDirective } from './node-restore.directive';\nimport { UploadDirective } from './upload.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        NodePermissionDirective,\n        NodeRestoreDirective,\n        UploadDirective\n    ],\n    exports: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        NodePermissionDirective,\n        NodeRestoreDirective,\n        UploadDirective\n    ]\n})\nexport class DirectiveModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\n@Component({\n    selector: 'adf-datatable-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span [title]=\"tooltip\" class=\"adf-datatable-cell-value\">{{value}}</span>\n        </ng-container>`,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-cell' }\n})\nexport class DataTableCellComponent implements OnInit {\n\n    @Input()\n    data: DataTableAdapter;\n\n    @Input()\n    column: DataColumn;\n\n    @Input()\n    row: DataRow;\n\n    @Input()\n    value: any;\n\n    @Input()\n    tooltip: string;\n\n    ngOnInit() {\n        if (!this.value && this.column && this.column.key && this.row && this.data) {\n            this.value = this.data.getValue(this.row, this.column);\n\n            if (!this.tooltip) {\n                this.tooltip = this.value;\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'data-column',\n    template: ''\n})\nexport class DataColumnComponent implements OnInit {\n\n    /** Data source key. Can be either a column/property key like `title`\n     *  or a property path like `createdBy.name`.\n     */\n    @Input()\n    key: string;\n\n    /** Value type for the column. Possible settings are 'text', 'image',\n     * 'date', 'fileSize' and 'location'.\n     */\n    @Input()\n    type: string = 'text';\n\n    /** Value format (if supported by the parent component), for example format of the date. */\n    @Input()\n    format: string;\n\n    /** Toggles ability to sort by this column, for example by clicking the column header. */\n    @Input()\n    sortable: boolean = true;\n\n    /** Display title of the column, typically used for column headers. You can use the\n     * i18n resource key to get it translated automatically.\n     */\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /** Custom tooltip formatter function. */\n    @Input()\n    formatTooltip: Function;\n\n    /** Title to be used for screen readers. */\n    @Input('sr-title')\n    srTitle: string;\n\n    /** Additional CSS class to be applied to column (header and cells). */\n    @Input('class')\n    cssClass: string;\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChildren, QueryList } from '@angular/core';\nimport { DataColumnComponent } from './data-column.component';\n\n@Component({\n    selector: 'data-columns',\n    template: ''\n})\nexport class DataColumnListComponent {\n\n    @ContentChildren(DataColumnComponent) columns: QueryList<DataColumnComponent>;\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Base cancellable event implementation */\nexport class BaseEvent<T> {\n\n    private isDefaultPrevented: boolean = false;\n\n    value: T;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from './base.event';\n\n/** Base container for any event which takes place in the DOM  */\nexport class BaseUIEvent<T> extends BaseEvent<T> {\n\n    /** Original DOM event */\n    event: Event;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AssocChildBody, AssocTargetBody } from 'alfresco-js-api';\n\nexport interface FileUploadProgress {\n    loaded: number;\n    total: number;\n    percent: number;\n}\n\nexport interface FileUploadOptions {\n    comment?: string;\n    newVersion?: boolean;\n    majorVersion?: boolean;\n    parentId?: string;\n    path?: string;\n    nodeType?: string;\n    properties?: any;\n    association?: any;\n    secondaryChildren?: AssocChildBody[];\n    targets?: AssocTargetBody[];\n}\n\nexport enum FileUploadStatus {\n    Pending = 0,\n    Complete = 1,\n    Starting = 2,\n    Progress = 3,\n    Cancelled = 4,\n    Aborted = 5,\n    Error = 6,\n    Deleted = 7\n}\n\nexport class FileModel {\n    readonly name: string;\n    readonly size: number;\n    readonly file: File;\n\n    id: string;\n    status: FileUploadStatus = FileUploadStatus.Pending;\n    progress: FileUploadProgress;\n    options: FileUploadOptions;\n    data: any;\n\n    constructor(file: File, options?: FileUploadOptions, id?: string) {\n        this.file = file;\n        this.id = id;\n        this.name = file.name;\n        this.size = file.size;\n        this.data = null;\n\n        this.progress = {\n            loaded: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.options = Object.assign({}, {\n            newVersion: false\n        }, options);\n    }\n\n    get extension(): string {\n        return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '../models/file.model';\n\nexport class FileUploadEvent {\n\n    constructor(\n        public readonly file: FileModel,\n        public readonly status: FileUploadStatus = FileUploadStatus.Pending,\n        public readonly error: any = null) {\n    }\n\n}\n\nexport class FileUploadCompleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0, public data?: any, public totalAborted: number = 0) {\n        super(file, FileUploadStatus.Complete);\n    }\n\n}\n\nexport class FileUploadDeleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0) {\n        super(file, FileUploadStatus.Deleted);\n    }\n\n}\n\nexport class FileUploadErrorEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public error: any, public totalError: number = 0) {\n        super(file, FileUploadStatus.Error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseUIEvent } from '../../events';\nimport { DataRow } from './data-row.model';\n\nexport class DataRowEvent extends BaseUIEvent<DataRow> {\n\n    sender: any;\n\n    constructor(value: DataRow, domEvent: Event, sender?: any) {\n        super();\n        this.value = value;\n        this.event = domEvent;\n        this.sender = sender;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataCellEventModel {\n\n    readonly row: DataRow;\n    readonly col: DataColumn;\n    actions: any[];\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        this.row = row;\n        this.col = col;\n        this.actions = actions || [];\n    }\n\n}\n\nexport class DataCellEvent extends BaseEvent<DataCellEventModel> {\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        super();\n        this.value = new DataCellEventModel(row, col, actions);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataRowActionModel {\n\n    row: DataRow;\n    action: any;\n\n    constructor(row: DataRow, action: any) {\n        this.row = row;\n        this.action = action;\n    }\n}\n\nexport class DataRowActionEvent extends BaseEvent<DataRowActionModel> {\n\n    // backwards compatibility with 1.2.0 and earlier\n    get args(): DataRowActionModel {\n        return this.value;\n    }\n\n    constructor(row: DataRow, action: any) {\n        super();\n        this.value = new DataRowActionModel(row, action);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, DoCheck, ElementRef, EventEmitter, Input,\n    IterableDiffers, OnChanges, Output, SimpleChange, SimpleChanges, TemplateRef, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { Subscription, Observable, Observer } from 'rxjs';\nimport { DataColumnListComponent } from '../../../data-column/data-column-list.component';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRowEvent } from '../../data/data-row-event.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataSorting } from '../../data/data-sorting.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\nimport { ObjectDataRow } from '../../data/object-datarow.model';\nimport { ObjectDataTableAdapter } from '../../data/object-datatable-adapter';\nimport { DataCellEvent } from './data-cell.event';\nimport { DataRowActionEvent } from './data-row-action.event';\nimport { share, buffer, map, filter, debounceTime } from 'rxjs/operators';\n\nexport enum DisplayMode {\n    List = 'list',\n    Gallery = 'gallery'\n}\n\n@Component({\n    selector: 'adf-datatable',\n    styleUrls: ['./datatable.component.scss'],\n    templateUrl: './datatable.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class DataTableComponent implements AfterContentInit, OnChanges, DoCheck, OnDestroy {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Data source for the table */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Selects the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** The rows that the datatable will show. */\n    @Input()\n    rows: any[] = [];\n\n    /** Define the sort order of the datatable. Possible values are :\n     * [`created`, `desc`], [`created`, `asc`], [`due`, `desc`], [`due`, `asc`]\n     */\n    @Input()\n    sorting: any[] = [];\n\n    /** The columns that the datatable will show. */\n    @Input()\n    columns: any[] = [];\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row. */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles the data actions column. */\n    @Input()\n    actions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Fallback image for rows where the thumbnail is missing. */\n    @Input()\n    fallbackThumbnail: string;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    contextMenu: boolean = false;\n\n    /** Toggles file drop support for rows (see\n     * [Upload directive](upload.directive.md) for further details).\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** The inline style to apply to every row. See\n     * [NgStyle](https://angular.io/docs/ts/latest/api/common/index/NgStyle-directive.html)\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row. */\n    @Input()\n    rowStyleClass: string = '';\n\n    /** Toggles the header. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Emitted when the user clicks a row. */\n    @Output()\n    rowClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted when the user double-clicks a row. */\n    @Output()\n    rowDblClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Flag that indicates if the datatable is in loading state and needs to show the\n     * loading template (see the docs to learn how to configure a loading template).\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Flag that indicates if the datatable should show the \"no permission\" template. */\n    @Input()\n    noPermission: boolean = false;\n\n    /**\n     * Should the items for the row actions menu be cached for reuse after they are loaded\n     * the first time?\n     */\n    @Input()\n    rowMenuCacheEnabled = true;\n\n    noContentTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    loadingTemplate: TemplateRef<any>;\n\n    isSelectAllChecked: boolean = false;\n    selection = new Array<DataRow>();\n\n    /** This array of fake rows fix the flex layout for the gallery view */\n    fakeRows = [];\n\n    private clickObserver: Observer<DataRowEvent>;\n    private click$: Observable<DataRowEvent>;\n\n    private differ: any;\n    private rowMenuCache: object = {};\n\n    private subscriptions: Subscription[] = [];\n    private singleClickStreamSub: Subscription;\n    private multiClickStreamSub: Subscription;\n    private dataRowsChanged: Subscription;\n\n    constructor(private elementRef: ElementRef,\n                differs: IterableDiffers) {\n        if (differs) {\n            this.differ = differs.find([]).create(null);\n        }\n        this.click$ = new Observable<DataRowEvent>(observer => this.clickObserver = observer)\n            .pipe(share());\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.datatableLayoutFix();\n        this.setTableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.initAndSubscribeClickStream();\n        if (this.isPropertyChanged(changes['data'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.data = changes['data'].currentValue;\n                this.resetSelection();\n            }\n            return;\n        }\n\n        if (this.isPropertyChanged(changes['rows'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.setTableRows(changes['rows'].currentValue);\n            }\n            return;\n        }\n\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\n            this.resetSelection();\n            this.emitRowSelectionEvent('row-unselect', null);\n        }\n\n        if (this.isPropertyChanged(changes['sorting'])) {\n            this.setTableSorting(changes['sorting'].currentValue);\n        }\n\n        if (this.isPropertyChanged(changes['display'])) {\n            this.datatableLayoutFix();\n        }\n    }\n\n    ngDoCheck() {\n        let changes = this.differ.diff(this.rows);\n        if (changes) {\n            this.setTableRows(this.rows);\n        }\n    }\n\n    isPropertyChanged(property: SimpleChange): boolean {\n        return property && property.currentValue ? true : false;\n    }\n\n    convertToRowsData(rows: any []): ObjectDataRow[] {\n        return rows.map(row => new ObjectDataRow(row, row.isSelected));\n    }\n\n    convertToDataSorting(sorting: any[]): DataSorting {\n        if (sorting && sorting.length > 0) {\n            return new DataSorting(sorting[0], sorting[1]);\n        }\n    }\n\n    private initAndSubscribeClickStream() {\n        this.unsubscribeClickStream();\n        let singleClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map(list => list),\n                filter(x => x.length === 1)\n            );\n\n        this.singleClickStreamSub = singleClickStream.subscribe((obj: DataRowEvent[]) => {\n            let event: DataRowEvent = obj[0];\n            this.handleRowSelection(event.value, <MouseEvent | KeyboardEvent> event.event);\n            this.rowClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-click', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n\n        let multiClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map(list => list),\n                filter(x => x.length >= 2)\n            );\n\n        this.multiClickStreamSub = multiClickStream.subscribe((obj: DataRowEvent[]) => {\n            let event: DataRowEvent = obj[0];\n            this.rowDblClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-dblclick', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n    }\n\n    private unsubscribeClickStream() {\n        if (this.singleClickStreamSub) {\n            this.singleClickStreamSub.unsubscribe();\n            this.singleClickStreamSub = null;\n        }\n        if (this.multiClickStreamSub) {\n            this.multiClickStreamSub.unsubscribe();\n            this.multiClickStreamSub = null;\n        }\n    }\n\n    private initTable() {\n        this.data = new ObjectDataTableAdapter(this.rows, this.columns);\n        this.setTableSorting(this.sorting);\n        this.resetSelection();\n        this.rowMenuCache = {};\n    }\n\n    isTableEmpty() {\n        return this.data === undefined || this.data === null;\n    }\n\n    private setTableRows(rows: any[]) {\n        if (this.data) {\n            this.resetSelection();\n            this.data.setRows(this.convertToRowsData(rows));\n        }\n    }\n\n    private setTableSchema() {\n        let schema = [];\n        if (!this.columns || this.columns.length === 0) {\n            schema = this.getSchemaFromHtml();\n        } else {\n            schema = this.columns.concat(this.getSchemaFromHtml());\n        }\n\n        this.columns = schema;\n\n        if (this.data && this.columns && this.columns.length > 0) {\n            this.data.setColumns(this.columns);\n        }\n    }\n\n    private setTableSorting(sorting) {\n        if (this.data) {\n            this.data.setSorting(this.convertToDataSorting(sorting));\n        }\n    }\n\n    public getSchemaFromHtml(): any {\n        let schema = [];\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map(c => <DataColumn> c);\n        }\n        return schema;\n    }\n\n    onRowClick(row: DataRow, e: MouseEvent) {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (row) {\n            const dataRowEvent = new DataRowEvent(row, e, this);\n            this.clickObserver.next(dataRowEvent);\n        }\n    }\n\n    onEnterKeyPressed(row: DataRow, e: KeyboardEvent) {\n        if (row) {\n            this.handleRowSelection(row, e);\n        }\n    }\n\n    private handleRowSelection(row: DataRow, e: KeyboardEvent | MouseEvent) {\n        if (this.data) {\n            if (this.isSingleSelectionMode()) {\n                this.resetSelection();\n                this.selectRow(row, true);\n                this.emitRowSelectionEvent('row-select', row);\n            }\n\n            if (this.isMultiSelectionMode()) {\n                const modifier = e && (e.metaKey || e.ctrlKey);\n                let newValue: boolean;\n                if (this.selection.length === 1) {\n                    newValue = !row.isSelected;\n                } else {\n                    newValue = modifier ? !row.isSelected : true;\n                }\n                const domEventName = newValue ? 'row-select' : 'row-unselect';\n\n                if (!modifier) {\n                    this.resetSelection();\n                }\n                this.selectRow(row, newValue);\n                this.emitRowSelectionEvent(domEventName, row);\n            }\n        }\n    }\n\n    resetSelection(): void {\n        if (this.data) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                rows.forEach(r => r.isSelected = false);\n            }\n            this.selection = [];\n        }\n        this.isSelectAllChecked = false;\n    }\n\n    onRowDblClick(row: DataRow, e?: Event) {\n        if (e) {\n            e.preventDefault();\n        }\n        let dataRowEvent = new DataRowEvent(row, e, this);\n        this.clickObserver.next(dataRowEvent);\n    }\n\n    onRowKeyUp(row: DataRow, e: KeyboardEvent) {\n        const event = new CustomEvent('row-keyup', {\n            detail: {\n                row: row,\n                keyboardEvent: e,\n                sender: this\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(event);\n\n        if (event.defaultPrevented) {\n            e.preventDefault();\n        } else {\n            if (e.key === 'Enter') {\n                this.onKeyboardNavigate(row, e);\n            }\n        }\n    }\n\n    private onKeyboardNavigate(row: DataRow, e: KeyboardEvent) {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const event = new DataRowEvent(row, e, this);\n\n        this.rowDblClick.emit(event);\n        this.elementRef.nativeElement.dispatchEvent(\n            new CustomEvent('row-dblclick', {\n                detail: event,\n                bubbles: true\n            })\n        );\n    }\n\n    onColumnHeaderClick(column: DataColumn) {\n        if (column && column.sortable) {\n            let current = this.data.getSorting();\n            let newDirection = 'asc';\n            if (current && column.key === current.key) {\n                newDirection = current.direction === 'asc' ? 'desc' : 'asc';\n            }\n            this.data.setSorting(new DataSorting(column.key, newDirection));\n            this.emitSortingChangedEvent(column.key, newDirection);\n        }\n    }\n\n    onSelectAllClick(e: MatCheckboxChange) {\n        this.isSelectAllChecked = e.checked;\n\n        if (this.multiselect) {\n            let rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                for (let i = 0; i < rows.length; i++) {\n                    this.selectRow(rows[i], e.checked);\n                }\n            }\n\n            const domEventName = e.checked ? 'row-select' : 'row-unselect';\n            const row = this.selection.length > 0 ? this.selection[0] : null;\n\n            this.emitRowSelectionEvent(domEventName, row);\n        }\n    }\n\n    onCheckboxChange(row: DataRow, event: MatCheckboxChange) {\n        const newValue = event.checked;\n\n        this.selectRow(row, newValue);\n\n        const domEventName = newValue ? 'row-select' : 'row-unselect';\n        this.emitRowSelectionEvent(domEventName, row);\n    }\n\n    onImageLoadingError(event: Event, row: DataRow) {\n        if (event) {\n            let element = <any> event.target;\n\n            if (this.fallbackThumbnail) {\n                element.src = this.fallbackThumbnail;\n            } else {\n                element.src = row.imageErrorResolver(event);\n            }\n        }\n    }\n\n    isIconValue(row: DataRow, col: DataColumn): boolean {\n        if (row && col) {\n            let value = row.getValue(col.key);\n            return value && value.startsWith('material-icons://');\n        }\n        return false;\n    }\n\n    asIconValue(row: DataRow, col: DataColumn): string {\n        if (this.isIconValue(row, col)) {\n            let value = row.getValue(col.key) || '';\n            return value.replace('material-icons://', '');\n        }\n        return null;\n    }\n\n    iconAltTextKey(value: string): string {\n        return value ? 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '') : '';\n    }\n\n    isColumnSorted(col: DataColumn, direction: string): boolean {\n        if (col && direction) {\n            let sorting = this.data.getSorting();\n            return sorting && sorting.key === col.key && sorting.direction === direction;\n        }\n        return false;\n    }\n\n    getContextMenuActions(row: DataRow, col: DataColumn): any[] {\n        let event = new DataCellEvent(row, col, []);\n        this.showRowContextMenu.emit(event);\n        return event.value.actions;\n    }\n\n    getRowActions(row: DataRow, col?: DataColumn): any[] {\n        const id = row.getValue('id');\n\n        if (!this.rowMenuCache[id]) {\n            let event = new DataCellEvent(row, col, []);\n            this.showRowActionsMenu.emit(event);\n            if (!this.rowMenuCacheEnabled) {\n                return event.value.actions;\n            }\n            this.rowMenuCache[id] = event.value.actions;\n        }\n\n        return this.rowMenuCache[id];\n    }\n\n    onExecuteRowAction(row: DataRow, action: any) {\n        if (action.disabled || action.disabled) {\n            event.stopPropagation();\n        } else {\n            this.executeRowAction.emit(new DataRowActionEvent(row, action));\n        }\n    }\n\n    rowAllowsDrop(row: DataRow): boolean {\n        return row.isDropTarget === true;\n    }\n\n    hasSelectionMode(): boolean {\n        return this.isSingleSelectionMode() || this.isMultiSelectionMode();\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';\n    }\n\n    isMultiSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';\n    }\n\n    getRowStyle(row: DataRow): string {\n        row.cssClass = row.cssClass ? row.cssClass : '';\n        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';\n        return `${row.cssClass} ${this.rowStyleClass}`;\n    }\n\n    getFilename(row: DataRow): string {\n        return row.getValue('name');\n    }\n\n    getSortingKey(): string {\n        if (this.data.getSorting()) {\n            return this.data.getSorting().key;\n        }\n    }\n\n    selectRow(row: DataRow, value: boolean) {\n        if (row) {\n            row.isSelected = value;\n            const idx = this.selection.indexOf(row);\n            if (value) {\n                if (idx < 0) {\n                    this.selection.push(row);\n                }\n            } else {\n                if (idx > -1) {\n                    this.selection.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    getCellTooltip(row: DataRow, col: DataColumn): string {\n        if (row && col && col.formatTooltip) {\n            const result: string = col.formatTooltip(row, col);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    getSortableColumns() {\n        return this.data.getColumns().filter(column => {\n            return column.sortable === true;\n        });\n    }\n\n    isEmpty() {\n        return this.data.getRows().length === 0;\n    }\n\n    isHeaderVisible() {\n        return this.showHeader && !this.loading && !this.isEmpty();\n    }\n\n    private emitRowSelectionEvent(name: string, row: DataRow) {\n        const domEvent = new CustomEvent(name, {\n            detail: {\n                row: row,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    private emitSortingChangedEvent(key: string, direction: string) {\n        const domEvent = new CustomEvent('sorting-changed', {\n            detail: {\n                key,\n                direction\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    ngOnDestroy() {\n        this.unsubscribeClickStream();\n\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.dataRowsChanged) {\n            this.dataRowsChanged.unsubscribe();\n            this.dataRowsChanged = null;\n        }\n    }\n\n    datatableLayoutFix() {\n        const maxGalleryRows = 25;\n\n        if (this.display === 'gallery') {\n            for (let i = 0; i < maxGalleryRows; i++) {\n               this.fakeRows.push('');\n            }\n        } else {\n            this.fakeRows = [];\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport {\n    UserPreferencesService,\n    UserPreferenceValues\n} from '../../../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-date-cell',\n\n    template: `\n        <ng-container>\n            <span title=\"{{ tooltip | date:'medium' }}\" *ngIf=\"format === 'timeAgo' else standard_date\">\n                {{ value | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span title=\"{{ tooltip | date:format }}\">\n                {{ value | date:format }}\n            </span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-date-cell' }\n})\nexport class DateCellComponent extends DataTableCellComponent {\n    currentLocale;\n\n    get format(): string {\n        if (this.column) {\n            return this.column.format || 'medium';\n        }\n        return 'medium';\n    }\n\n    constructor(userPreferenceService: UserPreferencesService) {\n        super();\n\n        if (userPreferenceService) {\n            userPreferenceService\n                .select(UserPreferenceValues.Locale)\n                .subscribe(locale => {\n                    this.currentLocale = locale;\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-list',\n    styleUrls: ['./empty-list.component.scss'],\n    templateUrl: './empty-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptyListComponent {}\n\n@Directive({ selector: '[adf-empty-list-header]' }) export class EmptyListHeaderDirective {}\n@Directive({ selector: '[adf-empty-list-body]' }) export class EmptyListBodyDirective {}\n@Directive({ selector: '[adf-empty-list-footer]' }) export class EmptyListFooterDirective {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-filesize-cell',\n    template: `\n        <ng-container>\n            <span [title]=\"tooltip\">{{ value | adfFileSize }}</span>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-filesize-cell' }\n})\nexport class FileSizeCellComponent extends DataTableCellComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { PathInfoEntity } from 'alfresco-js-api';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-location-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <a href=\"\" [title]=\"tooltip\" [routerLink]=\"link\">\n                {{ displayText }}\n            </a>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-location-cell' }\n})\nexport class LocationCellComponent extends DataTableCellComponent implements OnInit {\n\n    @Input()\n    link: any[];\n\n    @Input()\n    displayText: string = '';\n\n    /** @override */\n    ngOnInit() {\n        if (!this.value && this.column && this.column.key && this.row && this.data) {\n            const path: PathInfoEntity = this.data.getValue(this.row, this.column);\n\n            if (path && path.name && path.elements) {\n                this.value = path;\n                this.displayText = path.name.split('/').pop();\n\n                if (!this.tooltip) {\n                    this.tooltip = path.name;\n                }\n\n                const parent = path.elements[path.elements.length - 1];\n                this.link = [ this.column.format, parent.id ];\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n@Directive({\n    selector: 'loading-content-template'\n})\nexport class LoadingContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.loadingTemplate = this.template;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n@Directive({\n    selector: 'no-content-template'\n})\nexport class NoContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noContentTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n@Directive({\n    selector: 'no-permission-template'\n})\nexport class NoPermissionTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noPermissionTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n    selector: 'adf-empty-custom-content'\n})\n\nexport class EmptyCustomContentDirective {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { ContextMenuModule } from '../context-menu/context-menu.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { DirectiveModule } from '../directives/directive.module';\nimport { DataTableCellComponent } from './components/datatable/datatable-cell.component';\nimport { DataTableComponent } from './components/datatable/datatable.component';\nimport { DateCellComponent } from './components/datatable/date-cell.component';\nimport { EmptyListBodyDirective,\n    EmptyListComponent,\n    EmptyListFooterDirective,\n    EmptyListHeaderDirective } from './components/datatable/empty-list.component';\nimport { FileSizeCellComponent } from './components/datatable/filesize-cell.component';\nimport { LocationCellComponent } from './components/datatable/location-cell.component';\nimport { LoadingContentTemplateDirective } from './directives/loading-template.directive';\nimport { NoContentTemplateDirective } from './directives/no-content-template.directive';\nimport { NoPermissionTemplateDirective } from './directives/no-permission-template.directive';\nimport { EmptyCustomContentDirective } from './directives/empty-custom-content.directive';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild(),\n        ContextMenuModule,\n        PipeModule,\n        DirectiveModule\n    ],\n    declarations: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        EmptyCustomContentDirective\n    ],\n    exports: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        EmptyCustomContentDirective\n    ]\n})\nexport class DataTableModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DataColumnListComponent } from './data-column-list.component';\nimport { DataColumnComponent } from './data-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ],\n    exports: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ]\n})\nexport class DataColumnModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { AboutComponent } from './about.component';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        DataTableModule,\n        DataColumnModule\n    ],\n    declarations: [\n        AboutComponent\n    ],\n    exports: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ViewUtilService {\n    static TARGET = '_new';\n\n    /**\n     * Content groups based on categorization of files that can be viewed in the web browser. This\n     * implementation or grouping is tied to the definition the ng component: ViewerComponent\n     */\n    // tslint:disable-next-line:variable-name\n    static ContentGroup = {\n        IMAGE: 'image',\n        MEDIA: 'media',\n        PDF: 'pdf',\n        TEXT: 'text'\n    };\n\n    /**\n     * Based on ViewerComponent Implementation, this value is used to determine how many times we try\n     * to get the rendition of a file for preview, or printing.\n     */\n    maxRetries = 5;\n\n    /**\n     * Mime-type grouping based on the ViewerComponent.\n     */\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * This method takes a url to trigger the print dialog against, and the type of artifact that it\n     * is.\n     * This URL should be one that can be rendered in the browser, for example PDF, Image, or Text\n     */\n    printFile(url: string, type: string): void {\n        const pwa = window.open(url, ViewUtilService.TARGET);\n        if (pwa) {\n            // Because of the way chrome focus and close image window vs. pdf preview window\n            if (type === ViewUtilService.ContentGroup.IMAGE) {\n                pwa.onfocus = () => {\n                    setTimeout( () => {\n                        pwa.close();\n                    }, 500);\n                };\n            }\n\n            pwa.onload = () => {\n                pwa.print();\n            };\n        }\n    }\n\n    /**\n     * Launch the File Print dialog from anywhere other than the preview service, which resolves the\n     * rendition of the object that can be printed from a web browser.\n     * These are: images, PDF files, or PDF rendition of files.\n     * We also force PDF rendition for TEXT type objects, otherwise the default URL is to download.\n     * TODO there are different TEXT type objects, (HTML, plaintext, xml, etc. we should determine how these are handled)\n     */\n    printFileGeneric(objectId: string, mimeType: string): void {\n        const nodeId = objectId;\n        const type: string = this.getViewerTypeByMimeType(mimeType);\n\n        this.getRendition(nodeId, ViewUtilService.ContentGroup.PDF)\n        .then(value => {\n            const url: string = this.getRenditionUrl(nodeId, type, (value ? true : false));\n            const printType = (type === ViewUtilService.ContentGroup.PDF\n                || type === ViewUtilService.ContentGroup.TEXT)\n                ? ViewUtilService.ContentGroup.PDF : type;\n            this.printFile(url, printType);\n        })\n        .catch(err => {\n            this.logService.error('Error with Printing');\n            this.logService.error(err);\n        });\n    }\n\n    getRenditionUrl(nodeId: string, type: string, renditionExists: boolean): string {\n        return (renditionExists && type !== ViewUtilService.ContentGroup.IMAGE) ?\n            this.apiService.contentApi.getRenditionUrl(nodeId, ViewUtilService.ContentGroup.PDF) :\n            this.apiService.contentApi.getContentUrl(nodeId, false);\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string, retries: number): Promise<RenditionEntry> {\n        const rendition = await this.apiService.renditionsApi.getRendition(nodeId, renditionId);\n\n        if (this.maxRetries < retries) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'CREATED') {\n                return rendition;\n            } else {\n                retries += 1;\n                await this.wait(1000);\n                return await this.waitRendition(nodeId, renditionId, retries);\n            }\n        }\n    }\n\n    getViewerTypeByMimeType(mimeType: string): string {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    wait(ms: number): Promise<any> {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    async getRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        const supported = await this.apiService.renditionsApi.getRenditions(nodeId);\n        let rendition = supported.list.entries.find(obj => obj.entry.id.toLowerCase() === renditionId);\n\n        if (rendition) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, {id: renditionId});\n                    rendition = await this.waitRendition(nodeId, renditionId, 0);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n        return new Promise(resolve => resolve(rendition));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-more-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-more-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerMoreActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-open-with',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-open-with' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerOpenWithComponent {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-sidebar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-sidebar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerSidebarComponent {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarComponent {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from '@angular/common';\nimport {\n    Component, ContentChild, EventEmitter, HostListener, ElementRef,\n    Input, OnChanges, Output, SimpleChanges, TemplateRef,\n    ViewEncapsulation, OnInit, OnDestroy\n} from '@angular/core';\nimport { MinimalNodeEntryEntity, RenditionEntry } from 'alfresco-js-api';\nimport { BaseEvent } from '../../events';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { ViewerMoreActionsComponent } from './viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './viewer-open-with.component';\nimport { ViewerSidebarComponent } from './viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './viewer-toolbar.component';\nimport { Subscription } from 'rxjs';\nimport { ViewUtilService } from '../services/view-util.service';\n\n@Component({\n    selector: 'adf-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.scss'],\n    host: { 'class': 'adf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ViewerComponent implements OnChanges, OnInit, OnDestroy {\n\n    @ContentChild(ViewerToolbarComponent)\n    toolbar: ViewerToolbarComponent;\n\n    @ContentChild(ViewerSidebarComponent)\n    sidebar: ViewerSidebarComponent;\n\n    @ContentChild(ViewerOpenWithComponent)\n    mnuOpenWith: ViewerOpenWithComponent;\n\n    @ContentChild(ViewerMoreActionsComponent)\n    mnuMoreActions: ViewerMoreActionsComponent;\n\n    /** If you want to load an external file that does not come from ACS you\n     * can use this URL to specify where to load the file from.\n     */\n    @Input()\n    urlFile = '';\n\n    /** Viewer to use with the `urlFile` address (`pdf`, `image`, `media`, `text`).\n     * Used when `urlFile` has no filename and extension.\n     */\n    @Input()\n    urlFileViewer: string = null;\n\n    /** Loads a Blob File */\n    @Input()\n    blobFile: Blob;\n\n    /**\n     * Node Id of the file to load.\n     * @deprecated 2.4.0 use nodeId\n     */\n    @Input()\n    set fileNodeId(nodeId: string) {\n        this.nodeId = nodeId;\n    }\n\n    /** Node Id of the file to load. */\n    @Input()\n    nodeId: string = null;\n\n    /** Shared link id (to display shared file). */\n    @Input()\n    sharedLinkId: string = null;\n\n    /** If `true` then show the Viewer as a full page over the current content.\n     * Otherwise fit inside the parent div.\n     */\n    @Input()\n    overlayMode = false;\n\n    /** Hide or show the viewer */\n    @Input()\n    showViewer = true;\n\n    /** Hide or show the toolbar */\n    @Input()\n    showToolbar = true;\n\n    /** Specifies the name of the file when it is not available from the URL. */\n    @Input()\n    displayName: string;\n\n    /** Allows `back` navigation */\n    @Input()\n    allowGoBack = true;\n\n    /** Toggles downloading. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles printing. */\n    @Input()\n    allowPrint = false;\n\n    /**\n     * Toggles sharing.\n     * @deprecated 2.5.0 - inject the share button directive as custom button\n     */\n    @Input()\n    allowShare = false;\n\n    /** Toggles the 'Full Screen' feature. */\n    @Input()\n    allowFullScreen = true;\n\n    /** Toggles before/next navigation. You can use the arrow buttons to navigate\n     * between documents in the collection.\n     */\n    @Input()\n    allowNavigate = false;\n\n    /** Toggles the \"before\" (\"<\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateBefore = true;\n\n    /** Toggles the next (\">\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateNext = true;\n\n    /** Allow the left the sidebar. */\n    @Input()\n    allowLeftSidebar = false;\n\n    /** Allow the right sidebar.\n     * @deprecated 2.5.0 - will be renamed  allowRightSidebar in 3.0.0\n     */\n    @Input()\n    allowSidebar = false;\n\n    /** Toggles PDF thumbnails. */\n    @Input()\n    allowThumbnails = true;\n\n    /**\n     * Toggles sidebar visibility. Requires `allowSidebar` to be set to `true`.\n     * @deprecated 2.5.0 - will be renamed showRightSidebar in 3.0.0\n     */\n    @Input()\n    showSidebar = false;\n\n    /** Toggles left sidebar visibility. Requires `allowSidebar` to be set to `true`. */\n    @Input()\n    showLeftSidebar = false;\n\n    /**\n     * The position of the sidebar. Can be `left` or `right`.\n     * @deprecated 2.5.0 use sidebarTemplateLeft\n     */\n    @Input()\n    sidebarPosition = 'right';\n\n    /**\n     * The template for the sidebar. The template context contains the loaded node data.\n     * @deprecated 2.5.0 renamed as sidebarRight\n     */\n    @Input()\n    sidebarTemplate: TemplateRef<any> = null;\n\n    /** The template for the left sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarLeftTemplate: TemplateRef<any> = null;\n\n    /** The template for the pdf thumbnails. */\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    /** MIME type of the file content (when not determined by the filename extension). */\n    @Input()\n    mimeType: string;\n\n    /** Content filename. */\n    @Input()\n    fileName: string;\n\n    /** URL to download. */\n    @Input()\n    downloadUrl: string = null;\n\n    /** Number of times the Viewer will retry fetching content Rendition.\n     * There is a delay of at least one second between attempts.\n     */\n    @Input()\n    maxRetries = 10;\n\n    /** Emitted when user clicks the 'Back' button. */\n    @Output()\n    goBack = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Download' button. */\n    @Output()\n    download = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Print' button. */\n    @Output()\n    print = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Share' button. */\n    @Output()\n    share = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when the viewer is shown or hidden. */\n    @Output()\n    showViewerChange = new EventEmitter<boolean>();\n\n    /** Emitted when the filename extension changes. */\n    @Output()\n    extensionChange = new EventEmitter<string>();\n\n    /** Emitted when user clicks 'Navigate Before' (\"<\") button. */\n    @Output()\n    navigateBefore = new EventEmitter();\n\n    /** Emitted when user clicks 'Navigate Next' (\">\") button. */\n    @Output()\n    navigateNext = new EventEmitter();\n\n    /** Emitted when the shared link used is not valid. */\n    @Output()\n    invalidSharedLink = new EventEmitter();\n\n    viewerType = 'unknown';\n    isLoading = false;\n    node: MinimalNodeEntryEntity;\n\n    extensionTemplates: { template: TemplateRef<any>, isVisible: boolean }[] = [];\n    externalExtensions: string[] = [];\n    urlFileContent: string;\n    otherMenu: any;\n    extension: string;\n    sidebarTemplateContext: { node: MinimalNodeEntryEntity } = { node: null };\n    sidebarLeftTemplateContext: { node: MinimalNodeEntryEntity } = { node: null };\n    fileTitle: string;\n\n    private cacheBusterNumber;\n\n    private subscriptions: Subscription[] = [];\n\n    // Extensions that are supported by the Viewer without conversion\n    private extensions = {\n        image: ['png', 'jpg', 'jpeg', 'gif', 'bpm', 'svg'],\n        media: ['wav', 'mp4', 'mp3', 'webm', 'ogg'],\n        text: ['txt', 'xml', 'js', 'html', 'json', 'ts', 'css', 'md'],\n        pdf: ['pdf']\n    };\n\n    // Mime types that are supported by the Viewer without conversion\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private viewUtils: ViewUtilService,\n                private logService: LogService,\n                private location: Location,\n                private el: ElementRef) {\n    }\n\n    isSourceDefined(): boolean {\n        return (this.urlFile || this.blobFile || this.nodeId || this.sharedLinkId) ? true : false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.apiService.nodeUpdated.subscribe(node => this.onNodeUpdated(node))\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private onNodeUpdated(node: MinimalNodeEntryEntity) {\n        if (node && node.id === this.nodeId) {\n            this.generateCacheBusterNumber();\n            this.isLoading = true;\n            this.setUpNodeFile(node).then(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showViewer) {\n            if (!this.isSourceDefined()) {\n                throw new Error('A content source attribute value is missing.');\n            }\n            this.isLoading = true;\n\n            if (this.blobFile) {\n                this.setUpBlobData();\n                this.isLoading = false;\n            } else if (this.urlFile) {\n                this.setUpUrlFile();\n                this.isLoading = false;\n            } else if (this.nodeId) {\n                this.apiService.nodesApi.getNodeInfo(this.nodeId, { include: ['allowableOperations'] }).then(\n                    (data: MinimalNodeEntryEntity) => {\n                        this.setUpNodeFile(data).then(() => {\n                            this.isLoading = false;\n                        });\n                    },\n                    (error) => {\n                        this.isLoading = false;\n                        this.logService.error('This node does not exist');\n                    }\n                );\n            } else if (this.sharedLinkId) {\n\n                this.apiService.sharedLinksApi.getSharedLink(this.sharedLinkId).then(\n                    details => {\n                        this.setUpSharedLinkFile(details);\n                        this.isLoading = false;\n                    },\n                    () => {\n                        this.isLoading = false;\n                        this.logService.error('This sharedLink does not exist');\n                        this.invalidSharedLink.next();\n                    });\n            }\n        }\n    }\n\n    private setUpBlobData() {\n        this.fileTitle = this.getDisplayName('Unknown');\n        this.mimeType = this.blobFile.type;\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n\n        this.allowDownload = false;\n        // TODO: wrap blob into the data url and allow downloading\n\n        this.extensionChange.emit(this.mimeType);\n        this.scrollTop();\n    }\n\n    private setUpUrlFile() {\n        let filenameFromUrl = this.getFilenameFromUrl(this.urlFile);\n        this.fileTitle = this.getDisplayName(filenameFromUrl);\n        this.extension = this.getFileExtension(filenameFromUrl);\n        this.urlFileContent = this.urlFile;\n\n        this.downloadUrl = this.urlFile;\n        this.fileName = this.displayName;\n\n        this.viewerType = this.urlFileViewer || this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.scrollTop();\n    }\n\n    private async setUpNodeFile(data: MinimalNodeEntryEntity) {\n        let setupNode;\n\n        if (data.content) {\n            this.mimeType = data.content.mimeType;\n        }\n\n        this.fileTitle = this.getDisplayName(data.name);\n\n        this.urlFileContent = this.apiService.contentApi.getContentUrl(data.id);\n        this.urlFileContent = this.cacheBusterNumber ? this.urlFileContent + '&' + this.cacheBusterNumber : this.urlFileContent;\n\n        this.extension = this.getFileExtension(data.name);\n\n        this.fileName = data.name;\n        this.downloadUrl = this.apiService.contentApi.getContentUrl(data.id, true);\n\n        this.viewerType = this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        if (this.viewerType === 'unknown') {\n            setupNode = this.displayNodeRendition(data.id);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.sidebarTemplateContext.node = data;\n        this.sidebarLeftTemplateContext.node = data;\n        this.scrollTop();\n\n        return setupNode;\n    }\n\n    private setUpSharedLinkFile(details: any) {\n        this.mimeType = details.entry.content.mimeType;\n        this.fileTitle = this.getDisplayName(details.entry.name);\n        this.extension = this.getFileExtension(details.entry.name);\n        this.fileName = details.entry.name;\n\n        this.urlFileContent = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, false);\n        this.downloadUrl = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, true);\n\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByExtension(this.extension);\n        }\n\n        if (this.viewerType === 'unknown') {\n            this.displaySharedLinkRendition(this.sharedLinkId);\n        }\n\n        this.extensionChange.emit(this.extension);\n    }\n\n    toggleSidebar() {\n        this.showSidebar = !this.showSidebar;\n        if (this.showSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNodeInfo(this.nodeId, { include: ['allowableOperations'] })\n                .then((data: MinimalNodeEntryEntity) => {\n                    this.sidebarTemplateContext.node = data;\n                });\n        }\n    }\n\n    toggleLeftSidebar() {\n        this.showLeftSidebar = !this.showLeftSidebar;\n        if (this.showSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNodeInfo(this.nodeId, { include: ['allowableOperations'] })\n                .then((data: MinimalNodeEntryEntity) => {\n                    this.sidebarLeftTemplateContext.node = data;\n                });\n        }\n    }\n\n    private getDisplayName(name) {\n        return this.displayName || name ;\n    }\n\n    scrollTop() {\n        window.scrollTo(0, 1);\n    }\n\n    getViewerTypeByMimeType(mimeType: string) {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (let type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    getViewerTypeByExtension(extension: string) {\n        if (extension) {\n            extension = extension.toLowerCase();\n        }\n\n        if (this.isCustomViewerExtension(extension)) {\n            return 'custom';\n        }\n\n        if (this.extensions.image.indexOf(extension) >= 0) {\n            return 'image';\n        }\n\n        if (this.extensions.media.indexOf(extension) >= 0) {\n            return 'media';\n        }\n\n        if (this.extensions.text.indexOf(extension) >= 0) {\n            return 'text';\n        }\n\n        if (this.extensions.pdf.indexOf(extension) >= 0) {\n            return 'pdf';\n        }\n\n        return 'unknown';\n    }\n\n    onBackButtonClick() {\n        if (this.overlayMode) {\n            this.close();\n        } else {\n            const event = new BaseEvent<any>();\n            this.goBack.next(event);\n\n            if (!event.defaultPrevented) {\n                this.location.back();\n            }\n        }\n    }\n\n    onNavigateBeforeClick() {\n        this.navigateBefore.next();\n    }\n\n    onNavigateNextClick() {\n        this.navigateNext.next();\n    }\n\n    /**\n     * close the viewer\n     */\n    close() {\n        if (this.otherMenu) {\n            this.otherMenu.hidden = false;\n        }\n        this.showViewer = false;\n        this.showViewerChange.emit(this.showViewer);\n    }\n\n    /**\n     * get File name from url\n     *\n     * @param  url - url file\n     */\n    getFilenameFromUrl(url: string): string {\n        let anchor = url.indexOf('#');\n        let query = url.indexOf('?');\n        let end = Math.min(\n            anchor > 0 ? anchor : url.length,\n            query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf('/', end) + 1, end);\n    }\n\n    /**\n     * Get file extension from the string.\n     * Supports the URL formats like:\n     * http://localhost/test.jpg?cache=1000\n     * http://localhost/test.jpg#cache=1000\n     *\n     * @param fileName - file name\n     */\n    getFileExtension(fileName: string): string {\n        if (fileName) {\n            const match = fileName.match(/\\.([^\\./\\?\\#]+)($|\\?|\\#)/);\n            return match ? match[1] : null;\n        }\n        return null;\n    }\n\n    isCustomViewerExtension(extension: string): boolean {\n        const extensions = this.externalExtensions || [];\n\n        if (extension && extensions.length > 0) {\n            extension = extension.toLowerCase();\n            return extensions.indexOf(extension) >= 0;\n        }\n\n        return false;\n    }\n\n    /**\n     * Keyboard event listener\n     * @param  event\n     */\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n\n        // Esc\n        if (key === 27 && this.overlayMode) { // esc\n            this.close();\n        }\n\n        // Left arrow\n        if (key === 37 && this.canNavigateBefore) {\n            event.preventDefault();\n            this.onNavigateBeforeClick();\n        }\n\n        // Right arrow\n        if (key === 39 && this.canNavigateNext) {\n            event.preventDefault();\n            this.onNavigateNextClick();\n        }\n\n        // Ctrl+F\n        if (key === 70 && event.ctrlKey) {\n            event.preventDefault();\n            this.enterFullScreen();\n        }\n    }\n\n    downloadContent() {\n        if (this.allowDownload && this.downloadUrl && this.fileName) {\n            const args = new BaseEvent();\n            this.download.next(args);\n\n            if (!args.defaultPrevented) {\n                const link = document.createElement('a');\n\n                link.style.display = 'none';\n                link.download = this.fileName;\n                link.href = this.downloadUrl;\n\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }\n    }\n\n    printContent() {\n        if (this.allowPrint) {\n            const args = new BaseEvent();\n            this.print.next(args);\n\n            if (!args.defaultPrevented) {\n                this.viewUtils.printFileGeneric(this.nodeId, this.mimeType);\n            }\n        }\n    }\n\n    shareContent() {\n        if (this.allowShare) {\n            const args = new BaseEvent();\n            this.share.next(args);\n        }\n    }\n\n    /**\n     * Triggers full screen mode with a main content area displayed.\n     */\n    enterFullScreen(): void {\n        if (this.allowFullScreen) {\n            const container = this.el.nativeElement.querySelector('.adf-viewer__fullscreen-container');\n            if (container) {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n        }\n    }\n\n    private async displayNodeRendition(nodeId: string) {\n        try {\n            const rendition = await this.resolveRendition(nodeId, 'pdf');\n            if (rendition) {\n                const renditionId = rendition.entry.id;\n\n                if (renditionId === 'pdf') {\n                    this.viewerType = 'pdf';\n                } else if (renditionId === 'imgpreview') {\n                    this.viewerType = 'image';\n                }\n\n                this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n            }\n        } catch (err) {\n            this.logService.error(err);\n        }\n    }\n\n    private async displaySharedLinkRendition(sharedId: string) {\n        try {\n            const rendition = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'pdf');\n            if (rendition.entry.status.toString() === 'CREATED') {\n                this.viewerType = 'pdf';\n                this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'pdf');\n            }\n        } catch (error) {\n            this.logService.error(error);\n            try {\n                const rendition = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'imgpreview');\n                if (rendition.entry.status.toString() === 'CREATED') {\n                    this.viewerType = 'image';\n                    this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'imgpreview');\n                }\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private async resolveRendition(nodeId: string, renditionId: string) {\n        renditionId = renditionId.toLowerCase();\n\n        const supported = await this.apiService.renditionsApi.getRenditions(nodeId);\n\n        let rendition = supported.list.entries.find(obj => obj.entry.id.toLowerCase() === renditionId);\n        if (!rendition) {\n            renditionId = 'imgpreview';\n            rendition = supported.list.entries.find(obj => obj.entry.id.toLowerCase() === renditionId);\n        }\n\n        if (rendition) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId }).then(() => {\n                        this.viewerType = 'in_creation';\n                    });\n                    rendition = await this.waitRendition(nodeId, renditionId, 0);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n\n        return rendition;\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string, retries: number): Promise<RenditionEntry> {\n        let currentRetry = 0;\n        return new Promise((resolve, reject) => {\n            let intervalId = setInterval(() => {\n                currentRetry++;\n                if (this.maxRetries >= currentRetry) {\n                    this.apiService.renditionsApi.getRendition(nodeId, renditionId).then((rendition) => {\n                        const status = rendition.entry.status.toString();\n                        if (status === 'CREATED') {\n\n                            if (renditionId === 'pdf') {\n                                this.viewerType = 'pdf';\n                            } else if (renditionId === 'imgpreview') {\n                                this.viewerType = 'image';\n                            }\n\n                            this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n\n                            clearInterval(intervalId);\n                            return resolve(rendition);\n                        }\n                    }, () => {\n                        this.viewerType = 'error_in_creation';\n                        return reject();\n                    });\n                }\n            }, 1000);\n        });\n    }\n\n    private generateCacheBusterNumber() {\n        this.cacheBusterNumber = Date.now();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-img-viewer',\n    templateUrl: './imgViewer.component.html',\n    styleUrls: ['./imgViewer.component.scss'],\n    host: { 'class': 'adf-image-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ImgViewerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    showToolbar = true;\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    rotate: number = 0;\n    scaleX: number = 1.0;\n    scaleY: number = 1.0;\n    offsetX: number = 0;\n    offsetY: number = 0;\n    isDragged: boolean = false;\n\n    private drag = { x: 0, y: 0 };\n    private delta = { x: 0, y: 0 };\n\n    get transform(): string {\n        return `scale(${this.scaleX}, ${this.scaleY}) rotate(${this.rotate}deg) translate(${this.offsetX}px, ${this.offsetY}px)`;\n    }\n\n    get currentScaleText(): string {\n        return Math.round(this.scaleX * 100) + '%';\n    }\n\n    private element: HTMLElement;\n\n    constructor(\n        private contentService: ContentService,\n        private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.element = <HTMLElement> this.el.nativeElement.querySelector('#viewer-image');\n\n        if (this.element) {\n            this.element.addEventListener('mousedown', this.onMouseDown.bind(this));\n            this.element.addEventListener('mouseup', this.onMouseUp.bind(this));\n            this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n            this.element.addEventListener('mouseout', this.onMouseOut.bind(this));\n            this.element.addEventListener('mousemove', this.onMouseMove.bind(this));\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.removeEventListener('mousedown', this.onMouseDown);\n            this.element.removeEventListener('mouseup', this.onMouseUp);\n            this.element.removeEventListener('mouseleave', this.onMouseLeave);\n            this.element.removeEventListener('mouseout', this.onMouseOut);\n            this.element.removeEventListener('mousemove', this.onMouseMove);\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        event.preventDefault();\n        this.isDragged = true;\n        this.drag = { x: event.pageX, y: event.pageY };\n    }\n\n    onMouseMove(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n\n            this.delta.x = event.pageX - this.drag.x;\n            this.delta.y = event.pageY - this.drag.y;\n\n            this.drag.x = event.pageX;\n            this.drag.y = event.pageY;\n\n            const scaleX = (this.scaleX !== 0 ? this.scaleX : 1.0);\n            const scaleY = (this.scaleY !== 0 ? this.scaleY : 1.0);\n\n            this.offsetX += (this.delta.x / scaleX);\n            this.offsetY += (this.delta.y / scaleY);\n        }\n    }\n\n    onMouseUp(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseLeave(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseOut(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    zoomIn() {\n        const ratio = +((this.scaleX + 0.2).toFixed(1));\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    zoomOut() {\n        let ratio = +((this.scaleX - 0.2).toFixed(1));\n        if (ratio < 0.2) {\n            ratio = 0.2;\n        }\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    rotateLeft() {\n        const angle = this.rotate - 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    rotateRight() {\n        const angle = this.rotate + 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    reset() {\n        this.rotate = 0;\n        this.scaleX = 1.0;\n        this.scaleY = 1.0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-media-player',\n    templateUrl: './mediaPlayer.component.html',\n    styleUrls: ['./mediaPlayer.component.scss'],\n    host: { 'class': 'adf-media-player' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class MediaPlayerComponent implements OnChanges {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    mimeType: string;\n\n    @Input()\n    nameFile: string;\n\n    constructor(private contentService: ContentService ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        let blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n}\n","/* tslint:disable:adf-license-banner  */\n\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n *\n * RenderingQueueServices rendering of the views for pages and thumbnails.\n *\n */\n@Injectable()\nexport class RenderingQueueServices {\n\n    renderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n    };\n\n    CLEANUP_TIMEOUT: number = 30000;\n\n    pdfViewer: any = null;\n    pdfThumbnailViewer: any = null;\n    onIdle: any = null;\n\n    highestPriorityPage: any = null;\n    idleTimeout: any = null;\n    printing: any = false;\n    isThumbnailViewEnabled: any = false;\n\n    /**\n     * @param pdfViewer\n     */\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n\n    /**\n     * @param pdfThumbnailViewer\n     */\n    setThumbnailViewer(pdfThumbnailViewer) {\n        this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n\n    /**\n     * @param  view\n     */\n    isHighestPriority(view: any): boolean {\n        return this.highestPriorityPage === view.renderingId;\n    }\n\n    renderHighestPriority(currentlyVisiblePages) {\n        if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n        }\n\n        // Pages have a higher priority than thumbnails, so check them first.\n        if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n        }\n        // No pages needed rendering so check thumbnails.\n        if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n                return;\n            }\n        }\n\n        if (this.printing) {\n            // If printing is currently ongoing do not reschedule cleanup.\n            return;\n        }\n\n        if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), this.CLEANUP_TIMEOUT);\n        }\n    }\n\n    getHighestPriority(visible, views, scrolledDown) {\n        // The state has changed figure out which page has the highest priority to\n        // render next (if any).\n        // Priority:\n        // 1 visible pages\n        // 2 if last scrolled down page after the visible pages\n        // 2 if last scrolled up page before the visible pages\n        let visibleViews = visible.views;\n\n        let numVisible = visibleViews.length;\n        if (numVisible === 0) {\n            return false;\n        }\n        for (let i = 0; i < numVisible; ++i) {\n            let view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n                return view;\n            }\n        }\n\n        // All the visible views have rendered, try to render next/previous pages.\n        if (scrolledDown) {\n            let nextPageIndex = visible.last.id;\n            // ID's start at 1 so no need to add 1.\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n                return views[nextPageIndex];\n            }\n        } else {\n            let previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n                return views[previousPageIndex];\n            }\n        }\n        // Everything that needs to be rendered has been.\n        return null;\n    }\n\n    /**\n     * @param view\n     */\n    isViewFinished(view): boolean {\n        return view.renderingState === this.renderingStates.FINISHED;\n    }\n\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * false.\n     * @param view\n     */\n    renderView(view: any) {\n        let state = view.renderingState;\n        switch (state) {\n            case this.renderingStates.FINISHED:\n                return false;\n            case this.renderingStates.PAUSED:\n                this.highestPriorityPage = view.renderingId;\n                view.resume();\n                break;\n            case this.renderingStates.RUNNING:\n                this.highestPriorityPage = view.renderingId;\n                break;\n            case this.renderingStates.INITIAL:\n                this.highestPriorityPage = view.renderingId;\n                let continueRendering = function () {\n                    this.renderHighestPriority();\n                }.bind(this);\n                view.draw().then(continueRendering, continueRendering);\n                break;\n            default:\n                break;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\n\ndeclare const pdfjsLib: any;\n\n@Component({\n    selector: 'adf-pdf-viewer-password-dialog',\n    templateUrl: './pdfViewer-password-dialog.html',\n    styleUrls: [ './pdfViewer-password-dialog.scss' ]\n})\nexport class PdfPasswordDialogComponent implements OnInit {\n    passwordFormControl: FormControl;\n\n    constructor(\n        private dialogRef: MatDialogRef<PdfPasswordDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit() {\n        this.passwordFormControl = new FormControl('', [Validators.required]);\n    }\n\n    isError(): boolean {\n        return this.data.reason === pdfjsLib.PasswordResponses.INCORRECT_PASSWORD;\n    }\n\n    isValid(): boolean {\n        return !this.passwordFormControl.hasError('required');\n    }\n\n    submit(): void {\n        this.dialogRef.close(this.passwordFormControl.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    TemplateRef,\n    HostListener,\n    Output,\n    Input,\n    OnChanges,\n    OnDestroy,\n    ViewEncapsulation,\n    EventEmitter\n} from '@angular/core';\nimport { LogService } from '../../services/log.service';\nimport { RenderingQueueServices } from '../services/rendering-queue.services';\nimport { PdfPasswordDialogComponent } from './pdfViewer-password-dialog';\nimport { MatDialog } from '@angular/material';\n\ndeclare const pdfjsLib: any;\ndeclare const pdfjsViewer: any;\n\n@Component({\n    selector: 'adf-pdf-viewer',\n    templateUrl: './pdfViewer.component.html',\n    styleUrls: [\n        './pdfViewer.component.scss',\n        './pdfViewerHost.component.scss'\n    ],\n    providers: [RenderingQueueServices],\n    host: { 'class': 'adf-pdf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfViewerComponent implements OnChanges, OnDestroy {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    @Input()\n    showToolbar: boolean = true;\n\n    @Input()\n    allowThumbnails = false;\n\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    @Output()\n    rendered = new EventEmitter<any>();\n\n    @Output()\n    error = new EventEmitter<any>();\n\n    loadingTask: any;\n    currentPdfDocument: any;\n    page: number;\n    displayPage: number;\n    totalPages: number;\n    loadingPercent: number;\n    pdfViewer: any;\n    documentContainer: any;\n    currentScaleMode: string = 'auto';\n    currentScale: number = 1;\n\n    MAX_AUTO_SCALE: number = 1.25;\n    DEFAULT_SCALE_DELTA: number = 1.1;\n    MIN_SCALE: number = 0.25;\n    MAX_SCALE: number = 10.0;\n\n    isPanelDisabled = true;\n    showThumbnails: boolean = false;\n    pdfThumbnailsContext: { viewer: any } = { viewer: null };\n\n    get currentScaleText(): string {\n        return Math.round(this.currentScale * 100) + '%';\n    }\n\n    constructor(\n        private dialog: MatDialog,\n        private renderingQueueServices: RenderingQueueServices,\n        private logService: LogService) {\n        // needed to preserve \"this\" context\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onPagesLoaded = this.onPagesLoaded.bind(this);\n        this.onPagerendered = this.onPagerendered.bind(this);\n    }\n\n    ngOnChanges(changes) {\n        let blobFile = changes['blobFile'];\n\n        if (blobFile && blobFile.currentValue) {\n            let reader = new FileReader();\n            reader.onload = () => {\n                this.executePdf(reader.result);\n            };\n            reader.readAsArrayBuffer(blobFile.currentValue);\n        }\n\n        let urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            this.executePdf(urlFile.currentValue);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    executePdf(src) {\n\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\n        this.loadingTask = pdfjsLib.getDocument(src);\n\n        this.loadingTask.onPassword = (callback, reason) => {\n            this.onPdfPassword(callback, reason);\n        };\n\n        this.loadingTask.onProgress = (progressData) => {\n            let level = progressData.loaded / progressData.total;\n            this.loadingPercent = Math.round(level * 100);\n        };\n\n        this.loadingTask.then((pdfDocument) => {\n            this.currentPdfDocument = pdfDocument;\n            this.totalPages = pdfDocument.numPages;\n            this.page = 1;\n            this.displayPage = 1;\n            this.initPDFViewer(this.currentPdfDocument);\n\n            this.currentPdfDocument.getPage(1).then(() => {\n                this.scalePage('auto');\n            }, (error) => {\n                this.error.emit();\n            });\n\n        }, (error) => {\n            this.error.emit();\n        });\n    }\n\n    initPDFViewer(pdfDocument: any) {\n        const viewer: any = document.getElementById('viewer-viewerPdf');\n        const container = document.getElementById('viewer-pdf-viewer');\n\n        if (viewer && container) {\n            this.documentContainer = container;\n\n            this.documentContainer.addEventListener('pagechange', this.onPageChange, true);\n            this.documentContainer.addEventListener('pagesloaded', this.onPagesLoaded, true);\n            this.documentContainer.addEventListener('textlayerrendered', this.onPagerendered, true);\n\n            this.pdfViewer = new pdfjsViewer.PDFViewer({\n                container: this.documentContainer,\n                viewer: viewer,\n                renderingQueue: this.renderingQueueServices\n            });\n\n            this.renderingQueueServices.setViewer(this.pdfViewer);\n            this.pdfViewer.setDocument(pdfDocument);\n            this.pdfThumbnailsContext.viewer = this.pdfViewer;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.documentContainer) {\n            this.documentContainer.removeEventListener('pagechange', this.onPageChange, true);\n            this.documentContainer.removeEventListener('pagesloaded', this.onPagesLoaded, true);\n            this.documentContainer.removeEventListener('textlayerrendered', this.onPagerendered, true);\n        }\n\n        if (this.loadingTask) {\n            try {\n                this.loadingTask.destroy();\n            } catch {}\n\n            this.loadingTask = null;\n        }\n    }\n\n    toggleThumbnails() {\n        this.showThumbnails = !this.showThumbnails;\n    }\n\n    /**\n     * Method to scale the page current support implementation\n     *\n     * @param scaleMode - new scale mode\n     */\n    scalePage(scaleMode) {\n        this.currentScaleMode = scaleMode;\n\n        if (this.pdfViewer) {\n\n            let viewerContainer = document.getElementById('viewer-main-container');\n            let documentContainer = document.getElementById('viewer-pdf-viewer');\n\n            let widthContainer;\n            let heightContainer;\n\n            if (viewerContainer && viewerContainer.clientWidth <= documentContainer.clientWidth) {\n                widthContainer = viewerContainer.clientWidth;\n                heightContainer = viewerContainer.clientHeight;\n            } else {\n                widthContainer = documentContainer.clientWidth;\n                heightContainer = documentContainer.clientHeight;\n            }\n\n            let currentPage = this.pdfViewer._pages[this.pdfViewer._currentPageNumber - 1];\n\n            let padding = 20;\n            let pageWidthScale = (widthContainer - padding) / currentPage.width * currentPage.scale;\n            let pageHeightScale = (heightContainer - padding) / currentPage.width * currentPage.scale;\n\n            let scale;\n\n            switch (this.currentScaleMode) {\n                case 'page-actual':\n                    scale = 1;\n                    break;\n                case 'page-width':\n                    scale = pageWidthScale;\n                    break;\n                case 'page-height':\n                    scale = pageHeightScale;\n                    break;\n                case 'page-fit':\n                    scale = Math.min(pageWidthScale, pageHeightScale);\n                    break;\n                case 'auto':\n                    let horizontalScale;\n                    if (this.isLandscape) {\n                        horizontalScale = Math.min(pageHeightScale, pageWidthScale);\n                    } else {\n                        horizontalScale = pageWidthScale;\n                    }\n                    scale = Math.min(this.MAX_AUTO_SCALE, horizontalScale);\n\n                    break;\n                default:\n                    this.logService.error('pdfViewSetScale: \\'' + scaleMode + '\\' is an unknown zoom value.');\n                    return;\n            }\n\n            this.setScaleUpdatePages(scale);\n        }\n    }\n\n    /**\n     * Update all the pages with the newScale scale\n     *\n     * @param newScale - new scale page\n     */\n    setScaleUpdatePages(newScale: number) {\n        if (!this.isSameScale(this.currentScale, newScale)) {\n            this.currentScale = newScale;\n\n            this.pdfViewer._pages.forEach(function (currentPage) {\n                currentPage.update(newScale);\n            });\n        }\n\n        this.pdfViewer.update();\n    }\n\n    /**\n     * Check if the request scale of the page is the same for avoid useless re-rendering\n     *\n     * @param oldScale - old scale page\n     * @param newScale - new scale page\n     *\n     */\n    isSameScale(oldScale: number, newScale: number): boolean {\n        return (newScale === oldScale);\n    }\n\n    /**\n     * Check if is a land scape view\n     *\n     * @param width\n     * @param height\n     */\n    isLandscape(width: number, height: number): boolean {\n        return (width > height);\n    }\n\n    /**\n     * Method triggered when the page is resized\n     */\n    onResize() {\n        this.scalePage(this.currentScaleMode);\n    }\n\n    /**\n     * toggle the fit page pdf\n     */\n    pageFit() {\n        if (this.currentScaleMode !== 'page-fit') {\n            this.scalePage('page-fit');\n        } else {\n            this.scalePage('auto');\n        }\n    }\n\n    /**\n     * zoom in page pdf\n     *\n     * @param ticks\n     */\n    zoomIn(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale * this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.ceil(newScale * 10) / 10;\n            newScale = Math.min(this.MAX_SCALE, newScale);\n        } while (--ticks > 0 && newScale < this.MAX_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * zoom out page pdf\n     *\n     * @param ticks\n     */\n    zoomOut(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale / this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.floor(newScale * 10) / 10;\n            newScale = Math.max(this.MIN_SCALE, newScale);\n        } while (--ticks > 0 && newScale > this.MIN_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * load the previous page\n     */\n    previousPage() {\n        if (this.pdfViewer && this.page > 1) {\n            this.page--;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the next page\n     */\n    nextPage() {\n        if (this.pdfViewer && this.page < this.totalPages) {\n            this.page++;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the page in input\n     *\n     * @param page to load\n     */\n    inputPage(page: string) {\n        let pageInput = parseInt(page, 10);\n\n        if (!isNaN(pageInput) && pageInput > 0 && pageInput <= this.totalPages) {\n            this.page = pageInput;\n            this.displayPage = this.page;\n            this.pdfViewer.currentPageNumber = this.page;\n        } else {\n            this.displayPage = this.page;\n        }\n    }\n\n    /**\n     * Page Change Event\n     *\n     * @param event\n     */\n    onPageChange(event) {\n        this.page = event.pageNumber;\n        this.displayPage = event.pageNumber;\n    }\n\n    onPdfPassword(callback, reason) {\n        this.dialog\n            .open(PdfPasswordDialogComponent, {\n                width: '400px',\n                disableClose: true,\n                data: { reason }\n            })\n            .afterClosed().subscribe(password => {\n            if (password) {\n                callback(password);\n            }\n        });\n    }\n\n    /**\n     * Page Rendered Event\n     */\n    onPagerendered() {\n        this.rendered.emit();\n    }\n\n    /**\n     * Pages Loaded Event\n     *\n     * @param event\n     */\n    onPagesLoaded(event) {\n        this.isPanelDisabled = false;\n    }\n\n    /**\n     * Litener Keyboard Event\n     * @param KeyboardEvent event\n     */\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        let key = event.keyCode;\n        if (key === 39) { // right arrow\n            this.nextPage();\n        } else if (key === 37) {// left arrow\n            this.previousPage();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, Input, ContentChild, TemplateRef, HostListener, OnInit,\n    AfterViewInit, ElementRef, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-pdf-thumbnails',\n    templateUrl: './pdfViewer-thumbnails.component.html',\n    styleUrls: ['./pdfViewer-thumbnails.component.scss'],\n    host: { 'class': 'pdf-thumbnails' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbListComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input() pdfViewer: any;\n\n    virtualHeight: number = 0;\n    translateY: number = 0;\n    renderItems = [];\n    width: number = 91;\n    currentHeight: number = 0;\n\n    private items = [];\n    private margin: number = 15;\n    private itemHeight: number = 114 + this.margin;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.calculateItems();\n    }\n\n    constructor(private element: ElementRef) {\n        this.calculateItems = this.calculateItems.bind(this);\n        this.onPageChange = this.onPageChange.bind(this);\n    }\n\n    ngOnInit() {\n        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);\n        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);\n\n        this.setHeight(this.pdfViewer.currentPageNumber);\n        this.items = this.getPages();\n        this.calculateItems();\n\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.scrollInto(this.pdfViewer.currentPageNumber), 0);\n    }\n\n    ngOnDestroy() {\n        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);\n        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);\n    }\n\n    trackByFn(index: number, item: any): number {\n        return item.id;\n    }\n\n    isSelected(pageNum: number) {\n        return this.pdfViewer.currentPageNumber === pageNum;\n    }\n\n    goTo(pageNum: number) {\n        this.pdfViewer.currentPageNumber = pageNum;\n    }\n\n    scrollInto(item: any) {\n        if (this.items.length) {\n            const index: number = this.items.findIndex((element) => element.id === item);\n\n            if (index < 0 || index >= this.items.length) {\n                return;\n            }\n\n            this.element.nativeElement.scrollTop = index * this.itemHeight;\n\n            this.calculateItems();\n        }\n    }\n\n    getPages() {\n        return this.pdfViewer._pages.map((page) => ({\n            id: page.id,\n            getWidth: () => { return this.width; },\n            getHeight: () => { return this.currentHeight; },\n            getPage: () => this.pdfViewer.pdfDocument.getPage(page.id)\n        }));\n    }\n\n    private setHeight(id): number {\n        const height = this.pdfViewer.pdfDocument.getPage(id).then((page) => this.calculateHeight(page));\n        return height;\n    }\n\n    private calculateHeight(page) {\n        const viewport = page.getViewport(1);\n        const pageRatio = viewport.width / viewport.height;\n        const height = Math.floor(this.width / pageRatio);\n\n        this.currentHeight = height;\n        this.itemHeight = height + this.margin;\n    }\n\n    private calculateItems() {\n        const { element, viewPort, itemsInView } = this.getContainerSetup();\n\n        const indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;\n\n        const start = Math.floor(indexByScrollTop);\n\n        const end = Math.ceil(indexByScrollTop) + (itemsInView);\n\n        this.translateY = this.itemHeight * Math.ceil(start);\n        this.virtualHeight = this.itemHeight * this.items.length  - this.translateY;\n        this.renderItems = this.items.slice(start, end);\n    }\n\n    private getContainerSetup() {\n        const element = this.element.nativeElement;\n        const elementRec = element.getBoundingClientRect();\n        const itemsInView = Math.ceil(elementRec.height / this.itemHeight);\n        const viewPort = (this.itemHeight * this.items.length) / itemsInView;\n\n        return {\n            element,\n            viewPort,\n            itemsInView\n        };\n    }\n\n    private onPageChange(event) {\n        const index = this.renderItems.findIndex((element) => element.id === event.pageNumber);\n\n        if (index < 0) {\n            this.scrollInto(event.pageNumber);\n        }\n\n        if (index >= this.renderItems.length - 1) {\n            this.element.nativeElement.scrollTop += this.itemHeight;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-pdf-thumb',\n    templateUrl: './pdfViewer-thumb.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbComponent implements OnInit {\n\n    @Input()\n    page: any = null;\n\n    image$: Promise<string>;\n\n    constructor(private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.image$ = this.page.getPage().then((page) => this.getThumb(page));\n    }\n\n    private getThumb(page): Promise<string> {\n        const viewport = page.getViewport(1);\n\n        const pageRatio = viewport.width / viewport.height;\n        const canvas = this.getCanvas(pageRatio);\n        const scale = Math.min((canvas.height / viewport.height), (canvas.width / viewport.width));\n\n        return page.render({\n            canvasContext: canvas.getContext('2d'),\n            viewport: page.getViewport(scale)\n        })\n        .then(() => {\n            const imageSource = canvas.toDataURL();\n            return this.sanitizer.bypassSecurityTrustUrl(imageSource);\n        });\n    }\n\n    private getCanvas(pageRatio): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.page.getWidth();\n        canvas.height = this.page.getHeight();\n        return canvas;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\n\n@Component({\n    selector: 'adf-txt-viewer',\n    templateUrl: './txtViewer.component.html',\n    styleUrls: ['./txtViewer.component.scss'],\n    host: { 'class': 'adf-txt-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class TxtViewerComponent implements OnChanges {\n\n    @Input()\n    urlFile: any;\n\n    @Input()\n    blobFile: Blob;\n\n    content: string;\n\n    constructor(private http: HttpClient) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): Promise<any> {\n\n        let blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            return this.readBlob(blobFile.currentValue);\n        }\n\n        let urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            return this.getUrlContent(urlFile.currentValue);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    private getUrlContent(url: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.http.get(url, { responseType: 'text' }).subscribe(res => {\n                this.content = res;\n                resolve();\n            }, (event) => {\n                reject(event);\n            });\n        });\n    }\n\n    private readBlob(blob: Blob): Promise<any> {\n        return new Promise((resolve, reject) => {\n            let reader = new FileReader();\n\n            reader.onload = () => {\n                this.content = reader.result;\n                resolve();\n            };\n\n            reader.onerror = (error: any) => {\n                reject(error);\n            };\n\n            reader.readAsText(blob);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-unknown-format',\n    templateUrl: 'unknown-format.component.html',\n    styleUrls: ['unknown-format.component.scss']\n})\nexport class UnknownFormatComponent {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, Input, TemplateRef } from '@angular/core';\nimport { ViewerComponent } from '../components/viewer.component';\n\n@Directive({\n    selector: 'adf-viewer-extension'\n})\nexport class ViewerExtensionDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    urlFileContent: string;\n\n    @Input()\n    extension: string;\n\n    @Input()\n    supportedExtensions: string[];\n\n    templateModel: any;\n\n    constructor(private viewerComponent: ViewerComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.templateModel = { template: this.template, isVisible: false };\n\n        this.viewerComponent.extensionTemplates.push(this.templateModel);\n\n        this.viewerComponent.extensionChange.subscribe((fileExtension) => {\n            this.templateModel.isVisible = this.isVisible(fileExtension);\n        });\n\n        if (this.supportedExtensions instanceof Array) {\n            this.supportedExtensions.forEach((extension) => {\n                this.viewerComponent.externalExtensions.push(extension);\n            });\n        }\n    }\n\n    /**\n     * check if the current extension in the viewer is compatible with this extension checking against supportedExtensions\n     */\n    isVisible(fileExtension): boolean {\n        let supportedExtension: string;\n\n        if (this.supportedExtensions && (this.supportedExtensions instanceof Array)) {\n            supportedExtension = this.supportedExtensions.find((extension) => {\n                return extension.toLowerCase() === fileExtension;\n\n            });\n        }\n\n        return !!supportedExtension;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-divider',\n    template: '<div></div>',\n    host: { 'class': 'adf-toolbar-divider' },\n    styles: [`\n        .adf-toolbar-divider > div {\n            height: 24px;\n            width: 1px;\n            background: rgba(0, 0, 0, 0.26);\n            margin-left: 5px;\n            margin-right: 5px;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ToolbarDividerComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-title',\n    template: '<ng-content></ng-content>',\n    host: { 'class': 'adf-toolbar-title' }\n})\nexport class ToolbarTitleComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-toolbar' }\n})\nexport class ToolbarComponent {\n\n    /** Toolbar title. */\n    @Input()\n    title: string = '';\n\n    /** Toolbar color. Can be changed to empty value (default), `primary`, `accent` or `warn`. */\n    @Input()\n    color: string;\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { ToolbarDividerComponent } from './toolbar-divider.component';\nimport { ToolbarTitleComponent } from './toolbar-title.component';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ],\n    exports: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ]\n})\nexport class ToolbarModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { ImgViewerComponent } from './components/imgViewer.component';\nimport { MediaPlayerComponent } from './components/mediaPlayer.component';\nimport { PdfViewerComponent } from './components/pdfViewer.component';\nimport { PdfPasswordDialogComponent } from './components/pdfViewer-password-dialog';\nimport { PdfThumbComponent } from './components/pdfViewer-thumb.component';\nimport { PdfThumbListComponent } from './components/pdfViewer-thumbnails.component';\nimport { TxtViewerComponent } from './components/txtViewer.component';\nimport { UnknownFormatComponent } from './components/unknown-format/unknown-format.component';\nimport { ViewerMoreActionsComponent } from './components/viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './components/viewer-open-with.component';\nimport { ViewerSidebarComponent } from './components/viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './components/viewer-toolbar.component';\nimport { ViewerComponent } from './components/viewer.component';\nimport { ViewerExtensionDirective } from './directives/viewer-extension.directive';\nimport { ViewerToolbarActionsComponent } from './components/viewer-toolbar-actions.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        ToolbarModule,\n        PipeModule,\n        FlexLayoutModule\n    ],\n    declarations: [\n        PdfPasswordDialogComponent,\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ],\n    entryComponents: [\n        PdfPasswordDialogComponent\n    ],\n    exports: [\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfPasswordDialogComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ]\n})\nexport class ViewerModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserRepresentation } from 'alfresco-js-api';\n\nexport class BpmUserModel implements UserRepresentation {\n    apps: any;\n    capabilities: string[];\n    company: string;\n    created: Date;\n    email: string;\n    externalId: string;\n    firstName: string;\n    lastName: string;\n    fullname: string;\n    fullNameDisplay: string;\n    groups: any;\n    id: number;\n    lastUpdate: Date;\n    latestSyncTimeStamp: Date;\n    password: string;\n    pictureId: number;\n    status: string;\n    tenantId: number;\n    tenantName: string;\n    tenantPictureId: number;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.apps = obj.apps;\n            this.capabilities = obj.capabilities;\n            this.company = obj.company;\n            this.created = obj.created;\n            this.email = obj.email;\n            this.externalId = obj.externalId;\n            this.firstName = obj.firstName;\n            this.lastName = obj.lastName;\n            this.fullname = obj.fullname;\n            this.fullNameDisplay = obj ? this.formatValue(obj.firstName).trim() + ' ' + this.formatValue(obj.lastName).trim() : null;\n            this.groups = obj.groups;\n            this.id = obj.id;\n            this.lastUpdate = obj.lastUpdate;\n            this.latestSyncTimeStamp = obj.latestSyncTimeStamp;\n            this.password = obj.password;\n            this.pictureId = obj.pictureId;\n            this.status = obj.status;\n            this.tenantId = obj.tenantId;\n            this.tenantName = obj.tenantName;\n            this.tenantPictureId = obj.tenantPictureId;\n            this.type = obj.type;\n        }\n    }\n\n    private formatValue(value: string): string {\n        return value && value !== 'null' ? value : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Person } from 'alfresco-js-api';\nimport { EcmCompanyModel } from '../../models/ecm-company.model';\n\nexport class EcmUserModel implements Person {\n    id: string;\n    firstName: string;\n    lastName: string;\n    fullNameDisplay: string;\n    description: string;\n    avatarId: string;\n    email: string;\n    skypeId: string;\n    googleId: string;\n    instantMessageId: string;\n    jobTitle: string;\n    location: string;\n    company: EcmCompanyModel;\n    mobile: string;\n    telephone: string;\n    statusUpdatedAt: Date;\n    userStatus: string;\n    enabled: boolean;\n    emailNotificationsEnabled: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.firstName = obj && obj.firstName;\n        this.lastName = obj && obj.lastName;\n        this.fullNameDisplay = obj ? this.formatValue(obj.firstName).trim() + ' ' + this.formatValue(obj.lastName).trim() : null;\n        this.description = obj && obj.description || null;\n        this.avatarId = obj && obj.avatarId || null;\n        this.email = obj && obj.email || null;\n        this.skypeId = obj && obj.skypeId;\n        this.googleId = obj && obj.googleId;\n        this.instantMessageId = obj && obj.instantMessageId;\n        this.jobTitle = obj && obj.jobTitle || null;\n        this.location = obj && obj.location || null;\n        this.company = obj && obj.company;\n        this.mobile = obj && obj.mobile;\n        this.telephone = obj && obj.telephone;\n        this.statusUpdatedAt = obj && obj.statusUpdatedAt;\n        this.userStatus = obj && obj.userStatus;\n        this.enabled = obj && obj.enabled;\n        this.emailNotificationsEnabled = obj && obj.emailNotificationsEnabled;\n    }\n\n    private formatValue(value: string) {\n        return value && value !== 'null' ? value : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { BpmUserModel } from '../models/bpm-user.model';\nimport { map, catchError } from 'rxjs/operators';\n\n/**\n *\n * BPMUserService retrieve all the information of an Ecm user.\n *\n */\n@Injectable()\nexport class BpmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about the current user.\n     * @returns User information object\n     */\n    getCurrentUserInfo(): Observable<BpmUserModel> {\n        return from(this.apiService.getInstance().activiti.profileApi.getProfile())\n            .pipe(\n                map((data) => <BpmUserModel> data),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the current user's profile image as a URL.\n     * @returns URL string\n     */\n    getCurrentUserProfileImage(): string {\n        return this.apiService.getInstance().activiti.profileApi.getProfilePictureUrl();\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: Response) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable, from, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ContentService } from '../../services/content.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { EcmUserModel } from '../models/ecm-user.model';\n\n@Injectable()\nexport class EcmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private contentService: ContentService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param userName Target username\n     * @returns User information\n     */\n    getUserInfo(userName: string): Observable<EcmUserModel> {\n        return from(this.apiService.getInstance().core.peopleApi.getPerson(userName))\n            .pipe(\n                map(data => <EcmUserModel> data['entry']),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets information about the user who is currently logged-in.\n     * @returns User information as for getUserInfo\n     */\n    getCurrentUserInfo() {\n        return this.getUserInfo('-me-');\n    }\n\n    /**\n     * Returns a profile image as a URL.\n     * @param avatarId Target avatar\n     * @returns Image URL\n     */\n    getUserProfileImage(avatarId: string) {\n        if (avatarId) {\n            let nodeObj = {entry: {id: avatarId}};\n            return this.contentService.getContentUrl(nodeObj);\n        }\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { BpmUserModel } from './../models/bpm-user.model';\nimport { EcmUserModel } from './../models/ecm-user.model';\nimport { BpmUserService } from './../services/bpm-user.service';\nimport { EcmUserService } from './../services/ecm-user.service';\n\n@Component({\n    selector: 'adf-userinfo',\n    styleUrls: ['./user-info.component.scss'],\n    templateUrl: './user-info.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class UserInfoComponent implements OnInit {\n\n    /** Custom path for the background banner image for ACS users. */\n    @Input()\n    ecmBackgroundImage: string = './assets/images/ecm-background.png';\n\n    /** Custom path for the background banner image for APS users. */\n    @Input()\n    bpmBackgroundImage: string = './assets/images/bpm-background.png';\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    /** Shows/hides the username next to the user info button. */\n    @Input()\n    showName: boolean = true;\n\n    /** When the username is shown, this defines its position relative to the user info button.\n     * Can be `right` or `left`.\n     */\n    @Input()\n    namePosition: string = 'right';\n\n    ecmUser: EcmUserModel;\n    bpmUser: BpmUserModel;\n    bpmUserImage: any;\n    ecmUserImage: any;\n    selectedIndex: number;\n\n    constructor(private ecmUserService: EcmUserService,\n                private bpmUserService: BpmUserService,\n                private authService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.getUserInfo();\n    }\n\n    getUserInfo() {\n        this.loadEcmUserInfo();\n        this.loadBpmUserInfo();\n    }\n\n    isLoggedIn() {\n        return this.authService.isLoggedIn();\n    }\n\n    loadEcmUserInfo(): void {\n        if (this.authService.isEcmLoggedIn()) {\n            this.ecmUserService.getCurrentUserInfo()\n                .subscribe((res) => {\n                    this.ecmUser = new EcmUserModel(res);\n                    this.getEcmAvatar();\n                });\n        } else {\n            this.ecmUser = null;\n            this.ecmUserImage = null;\n        }\n    }\n\n    loadBpmUserInfo(): void {\n        if (this.authService.isBpmLoggedIn()) {\n            this.bpmUserService.getCurrentUserInfo()\n                .subscribe((res) => {\n                    this.bpmUser = new BpmUserModel(res);\n                });\n            this.bpmUserImage = this.bpmUserService.getCurrentUserProfileImage();\n        } else {\n            this.bpmUser = null;\n            this.bpmUserImage = null;\n        }\n    }\n\n    stopClosing(event) {\n        event.stopPropagation();\n    }\n\n    private getEcmAvatar() {\n        this.ecmUserImage = this.ecmUserService.getUserProfileImage(this.ecmUser.avatarId);\n    }\n\n    showOnRight() {\n        return this.namePosition === 'right';\n    }\n\n    hasBpmUserPictureId(): boolean {\n        return !!this.bpmUser.pictureId;\n    }\n\n    hasEcmUserAvatarId(): boolean {\n        return !!this.ecmUser.avatarId;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { UserInfoComponent } from './components/user-info.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        UserInfoComponent\n    ],\n    exports: [\n        UserInfoComponent\n    ]\n})\nexport class UserInfoModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl, FormControl } from '@angular/forms';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Component({\n    selector: 'adf-host-settings',\n    templateUrl: 'host-settings.component.html',\n    host: {\n        'class': 'adf-host-settings'\n    },\n    styleUrls: ['host-settings.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HostSettingsComponent implements OnInit {\n\n    HOST_REGEX: string = '^(http|https):\\/\\/.*[^/]$';\n\n    /**\n     * Tells the component which provider options are available. Possible valid values\n     * are \"ECM\" (Content), \"BPM\" (Process) , \"ALL\" (Content and Process), 'OAUTH2' SSO.\n     */\n    @Input()\n    providers: string[] = ['BPM', 'ECM', 'ALL'];\n\n    showSelectProviders = true;\n\n    form: FormGroup;\n\n    /** Emitted when the URL is invalid. */\n    @Output()\n    error = new EventEmitter<string>();\n\n    /** Emitted when the ecm host URL is changed.\n     * @deprecated in 2.4.0\n     */\n    @Output()\n    ecmHostChange = new EventEmitter<string>();\n\n    /** Emitted when the user cancels the changes. */\n    @Output()\n    cancel = new EventEmitter<boolean>();\n\n    /** Emitted when the changes are successfully applied. */\n    @Output()\n    success = new EventEmitter<boolean>();\n\n    /** Emitted when the bpm host URL is changed.\n     * @deprecated in 2.4.0\n     */\n    @Output()\n    bpmHostChange = new EventEmitter<string>();\n\n    constructor(private formBuilder: FormBuilder,\n                private storageService: StorageService,\n                private alfrescoApiService: AlfrescoApiService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        if (this.providers.length === 1) {\n            this.showSelectProviders = false;\n        }\n\n        let providerSelected = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n        const authType = this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC');\n\n        this.form = this.formBuilder.group({\n            providersControl: [providerSelected, Validators.required],\n            authType: authType\n        });\n\n        this.addFormGroups();\n\n        if (authType === 'OAUTH') {\n            this.addOAuthFormGroup();\n        }\n\n        this.form.get('authType').valueChanges.subscribe((value) => {\n            if (value === 'BASIC') {\n                this.form.removeControl('oauthConfig');\n            } else {\n                this.addOAuthFormGroup();\n            }\n        });\n\n        this.providersControl.valueChanges.subscribe(() => {\n            this.removeFormGroups();\n            this.addFormGroups();\n        });\n    }\n\n    private removeFormGroups() {\n        this.form.removeControl('bpmHost');\n        this.form.removeControl('ecmHost');\n    }\n\n    private addFormGroups() {\n        this.addBPMFormControl();\n        this.addECMFormControl();\n    }\n\n    private addOAuthFormGroup() {\n        const oauthFormGroup = this.createOAuthFormGroup();\n        this.form.addControl('oauthConfig', oauthFormGroup);\n    }\n\n    private addBPMFormControl() {\n        if ((this.isBPM() || this.isALL() || this.isOAUTH()) && !this.bpmHost) {\n            const bpmFormControl = this.createBPMFormControl();\n            this.form.addControl('bpmHost', bpmFormControl);\n        }\n    }\n\n    private addECMFormControl() {\n        if ((this.isECM() || this.isALL()) && !this.ecmHost) {\n            const ecmFormControl = this.createECMFormControl();\n            this.form.addControl('ecmHost', ecmFormControl);\n        }\n    }\n\n    private createOAuthFormGroup(): AbstractControl {\n        let oauth = <OauthConfigModel> this.appConfig.get(AppConfigValues.OAUTHCONFIG, {});\n\n        return this.formBuilder.group({\n            host: [oauth.host, [Validators.required, Validators.pattern(this.HOST_REGEX)]],\n            clientId: [oauth.clientId, Validators.required],\n            redirectUri: [oauth.redirectUri, Validators.required],\n            redirectUriLogout: [oauth.redirectUriLogout],\n            scope: [oauth.scope, Validators.required],\n            secret: oauth.secret,\n            silentLogin: oauth.silentLogin,\n            implicitFlow: oauth.implicitFlow\n        });\n    }\n\n    private createBPMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.BPMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createECMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.ECMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    onCancel() {\n        this.cancel.emit(true);\n    }\n\n    onSubmit(values: any) {\n        this.storageService.setItem(AppConfigValues.PROVIDERS, values.providersControl);\n\n        if (this.isBPM()) {\n            this.saveBPMValues(values);\n        } else if (this.isECM()) {\n            this.saveECMValues(values);\n        } else if (this.isALL()) {\n            this.saveECMValues(values);\n            this.saveBPMValues(values);\n        }\n\n        if (this.isOAUTH()) {\n            this.saveOAuthValues(values);\n        }\n\n        this.storageService.setItem(AppConfigValues.AUTHTYPE, values.authType);\n\n        this.alfrescoApiService.reset();\n        this.alfrescoApiService.getInstance().invalidateSession();\n        this.success.emit(true);\n    }\n\n    private saveOAuthValues(values: any) {\n        this.storageService.setItem(AppConfigValues.OAUTHCONFIG, JSON.stringify(values.oauthConfig));\n    }\n\n    private saveBPMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.BPMHOST, values.bpmHost);\n    }\n\n    private saveECMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.ECMHOST, values.ecmHost);\n    }\n\n    isBPM(): boolean {\n        return this.providersControl.value === 'BPM';\n    }\n\n    isECM(): boolean {\n        return this.providersControl.value === 'ECM';\n    }\n\n    isALL(): boolean {\n        return this.providersControl.value === 'ALL';\n    }\n\n    isOAUTH(): boolean {\n        return this.form.get('authType').value === 'OAUTH';\n    }\n\n    get providersControl(): AbstractControl {\n        return this.form.get('providersControl');\n    }\n\n    get bpmHost(): AbstractControl {\n        return this.form.get('bpmHost');\n    }\n\n    get ecmHost(): AbstractControl {\n        return this.form.get('ecmHost');\n    }\n\n    get host(): AbstractControl {\n        return this.oauthConfig.get('host');\n    }\n\n    get clientId(): AbstractControl {\n        return this.oauthConfig.get('clientId');\n    }\n\n    get scope(): AbstractControl {\n        return this.oauthConfig.get('scope');\n    }\n\n    get secretId(): AbstractControl {\n        return this.oauthConfig.get('secretId');\n    }\n\n    get implicitFlow(): AbstractControl {\n        return this.oauthConfig.get('implicitFlow');\n    }\n\n    get silentLogin(): AbstractControl {\n        return this.oauthConfig.get('silentLogin');\n    }\n\n    get redirectUri(): AbstractControl {\n        return this.oauthConfig.get('redirectUri');\n    }\n\n    get redirectUriLogout(): AbstractControl {\n        return this.oauthConfig.get('redirectUriLogout');\n    }\n\n    get oauthConfig(): AbstractControl {\n        return this.form.get('oauthConfig');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HostSettingsComponent } from './host-settings.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HostSettingsComponent\n    ],\n    exports: [\n        HostSettingsComponent\n    ]\n})\nexport class HostSettingsModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation,\n    ChangeDetectorRef, OnDestroy, HostBinding\n} from '@angular/core';\n\nimport { Pagination } from 'alfresco-js-api';\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationModel } from '../models/pagination.model';\nimport { UserPreferencesService } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-pagination',\n    host: { 'class': 'adf-pagination' },\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = {\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    };\n\n    static ACTIONS = {\n        NEXT_PAGE: 'NEXT_PAGE',\n        PREV_PAGE: 'PREV_PAGE',\n        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',\n        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'\n    };\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    target: PaginatedComponent;\n\n    /** An array of page sizes. */\n    @Input()\n    supportedPageSizes: number[];\n\n    /** Pagination object. */\n    @Input()\n    pagination: PaginationModel;\n\n    /** Emitted when pagination changes in any way. */\n    @Output()\n    change: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page number changes. */\n    @Output()\n    changePageNumber: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page size changes. */\n    @Output()\n    changePageSize: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the next page is requested. */\n    @Output()\n    nextPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the previous page is requested. */\n    @Output()\n    prevPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        if (!this.pagination) {\n            let defaultPagination = PaginationComponent.DEFAULT_PAGINATION;\n            defaultPagination.maxItems = this.userPreferencesService.paginationSize;\n            this.pagination = defaultPagination;\n        }\n\n        if (!this.supportedPageSizes) {\n            this.supportedPageSizes =  this.userPreferencesService.getDefaultPageSizes();\n        }\n\n        if (this.target) {\n            this.paginationSubscription = this.target.pagination.subscribe((pagination: PaginationModel) => {\n\n                if (pagination.count === 0 && !this.isFirstPage) {\n                    this.goPrevious();\n                }\n\n                this.pagination = pagination;\n                this.cdr.detectChanges();\n            });\n        }\n\n        if (!this.pagination) {\n            this.pagination = PaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    get lastPage(): number {\n        const { maxItems, totalItems } = this.pagination;\n\n        return (totalItems && maxItems)\n            ? Math.ceil(totalItems / maxItems)\n            : 1;\n    }\n\n    get current(): number {\n        const { maxItems, skipCount } = this.pagination;\n\n        return (skipCount && maxItems)\n            ? Math.floor(skipCount / maxItems) + 1\n            : 1;\n    }\n\n    get isLastPage(): boolean {\n        return this.current === this.lastPage;\n    }\n\n    get isFirstPage(): boolean {\n        return this.current === 1;\n    }\n\n    get next(): number {\n        return this.isLastPage ? this.current : this.current + 1;\n    }\n\n    get previous(): number {\n        return this.isFirstPage ? 1 : this.current - 1;\n    }\n\n    get hasItems(): boolean {\n        return this.pagination && this.pagination.count > 0;\n    }\n\n    @HostBinding('class.adf-pagination__empty')\n    get isEmpty(): boolean {\n        return !this.hasItems;\n    }\n\n    get range(): number[] {\n        const { skipCount, maxItems, totalItems } = this.pagination;\n        const { isLastPage } = this;\n\n        const start = totalItems ? skipCount + 1 : 0;\n        const end = isLastPage ? totalItems : skipCount + maxItems;\n\n        return [start, end];\n    }\n\n    get pages(): number[] {\n        return Array(this.lastPage)\n            .fill('n')\n            .map((item, index) => (index + 1));\n    }\n\n    goNext() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.next - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    goPrevious() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.previous - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageNumber(pageNumber: number) {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (pageNumber - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageSize(maxItems: number) {\n        this.pagination.skipCount = 0;\n        this.pagination.maxItems = maxItems;\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {\n            skipCount: 0,\n            maxItems\n        });\n    }\n\n    handlePaginationEvent(action: string, params: PaginationModel) {\n        const {\n            NEXT_PAGE,\n            PREV_PAGE,\n            CHANGE_PAGE_NUMBER,\n            CHANGE_PAGE_SIZE\n        } = PaginationComponent.ACTIONS;\n\n        const {\n            change,\n            changePageNumber,\n            changePageSize,\n            nextPage,\n            prevPage,\n            pagination\n        } = this;\n\n        const data = Object.assign({}, pagination, params);\n\n        if (action === NEXT_PAGE) {\n            nextPage.emit(data);\n        }\n\n        if (action === PREV_PAGE) {\n            prevPage.emit(data);\n        }\n\n        if (action === CHANGE_PAGE_NUMBER) {\n            changePageNumber.emit(data);\n        }\n\n        if (action === CHANGE_PAGE_SIZE) {\n            changePageSize.emit(data);\n        }\n\n        change.emit(params);\n\n        if (this.target) {\n            this.target.updatePagination(params);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n    Input, OnInit, Output, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { Pagination } from 'alfresco-js-api';\nimport { Subscription } from 'rxjs';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { PaginationModel } from '../models/pagination.model';\nimport { UserPreferencesService } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-infinite-pagination',\n    host: { 'class': 'infinite-adf-pagination' },\n    templateUrl: './infinite-pagination.component.html',\n    styleUrls: ['./infinite-pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InfinitePaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGE_SIZE: number = 25;\n\n    static DEFAULT_PAGINATION: PaginationModel = {\n        skipCount: 0,\n        hasMoreItems: false,\n        merge: true\n    };\n\n    /**\n     * Pagination object.\n     * @deprecated 2.3.0\n     */\n    @Input()\n    pagination: PaginationModel;\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    target: PaginatedComponent;\n\n    /** Number of items that are added with each \"load more\" event. */\n    @Input()\n    pageSize: number = InfinitePaginationComponent.DEFAULT_PAGE_SIZE;\n\n    /** Is a new page loading? */\n    @Input('loading')\n    isLoading: boolean = false;\n\n    /** Emitted when the \"Load More\" button is clicked. */\n    @Output()\n    loadMore: EventEmitter<Pagination> = new EventEmitter<Pagination>();\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        if (this.target) {\n            this.paginationSubscription = this.target.pagination.subscribe(pagination => {\n                this.isLoading = false;\n                this.pagination = pagination;\n                this.pageSize = this.userPreferencesService.paginationSize || this.pageSize;\n                this.cdr.detectChanges();\n            });\n        }\n\n        if (!this.pagination) {\n            this.pagination = InfinitePaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    onLoadMore() {\n        this.pagination.skipCount = 0;\n        this.pagination.maxItems = this.pagination.maxItems + this.pageSize;\n        this.pagination.merge = true;\n        this.loadMore.next(this.pagination);\n\n        if (this.pagination.maxItems >= this.pagination.totalItems) {\n            this.pagination.hasMoreItems = false;\n        }\n\n        if (this.target) {\n            this.target.pagination.value.merge = this.pagination.merge;\n            this.target.pagination.value.skipCount = this.pagination.skipCount;\n            this.isLoading = true;\n            this.target.updatePagination(<PaginationModel> this.pagination);\n        }\n    }\n\n    reset() {\n        this.pagination.skipCount = 0;\n        this.target.updatePagination(this.pagination);\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { InfinitePaginationComponent } from './infinite-pagination.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ],\n    exports: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ]\n})\nexport class PaginationModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { LogService } from './log.service';\nimport { StorageService } from './storage.service';\n\n@Injectable()\nexport class SettingsService {\n\n    constructor(private appConfig: AppConfigService,\n                private logService: LogService,\n                private storage: StorageService) {\n    }\n\n    /** @deprecated in 1.6.0 */\n    public get ecmHost(): string {\n        this.logService.log('SettingsService.ecmHost is deprecated. Use AppConfigService instead.');\n        return this.appConfig.get<string>(AppConfigValues.ECMHOST);\n    }\n\n    /** @deprecated in 1.7.0 */\n    public set csrfDisabled(csrfDisabled: boolean) {\n        this.logService.log(`SettingsService.csrfDisabled is deprecated. Use UserPreferencesService.disableCSRF instead.`);\n        if (csrfDisabled !== null && csrfDisabled !== undefined) {\n            this.storage.setItem(AppConfigValues.DISABLECSRF, csrfDisabled.toString());\n        }\n    }\n\n    /** @deprecated in 1.6.0 */\n    public set ecmHost(ecmHostUrl: string) {\n        this.logService.log('SettingsService.ecmHost is deprecated. Use AppConfigService instead.');\n    }\n\n    /** @deprecated in 1.6.0 */\n    public get bpmHost(): string {\n        this.logService.log('SettingsService.bpmHost is deprecated. Use AppConfigService instead.');\n        return this.appConfig.get<string>(AppConfigValues.BPMHOST);\n    }\n\n    /** @deprecated in 1.6.0 */\n    public set bpmHost(bpmHostUrl: string) {\n        this.logService.log('SettingsService.bpmHost is deprecated. Use AppConfigService instead.');\n    }\n\n    /** @deprecated in 1.6.0 */\n    public getBPMApiBaseUrl(): string {\n        this.logService.log('SettingsService.getBPMApiBaseUrl is deprecated.');\n        return this.bpmHost + '/activiti-app';\n    }\n\n    /** @deprecated in 1.7.0 */\n    public getProviders(): string {\n        this.logService.log(`SettingsService.getProviders is deprecated. Use UserPreferencesService.authType instead.`);\n        return this.storage.getItem(AppConfigValues.PROVIDERS) || this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n    }\n\n    /** @deprecated in 1.7.0 */\n    public setProviders(providers: string) {\n        this.logService.log(`SettingsService.setProviders is deprecated. Use the app-config.json`);\n        if (providers) {\n            this.storage.setItem(AppConfigValues.PROVIDERS, providers);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginErrorEvent {\n    constructor(public err: any) {}\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSubmitEvent {\n\n    private _values: any;\n    private _defaultPrevented: boolean = false;\n\n    get values(): any {\n        return this._values;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(_values: any) {\n        this._values = _values;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSuccessEvent {\n    constructor(\n        public token: any,\n        public username: string,\n        public password: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ElementRef, EventEmitter,\n    Input, OnInit, Output, TemplateRef, ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { LogService } from '../../services/log.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\nimport { SettingsService } from '../../services/settings.service';\n\nimport { LoginErrorEvent } from '../models/login-error.event';\nimport { LoginSubmitEvent } from '../models/login-submit.event';\nimport { LoginSuccessEvent } from '../models/login-success.event';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../../app-config/app-config.service';\nimport { OauthConfigModel } from '../../models/oauth-config.model';\n\nenum LoginSteps {\n    Landing = 0,\n    Checking = 1,\n    Welcome = 2\n}\n\n@Component({\n    selector: 'adf-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-login'\n    }\n})\nexport class LoginComponent implements OnInit {\n    isPasswordShow: boolean = false;\n\n    /**\n     * Should the `Remember me` checkbox be shown? When selected, this\n     * option will remember the logged-in user after the browser is closed\n     * to avoid logging in repeatedly.\n     */\n    @Input()\n    showRememberMe: boolean = true;\n\n    /** Should the extra actions (`Need Help`, `Register`, etc) be shown? */\n    @Input()\n    showLoginActions: boolean = true;\n\n    /** Sets the URL of the NEED HELP link in the footer. */\n    @Input()\n    needHelpLink: string = '';\n\n    /** Sets the URL of the REGISTER link in the footer. */\n    @Input()\n    registerLink: string = '';\n\n    /** Path to a custom logo image. */\n    @Input()\n    logoImageUrl: string = './assets/images/alfresco-logo.svg';\n\n    /** Path to a custom background image. */\n    @Input()\n    backgroundImageUrl: string = './assets/images/background.svg';\n\n    /** The copyright text below the login box. */\n    @Input()\n    copyrightText: string = '\\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';\n\n    /**\n     * Possible valid values are ECM, BPM or ALL.\n     * @deprecated 3.0.0 - use the providers property in the the app.config.json\n     */\n    @Input()\n    providers: string;\n\n    /** Custom validation rules for the login form. */\n    @Input()\n    fieldsValidation: any;\n\n    /**\n     * Prevents the CSRF Token from being submitted. Only valid for Alfresco Process Services.\n     * @deprecated 3.0.0\n     */\n    @Input()\n    disableCsrf: boolean;\n\n    /** Route to redirect to on successful login. */\n    @Input()\n    successRoute: string = null;\n\n    /** Emitted when the login is successful. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    /** Emitted when the login fails. */\n    @Output()\n    error = new EventEmitter<LoginErrorEvent>();\n\n    /** Emitted when the login form is submitted. */\n    @Output()\n    executeSubmit = new EventEmitter<LoginSubmitEvent>();\n\n    implicitFlow: boolean = false;\n\n    form: FormGroup;\n    isError: boolean = false;\n    errorMsg: string;\n    actualLoginStep: any = LoginSteps.Landing;\n    LoginSteps: any = LoginSteps;\n    rememberMe: boolean = true;\n    formError: { [id: string]: string };\n    minLength: number = 2;\n    footerTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    data: any;\n\n    private _message: { [id: string]: { [id: string]: string } };\n\n    /**\n     * Constructor\n     * @param _fb\n     * @param authService\n     * @param translate\n     */\n    constructor(\n        private _fb: FormBuilder,\n        private authService: AuthenticationService,\n        private translateService: TranslationService,\n        private logService: LogService,\n        private elementRef: ElementRef,\n        private router: Router,\n        private appConfig: AppConfigService,\n        private userPreferences: UserPreferencesService,\n        private settingsService: SettingsService\n    ) {\n        this.initFormError();\n        this.initFormFieldsMessages();\n    }\n\n    ngOnInit() {\n        if (this.authService.isOauth()) {\n            let oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n            if (oauth && oauth.implicitFlow) {\n                this.implicitFlow = true;\n            }\n        }\n\n        if (this.hasCustomFieldsValidation()) {\n            this.form = this._fb.group(this.fieldsValidation);\n        } else {\n            this.initFormFieldsDefault();\n            this.initFormFieldsMessagesDefault();\n        }\n        this.form.valueChanges.subscribe(data => this.onValueChanged(data));\n    }\n\n    submit() {\n        this.onSubmit(this.form.value);\n    }\n\n    /**\n     * Method called on submit form\n     * @param values\n     * @param event\n     */\n    onSubmit(values: any) {\n        this.settingsService.setProviders(this.providers);\n        this.settingsService.csrfDisabled = this.disableCsrf;\n\n        this.disableError();\n        const args = new LoginSubmitEvent({\n            controls: { username: this.form.controls.username }\n        });\n        this.executeSubmit.emit(args);\n\n        if (args.defaultPrevented) {\n            return false;\n        } else {\n            this.performLogin(values);\n        }\n    }\n\n    implicitLogin() {\n        this.authService.ssoImplicitLogin();\n    }\n\n    /**\n     * The method check the error in the form and push the error in the formError object\n     * @param data\n     */\n    onValueChanged(data: any) {\n        this.disableError();\n        for (let field in this.formError) {\n            if (field) {\n                this.formError[field] = '';\n                let hasError =\n                    (this.form.controls[field].errors && data[field] !== '') ||\n                    (this.form.controls[field].dirty &&\n                        !this.form.controls[field].valid);\n                if (hasError) {\n                    for (let key in this.form.controls[field].errors) {\n                        if (key) {\n                            this.formError[field] +=\n                                this._message[field][key] + '';\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Performe the login service\n     * @param values\n     */\n    private performLogin(values: any) {\n        this.actualLoginStep = LoginSteps.Checking;\n        this.authService\n            .login(values.username, values.password, this.rememberMe)\n            .subscribe(\n                (token: any) => {\n                    const redirectUrl = this.authService.getRedirect(\n                        this.providers\n                    );\n\n                    this.actualLoginStep = LoginSteps.Welcome;\n                    this.userPreferences.setStoragePrefix(values.username);\n                    values.password = null;\n                    this.success.emit(\n                        new LoginSuccessEvent(token, values.username, null)\n                    );\n\n                    if (redirectUrl) {\n                        this.authService.setRedirect(null);\n                        this.router.navigateByUrl(redirectUrl);\n                    } else if (this.successRoute) {\n                        this.router.navigate([this.successRoute]);\n                    }\n                },\n                (err: any) => {\n                    this.actualLoginStep = LoginSteps.Landing;\n                    this.displayErrorMessage(err);\n                    this.enableError();\n                    this.error.emit(new LoginErrorEvent(err));\n                },\n                () => this.logService.info('Login done')\n            );\n    }\n\n    /**\n     * Check and display the right error message in the UI\n     */\n    private displayErrorMessage(err: any): void {\n        if (\n            err.error &&\n            err.error.crossDomain &&\n            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1\n        ) {\n            this.errorMsg = err.error.message;\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('Invalid CSRF-token') !== -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('The system is currently in read-only mode') !==\n                -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';\n        } else {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';\n        }\n    }\n\n    /**\n     * Add a custom form error for a field\n     * @param field\n     * @param msg\n     */\n    public addCustomFormError(field: string, msg: string) {\n        this.formError[field] += msg;\n    }\n\n    /**\n     * Add a custom validation rule error for a field\n     * @param field\n     * @param ruleId - i.e. required | minlength | maxlength\n     * @param msg\n     */\n    addCustomValidationError(\n        field: string,\n        ruleId: string,\n        msg: string,\n        params?: any\n    ) {\n        if (params) {\n            this.translateService.get(msg, params).subscribe((res: string) => {\n                this._message[field][ruleId] = res;\n            });\n        } else {\n            this._message[field][ruleId] = msg;\n        }\n    }\n\n    /**\n     * Display and hide the password value.\n     */\n    toggleShowPassword() {\n        this.isPasswordShow = !this.isPasswordShow;\n        this.elementRef.nativeElement.querySelector('#password').type = this\n            .isPasswordShow\n            ? 'text'\n            : 'password';\n    }\n\n    /**\n     * The method return if a field is valid or not\n     * @param field\n     */\n    isErrorStyle(field: AbstractControl) {\n        return !field.valid && field.dirty && !field.pristine;\n    }\n\n    /**\n     * Trim username\n     */\n    trimUsername(event: any) {\n        event.target.value = event.target.value.trim();\n    }\n\n    /**\n     * Default formError values\n     */\n    private initFormError() {\n        this.formError = {\n            username: '',\n            password: ''\n        };\n    }\n\n    /**\n     * Init form fields messages\n     */\n    private initFormFieldsMessages() {\n        this._message = {\n            username: {},\n            password: {}\n        };\n    }\n\n    /**\n     * Default form fields messages\n     */\n    private initFormFieldsMessagesDefault() {\n        this._message = {\n            username: {\n                required: 'LOGIN.MESSAGES.USERNAME-REQUIRED'\n            },\n            password: {\n                required: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'\n            }\n        };\n\n        this.translateService\n            .get('LOGIN.MESSAGES.USERNAME-MIN', { minLength: this.minLength })\n            .subscribe((res: string) => {\n                this._message['username']['minlength'] = res;\n            });\n    }\n\n    private initFormFieldsDefault() {\n        this.form = this._fb.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Disable the error flag\n     */\n    private disableError() {\n        this.isError = false;\n        this.initFormError();\n    }\n\n    /**\n     * Enable the error flag\n     */\n    private enableError() {\n        this.isError = true;\n    }\n\n    private hasCustomFieldsValidation(): boolean {\n        return this.fieldsValidation !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n@Directive({\n    selector: 'login-header'\n})\nexport class LoginHeaderDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.headerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n@Directive({\n    selector: 'login-footer'\n})\nexport class LoginFooterDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.footerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginDialogComponentData } from './login-dialog-component-data.interface';\nimport { LoginDialogPanelComponent } from './login-dialog-panel.component';\n@Component({\n    selector: 'adf-login-dialog',\n    templateUrl: './login-dialog.component.html',\n    styleUrls: ['./login-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    buttonActionName = '';\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: LoginDialogComponentData) {\n        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';\n    }\n\n    close() {\n        this.data.logged.complete();\n    }\n\n    submitForm(): void {\n        this.loginPanel.submitForm();\n    }\n\n    onLoginSuccess(event: any) {\n        this.data.logged.next(event);\n        this.close();\n    }\n\n    isFormValid() {\n        return this.loginPanel ? this.loginPanel.isValid() : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { LoginSuccessEvent } from '../models/login-success.event';\n\n@Component({\n    selector: 'adf-login-dialog-panel',\n    templateUrl: './login-dialog-panel.component.html',\n    styleUrls: ['./login-dialog-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogPanelComponent {\n\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    @ViewChild('adfLogin')\n    login: LoginComponent;\n\n    submitForm(): void {\n        this.login.submit();\n    }\n\n    onLoginSuccess(event: LoginSuccessEvent) {\n        this.success.emit(event);\n    }\n\n    isValid() {\n        return this.login && this.login.form ? this.login.form.valid : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LoginComponent } from './components/login.component';\nimport { LoginFooterDirective } from './directives/login-footer.directive';\nimport { LoginHeaderDirective } from './directives/login-header.directive';\nimport { LoginDialogComponent } from './components/login-dialog.component';\nimport { LoginDialogPanelComponent } from './components/login-dialog-panel.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ],\n    entryComponents: [LoginDialogComponent, LoginDialogPanelComponent],\n    exports: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ]\n})\nexport class LoginModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserPreferencesService } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-language-menu',\n    templateUrl: 'language-menu.component.html'\n})\nexport class LanguageMenuComponent implements OnInit {\n\n    languages: Array<any> = [\n        { key: 'en', label: 'English'}\n    ];\n\n    constructor(\n        private appConfig: AppConfigService,\n        private userPreference: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        const languagesCongifApp = this.appConfig.get<Array<any>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY);\n        if (languagesCongifApp) {\n            this.languages = languagesCongifApp;\n        }\n    }\n\n    changeLanguage(lang: string) {\n        this.userPreference.locale = lang;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LanguageMenuComponent } from './language-menu.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        LanguageMenuComponent\n    ],\n    exports: [\n        LanguageMenuComponent\n    ]\n})\nexport class LanguageMenuModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-info-drawer-layout',\n    templateUrl: './info-drawer-layout.component.html',\n    styleUrls: ['./info-drawer-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer-layout' }\n})\nexport class InfoDrawerLayoutComponent {}\n\n@Directive({ selector: '[info-drawer-title]' }) export class InfoDrawerTitleDirective {}\n@Directive({ selector: '[info-drawer-buttons]' }) export class InfoDrawerButtonsDirective {}\n@Directive({ selector: '[info-drawer-content]' }) export class InfoDrawerContentDirective {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material';\n@Component({\n    selector: 'adf-info-drawer-tab',\n    template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class InfoDrawerTabComponent {\n    /** The title of the tab. */\n    @Input()\n    label: string = '';\n\n    /** Icon to render for the tab. */\n    @Input()\n    icon: string = null;\n\n    @ViewChild(TemplateRef)\n    content: TemplateRef<any>;\n}\n\n@Component({\n    selector: 'adf-info-drawer',\n    templateUrl: './info-drawer.component.html',\n    styleUrls: ['./info-drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer' }\n})\nexport class InfoDrawerComponent {\n    /** The title of the info drawer. */\n    @Input()\n    title: string|null = null;\n\n    /** The selected index tab. */\n    @Input()\n    selectedIndex: number = 0;\n\n    /** Emitted when the currently active tab changes. */\n    @Output()\n    currentTab: EventEmitter<number> = new EventEmitter<number>();\n\n    @ContentChildren(InfoDrawerTabComponent)\n    contentBlocks: QueryList<InfoDrawerTabComponent>;\n\n    showTabLayout(): boolean {\n        return this.contentBlocks.length > 0;\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        this.currentTab.emit(event.index);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { InfoDrawerLayoutComponent, InfoDrawerTitleDirective, InfoDrawerButtonsDirective, InfoDrawerContentDirective } from './info-drawer-layout.component';\nimport { InfoDrawerComponent, InfoDrawerTabComponent } from './info-drawer.component';\n\nexport function declarations() {\n    return [\n        InfoDrawerLayoutComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective\n    ];\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: declarations(),\n    exports: declarations()\n})\nexport class InfoDrawerModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Input } from '@angular/core';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { DataColumnListComponent } from '../../data-column/data-column-list.component';\nimport { DataColumn } from './data-column.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\n\nexport abstract class DataTableSchema {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    /** Custom preset column schema in JSON format. */\n    @Input()\n    presetColumn: string;\n\n    columns: any;\n\n    private layoutPresets = {};\n\n    constructor(private appConfigService: AppConfigService,\n                protected presetKey: string,\n                protected presetsModel: any) { }\n\n    public createDatatableSchema(): void {\n        this.loadLayoutPresets();\n        if (!this.columns || this.columns.length === 0) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    public loadLayoutPresets(): void {\n        const externalSettings = this.appConfigService.get(this.presetKey, null);\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, this.presetsModel, externalSettings);\n        } else {\n            this.layoutPresets = this.presetsModel;\n        }\n    }\n\n    public mergeJsonAndHtmlSchema(): any {\n        let customSchemaColumns = [];\n        customSchemaColumns = this.getSchemaFromConfig(this.presetColumn).concat(this.getSchemaFromHtml(this.columnList));\n        if (customSchemaColumns.length === 0) {\n            customSchemaColumns = this.getDefaultLayoutPreset();\n        }\n        return customSchemaColumns;\n    }\n\n    public getSchemaFromHtml(columnList: DataColumnListComponent): any {\n        let schema = [];\n        if (columnList && columnList.columns && columnList.columns.length > 0) {\n            schema = columnList.columns.map(c => <DataColumn> c);\n        }\n        return schema;\n    }\n\n   public getSchemaFromConfig(presetColoumn: string): DataColumn[] {\n        return presetColoumn ? (this.layoutPresets[presetColoumn]).map(col => new ObjectDataColumn(col)) : [];\n    }\n\n    private getDefaultLayoutPreset(): DataColumn[] {\n        return (this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterViewInit , Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatExpansionPanel } from '@angular/material';\n\n@Component({\n    selector: 'adf-accordion-group',\n    templateUrl: 'accordion-group.component.html',\n    styleUrls: ['./accordion-group.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AccordionGroupComponent implements AfterViewInit {\n    private _isOpen: boolean = false;\n    private _isSelected: boolean = false;\n\n    @ViewChild('contentWrapper')\n    contentWrapper: ElementRef;\n\n    @ViewChild('expansionPanel') expansionPanel: MatExpansionPanel;\n\n    /** Title heading for the group. */\n    @Input()\n    heading: string;\n\n    /** The material design icon. */\n    @Input()\n    headingIcon: string;\n\n    /** Tooltip message to be shown for headingIcon */\n    @Input()\n    headingIconTooltip: string;\n\n   /** Should the (expanded) accordion icon be shown? */\n    @Input()\n    hasAccordionIcon: boolean = true;\n\n    /** Emitted when the heading is clicked. */\n    @Output()\n    headingClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Is this group currently open? */\n    @Input()\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    get isOpen() {\n        return this._isOpen;\n    }\n\n    /** Is this group currently selected? */\n    @Input()\n    set isSelected(value: boolean) {\n        this._isSelected = value;\n    }\n\n    get isSelected() {\n        return this._isSelected;\n    }\n\n    hasContent: boolean;\n\n    constructor() { }\n\n    ngAfterViewInit() {\n        this.hasContent = this.contentWrapper.nativeElement && this.contentWrapper.nativeElement.children.length > 0;\n    }\n\n    hasHeadingIcon() {\n        return !!this.headingIcon;\n    }\n\n    onHeaderClick(): void {\n        this.headingClick.emit(this.heading);\n    }\n\n    isExpandable() {\n        if (!this.hasContent || !this.isOpen) {\n            this.expandPanel();\n        }\n    }\n\n    expandPanel() {\n        this.expansionPanel.expanded = !this.expansionPanel.expanded;\n    }\n\n    toggleExpansion(): boolean {\n        return this.isOpen && this.isSelected;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-accordion',\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        'class': 'panel-group'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AccordionComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { AccordionGroupComponent } from './accordion-group.component';\nimport { AccordionComponent } from './accordion.component';\n\n// @deprecated 2.3.0 use the material accodrdion\n\n@NgModule({\n    imports: [\n        MaterialModule,\n        CommonModule\n    ],\n    declarations: [\n        AccordionComponent,\n        AccordionGroupComponent\n    ],\n    exports: [\n        AccordionComponent,\n        AccordionGroupComponent\n    ]\n})\nexport class CollapsableModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\n\n@Component({\n    selector: 'adf-card-view',\n    templateUrl: './card-view.component.html',\n    styleUrls: ['./card-view.component.scss']\n})\nexport class CardViewComponent {\n    /** (**required**) Items to show in the card view. */\n    @Input()\n    properties: CardViewItem [];\n\n    /** Toggles whether or not the items can be edited. */\n    @Input()\n    editable: boolean;\n\n    /** Toggles whether or not to show empty items in non-editable mode. */\n    @Input()\n    displayEmpty: boolean = true;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { CardViewBaseItemModel } from '../models/card-view-baseitem.model';\n\nexport interface UpdateNotification {\n    target: any;\n    changed: any;\n}\n\nexport interface ClickNotification {\n    target: any;\n}\n\nexport function transformKeyToObject(key: string, value): Object {\n    const objectLevels: string[] = key.split('.').reverse();\n\n    return objectLevels.reduce<{}>((previousValue, currentValue) => {\n        return { [currentValue]: previousValue};\n    }, value);\n}\n\n@Injectable()\nexport class CardViewUpdateService {\n\n    // Observable sources\n    private itemUpdatedSource = new Subject<UpdateNotification>();\n    private itemClickedSource = new Subject<ClickNotification>();\n\n    // Observable streams\n    public itemUpdated$ = <Observable<UpdateNotification>> this.itemUpdatedSource.asObservable();\n    public itemClicked$ = <Observable<ClickNotification>> this.itemClickedSource.asObservable();\n\n    update(property: CardViewBaseItemModel, newValue: any) {\n        this.itemUpdatedSource.next({\n            target: property,\n            changed: transformKeyToObject(property.key, newValue)\n        });\n    }\n\n    clicked(property: CardViewBaseItemModel) {\n        this.itemClickedSource.next({\n            target: property\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { CardViewBoolItemModel } from '../../models/card-view-boolitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-boolitem.component.html',\n    styleUrls: ['./card-view-boolitem.component.scss']\n})\n\nexport class CardViewBoolItemComponent {\n\n    @Input()\n    property: CardViewBoolItemModel;\n\n    @Input()\n    editable: boolean;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    changed(change: MatCheckboxChange) {\n        this.cardViewUpdateService.update(this.property, change.checked );\n        this.property.value = change.checked;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MatDatetimepicker, DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { CardViewDateItemModel } from '../../models/card-view-dateitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { UserPreferencesService } from '../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../utils/moment-date-formats.model';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'adf-card-view-dateitem',\n    templateUrl: './card-view-dateitem.component.html',\n    styleUrls: ['./card-view-dateitem.component.scss']\n})\nexport class CardViewDateItemComponent implements OnInit {\n\n    public SHOW_FORMAT: string = 'MMM DD YY';\n\n    @Input()\n    property: CardViewDateItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('datetimePicker')\n    public datepicker: MatDatetimepicker<any>;\n\n    valueDate: Moment;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private dateAdapter: DateAdapter<Moment>,\n                private preferences: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.preferences.locale$.subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n        (<MomentDateAdapter> this.dateAdapter).overrideDisplyaFormat = this.SHOW_FORMAT;\n\n        if (this.property.value) {\n            this.valueDate = moment(this.property.value, this.SHOW_FORMAT);\n        }\n    }\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    showDatePicker() {\n        this.datepicker.open();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue) {\n            let momentDate = moment(newDateValue.value, this.SHOW_FORMAT, true);\n            if (momentDate.isValid()) {\n                this.valueDate = momentDate;\n                this.cardViewUpdateService.update(this.property, momentDate.toDate());\n                this.property.value = momentDate.toDate();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewMapItemModel } from '../../models/card-view-mapitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-mapitem',\n    templateUrl: './card-view-mapitem.component.html',\n    styleUrls: ['./card-view-mapitem.component.scss']\n})\n\nexport class CardViewMapItemComponent {\n    @Input()\n    property: CardViewMapItemModel;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-textitem',\n    templateUrl: './card-view-textitem.component.html',\n    styleUrls: ['./card-view-textitem.component.scss']\n})\nexport class CardViewTextItemComponent implements OnChanges {\n    @Input()\n    property: CardViewTextItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('editorInput')\n    private editorInput: any;\n\n    inEdit: boolean = false;\n    editedValue: string;\n    errorMessages: string[];\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {\n    }\n\n    ngOnChanges(): void {\n        this.editedValue = this.property.value;\n    }\n\n    showProperty(): boolean {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    isClickable(): boolean {\n        return this.property.clickable;\n    }\n\n    hasIcon(): boolean {\n        return !!this.property.icon;\n    }\n\n    hasErrors(): number {\n        return this.errorMessages && this.errorMessages.length;\n    }\n\n    setEditMode(editStatus: boolean): void {\n        this.inEdit = editStatus;\n        setTimeout(() => {\n            if (this.editorInput) {\n                this.editorInput.nativeElement.click();\n            }\n        }, 0);\n    }\n\n    reset(): void {\n        this.editedValue = this.property.value;\n        this.setEditMode(false);\n    }\n\n    update(): void {\n        if (this.property.isValid(this.editedValue)) {\n            this.cardViewUpdateService.update(this.property, this.editedValue);\n            this.property.value = this.editedValue;\n            this.setEditMode(false);\n        } else {\n            this.errorMessages = this.property.getValidationErrors(this.editedValue);\n        }\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { Observable } from 'rxjs';\nimport { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-selectitem',\n    templateUrl: './card-view-selectitem.component.html',\n    styleUrls: ['./card-view-selectitem.component.scss']\n})\nexport class CardViewSelectItemComponent implements OnChanges {\n    @Input() property: CardViewSelectItemModel<string>;\n\n    @Input() editable: boolean = false;\n\n    @Input() options$: Observable<CardViewSelectItemOption<string>[]>;\n\n    value: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges(): void {\n        this.value = this.property.value;\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    getOptions(): Observable<CardViewSelectItemOption<string>[]> {\n        return this.options$ || this.property.options$;\n    }\n\n    onChange(event: MatSelectChange): void {\n        this.cardViewUpdateService.update(this.property, event.value);\n        this.property.value = event.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { CardViewKeyValuePairsItemModel } from '../../models/card-view.models';\nimport { CardViewKeyValuePairsItemType } from '../../interfaces/card-view.interfaces';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-keyvaluepairsitem.component.html',\n    styleUrls: ['./card-view-keyvaluepairsitem.component.scss']\n})\n\nexport class CardViewKeyValuePairsItemComponent implements OnChanges {\n\n    @Input()\n    property: CardViewKeyValuePairsItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    values: CardViewKeyValuePairsItemType[];\n    matTableValues: MatTableDataSource<CardViewKeyValuePairsItemType>;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges() {\n        this.values = this.property.value || [];\n        this.matTableValues = new MatTableDataSource(this.values);\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    add(): void {\n        this.values.push({ name: '', value: '' });\n    }\n\n    remove(index: number): void {\n        this.values.splice(index, 1);\n        this.save(true);\n    }\n\n    onBlur(value): void {\n        if (value.length) {\n            this.save();\n        }\n    }\n\n    save(remove?: boolean): void {\n        const validValues = this.values.filter(i => i.name.length && i.value.length);\n\n        if (remove || validValues.length) {\n            this.cardViewUpdateService.update(this.property, validValues);\n            this.property.value = validValues;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getType(type: any): any {\n    return () => type;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Type } from '@angular/core';\nimport { getType } from './get-type';\n\nexport interface DynamicComponentModel { type: string; }\nexport type DynamicComponentResolveFunction = (model: DynamicComponentModel) => Type<{}>;\nexport class DynamicComponentResolver {\n    static fromType(type: Type<{}>): DynamicComponentResolveFunction {\n        return getType(type);\n    }\n}\n\nexport abstract class DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = undefined;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {};\n\n    /**\n     * Gets the currently active ComponentTypeResolver function for a field type.\n     * @param type The type whose resolver you want\n     * @param defaultValue Default type returned for types that are not yet mapped\n     * @returns Resolver function\n     */\n    getComponentTypeResolver(type: string, defaultValue: Type<{}> = this.defaultValue): DynamicComponentResolveFunction {\n        if (type) {\n            return this.types[type] || DynamicComponentResolver.fromType(defaultValue);\n        }\n        return DynamicComponentResolver.fromType(defaultValue);\n    }\n\n    /**\n     * Sets or optionally replaces a ComponentTypeResolver function for a field type.\n     * @param type The type whose resolver you want to set\n     * @param resolver The new resolver function\n     * @param override The new resolver will only replace an existing one if this parameter is true\n     */\n    setComponentTypeResolver(type: string, resolver: DynamicComponentResolveFunction, override: boolean = true) {\n        if (!type) {\n            throw new Error(`type is null or not defined`);\n        }\n\n        if (!resolver) {\n            throw new Error(`resolver is null or not defined`);\n        }\n\n        let existing = this.types[type];\n        if (existing && !override) {\n            throw new Error(`already mapped, use override option if you intend replacing existing mapping.`);\n        }\n\n        this.types[type] = resolver;\n    }\n\n    /**\n     * Finds the component type that is needed to render a form field.\n     * @param model Form field model for the field to render\n     * @param defaultValue Default type returned for field types that are not yet mapped.\n     * @returns Component type\n     */\n    resolveComponentType(model: DynamicComponentModel, defaultValue: Type<{}> = this.defaultValue): Type<{}> {\n        if (model) {\n            let resolver = this.getComponentTypeResolver(model.type, defaultValue);\n            return resolver(model);\n        }\n        return defaultValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { CardViewDateItemComponent } from '../components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewMapItemComponent } from '../components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from '../components/card-view-textitem/card-view-textitem.component';\nimport { CardViewSelectItemComponent } from '../components/card-view-selectitem/card-view-selectitem.component';\nimport { CardViewBoolItemComponent } from '../components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewKeyValuePairsItemComponent } from '../components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\n\n@Injectable()\nexport class CardItemTypeService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = CardViewTextItemComponent;\n\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'select': DynamicComponentResolver.fromType(CardViewSelectItemComponent),\n        'int': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'float': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'date': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'datetime': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'bool': DynamicComponentResolver.fromType(CardViewBoolItemComponent),\n        'map': DynamicComponentResolver.fromType(CardViewMapItemComponent),\n        'keyvaluepairs': DynamicComponentResolver.fromType(CardViewKeyValuePairsItemComponent)\n    };\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-card-view-content-proxy]'\n})\nexport class CardViewContentProxyDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    OnChanges,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\nimport { CardItemTypeService } from '../../services/card-item-types.service';\nimport { CardViewContentProxyDirective } from '../../directives/card-view-content-proxy.directive';\n\n@Component({\n    selector: 'adf-card-view-item-dispatcher',\n    template: '<ng-template adf-card-view-content-proxy></ng-template>'\n})\nexport class CardViewItemDispatcherComponent implements OnChanges {\n    @Input()\n    property: CardViewItem;\n\n    @Input()\n    editable: boolean;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild(CardViewContentProxyDirective)\n    private content: CardViewContentProxyDirective;\n\n    private loaded: boolean = false;\n    private componentReference: any = null;\n\n    public ngOnInit;\n    public ngDoCheck;\n\n    constructor(private cardItemTypeService: CardItemTypeService,\n                private resolver: ComponentFactoryResolver) {\n        const dynamicLifecycleMethods = [\n            'ngOnInit',\n            'ngDoCheck',\n            'ngAfterContentInit',\n            'ngAfterContentChecked',\n            'ngAfterViewInit',\n            'ngAfterViewChecked',\n            'ngOnDestroy'\n        ];\n\n        dynamicLifecycleMethods.forEach((dynamicLifecycleMethod) => {\n            this[dynamicLifecycleMethod] = this.proxy.bind(this, dynamicLifecycleMethod);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        Object.keys(changes)\n            .map(changeName => [changeName, changes[changeName]])\n            .forEach(([inputParamName, simpleChange]: [string, SimpleChange]) => {\n                this.componentReference.instance[inputParamName] = simpleChange.currentValue;\n            });\n\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const factoryClass = this.cardItemTypeService.resolveComponentType(this.property);\n\n        const factory = this.resolver.resolveComponentFactory(factoryClass);\n        this.componentReference = this.content.viewContainerRef.createComponent(factory);\n\n        this.componentReference.instance.editable = this.editable;\n        this.componentReference.instance.property = this.property;\n        this.componentReference.instance.displayEmpty = this.displayEmpty;\n    }\n\n    private proxy(methodName, ...args) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName].apply(this.componentReference.instance, args);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemIntValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.INT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(value) && (function(x) { return (x | 0) === x; })(parseFloat(value));\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemFloatValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.FLOAT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemProperties, CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport abstract class CardViewBaseItemModel {\n    label: string;\n    value: any;\n    key: any;\n    default: any;\n    editable: boolean;\n    clickable: boolean;\n    icon?: string;\n    validators?: CardViewItemValidator[];\n    data?: any;\n\n    constructor(obj: CardViewItemProperties) {\n        this.label = obj.label || '';\n        this.value = obj.value;\n        this.key = obj.key;\n        this.default = obj.default;\n        this.editable = !!obj.editable;\n        this.clickable = !!obj.clickable;\n        this.icon = obj.icon || '';\n        this.validators = obj.validators || [];\n        this.data = obj.data || null;\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value === '';\n    }\n\n    isValid(newValue: any): boolean {\n        if (!this.validators.length) {\n            return true;\n        }\n\n        return this.validators\n            .map(validator => validator.isValid(newValue))\n            .reduce((isValidUntilNow, isValid) => isValidUntilNow && isValid, true);\n    }\n\n    getValidationErrors(value): string[] {\n        if (!this.validators.length) {\n            return [];\n        }\n\n        return this.validators.filter(validator => !validator.isValid(value)).map(validator => validator.message);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewBoolItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewBoolItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'bool';\n    value: boolean = false;\n    default: boolean;\n\n    constructor(obj: CardViewBoolItemProperties) {\n        super(obj);\n\n        if (obj.value !== undefined) {\n            this.value = !!JSON.parse(obj.value);\n        }\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.value;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewDateItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewDateItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'date';\n    format: string = 'MMM DD YYYY';\n\n    constructor(obj: CardViewDateItemProperties) {\n        super(obj);\n\n        if (obj.format) {\n            this.format = obj.format;\n        }\n\n    }\n\n    get displayValue() {\n        if (!this.value) {\n            return this.default;\n        } else {\n            return moment(this.value).format(this.format);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewDateItemModel } from './card-view-dateitem.model';\n\nexport class CardViewDatetimeItemModel extends CardViewDateItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'datetime';\n    format: string = 'MMM DD YYYY HH:mm';\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewTextItemPipeProperty, CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewTextItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'text';\n    multiline?: boolean;\n    pipes?: CardViewTextItemPipeProperty[];\n\n    constructor(obj: CardViewTextItemProperties) {\n        super(obj);\n        this.multiline = !!obj.multiline ;\n        this.pipes = obj.pipes || [];\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.applyPipes(this.value);\n        }\n    }\n\n    private applyPipes(displayValue) {\n        if (this.pipes.length) {\n            displayValue = this.pipes.reduce((accumulator, { pipe, params = [] }) => {\n                return pipe.transform(accumulator, ...params);\n            }, displayValue);\n        }\n\n        return displayValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemFloatValidator } from '..//validators/card-view.validators';\n\nexport class CardViewFloatItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'float';\n\n    constructor(obj: CardViewTextItemProperties) {\n        super(obj);\n\n        this.validators.push(new CardViewItemFloatValidator());\n        if (obj.value) {\n            this.value = parseFloat(obj.value);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemIntValidator } from '../validators/card-view.validators';\n\nexport class CardViewIntItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'int';\n\n    constructor(obj: CardViewTextItemProperties) {\n        super(obj);\n\n        this.validators.push(new CardViewItemIntValidator());\n        if (obj.value) {\n            this.value = parseInt(obj.value, 10);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\n\nexport class CardViewMapItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'map';\n    value: Map<string, string>;\n\n    get displayValue() {\n        if (this.value && this.value.size > 0) {\n            return this.value.values().next().value;\n        } else {\n            return this.default;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewKeyValuePairsItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewKeyValuePairsItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'keyvaluepairs';\n\n    constructor(obj: CardViewKeyValuePairsItemProperties) {\n        super(obj);\n    }\n\n    get displayValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewSelectItemProperties, CardViewSelectItemOption } from '../interfaces/card-view.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport class CardViewSelectItemModel<T> extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'select';\n    options$: Observable<CardViewSelectItemOption<T>[]>;\n\n    constructor(obj: CardViewSelectItemProperties<T>) {\n        super(obj);\n\n        this.options$ = obj.options$;\n    }\n\n    get displayValue() {\n        return this.options$.pipe(\n            switchMap(options => {\n                const option = options.find(o => o.key === this.value);\n                return of(option ? option.label : '');\n            })\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatNativeDateModule,\n    MatSelectModule\n} from '@angular/material';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CardViewContentProxyDirective } from './directives/card-view-content-proxy.directive';\nimport { CardViewComponent } from './components/card-view/card-view.component';\nimport { CardViewBoolItemComponent } from './components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewDateItemComponent } from './components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewItemDispatcherComponent } from './components/card-view-item-dispatcher/card-view-item-dispatcher.component';\nimport { CardViewMapItemComponent } from './components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from './components/card-view-textitem/card-view-textitem.component';\nimport { CardViewKeyValuePairsItemComponent } from './components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { CardViewSelectItemComponent } from './components/card-view-selectitem/card-view-selectitem.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        TranslateModule.forChild(),\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewKeyValuePairsItemComponent,\n        CardViewSelectItemComponent,\n        CardViewItemDispatcherComponent,\n        CardViewContentProxyDirective\n    ],\n    entryComponents: [\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ],\n    exports: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ]\n})\nexport class CardViewModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from '../services/storage.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable()\nexport class DebugAppConfigService extends AppConfigService {\n    constructor(private storage: StorageService, http: HttpClient) {\n        super(http);\n    }\n\n    /** @override */\n    get<T>(key: string, defaultValue?: T): T {\n        if (key === AppConfigValues.OAUTHCONFIG) {\n            return <T> (JSON.parse(this.storage.getItem(key)) || super.get<T>(key, defaultValue));\n        } else {\n            return <T> (<any> this.storage.getItem(key) || super.get<T>(key, defaultValue));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from './app-config.service';\n\n@Pipe({\n    name: 'adfAppConfig'\n})\nexport class AppConfigPipe implements PipeTransform {\n    constructor(private config: AppConfigService) {}\n\n    transform(value: string, fallback: any): any {\n        return this.config.get(value, fallback);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppConfigPipe } from './app-config.pipe';\n\n@NgModule({\n    imports: [\n        HttpClientModule\n    ],\n    declarations: [\n        AppConfigPipe\n    ],\n    exports: [\n        AppConfigPipe\n    ]\n})\nexport class AppConfigModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\n\nexport class FormEvent {\n\n    private isDefaultPrevented: boolean = false;\n\n    readonly form: FormModel;\n\n    constructor(form: FormModel) {\n        this.form = form;\n    }\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormErrorEvent extends FormEvent {\n\n    readonly error: any;\n\n    constructor(form: FormModel, error: any) {\n        super(form);\n        this.error = error;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormFieldEvent extends FormEvent {\n\n    readonly field: FormFieldModel;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form);\n        this.field = field;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateFormFieldEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\nimport { FormFieldModel } from '../components/widgets/core/form-field.model';\n\nexport class ValidateFormEvent extends FormEvent {\n\n    isValid = true;\n    errorsField: FormFieldModel[] = [];\n\n    constructor(form: FormModel) {\n        super(form);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicRowValidationSummary } from '../components/widgets/dynamic-table/dynamic-row-validation-summary.model';\nimport { DynamicTableRow } from '../components/widgets/dynamic-table/dynamic-table-row.model';\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateDynamicTableRowEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel,\n                field: FormFieldModel,\n                public row: DynamicTableRow,\n                public summary: DynamicRowValidationSummary) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '../../services/log.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormModel } from '../components/widgets/core/form.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class EcmModelService {\n\n    public static MODEL_NAMESPACE: string = 'activitiForms';\n    public static MODEL_NAME: string = 'activitiFormsModel';\n    public static TYPE_MODEL: string = 'cm:folder';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public createEcmTypeForActivitiForm(formName: string, form: FormModel): Observable<any> {\n        return Observable.create(observer => {\n            this.searchActivitiEcmModel().subscribe(\n                model => {\n                    if (!model) {\n                        this.createActivitiEcmModel(formName, form).subscribe(typeForm => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    } else {\n                        this.saveFomType(formName, form).subscribe(typeForm => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    }\n                },\n                err => this.handleError(err)\n            );\n        });\n\n    }\n\n    searchActivitiEcmModel() {\n        return this.getEcmModels().pipe(map(function (ecmModels: any) {\n            return ecmModels.list.entries.find(model => model.entry.name === EcmModelService.MODEL_NAME);\n        }));\n    }\n\n    createActivitiEcmModel(formName: string, form: FormModel): Observable<any> {\n        return Observable.create(observer => {\n            this.createEcmModel(EcmModelService.MODEL_NAME, EcmModelService.MODEL_NAMESPACE).subscribe(\n                model => {\n                    this.logService.info('model created', model);\n                    this.activeEcmModel(EcmModelService.MODEL_NAME).subscribe(\n                        modelActive => {\n                            this.logService.info('model active', modelActive);\n                            this.createEcmTypeWithProperties(formName, form).subscribe(typeCreated => {\n                                observer.next(typeCreated);\n                                observer.complete();\n                            });\n                        },\n                        err => this.handleError(err)\n                    );\n                },\n                err => this.handleError(err)\n            );\n        });\n    }\n\n    saveFomType(formName: string, form: FormModel): Observable<any> {\n        return Observable.create(observer => {\n            this.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                ecmType => {\n                    this.logService.info('custom types', ecmType);\n                    if (!ecmType) {\n                        this.createEcmTypeWithProperties(formName, form).subscribe(typeCreated => {\n                            observer.next(typeCreated);\n                            observer.complete();\n                        });\n                    } else {\n                        observer.next(ecmType);\n                        observer.complete();\n                    }\n                },\n                err => this.handleError(err)\n            );\n        });\n    }\n\n    public createEcmTypeWithProperties(formName: string, form: FormModel): Observable<any> {\n        return Observable.create(observer => {\n            this.createEcmType(formName, EcmModelService.MODEL_NAME, EcmModelService.TYPE_MODEL).subscribe(\n                typeCreated => {\n                    this.logService.info('type Created', typeCreated);\n                    this.addPropertyToAType(EcmModelService.MODEL_NAME, formName, form).subscribe(\n                        properyAdded => {\n                            this.logService.info('property Added', properyAdded);\n                            observer.next(typeCreated);\n                            observer.complete();\n                        },\n                        err => this.handleError(err));\n                },\n                err => this.handleError(err));\n        });\n    }\n\n    public searchEcmType(typeName: string, modelName: string): Observable<any> {\n        return this.getEcmType(modelName).pipe(map(function (customTypes: any) {\n            return customTypes.list.entries.find(type => type.entry.prefixedName === typeName || type.entry.title === typeName);\n        }));\n    }\n\n    public activeEcmModel(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.activateCustomModel(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    public createEcmModel(modelName: string, nameSpace: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.createCustomModel('DRAFT', '', modelName, modelName, nameSpace))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    public getEcmModels(): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomModel())\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    public getEcmType(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomType(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    public createEcmType(typeName: string, modelName: string, parentType: string): Observable<any> {\n        let name = this.cleanNameType(typeName);\n\n        return from(this.apiService.getInstance().core.customModelApi.createCustomType(modelName, name, parentType, typeName, ''))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    public addPropertyToAType(modelName: string, typeName: string, formFields: any) {\n        let name = this.cleanNameType(typeName);\n\n        let properties = [];\n        if (formFields && formFields.values) {\n            for (let key in formFields.values) {\n                if (key) {\n                    properties.push({\n                        name: key,\n                        title: key,\n                        description: key,\n                        dataType: 'd:text',\n                        multiValued: false,\n                        mandatory: false,\n                        mandatoryEnforced: false\n                    });\n                }\n            }\n        }\n\n        return from(this.apiService.getInstance().core.customModelApi.addPropertyToType(modelName, name, properties))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n\n    }\n\n    cleanNameType(name: string): string {\n        let cleanName = name;\n        if (name.indexOf(':') !== -1) {\n            cleanName = name.split(':')[1];\n        }\n        return cleanName.replace(/[^a-zA-Z ]/g, '');\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    handleError(err: any): any {\n        this.logService.error(err);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class FormDefinitionModel {\n    reusable: boolean = false;\n    newVersion: boolean = false;\n    formRepresentation: any;\n    formImageBase64: string = '';\n\n    constructor(id: string, name: any, lastUpdatedByFullName: string, lastUpdated: string, metadata: any) {\n\n        this.formRepresentation = {\n            id: id,\n            name: name,\n            description: '',\n            version: 1,\n            lastUpdatedBy: 1,\n            lastUpdatedByFullName: lastUpdatedByFullName,\n            lastUpdated: lastUpdated,\n            stencilSetId: 0,\n            referenceId: null,\n            formDefinition: {\n                fields: [{\n                    name: 'Label',\n                    type: 'container',\n                    fieldType: 'ContainerRepresentation',\n                    numberOfColumns: 2,\n                    required: false,\n                    readOnly: false,\n                    sizeX: 2,\n                    sizeY: 1,\n                    row: -1,\n                    col: -1,\n                    fields: {'1': this.metadataToFields(metadata)}\n                }],\n                gridsterForm: false,\n                javascriptEvents: [],\n                metadata: {},\n                outcomes: [],\n                className: '',\n                style: '',\n                tabs: [],\n                variables: []\n            }\n        };\n    }\n\n    private metadataToFields(metadata: any): any[] {\n        let fields = [];\n        if (metadata) {\n            metadata.forEach(function(property) {\n                if (property) {\n                    let field = {\n                        type: 'text',\n                        id: property.name,\n                        name: property.name,\n                        required: false,\n                        readOnly: false,\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        colspan: 1,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        layout: {\n                            colspan: 1,\n                            row: -1,\n                            column: -1\n                        }\n                    };\n                    fields.push(field);\n                }\n            });\n        }\n\n        return fields;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nexport class FormFieldTypes {\n    static CONTAINER: string = 'container';\n    static GROUP: string = 'group';\n    static DYNAMIC_TABLE: string = 'dynamic-table';\n    static TEXT: string = 'text';\n    static MULTILINE_TEXT: string = 'multi-line-text';\n    static DROPDOWN: string = 'dropdown';\n    static HYPERLINK: string = 'hyperlink';\n    static RADIO_BUTTONS: string = 'radio-buttons';\n    static DISPLAY_VALUE: string = 'readonly';\n    static READONLY_TEXT: string = 'readonly-text';\n    static UPLOAD: string = 'upload';\n    static TYPEAHEAD: string = 'typeahead';\n    static FUNCTIONAL_GROUP: string = 'functional-group';\n    static PEOPLE: string = 'people';\n    static BOOLEAN: string = 'boolean';\n    static NUMBER: string = 'integer';\n    static DATE: string = 'date';\n    static AMOUNT: string = 'amount';\n    static DOCUMENT: string = 'document';\n    static DATETIME: string = 'datetime';\n\n    static READONLY_TYPES: string[] = [\n        FormFieldTypes.HYPERLINK,\n        FormFieldTypes.DISPLAY_VALUE,\n        FormFieldTypes.READONLY_TEXT\n    ];\n\n    static isReadOnlyType(type: string) {\n        return FormFieldTypes.READONLY_TYPES.indexOf(type) > -1;\n    }\n\n    static isContainerType(type: string) {\n        return type === FormFieldTypes.CONTAINER || type === FormFieldTypes.GROUP;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormModel } from './form.model';\n\nexport abstract class FormWidgetModel {\n\n    readonly fieldType: string;\n    readonly id: string;\n    readonly name: string;\n    readonly type: string;\n    readonly tab: string;\n\n    readonly form: FormModel;\n    readonly json: any;\n\n    constructor(form: FormModel, json: any) {\n        this.form = form;\n        this.json = json;\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this.tab = json.tab;\n        }\n    }\n}\n\nexport interface FormWidgetModelCache<T extends FormWidgetModel> {\n    [key: string]: T;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\n\nexport class ContainerColumnModel {\n\n    size: number = 12;\n    fields: FormFieldModel[] = [];\n    colspan: number = 1;\n    rowspan: number = 1;\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nexport class ErrorMessageModel {\n\n    message: string = '';\n    attributes: Map<string, string> = null;\n\n    constructor(obj?: any) {\n        this.message = obj && obj.message ? obj.message : '';\n        this.attributes = new Map();\n    }\n\n    isActive() {\n        return this.message ? true : false;\n    }\n\n    getAttributesAsJsonObj() {\n        let result = {};\n        if (this.attributes.size > 0) {\n            let obj = Object.create(null);\n            this.attributes.forEach((value, key) => {\n                obj[key] = value;\n            });\n            result = JSON.stringify(obj);\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\n\nexport interface FormFieldValidator {\n\n    isSupported(field: FormFieldModel): boolean;\n    validate(field: FormFieldModel): boolean;\n\n}\n\nexport class RequiredFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT,\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.BOOLEAN,\n        FormFieldTypes.TYPEAHEAD,\n        FormFieldTypes.DROPDOWN,\n        FormFieldTypes.PEOPLE,\n        FormFieldTypes.FUNCTIONAL_GROUP,\n        FormFieldTypes.RADIO_BUTTONS,\n        FormFieldTypes.UPLOAD,\n        FormFieldTypes.AMOUNT,\n        FormFieldTypes.DYNAMIC_TABLE,\n        FormFieldTypes.DATE,\n        FormFieldTypes.DATETIME\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.required;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n\n            if (field.type === FormFieldTypes.DROPDOWN) {\n                if (field.hasEmptyValue && field.emptyOption) {\n                    if (field.value === field.emptyOption.id) {\n                        return false;\n                    }\n                }\n            }\n\n            if (field.type === FormFieldTypes.RADIO_BUTTONS) {\n                let option = field.options.find(opt => opt.id === field.value);\n                return !!option;\n            }\n\n            if (field.type === FormFieldTypes.UPLOAD) {\n                return field.value && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.DYNAMIC_TABLE) {\n                return field.value && field.value instanceof Array && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.BOOLEAN) {\n                return field.value ? true : false;\n            }\n\n            if (field.value === null || field.value === undefined || field.value === '') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nexport class NumberFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    static isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (field.value === null ||\n                field.value === undefined ||\n                field.value === '') {\n                return true;\n            }\n            let valueStr = '' + field.value;\n            let pattern = new RegExp(/^-?\\d+$/);\n            if (field.enableFractions) {\n                pattern = new RegExp(/^-?[0-9]+(\\.[0-9]{1,2})?$/);\n            }\n            if (valueStr.match(pattern)) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_NUMBER';\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class DateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    // Validates that the input string is a valid date formatted as <dateFormat> (default D-M-YYYY)\n    static isValidDate(inputDate: string, dateFormat: string = 'D-M-YYYY'): boolean {\n        if (inputDate) {\n            let d = moment(inputDate, dateFormat, true);\n            return d.isValid();\n        }\n\n        return false;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (DateFieldValidator.isValidDate(field.value, field.dateDisplayFormat)) {\n                return true;\n            }\n            field.validationSummary.message = field.dateDisplayFormat;\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinDateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDate(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDate(field: FormFieldModel, dateFormat: string): boolean {\n        const MIN_DATE_FORMAT = 'DD-MM-YYYY';\n        let isValid = true;\n        // remove time and timezone info\n        let fieldValueData;\n        if (typeof field.value === 'string') {\n            fieldValueData = moment(field.value.split('T')[0], dateFormat);\n        } else {\n            fieldValueData = field.value;\n        }\n        let min = moment(field.minValue, MIN_DATE_FORMAT);\n\n        if (fieldValueData.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).toLocaleUpperCase());\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateFieldValidator implements FormFieldValidator {\n\n    MAX_DATE_FORMAT = 'DD-MM-YYYY';\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                return false;\n            }\n\n            // remove time and timezone info\n            let d;\n            if (typeof field.value === 'string') {\n                d = moment(field.value.split('T')[0], dateFormat);\n            } else {\n                d = field.value;\n            }\n            let max = moment(field.maxValue, this.MAX_DATE_FORMAT);\n\n            if (d.isAfter(max)) {\n                field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n                field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).toLocaleUpperCase());\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport class MinDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MIN_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        let min = moment(field.minValue, this.MIN_DATETIME_FORMAT);\n\n        if (fieldValueDate.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MAX_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        let max = moment(field.maxValue, this.MAX_DATETIME_FORMAT);\n\n        if (fieldValueDate.isAfter(max)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MinLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.minLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length >= field.minLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.AT_LEAST_LONG`;\n            field.validationSummary.attributes.set('minLength', field.minLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MaxLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.maxLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length <= field.maxLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NO_LONGER_THAN`;\n            field.validationSummary.attributes.set('maxLength', field.maxLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.minValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            let value: number = +field.value;\n            let minValue: number = +field.minValue;\n\n            if (value >= minValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', field.minValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class MaxValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.maxValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            let value: number = +field.value;\n            let maxValue: number = +field.maxValue;\n\n            if (value <= maxValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', field.maxValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class RegExFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.regexPattern;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length > 0 && field.value.match(new RegExp('^' + field.regexPattern + '$'))) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            return false;\n        }\n        return true;\n    }\n\n}\n\nexport class FixedValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TYPEAHEAD\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    hasValidNameOrValidId(field: FormFieldModel): boolean {\n        return this.hasValidName(field) || this.hasValidId(field);\n    }\n\n    hasValidName(field: FormFieldModel) {\n        return field.options.find(item => item.name && item.name.toLocaleLowerCase() === field.value.toLocaleLowerCase()) ? true : false;\n    }\n\n    hasValidId(field: FormFieldModel) {\n        return field.options[field.value - 1] ? true : false;\n    }\n\n    hasStringValue(field: FormFieldModel) {\n        return field.value && typeof field.value === 'string';\n    }\n\n    hasOptions(field: FormFieldModel) {\n        return field.options && field.options.length > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (this.hasStringValue(field) && this.hasOptions(field) && !this.hasValidNameOrValidId(field)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport const FORM_FIELD_VALIDATORS = [\n    new RequiredFieldValidator(),\n    new NumberFieldValidator(),\n    new MinLengthFieldValidator(),\n    new MaxLengthFieldValidator(),\n    new MinValueFieldValidator(),\n    new MaxValueFieldValidator(),\n    new RegExFieldValidator(),\n    new DateFieldValidator(),\n    new MinDateFieldValidator(),\n    new MaxDateFieldValidator(),\n    new FixedValueFieldValidator(),\n    new MinDateTimeFieldValidator(),\n    new MaxDateTimeFieldValidator()\n];\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\nimport moment from 'moment-es6';\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { ContainerColumnModel } from './container-column.model';\nimport { ErrorMessageModel } from './error-message.model';\nimport { FormFieldMetadata } from './form-field-metadata';\nimport { FormFieldOption } from './form-field-option';\nimport { FormFieldTypes } from './form-field-types';\nimport { NumberFieldValidator } from './form-field-validator';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\n// Maps to FormFieldRepresentation\nexport class FormFieldModel extends FormWidgetModel {\n\n    private _value: string;\n    private _readOnly: boolean = false;\n    private _isValid: boolean = true;\n    private _required: boolean = false;\n\n    readonly defaultDateFormat: string = 'D-M-YYYY';\n    readonly deafultDateTimeFormat: string = 'D-M-YYYY hh:mm A';\n\n    // model members\n    fieldType: string;\n    id: string;\n    name: string;\n    type: string;\n    overrideId: boolean;\n    tab: string;\n    rowspan: number = 1;\n    colspan: number = 1;\n    placeholder: string = null;\n    minLength: number = 0;\n    maxLength: number = 0;\n    minValue: string;\n    maxValue: string;\n    regexPattern: string;\n    options: FormFieldOption[] = [];\n    restUrl: string;\n    restResponsePath: string;\n    restIdProperty: string;\n    restLabelProperty: string;\n    hasEmptyValue: boolean;\n    className: string;\n    optionType: string;\n    params: FormFieldMetadata = {};\n    hyperlinkUrl: string;\n    displayText: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel = null;\n    enableFractions: boolean = false;\n    currency: string = null;\n    dateDisplayFormat: string = this.dateDisplayFormat || this.defaultDateFormat;\n\n    // container model members\n    numberOfColumns: number = 1;\n    fields: FormFieldModel[] = [];\n    columns: ContainerColumnModel[] = [];\n\n    // util members\n    emptyOption: FormFieldOption;\n    validationSummary: ErrorMessageModel;\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(v: any) {\n        this._value = v;\n        this.updateForm();\n    }\n\n    get readOnly(): boolean {\n        if (this.form && this.form.readOnly) {\n            return true;\n        }\n        return this._readOnly;\n    }\n\n    set readOnly(readOnly: boolean) {\n        this._readOnly = readOnly;\n        this.updateForm();\n    }\n\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = value;\n        this.updateForm();\n    }\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    validate(): boolean {\n        this.validationSummary = new ErrorMessageModel();\n\n        if (!this.readOnly) {\n            let validators = this.form.fieldValidators || [];\n            for (let validator of validators) {\n                if (!validator.validate(this)) {\n                    this._isValid = false;\n                    return this._isValid;\n                }\n            }\n        }\n\n        this._isValid = true;\n        return this._isValid;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this._required = <boolean> json.required;\n            this._readOnly = <boolean> json.readOnly || json.type === 'readonly';\n            this.overrideId = <boolean> json.overrideId;\n            this.tab = json.tab;\n            this.restUrl = json.restUrl;\n            this.restResponsePath = json.restResponsePath;\n            this.restIdProperty = json.restIdProperty;\n            this.restLabelProperty = json.restLabelProperty;\n            this.colspan = <number> json.colspan;\n            this.minLength = <number> json.minLength || 0;\n            this.maxLength = <number> json.maxLength || 0;\n            this.minValue = json.minValue;\n            this.maxValue = json.maxValue;\n            this.regexPattern = json.regexPattern;\n            this.options = <FormFieldOption[]> json.options || [];\n            this.hasEmptyValue = <boolean> json.hasEmptyValue;\n            this.className = json.className;\n            this.optionType = json.optionType;\n            this.params = <FormFieldMetadata> json.params || {};\n            this.hyperlinkUrl = json.hyperlinkUrl;\n            this.displayText = json.displayText;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n            this.enableFractions = <boolean> json.enableFractions;\n            this.currency = json.currency;\n            this.dateDisplayFormat = json.dateDisplayFormat || this.getDefaultDateFormat(json);\n            this._value = this.parseValue(json);\n            this.validationSummary = new ErrorMessageModel();\n\n            if (json.placeholder && json.placeholder !== '' && json.placeholder !== 'null') {\n                this.placeholder = json.placeholder;\n            }\n\n            if (FormFieldTypes.isReadOnlyType(json.type)) {\n                if (json.params && json.params.field) {\n                    if (form.processVariables) {\n                        const processVariable = this.getProcessVariableValue(json.params.field, form);\n                        if (processVariable) {\n                            this.value = processVariable;\n                        }\n                    } else if (json.params.field.responseVariable) {\n                        const formVariable = this.getVariablesValue(json.params.field.name, form);\n                        if (formVariable) {\n                            this.value = formVariable;\n                        }\n                    }\n                }\n            }\n\n            if (FormFieldTypes.isContainerType(json.type)) {\n                this.containerFactory(json, form);\n            }\n        }\n\n        if (this.hasEmptyValue && this.options && this.options.length > 0) {\n            this.emptyOption = this.options[0];\n        }\n\n        this.updateForm();\n    }\n\n    private getDefaultDateFormat(jsonField: any): string {\n        let originalType = jsonField.type;\n        if (FormFieldTypes.isReadOnlyType(jsonField.type) &&\n            jsonField.params &&\n            jsonField.params.field) {\n            originalType = jsonField.params.field.type;\n        }\n        return originalType === FormFieldTypes.DATETIME ? this.deafultDateTimeFormat : this.defaultDateFormat;\n    }\n\n    private isTypeaHeadFieldType(type: string): boolean {\n        return type === 'typeahead' ? true : false;\n    }\n\n    private getFieldNameWithLabel(name: string): string {\n        return name += '_LABEL';\n    }\n\n    private getProcessVariableValue(field: any, form: FormModel) {\n        let fieldName = field.name;\n        if (this.isTypeaHeadFieldType(field.type)) {\n            fieldName = this.getFieldNameWithLabel(field.id);\n        }\n        return this.findProcessVariableValue(fieldName, form);\n    }\n\n    private getVariablesValue(variableName: string, form: FormModel) {\n        let variable = form.json.variables.find((currentVariable) => {\n            return currentVariable.name === variableName;\n        });\n\n        if (variable) {\n            if (variable.type === 'boolean') {\n                return JSON.parse(variable.value);\n            }\n\n            return variable.value;\n        }\n\n        return null;\n    }\n\n    private findProcessVariableValue(variableName: string, form: FormModel) {\n        if (form.processVariables) {\n            const variable = form.processVariables.find((currentVariable) => {\n                return currentVariable.name === variableName;\n            });\n\n            if (variable) {\n                return variable.type === 'boolean' ? JSON.parse(variable.value) : variable.value;\n            }\n        }\n\n        return undefined;\n    }\n\n    private containerFactory(json: any, form: FormModel): void {\n        this.numberOfColumns = <number> json.numberOfColumns || 1;\n\n        this.fields = json.fields;\n\n        this.rowspan = 1;\n        this.colspan = 1;\n\n        if (json.fields) {\n            for (let currentField in json.fields) {\n                if (json.fields.hasOwnProperty(currentField)) {\n                    let col = new ContainerColumnModel();\n\n                    let fields: FormFieldModel[] = (json.fields[currentField] || []).map(f => new FormFieldModel(form, f));\n                    col.fields = fields;\n                    col.rowspan = json.fields[currentField].length;\n\n                    col.fields.forEach((colFields: any) => {\n                        this.colspan = colFields.colspan > this.colspan ? colFields.colspan : this.colspan;\n                    });\n\n                    this.rowspan = this.rowspan < col.rowspan ? col.rowspan : this.rowspan;\n                    this.columns.push(col);\n                }\n            }\n        }\n    }\n\n    parseValue(json: any): any {\n        let value = json.value;\n\n        /*\n         This is needed due to Activiti issue related to reading dropdown values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.DROPDOWN) {\n            if (json.hasEmptyValue && json.options) {\n                let options = <FormFieldOption[]> json.options || [];\n                if (options.length > 0) {\n                    let emptyOption = json.options[0];\n                    if (value === '' || value === emptyOption.id || value === emptyOption.name) {\n                        value = emptyOption.id;\n                    } else if (value.id && value.name) {\n                        value = value.id;\n                    }\n                }\n            }\n        }\n\n        /*\n         This is needed due to Activiti issue related to reading radio button values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.RADIO_BUTTONS) {\n            // Activiti has a bug with default radio button value where initial selection passed as `name` value\n            // so try resolving current one with a fallback to first entry via name or id\n            // TODO: needs to be reported and fixed at Activiti side\n            let entry: FormFieldOption[] = this.options.filter(opt =>\n                opt.id === value || opt.name === value || (value && (opt.id === value.id || opt.name === value.name)));\n            if (entry.length > 0) {\n                value = entry[0].id;\n            }\n        }\n\n        /*\n         This is needed due to Activiti displaying/editing dates in d-M-YYYY format\n         but storing on server in ISO8601 format (i.e. 2013-02-04T22:44:30.652Z)\n         */\n        if (this.isDateField(json) || this.isDateTimeField(json)) {\n            if (value) {\n                let dateValue;\n                if (NumberFieldValidator.isNumber(value)) {\n                    dateValue = moment(value);\n                } else {\n                    dateValue = this.isDateTimeField(json) ? moment(value, 'YYYY-MM-DD hh:mm A') : moment(value.split('T')[0], 'YYYY-M-D');\n                }\n                if (dateValue && dateValue.isValid()) {\n                    value = dateValue.format(this.dateDisplayFormat);\n                }\n            }\n        }\n\n        return value;\n    }\n\n    updateForm() {\n        if (!this.form) {\n            return;\n        }\n\n        switch (this.type) {\n            case FormFieldTypes.DROPDOWN:\n                /*\n                 This is needed due to Activiti reading dropdown values as string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                if (this.value === 'empty' || this.value === '') {\n                    this.form.values[this.id] = {};\n                } else {\n                    let entry: FormFieldOption[] = this.options.filter(opt => opt.id === this.value);\n                    if (entry.length > 0) {\n                        this.form.values[this.id] = entry[0];\n                    }\n                }\n                break;\n            case FormFieldTypes.RADIO_BUTTONS:\n                /*\n                 This is needed due to Activiti issue related to reading radio button values as value string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                let rbEntry: FormFieldOption[] = this.options.filter(opt => opt.id === this.value);\n                if (rbEntry.length > 0) {\n                    this.form.values[this.id] = rbEntry[0];\n                }\n                break;\n            case FormFieldTypes.UPLOAD:\n                if (this.value && this.value.length > 0) {\n                    this.form.values[this.id] = this.value.map(elem => elem.id).join(',');\n                } else {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.TYPEAHEAD:\n                let taEntry: FormFieldOption[] = this.options.filter(opt => opt.id === this.value || opt.name === this.value);\n                if (taEntry.length > 0) {\n                    this.form.values[this.id] = taEntry[0];\n                } else if (this.options.length > 0) {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.DATE:\n                let dateValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateValue && dateValue.isValid()) {\n                    this.form.values[this.id] = `${dateValue.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.DATETIME:\n                const dateTimeValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateTimeValue && dateTimeValue.isValid()) {\n                    this.form.values[this.id] = dateTimeValue.format('YYYY-MM-DDTHH:mm:ssZ');\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.NUMBER:\n                this.form.values[this.id] = parseInt(this.value, 10);\n                break;\n            case FormFieldTypes.AMOUNT:\n                this.form.values[this.id] = this.enableFractions ? parseFloat(this.value) : parseInt(this.value, 10);\n                break;\n            default:\n                if (!FormFieldTypes.isReadOnlyType(this.type) && !this.isInvalidFieldType(this.type)) {\n                    this.form.values[this.id] = this.value;\n                }\n        }\n\n        this.form.onFormFieldChanged(this);\n    }\n\n    /**\n     * Skip the invalid field type\n     * @param type\n     */\n    isInvalidFieldType(type: string) {\n        if (type === 'container') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getOptionName(): string {\n        let option: FormFieldOption = this.options.find(opt => opt.id === this.value);\n        return option ? option.name : null;\n    }\n\n    hasOptions() {\n        return this.options && this.options.length > 0;\n    }\n\n    private isDateField(json: any) {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATE ) ||\n                json.type === FormFieldTypes.DATE;\n    }\n\n    private isDateTimeField(json: any): boolean {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATETIME) ||\n                json.type === FormFieldTypes.DATETIME;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\nimport { FormWidgetModel } from './form-widget.model';\n\nexport class ContainerModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n\n    get isVisible(): boolean {\n        return this.field.isVisible;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field.form, field.json);\n\n        if (field) {\n            this.field = field;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class FormOutcomeModel extends FormWidgetModel {\n\n    static SAVE_ACTION: string = 'Save';            // Activiti 'Save' action name\n    static COMPLETE_ACTION: string = 'Complete';    // Activiti 'Complete' action name\n    static START_PROCESS_ACTION: string = 'Start Process';    // Activiti 'Start Process' action name\n\n    isSystem: boolean = false;\n    isSelected: boolean = false;\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.isSystem = json.isSystem ? true : false;\n            this.isSelected = form && json.name === form.selectedOutcome ? true : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class TabModel extends FormWidgetModel {\n\n    title: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel;\n\n    fields: FormWidgetModel[] = [];\n\n    hasContent(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.title = json.title;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldEvent } from './../../../events/form-field.event';\nimport { ValidateFormFieldEvent } from './../../../events/validate-form-field.event';\nimport { ValidateFormEvent } from './../../../events/validate-form.event';\nimport { FormService } from './../../../services/form.service';\nimport { ContainerModel } from './container.model';\nimport { FormFieldTemplates } from './form-field-templates';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\nimport { FormOutcomeModel } from './form-outcome.model';\nimport { FormValues } from './form-values';\nimport { FormWidgetModel, FormWidgetModelCache } from './form-widget.model';\nimport { TabModel } from './tab.model';\n\nimport {\n    FORM_FIELD_VALIDATORS,\n    FormFieldValidator\n} from './form-field-validator';\n\nexport class FormModel {\n\n    static UNSET_TASK_NAME: string = 'Nameless task';\n    static SAVE_OUTCOME: string = '$save';\n    static COMPLETE_OUTCOME: string = '$complete';\n    static START_PROCESS_OUTCOME: string = '$startProcess';\n\n    readonly id: string;\n    readonly name: string;\n    readonly taskId: string;\n    readonly taskName: string = FormModel.UNSET_TASK_NAME;\n    processDefinitionId: string;\n    private _isValid: boolean = true;\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    className: string;\n    readOnly: boolean = false;\n    tabs: TabModel[] = [];\n    /** Stores root containers */\n    fields: FormWidgetModel[] = [];\n    outcomes: FormOutcomeModel[] = [];\n    customFieldTemplates: FormFieldTemplates = {};\n    fieldValidators: FormFieldValidator[] = [...FORM_FIELD_VALIDATORS];\n    readonly selectedOutcome: string;\n\n    values: FormValues = {};\n    processVariables: any;\n\n    readonly json: any;\n\n    hasTabs(): boolean {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    hasOutcomes(): boolean {\n        return this.outcomes && this.outcomes.length > 0;\n    }\n\n    constructor(json?: any, data?: FormValues, readOnly: boolean = false, protected formService?: FormService) {\n        this.readOnly = readOnly;\n\n        if (json) {\n            this.json = json;\n\n            this.id = json.id;\n            this.name = json.name;\n            this.taskId = json.taskId;\n            this.taskName = json.taskName || json.name || FormModel.UNSET_TASK_NAME;\n            this.processDefinitionId = json.processDefinitionId;\n            this.customFieldTemplates = json.customFieldTemplates || {};\n            this.selectedOutcome = json.selectedOutcome || {};\n            this.className = json.className || '';\n\n            let tabCache: FormWidgetModelCache<TabModel> = {};\n\n            this.processVariables = json.processVariables;\n\n            this.tabs = (json.tabs || []).map(t => {\n                let model = new TabModel(this, t);\n                tabCache[model.id] = model;\n                return model;\n            });\n\n            this.fields = this.parseRootFields(json);\n\n            if (data) {\n                this.loadData(data);\n            }\n\n            for (let i = 0; i < this.fields.length; i++) {\n                let field = this.fields[i];\n                if (field.tab) {\n                    let tab = tabCache[field.tab];\n                    if (tab) {\n                        tab.fields.push(field);\n                    }\n                }\n            }\n\n            if (json.fields) {\n                let saveOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.SAVE_OUTCOME,\n                    name: 'Save',\n                    isSystem: true\n                });\n                let completeOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.COMPLETE_OUTCOME,\n                    name: 'Complete',\n                    isSystem: true\n                });\n                let startProcessOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.START_PROCESS_OUTCOME,\n                    name: 'Start Process',\n                    isSystem: true\n                });\n\n                let customOutcomes = (json.outcomes || []).map(obj => new FormOutcomeModel(this, obj));\n\n                this.outcomes = [saveOutcome].concat(\n                    customOutcomes.length > 0 ? customOutcomes : [completeOutcome, startProcessOutcome]\n                );\n            }\n        }\n\n        this.validateForm();\n    }\n\n    onFormFieldChanged(field: FormFieldModel) {\n        this.validateField(field);\n        if (this.formService) {\n            this.formService.formFieldValueChanged.next(new FormFieldEvent(this, field));\n        }\n    }\n\n    getFieldById(fieldId: string): FormFieldModel {\n        return this.getFormFields().find(field => field.id === fieldId);\n    }\n\n    // TODO: consider evaluating and caching once the form is loaded\n    getFormFields(): FormFieldModel[] {\n        let result: FormFieldModel[] = [];\n\n        for (let i = 0; i < this.fields.length; i++) {\n            let field = this.fields[i];\n\n            if (field instanceof ContainerModel) {\n                let container = <ContainerModel> field;\n                result.push(container.field);\n\n                container.field.columns.forEach((column) => {\n                    result.push(...column.fields);\n                });\n            }\n        }\n\n        return result;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    /**\n     * Validates entire form and all form fields.\n     *\n     * @memberof FormModel\n     */\n    validateForm(): void {\n        const validateFormEvent: any = new ValidateFormEvent(this);\n\n        let errorsField: FormFieldModel[] = [];\n\n        let fields = this.getFormFields();\n        for (let i = 0; i < fields.length; i++) {\n            if (!fields[i].validate()) {\n                errorsField.push(fields[i]);\n            }\n        }\n\n        this._isValid = errorsField.length > 0 ? false : true;\n\n        if (this.formService) {\n            validateFormEvent.isValid = this._isValid;\n            validateFormEvent.errorsField = errorsField;\n            this.formService.validateForm.next(validateFormEvent);\n        }\n\n    }\n\n    /**\n     * Validates a specific form field, triggers form validation.\n     *\n     * @param field Form field to validate.\n     * @memberof FormModel\n     */\n    validateField(field: FormFieldModel): void {\n        if (!field) {\n            return;\n        }\n\n        const validateFieldEvent = new ValidateFormFieldEvent(this, field);\n\n        if (this.formService) {\n            this.formService.validateFormField.next(validateFieldEvent);\n        }\n\n        if (!validateFieldEvent.isValid) {\n            this._isValid = false;\n            return;\n        }\n\n        if (validateFieldEvent.defaultPrevented) {\n            return;\n        }\n\n        if (!field.validate()) {\n            this._isValid = false;\n        }\n\n        this.validateForm();\n    }\n\n    // Activiti supports 3 types of root fields: container|group|dynamic-table\n    private parseRootFields(json: any): FormWidgetModel[] {\n        let fields = [];\n\n        if (json.fields) {\n            fields = json.fields;\n        } else if (json.formDefinition && json.formDefinition.fields) {\n            fields = json.formDefinition.fields;\n        }\n\n        let result: FormWidgetModel[] = [];\n\n        for (let field of fields) {\n            if (field.type === FormFieldTypes.DISPLAY_VALUE) {\n                // workaround for dynamic table on a completed/readonly form\n                if (field.params) {\n                    let originalField = field.params['field'];\n                    if (originalField.type === FormFieldTypes.DYNAMIC_TABLE) {\n                        result.push(new ContainerModel(new FormFieldModel(this, field)));\n                    }\n                }\n            } else {\n                result.push(new ContainerModel(new FormFieldModel(this, field)));\n            }\n        }\n\n        return result;\n    }\n\n    // Loads external data and overrides field values\n    // Typically used when form definition and form data coming from different sources\n    private loadData(data: FormValues) {\n        for (let field of this.getFormFields()) {\n            if (data[field.id]) {\n                field.json.value = data[field.id];\n                field.value = field.parseValue(field.json);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormOutcomeModel } from './form-outcome.model';\n\nexport class FormOutcomeEvent {\n\n    private _outcome: FormOutcomeModel;\n    private _defaultPrevented: boolean = false;\n\n    get outcome(): FormOutcomeModel {\n        return this._outcome;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(outcome: FormOutcomeModel) {\n        this._outcome = outcome;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n import { RelatedContentRepresentation } from 'alfresco-js-api';\n\n export class ContentLinkModel implements RelatedContentRepresentation {\n\n    contentAvailable: boolean;\n    created: Date;\n    createdBy: any;\n    id: number;\n    link: boolean;\n    mimeType: string;\n    name: string;\n    previewStatus: string;\n    relatedContent: boolean;\n    simpleType: string;\n    thumbnailUrl: string;\n    contentRawUrl: string;\n    contentBlob: Blob;\n    thumbnailStatus: string;\n\n    constructor(obj?: any) {\n        this.contentAvailable = obj && obj.contentAvailable;\n        this.created = obj && obj.created;\n        this.createdBy = obj && obj.createdBy || {};\n        this.id = obj && obj.id;\n        this.link = obj && obj.link;\n        this.mimeType = obj && obj.mimeType;\n        this.name = obj && obj.name;\n        this.previewStatus = obj && obj.previewStatus;\n        this.relatedContent = obj && obj.relatedContent;\n        this.simpleType = obj && obj.simpleType;\n        this.thumbnailStatus = obj && obj.thumbnailStatus;\n    }\n\n    hasPreviewStatus(): boolean {\n        return this.previewStatus === 'supported' ? true : false;\n    }\n\n    isTypeImage(): boolean {\n        return this.simpleType === 'image' ? true : false;\n    }\n\n    isTypePdf(): boolean {\n        return this.simpleType === 'pdf' ? true : false;\n    }\n\n    isTypeDoc(): boolean {\n        return this.simpleType === 'word' || this.simpleType === 'content' ? true : false;\n    }\n\n    isThumbnailReady(): boolean {\n        return this.thumbnailStatus === 'created';\n    }\n\n    isThumbnailSupported(): boolean {\n        return this.isTypeImage() || ((this.isTypePdf() || this.isTypeDoc()) && this.isThumbnailReady());\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { UserProcessModel } from '../../models';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, of, throwError } from 'rxjs';\nimport { FormDefinitionModel } from '../models/form-definition.model';\nimport { ContentLinkModel } from './../components/widgets/core/content-link.model';\nimport { GroupModel } from './../components/widgets/core/group.model';\nimport { FormModel, FormOutcomeEvent, FormOutcomeModel, FormValues } from './../components/widgets/core/index';\nimport {\n    FormErrorEvent, FormEvent, FormFieldEvent,\n    ValidateDynamicTableRowEvent, ValidateFormEvent, ValidateFormFieldEvent\n} from './../events/index';\nimport { EcmModelService } from './ecm-model.service';\nimport { map, catchError, switchMap, combineAll, defaultIfEmpty } from 'rxjs/operators';\n\n@Injectable()\nexport class FormService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    formLoaded = new Subject<FormEvent>();\n    formDataRefreshed = new Subject<FormEvent>();\n    formFieldValueChanged = new Subject<FormFieldEvent>();\n    formEvents = new Subject<Event>();\n    taskCompleted = new Subject<FormEvent>();\n    taskCompletedError = new Subject<FormErrorEvent>();\n    taskSaved = new Subject<FormEvent>();\n    taskSavedError = new Subject<FormErrorEvent>();\n    formContentClicked = new Subject<ContentLinkModel>();\n\n    validateForm = new Subject<ValidateFormEvent>();\n    validateFormField = new Subject<ValidateFormFieldEvent>();\n    validateDynamicTableRow = new Subject<ValidateDynamicTableRowEvent>();\n\n    executeOutcome = new Subject<FormOutcomeEvent>();\n\n    constructor(private ecmModelService: EcmModelService,\n                private apiService: AlfrescoApiService,\n                protected logService: LogService) {\n    }\n\n    private get taskApi(): any {\n        return this.apiService.getInstance().activiti.taskApi;\n    }\n\n    private get modelsApi(): any {\n        return this.apiService.getInstance().activiti.modelsApi;\n    }\n\n    private get editorApi(): any {\n        return this.apiService.getInstance().activiti.editorApi;\n    }\n\n    private get processApi(): any {\n        return this.apiService.getInstance().activiti.processApi;\n    }\n\n    private get processInstanceVariablesApi(): any {\n        return this.apiService.getInstance().activiti.processInstanceVariablesApi;\n    }\n\n    private get usersWorkflowApi(): any {\n        return this.apiService.getInstance().activiti.usersWorkflowApi;\n    }\n\n    private get groupsApi(): any {\n        return this.apiService.getInstance().activiti.groupsApi;\n    }\n\n    /**\n     * Parses JSON data to create a corresponding Form model.\n     * @param json JSON to create the form\n     * @param data Values for the form fields\n     * @param readOnly Should the form fields be read-only?\n     * @returns Form model created from input data\n     */\n    parseForm(json: any, data?: FormValues, readOnly: boolean = false): FormModel {\n        if (json) {\n            let form = new FormModel(json, data, readOnly, this);\n            if (!json.fields) {\n                form.outcomes = [\n                    new FormOutcomeModel(form, {\n                        id: '$custom',\n                        name: FormOutcomeModel.SAVE_ACTION,\n                        isSystem: true\n                    })\n                ];\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Creates a Form with a field for each metadata property.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createFormFromANode(formName: string): Observable<any> {\n        return Observable.create(observer => {\n            this.createForm(formName).subscribe(\n                form => {\n                    this.ecmModelService.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                        customType => {\n                            let formDefinitionModel = new FormDefinitionModel(form.id, form.name, form.lastUpdatedByFullName, form.lastUpdated, customType.entry.properties);\n                            this.addFieldsToAForm(form.id, formDefinitionModel).subscribe(formData => {\n                                observer.next(formData);\n                                observer.complete();\n                            }, err => this.handleError(err));\n                        },\n                        err => this.handleError(err));\n                },\n                err => this.handleError(err));\n        });\n    }\n\n    /**\n     * Create a Form.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createForm(formName: string): Observable<any> {\n        let dataModel = {\n            name: formName,\n            description: '',\n            modelType: 2,\n            stencilSet: 0\n        };\n\n        return from(\n            this.modelsApi.createModel(dataModel)\n        );\n    }\n\n    /**\n     * Saves a form.\n     * @param formId ID of the form to save\n     * @param formModel Model data for the form\n     * @returns Data for the saved form\n     */\n    saveForm(formId: string, formModel: FormDefinitionModel): Observable<any> {\n        return from(\n            this.editorApi.saveForm(formId, formModel)\n        );\n    }\n\n    /**\n     * Add Fields to a form\n     * @deprecated in 1.7.0, use saveForm API instead\n     * @param formId ID of the form\n     * @param formModel Form definition\n     */\n    addFieldsToAForm(formId: string, formModel: FormDefinitionModel): Observable<any> {\n        this.logService.log('addFieldsToAForm is deprecated in 1.7.0, use saveForm API instead');\n        return from(\n            this.editorApi.saveForm(formId, formModel)\n        );\n    }\n\n    /**\n     * Searches for a form by name.\n     * @param name The form name to search for\n     * @returns Form model(s) matching the search name\n     */\n    searchFrom(name: string): Observable<any> {\n        let opts = {\n            'modelType': 2\n        };\n\n        return from(\n            this.modelsApi.getModels(opts)\n        )\n        .pipe(\n            map(function (forms: any) {\n                return forms.data.find(formdata => formdata.name === name);\n            }),\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets all the forms.\n     * @returns List of form models\n     */\n    getForms(): Observable<any> {\n        let opts = {\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions.\n     * @returns List of process definitions\n     */\n    getProcessDefinitions(): Observable<any> {\n        return from(this.processApi.getProcessDefinitions({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets instance variables for a process.\n     * @param processInstanceId ID of the target process\n     * @returns List of instance variable information\n     */\n    getProcessVarablesById(processInstanceId: string): Observable<any[]> {\n        return from(this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks.\n     * @returns List of tasks\n     */\n    getTasks(): Observable<any> {\n        return from(this.taskApi.listTasks({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task.\n     * @param taskId Task Id\n     * @returns Task info\n     */\n    getTask(taskId: string): Observable<any> {\n        return from(this.taskApi.getTask(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Saves a task form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @returns Null response when the operation is complete\n     */\n    saveTaskForm(taskId: string, formValues: FormValues): Observable<any> {\n        let body = JSON.stringify({values: formValues});\n\n        return from(this.taskApi.saveTaskForm(taskId, body))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Completes a Task Form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @param outcome Form Outcome\n     * @returns Null response when the operation is complete\n     */\n    completeTaskForm(taskId: string, formValues: FormValues, outcome?: string): Observable<any> {\n        let data: any = {values: formValues};\n        if (outcome) {\n            data.outcome = outcome;\n        }\n        let body = JSON.stringify(data);\n\n        return from(this.taskApi.completeTaskForm(taskId, body))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form related to a task.\n     * @param taskId ID of the target task\n     * @returns Form definition\n     */\n    getTaskForm(taskId: string): Observable<any> {\n        return from(this.taskApi.getTaskForm(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form definition.\n     * @param formId ID of the target form\n     * @returns Form definition\n     */\n    getFormDefinitionById(formId: string): Observable<any> {\n        return from(this.editorApi.getForm(formId))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the form definition with a given name.\n     * @param name The form name\n     * @returns Form definition\n     */\n    getFormDefinitionByName(name: string): Observable<any> {\n        let opts = {\n            'filter': 'myReusableForms',\n            'filterText': name,\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.getFormId),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form instance for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstanceStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a process instance.\n     * @param processId ID of the process to get\n     * @returns Process instance\n     */\n    getProcessIntance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstance(processId))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form definition for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormDefinition(processId: string): Observable<any> {\n        return from(this.processApi.getProcessDefinitionStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValues(taskId: string, field: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValues(taskId, field))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValuesByProcessId(processDefinitionId: string, field: string): Observable<any> {\n        return from(this.processApi.getRestFieldValues(processDefinitionId, field))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumnByProcessId(processDefinitionId: string, field: string, column?: string): Observable<any> {\n        return from(this.processApi.getRestTableFieldValues(processDefinitionId, field, column))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumn(taskId: string, field: string, column?: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValuesColumn(taskId, field, column))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a URL for the profile picture of a user.\n     * @param userId ID of the target user\n     * @returns URL string\n     */\n    getUserProfileImageApi(userId: number): string {\n        return this.apiService.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Gets a list of workflow users.\n     * @param filter Filter to select specific users\n     * @param groupId Group ID for the search\n     * @returns Array of users\n     */\n    getWorkflowUsers(filter: string, groupId?: string): Observable<UserProcessModel[]> {\n        let option: any = {filter: filter};\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.usersWorkflowApi.getUsers(option))\n            .pipe(\n                switchMap((response: any) => <UserProcessModel[]> response.data || []),\n                map((user: any) => {\n                    user.userImage = this.getUserProfileImageApi(user.id);\n                    return of(user);\n                }),\n                combineAll(),\n                defaultIfEmpty([]),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of groups in a workflow.\n     * @param filter Filter to select specific groups\n     * @param groupId Group ID for the search\n     * @returns Array of groups\n     */\n    getWorkflowGroups(filter: string, groupId?: string): Observable<GroupModel[]> {\n        let option: any = {filter: filter};\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.groupsApi.getGroups(option))\n            .pipe(\n                map((response: any) => <GroupModel[]> response.data || []),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the ID of a form.\n     * @param res Object representing a form\n     * @returns ID string\n     */\n    getFormId(res: any): string {\n        let result = null;\n\n        if (res && res.data && res.data.length > 0) {\n            result = res.data[0].id;\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates a JSON representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Error message\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = FormService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : FormService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class NodeMetadata {\n    metadata: any;\n    nodeType: string;\n\n    constructor(metadata: any, nodeType: string) {\n        this.metadata = metadata;\n        this.nodeType = nodeType;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { NodeMetadata } from '../models/node-metadata.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class NodeService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Get the metadata and the nodeType for a nodeId cleaned by the prefix.\n     * @param nodeId ID of the target node\n     * @returns Node metadata\n     */\n    public getNodeMetadata(nodeId: string): Observable<NodeMetadata> {\n        return from(this.apiService.getInstance().nodes.getNodeInfo(nodeId))\n            .pipe(map(this.cleanMetadataFromSemicolon));\n    }\n\n    /**\n     * Create a new Node from form metadata.\n     * @param path Path to the node\n     * @param nodeType Node type\n     * @param name Node name\n     * @param nameSpace Namespace for properties\n     * @param data Property data to store in the node under namespace\n     * @returns The created node\n     */\n    public createNodeMetadata(nodeType: string, nameSpace: any, data: any, path: string, name?: string): Observable<any> {\n        let properties = {};\n        for (let key in data) {\n            if (data[key]) {\n                properties[nameSpace + ':' + key] = data[key];\n            }\n        }\n\n        return this.createNode(name || this.generateUuid(), nodeType, properties, path);\n    }\n\n    /**\n     * Create a new Node from form metadata\n     * @param name Node name\n     * @param nodeType Node type\n     * @param properties Node body properties\n     * @param path Path to the node\n     * @returns The created node\n     */\n    public createNode(name: string, nodeType: string, properties: any, path: string): Observable<any> {\n        let body = {\n            name: name,\n            nodeType: nodeType,\n            properties: properties,\n            relativePath: path\n        };\n\n        // TODO: requires update to alfresco-js-api typings\n        let apiService: any = this.apiService.getInstance();\n        return from(apiService.nodes.addNode('-root-', body, {}));\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    private cleanMetadataFromSemicolon(data: any): NodeMetadata {\n        let metadata = {};\n\n        if (data && data.properties) {\n            for (let key in data.properties) {\n                if (key) {\n                    if (key.indexOf(':') !== -1) {\n                        metadata [key.split(':')[1]] = data.properties[key];\n                    } else {\n                        metadata [key] = data.properties[key];\n                    }\n                }\n            }\n        }\n\n        return new NodeMetadata(metadata, data.nodeType);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport moment from 'moment-es6';\nimport { Observable, from, throwError } from 'rxjs';\nimport { FormFieldModel, FormModel, TabModel } from '../components/widgets/core/index';\nimport { TaskProcessVariableModel } from '../models/task-process-variable.model';\nimport { WidgetVisibilityModel } from '../models/widget-visibility.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class WidgetVisibilityService {\n\n    private processVarList: TaskProcessVariableModel[];\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public refreshVisibility(form: FormModel) {\n        if (form && form.tabs && form.tabs.length > 0) {\n            form.tabs.map(tabModel => this.refreshEntityVisibility(tabModel));\n        }\n\n        if (form) {\n            form.getFormFields().map(field => this.refreshEntityVisibility(field));\n        }\n    }\n\n    refreshEntityVisibility(element: FormFieldModel | TabModel) {\n        let visible = this.evaluateVisibility(element.form, element.visibilityCondition);\n        element.isVisible = visible;\n    }\n\n    evaluateVisibility(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        let isLeftFieldPresent = visibilityObj && ( visibilityObj.leftFormFieldId || visibilityObj.leftRestResponseId );\n        if (!isLeftFieldPresent || isLeftFieldPresent === 'null') {\n            return true;\n        } else {\n            return this.isFieldVisible(form, visibilityObj);\n        }\n    }\n\n    isFieldVisible(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        let leftValue = this.getLeftValue(form, visibilityObj);\n        let rightValue = this.getRightValue(form, visibilityObj);\n        let actualResult = this.evaluateCondition(leftValue, rightValue, visibilityObj.operator);\n        if (visibilityObj.nextCondition) {\n            return this.evaluateLogicalOperation(\n                visibilityObj.nextConditionOperator,\n                actualResult,\n                this.isFieldVisible(form, visibilityObj.nextCondition)\n            );\n        } else {\n            return actualResult;\n        }\n    }\n\n    getLeftValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let leftValue = '';\n        if (visibilityObj.leftRestResponseId && visibilityObj.leftRestResponseId !== 'null') {\n            leftValue = this.getVariableValue(form, visibilityObj.leftRestResponseId, this.processVarList);\n        } else if (visibilityObj.leftFormFieldId) {\n            leftValue = this.getFormValue(form, visibilityObj.leftFormFieldId);\n            leftValue = leftValue ? leftValue : this.getVariableValue(form, visibilityObj.leftFormFieldId, this.processVarList);\n        }\n        return leftValue;\n    }\n\n    getRightValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let valueFound = '';\n        if (visibilityObj.rightRestResponseId) {\n            valueFound = this.getVariableValue(form, visibilityObj.rightRestResponseId, this.processVarList);\n        } else if (visibilityObj.rightFormFieldId) {\n            valueFound = this.getFormValue(form, visibilityObj.rightFormFieldId);\n        } else {\n            if (moment(visibilityObj.rightValue, 'YYYY-MM-DD', true).isValid()) {\n                valueFound = visibilityObj.rightValue + 'T00:00:00.000Z';\n            } else {\n                valueFound = visibilityObj.rightValue;\n            }\n        }\n        return valueFound;\n    }\n\n    getFormValue(form: FormModel, fieldId: string) {\n        let value = this.getFieldValue(form.values, fieldId);\n\n        if (!value) {\n            value = this.searchValueInForm(form, fieldId);\n        }\n\n        return value;\n    }\n\n    getFieldValue(valueList: any, fieldId: string) {\n        let dropDownFilterByName, valueFound;\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            dropDownFilterByName = fieldId.substring(0, fieldId.length - 6);\n            if (valueList[dropDownFilterByName]) {\n                valueFound = valueList[dropDownFilterByName].name;\n            }\n        } else if (valueList[fieldId] && valueList[fieldId].id) {\n            valueFound = valueList[fieldId].id;\n        } else {\n            valueFound = valueList[fieldId];\n        }\n        return valueFound;\n    }\n\n    searchValueInForm(form: FormModel, fieldId: string) {\n        let fieldValue = '';\n        form.getFormFields().forEach((formField: FormFieldModel) => {\n            if (this.isSearchedField(formField, fieldId)) {\n                fieldValue = this.getObjectValue(formField, fieldId);\n                if (!fieldValue) {\n                    if (formField.value && formField.value.id) {\n                        fieldValue = formField.value.id;\n                    } else {\n                        fieldValue = formField.value;\n                    }\n                }\n            }\n        });\n\n        return fieldValue;\n    }\n\n    private getObjectValue(field: FormFieldModel, fieldId: string) {\n        let value = '';\n        if (field.value && field.value.name) {\n            value = field.value.name;\n        } else if (field.options) {\n            let option = field.options.find(opt => opt.id === field.value);\n            if (option) {\n                value = this.getValueFromOption(fieldId, option);\n            }\n        }\n        return value;\n    }\n\n    private getValueFromOption(fieldId: string, option): string {\n        let optionValue = '';\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            optionValue = option.name;\n        } else {\n            optionValue = option.id;\n        }\n        return optionValue;\n    }\n\n    private isSearchedField(field: FormFieldModel, fieldToFind: string): boolean {\n        let formattedFieldName = this.removeLabel(field, fieldToFind);\n        return field.id ? field.id.toUpperCase() === formattedFieldName.toUpperCase() : false;\n    }\n\n    private removeLabel(field: FormFieldModel, fieldToFind): string {\n        let formattedFieldName = fieldToFind || '';\n        if (field.fieldType === 'RestFieldRepresentation' && fieldToFind.indexOf('_LABEL') > 0) {\n            formattedFieldName = fieldToFind.substring(0, fieldToFind.length - 6);\n        }\n        return formattedFieldName;\n    }\n\n    getVariableValue(form: FormModel, name: string, processVarList: TaskProcessVariableModel[]) {\n        return this.getFormVariableValue(form, name) ||\n            this.getProcessVariableValue(name, processVarList);\n    }\n\n    private getFormVariableValue(form: FormModel, name: string) {\n        if (form.json.variables) {\n            let formVariable = form.json.variables.find(formVar => formVar.name === name);\n            return formVariable ? formVariable.value : formVariable;\n        }\n    }\n\n    private getProcessVariableValue(name: string, processVarList: TaskProcessVariableModel[]) {\n        if (this.processVarList) {\n            let processVariable = this.processVarList.find(variable => variable.id === name);\n            return processVariable ? processVariable.value : processVariable;\n        }\n    }\n\n    evaluateLogicalOperation(logicOp, previousValue, newValue): boolean {\n        switch (logicOp) {\n            case 'and':\n                return previousValue && newValue;\n            case 'or' :\n                return previousValue || newValue;\n            case 'and-not':\n                return previousValue && !newValue;\n            case 'or-not':\n                return previousValue || !newValue;\n            default:\n                this.logService.error('NO valid operation! wrong op request : ' + logicOp);\n                break;\n        }\n    }\n\n    evaluateCondition(leftValue, rightValue, operator): boolean {\n        switch (operator) {\n            case '==':\n                return leftValue + '' === rightValue + '';\n            case '<':\n                return leftValue < rightValue;\n            case '!=':\n                return leftValue + '' !== rightValue + '';\n            case '>':\n                return leftValue > rightValue;\n            case '>=':\n                return leftValue >= rightValue;\n            case '<=':\n                return leftValue <= rightValue;\n            case 'empty':\n                return leftValue ? leftValue === '' : true;\n            case '!empty':\n                return leftValue ? leftValue !== '' : false;\n            default:\n                this.logService.error('NO valid operation!');\n                break;\n        }\n        return;\n    }\n\n    cleanProcessVariable() {\n        this.processVarList = [];\n    }\n\n    getTaskProcessVariable(taskId: string): Observable<TaskProcessVariableModel[]> {\n        return from(this.apiService.getInstance().activiti.taskFormsApi.getTaskFormVariables(taskId))\n            .pipe(\n                map(res => {\n                    let jsonRes = this.toJson(res);\n                    this.processVarList = <TaskProcessVariableModel[]> jsonRes;\n                    return jsonRes;\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    toJson(res: any) {\n        return res || {};\n    }\n\n    private handleError(err) {\n        this.logService.error('Error while performing a call');\n        return throwError('Error while performing a call - Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable */\nimport {\n    Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit,\n    Output, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { FormErrorEvent, FormEvent } from './../events/index';\nimport { EcmModelService } from './../services/ecm-model.service';\nimport { FormService } from './../services/form.service';\nimport { NodeService } from './../services/node.service';\nimport { ContentLinkModel } from './widgets/core/content-link.model';\nimport {\n    FormFieldModel, FormModel, FormOutcomeEvent, FormOutcomeModel,\n    FormValues, FormFieldValidator\n} from './widgets/core/index';\nimport { Observable, of } from 'rxjs';\nimport { WidgetVisibilityService } from './../services/widget-visibility.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ValidateFormEvent } from './../events/validate-form.event';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'adf-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormComponent implements OnInit, OnChanges, OnDestroy {\n\n    static SAVE_OUTCOME_ID: string = '$save';\n    static COMPLETE_OUTCOME_ID: string = '$complete';\n    static START_PROCESS_OUTCOME_ID: string = '$startProcess';\n    static CUSTOM_OUTCOME_ID: string = '$custom';\n    static COMPLETE_BUTTON_COLOR: string = 'primary';\n    static COMPLETE_OUTCOME_NAME: string = 'Complete'\n\n    /** Underlying form model instance. */\n    @Input()\n    form: FormModel;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Content Services node ID for the form metadata. */\n    @Input()\n    nodeId: string;\n\n    /** The id of the form definition to load and display with custom values. */\n    @Input()\n    formId: string;\n\n    /** Name of the form definition to load and display with custom values. */\n    @Input()\n    formName: string;\n\n    /** Toggle saving of form metadata. */\n    @Input()\n    saveMetadata: boolean = false;\n\n    /** Custom form values map to be used with the rendered form. */\n    @Input()\n    data: FormValues;\n\n    /** Path of the folder where the metadata will be stored. */\n    @Input()\n    path: string;\n\n    /** Name to assign to the new node where the metadata are stored. */\n    @Input()\n    nameNode: string;\n\n    /** Toggle rendering of the form title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggle rendering of the `Complete` outcome button. */\n    @Input()\n    showCompleteButton: boolean = true;\n\n    /** If true then the `Complete` outcome button is shown but it will be disabled. */\n    @Input()\n    disableCompleteButton: boolean = false;\n\n    /** If true then the `Start Process` outcome button is shown but it will be disabled. */\n    @Input()\n    disableStartProcessButton: boolean = false;\n\n    /** Toggle rendering of the `Save` outcome button. */\n    @Input()\n    showSaveButton: boolean = true;\n\n    /** Toggle debug options. */\n    @Input()\n    showDebugButton: boolean = false;\n\n    /** Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled. */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Toggle rendering of the `Refresh` button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Toggle rendering of the validation icon next to the form title. */\n    @Input()\n    showValidationIcon: boolean = true;\n\n    /** Contains a list of form field validator instances. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form values are refreshed due to a data property change. */\n    @Output()\n    formDataRefreshed: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form validations has validation error.*/\n    @Output()\n    formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /**\n     * Emitted when any error occurs.\n     * @deprecated in 2.4.0, will be renamed as \"error\" in 3.x.x\n     */\n    @Output()\n    onError: EventEmitter<any> = new EventEmitter<any>();\n\n    debugMode: boolean = false;\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected formService: FormService,\n                protected visibilityService: WidgetVisibilityService,\n                private ecmModelService: EcmModelService,\n                private nodeService: NodeService) {\n    }\n\n    hasForm(): boolean {\n        return this.form ? true : false;\n    }\n\n    isTitleEnabled(): boolean {\n        if (this.showTitle) {\n            if (this.form && this.form.taskName) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getColorForOutcome(outcomeName: string): string {\n        return outcomeName === FormComponent.COMPLETE_OUTCOME_NAME ? FormComponent.COMPLETE_BUTTON_COLOR : '';\n    }\n\n    isOutcomeButtonEnabled(outcome: FormOutcomeModel): boolean {\n        if (this.form.readOnly) {\n            return false;\n        }\n\n        if (outcome) {\n            // Make 'Save' button always available\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return true;\n            }\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.disableCompleteButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return this.disableStartProcessButton ? false : this.form.isValid;\n            }\n            return this.form.isValid;\n        }\n        return false;\n    }\n\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.name) {\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.showCompleteButton;\n            }\n            if (isFormReadOnly) {\n                return outcome.isSelected;\n            }\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.showSaveButton;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe((content: ContentLinkModel) => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getFormByTaskId(taskId.currentValue);\n            return;\n        }\n\n        let formId = changes['formId'];\n        if (formId && formId.currentValue) {\n            this.getFormDefinitionByFormId(formId.currentValue);\n            return;\n        }\n\n        let formName = changes['formName'];\n        if (formName && formName.currentValue) {\n            this.getFormDefinitionByFormName(formName.currentValue);\n            return;\n        }\n\n        let nodeId = changes['nodeId'];\n        if (nodeId && nodeId.currentValue) {\n            this.loadFormForEcmNode(nodeId.currentValue);\n            return;\n        }\n\n        let data = changes['data'];\n        if (data && data.currentValue) {\n            this.refreshFormData();\n            return;\n        }\n    }\n\n    /**\n     * Invoked when user clicks outcome button.\n     * @param outcome Form outcome model\n     */\n    onOutcomeClicked(outcome: FormOutcomeModel): boolean {\n        if (!this.readOnly && outcome && this.form) {\n\n            if (!this.onExecuteOutcome(outcome)) {\n                return false;\n            }\n\n            if (outcome.isSystem) {\n                if (outcome.id === FormComponent.SAVE_OUTCOME_ID) {\n                    this.saveTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormComponent.COMPLETE_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormComponent.START_PROCESS_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormComponent.CUSTOM_OUTCOME_ID) {\n                    this.onTaskSaved(this.form);\n                    this.storeFormAsMetadata();\n                    return true;\n                }\n            } else {\n                // Note: Activiti is using NAME field rather than ID for outcomes\n                if (outcome.name) {\n                    this.onTaskSaved(this.form);\n                    this.completeTaskForm(outcome.name);\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Invoked when user clicks form refresh button.\n     */\n    onRefreshClicked() {\n        this.loadForm();\n    }\n\n    loadForm() {\n        if (this.taskId) {\n            this.getFormByTaskId(this.taskId);\n            return;\n        }\n\n        if (this.formId) {\n            this.getFormDefinitionByFormId(this.formId);\n            return;\n        }\n\n        if (this.formName) {\n            this.getFormDefinitionByFormName(this.formName);\n            return;\n        }\n    }\n\n    findProcessVariablesByTaskId(taskId: string): Observable<any> {\n        return this.formService.getTask(taskId).pipe(\n            switchMap((task: any) => {\n                if (this.isAProcessTask(task)) {\n                    return this.visibilityService.getTaskProcessVariable(taskId);\n                } else {\n                    return of({});\n                }\n            })\n        );\n    }\n\n    isAProcessTask(taskRepresentation) {\n        return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';\n    }\n\n    getFormByTaskId(taskId: string): Promise<FormModel> {\n        return new Promise<FormModel>((resolve, reject) => {\n            this.findProcessVariablesByTaskId(taskId).subscribe((processVariables) => {\n                this.formService\n                    .getTaskForm(taskId)\n                    .subscribe(\n                        form => {\n                            const parsedForm = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(parsedForm);\n                            parsedForm.validateForm();\n                            this.form = parsedForm;\n                            this.onFormLoaded(this.form);\n                            resolve(this.form);\n                        },\n                        error => {\n                            this.handleError(error);\n                            // reject(error);\n                            resolve(null);\n                        }\n                    );\n            });\n        });\n    }\n\n    getFormDefinitionByFormId(formId: string) {\n        this.formService\n            .getFormDefinitionById(formId)\n            .subscribe(\n                form => {\n                    this.formName = form.name;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.onFormLoaded(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    getFormDefinitionByFormName(formName: string) {\n        this.formService\n            .getFormDefinitionByName(formName)\n            .subscribe(\n                id => {\n                    this.formService.getFormDefinitionById(id).subscribe(\n                        form => {\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                        }\n                    );\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    saveTaskForm() {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .saveTaskForm(this.form.taskId, this.form.values)\n                .subscribe(\n                    () => {\n                        this.onTaskSaved(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    error => this.onTaskSavedError(this.form, error)\n                );\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .completeTaskForm(this.form.taskId, this.form.values, outcome)\n                .subscribe(\n                    () => {\n                        this.onTaskCompleted(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    error => this.onTaskCompletedError(this.form, error)\n                );\n        }\n    }\n\n    handleError(err: any): any {\n        this.onError.emit(err);\n    }\n\n    parseForm(json: any): FormModel {\n        if (json) {\n            let form = new FormModel(json, this.data, this.readOnly, this.formService);\n            if (!json.fields) {\n                form.outcomes = this.getFormDefinitionOutcomes(form);\n            }\n            if (this.fieldValidators && this.fieldValidators.length > 0) {\n                form.fieldValidators = this.fieldValidators;\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Get custom set of outcomes for a Form Definition.\n     * @param form Form definition model.\n     */\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[] {\n        return [\n            new FormOutcomeModel(form, { id: '$custom', name: FormOutcomeModel.SAVE_ACTION, isSystem: true })\n        ];\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        if (field && field.form) {\n            this.visibilityService.refreshVisibility(field.form);\n        }\n    }\n\n    private refreshFormData() {\n        this.form = this.parseForm(this.form.json);\n        this.onFormLoaded(this.form);\n        this.onFormDataRefreshed(this.form);\n    }\n\n    private loadFormForEcmNode(nodeId: string): void {\n        this.nodeService.getNodeMetadata(nodeId).subscribe(data => {\n                this.data = data.metadata;\n                this.loadFormFromActiviti(data.nodeType);\n            },\n            this.handleError);\n    }\n\n    loadFormFromActiviti(nodeType: string): any {\n        this.formService.searchFrom(nodeType).subscribe(\n            form => {\n                if (!form) {\n                    this.formService.createFormFromANode(nodeType).subscribe(formMetadata => {\n                        this.loadFormFromFormId(formMetadata.id);\n                    });\n                } else {\n                    this.loadFormFromFormId(form.id);\n                }\n            },\n            (error) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private loadFormFromFormId(formId: string) {\n        this.formId = formId;\n        this.loadForm();\n    }\n\n    private storeFormAsMetadata() {\n        if (this.saveMetadata) {\n            this.ecmModelService.createEcmTypeForActivitiForm(this.formName, this.form).subscribe(type => {\n                    this.nodeService.createNodeMetadata(type.nodeType || type.entry.prefixedName, EcmModelService.MODEL_NAMESPACE, this.form.values, this.path, this.nameNode);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n        }\n    }\n\n    protected onFormLoaded(form: FormModel) {\n        this.formLoaded.emit(form);\n        this.formService.formLoaded.next(new FormEvent(form));\n    }\n\n    protected onFormDataRefreshed(form: FormModel) {\n        this.formDataRefreshed.emit(form);\n        this.formService.formDataRefreshed.next(new FormEvent(form));\n    }\n\n    protected onTaskSaved(form: FormModel) {\n        this.formSaved.emit(form);\n        this.formService.taskSaved.next(new FormEvent(form));\n    }\n\n    protected onTaskSavedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskSavedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onTaskCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n        this.formService.taskCompleted.next(new FormEvent(form));\n    }\n\n    protected onTaskCompletedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskCompletedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean {\n        let args = new FormOutcomeEvent(outcome);\n\n        this.formService.executeOutcome.next(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        this.executeOutcome.emit(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../services/form.service';\n\n@Component({\n    selector: 'adf-form-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormListComponent implements OnChanges {\n\n    /** The array that contains the information to show inside the list. */\n    @Input()\n    forms: any [] = [];\n\n    constructor(protected formService: FormService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.getForms();\n    }\n\n    isEmpty(): boolean {\n        return this.forms && this.forms.length === 0;\n    }\n\n    getForms() {\n        this.formService.getForms().subscribe((forms) => {\n            this.forms.push(...forms);\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { RelatedContentRepresentation } from 'alfresco-js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ProcessContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    private get contentApi(): any {\n        return this.apiService.getInstance().activiti.contentApi;\n    }\n\n    /**\n     * Create temporary related content from an uploaded file.\n     * @param file File to use for content\n     * @returns The created content data\n     */\n    createTemporaryRawRelatedContent(file: any): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.createTemporaryRawRelatedContent(file))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets the metadata for a related content item.\n     * @param contentId ID of the content item\n     * @returns Metadata for the content\n     */\n    getFileContent(contentId: number): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.getContent(contentId))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets raw binary content data for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the related content\n     */\n    getFileRawContent(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getRawContent(contentId))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets the preview for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the content preview\n     */\n    getContentPreview(contentId: number): Observable<Blob> {\n        return new Observable(observer => {\n            this.contentApi.getContentPreview(contentId).then(\n                (result) => {\n                    observer.next(result);\n                    observer.complete();\n                },\n                () => {\n                    this.contentApi.getRawContent(contentId).then(\n                        (data) => {\n                            observer.next(data);\n                            observer.complete();\n                        },\n                        (err) => {\n                            observer.error(err);\n                            observer.complete();\n                        }\n                    );\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL for direct access to a related content file.\n     * @param contentId ID of the related content\n     * @returns URL to access the content\n     */\n    getFileRawContentUrl(contentId: number): string {\n        return this.contentApi.getRawContentUrl(contentId);\n    }\n\n    /**\n     * Gets the thumbnail for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the thumbnail image\n     */\n    getContentThumbnail(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getContentThumbnail(contentId))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a task instance.\n     * @param taskId ID of the target task\n     * @returns Metadata for the content\n     */\n    getTaskRelatedContent(taskId: string): Observable<any> {\n        return from(this.contentApi.getRelatedContentForTask(taskId))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a process instance.\n     * @param processId ID of the target process\n     * @returns Metadata for the content\n     */\n    getProcessRelatedContent(processId: string): Observable<any> {\n        return from(this.contentApi.getRelatedContentForProcessInstance(processId))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Deletes related content.\n     * @param contentId Identifier of the content to delete\n     * @returns Null response that notifies when the deletion is complete\n     */\n    deleteRelatedContent(contentId: number): Observable<any> {\n        return from(this.contentApi.deleteContent(contentId))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param content File to associate\n     * @param opts Options supported by JSAPI\n     * @returns Details of created content\n     */\n    createProcessRelatedContent(processInstanceId: string, content: any, opts?: any): Observable<any> {\n        return from(this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, content, opts))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a task instance.\n     * @param taskId ID of the target task\n     * @param file File to associate\n     * @param opts Options supported by JSAPI\n     * @returns Details of created content\n     */\n    createTaskRelatedContent(taskId: string, file: any, opts?: any) {\n        return from(this.contentApi.createRelatedContentOnTask(taskId, file, opts))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Creates a JSON representation of data.\n     * @param res Object representing data\n     * @returns JSON object\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of data.\n     * @param res Object representing data\n     * @returns JSON array object\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Callback when an error occurs\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = ProcessContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ProcessContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService } from '../../../../services/content.service';\nimport { LogService } from '../../../../services/log.service';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { FormService } from './../../../services/form.service';\n\n@Component({\n    selector: 'adf-content',\n    templateUrl: './content.widget.html',\n    styleUrls: ['./content.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentWidgetComponent implements OnChanges {\n\n    @Input()\n    id: string;\n\n    @Input()\n    showDocumentContent: boolean = true;\n\n    @Output()\n    contentClick = new EventEmitter();\n\n    @Output()\n    thumbnailLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    contentLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    content: ContentLinkModel;\n\n    constructor(protected formService: FormService,\n                private logService: LogService,\n                private contentService: ContentService,\n                private processContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const contentId = changes['id'];\n        if (contentId && contentId.currentValue) {\n            this.loadContent(contentId.currentValue);\n        }\n    }\n\n    loadContent(id: number) {\n        this.processContentService\n            .getFileContent(id)\n            .subscribe(\n                (response: ContentLinkModel) => {\n                    this.content = new ContentLinkModel(response);\n                    this.contentLoaded.emit(this.content);\n                    this.loadThumbnailUrl(this.content);\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    loadThumbnailUrl(content: ContentLinkModel) {\n        if (this.content.isThumbnailSupported()) {\n            let observable: Observable<any>;\n\n            if (this.content.isTypeImage()) {\n                observable = this.processContentService.getFileRawContent(content.id);\n            } else {\n                observable = this.processContentService.getContentThumbnail(content.id);\n            }\n\n            if (observable) {\n                observable.subscribe(\n                    (response: Blob) => {\n                        this.content.thumbnailUrl = this.contentService.createTrustedUrl(response);\n                        this.thumbnailLoaded.emit(this.content.thumbnailUrl);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n\n                    }\n                );\n            }\n        }\n    }\n\n    openViewer(content: ContentLinkModel): void {\n        let fetch = this.processContentService.getContentPreview(content.id);\n        if (content.isTypeImage() || content.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(content.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.contentClick.emit(content);\n                this.logService.info('Content clicked' + content.id);\n                this.formService.formContentClicked.next(content);\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n\n    /**\n     * Invoke content download.\n     */\n    download(content: ContentLinkModel): void {\n        this.processContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { FormService } from './../services/form.service';\nimport { WidgetVisibilityService } from './../services/widget-visibility.service';\nimport { FormComponent } from './form.component';\nimport { ContentLinkModel } from './widgets/core/content-link.model';\nimport { FormOutcomeModel } from './widgets/core/index';\nimport { ValidateFormEvent } from './../events/validate-form.event';\n\n@Component({\n    selector: 'adf-start-form',\n    templateUrl: './start-form.component.html',\n    styleUrls: ['./form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartFormComponent extends FormComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** Definition ID of the process to start. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Process ID of the process to start. */\n    @Input()\n    processId: string;\n\n    /** Should form outcome buttons be shown? */\n    @Input()\n    showOutcomeButtons: boolean = true;\n\n    /** Should the refresh button be shown? */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Is the form read-only (ie, can't be edited)? */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Emitted when the user clicks one of the outcome buttons that completes the form. */\n    @Output()\n    outcomeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a field of the form is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    @ViewChild('outcomesContainer', {})\n    outcomesContainer: ElementRef = null;\n\n    constructor(formService: FormService,\n                visibilityService: WidgetVisibilityService) {\n        super(formService, visibilityService, null, null);\n        this.showTitle = false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe(content => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let processDefinitionId = changes['processDefinitionId'];\n        if (processDefinitionId && processDefinitionId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(processDefinitionId.currentValue);\n            return;\n        }\n\n        let processId = changes['processId'];\n        if (processId && processId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(processId.currentValue);\n            return;\n        }\n    }\n\n    loadStartForm(processId: string) {\n        this.formService.getProcessIntance(processId)\n            .subscribe((instance: any) => {\n                this.formService\n                    .getStartFormInstance(processId)\n                    .subscribe(\n                        form => {\n                            this.formName = form.name;\n                            if (instance.variables) {\n                                form.processVariables = instance.variables;\n                            }\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.form.readOnly = this.readOnlyForm;\n                            this.onFormLoaded(this.form);\n                        },\n                        error => this.handleError(error)\n                    );\n            });\n    }\n\n    getStartFormDefinition(processId: string) {\n        this.formService\n            .getStartFormDefinition(processId)\n            .subscribe(\n                form => {\n                    this.formName = form.processDefinitionName;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.form.readOnly = this.readOnlyForm;\n                    this.onFormLoaded(this.form);\n                },\n                error => this.handleError(error)\n            );\n    }\n\n    /** @override */\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.isSystem && (outcome.name === FormOutcomeModel.SAVE_ACTION ||\n            outcome.name === FormOutcomeModel.COMPLETE_ACTION)) {\n            return false;\n        } else if (outcome && outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n            return true;\n        }\n        return super.isOutcomeButtonVisible(outcome, isFormReadOnly);\n    }\n\n    /** @override */\n    saveTaskForm() {\n        // do nothing\n    }\n\n    /** @override */\n    onRefreshClicked() {\n        if (this.processDefinitionId) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n        } else if (this.processId) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(this.processId);\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        this.outcomeClick.emit(outcome);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../services/form.service';\nimport { FormFieldModel } from './core/index';\n\nexport const baseHost = {\n    '(click)': 'event($event)',\n    '(blur)': 'event($event)',\n    '(change)': 'event($event)',\n    '(focus)': 'event($event)',\n    '(focusin)': 'event($event)',\n    '(focusout)': 'event($event)',\n    '(input)': 'event($event)',\n    '(invalid)': 'event($event)',\n    '(select)': 'event($event)'\n};\n\n/**\n * Base widget component.\n */\n@Component({\n    selector: 'base-widget',\n    template: '',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class WidgetComponent implements AfterViewInit {\n\n    static DEFAULT_HYPERLINK_URL: string = '#';\n    static DEFAULT_HYPERLINK_SCHEME: string = 'http://';\n\n    /** Does the widget show a read-only value? (ie, can't be edited) */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Data to be displayed in the field */\n    @Input()\n    field: FormFieldModel;\n\n    /**\n     * Emitted when a field value changes.\n     * @deprecated Used only to trigger visibility engine; components should do that internally if needed.\n     */\n    @Output()\n    fieldChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    constructor(public formService?: FormService) {\n    }\n\n    hasField() {\n        return this.field ? true : false;\n    }\n\n    // Note for developers:\n    // returns <any> object to be able binding it to the <element reguired=\"required\"> attribute\n    isRequired(): any {\n        if (this.field && this.field.required) {\n            return true;\n        }\n        return null;\n    }\n\n    isValid(): boolean {\n        return this.field.validationSummary ? true : false;\n    }\n\n    hasValue(): boolean {\n        return this.field &&\n            this.field.value !== null &&\n            this.field.value !== undefined;\n    }\n\n    isInvalidFieldRequired() {\n        return !this.field.isValid && !this.field.validationSummary && this.isRequired();\n    }\n\n    ngAfterViewInit() {\n        this.fieldChanged.emit(this.field);\n    }\n\n    /** @deprecated used only to trigger visibility engine, components should do that internally if needed */\n    checkVisibility(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    /** @deprecated used only to trigger visibility engine, components should do that internally if needed */\n    onFieldChanged(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    protected getHyperlinkUrl(field: FormFieldModel) {\n        let url = WidgetComponent.DEFAULT_HYPERLINK_URL;\n        if (field && field.hyperlinkUrl) {\n            url = field.hyperlinkUrl;\n            if (!/^https?:\\/\\//i.test(url)) {\n                url = `${WidgetComponent.DEFAULT_HYPERLINK_SCHEME}${url}`;\n            }\n        }\n        return url;\n    }\n\n    protected getHyperlinkText(field: FormFieldModel) {\n        if (field) {\n            return field.displayText || field.hyperlinkUrl;\n        }\n        return null;\n    }\n\n    event(event: Event): void {\n        this.formService.formEvents.next(event);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ContainerColumnModel } from './../core/container-column.model';\nimport { ContainerModel } from './../core/container.model';\nimport { FormFieldTypes } from './../core/form-field-types';\nimport { FormFieldModel } from './../core/form-field.model';\n\nexport class ContainerWidgetComponentModel extends ContainerModel {\n\n    columns: ContainerColumnModel[] = [];\n    isExpanded: boolean = true;\n    rowspan: number = 1;\n    colspan: number = 1;\n\n    isGroup(): boolean {\n        return this.type === FormFieldTypes.GROUP;\n    }\n\n    isCollapsible(): boolean {\n        let allowCollapse = false;\n\n        if (this.isGroup() && this.field.params['allowCollapse']) {\n            allowCollapse = <boolean> this.field.params['allowCollapse'];\n        }\n\n        return allowCollapse;\n    }\n\n    isCollapsedByDefault(): boolean {\n        let collapseByDefault = false;\n\n        if (this.isCollapsible() && this.field.params['collapseByDefault']) {\n            collapseByDefault = <boolean> this.field.params['collapseByDefault'];\n        }\n\n        return collapseByDefault;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field);\n\n        if (this.field) {\n            this.columns = this.field.columns || [];\n            this.isExpanded = !this.isCollapsedByDefault();\n            this.colspan = field.colspan;\n            this.rowspan = field.rowspan;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\nimport { ContainerWidgetComponentModel } from './container.widget.model';\n\n@Component({\n    selector: 'container-widget',\n    templateUrl: './container.widget.html',\n    styleUrls: ['./container.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContainerWidgetComponent extends WidgetComponent implements OnInit, AfterViewInit {\n\n    content: ContainerWidgetComponentModel;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    onExpanderClicked() {\n        if (this.content && this.content.isCollapsible()) {\n            this.content.isExpanded = !this.content.isExpanded;\n        }\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new ContainerWidgetComponentModel(this.field);\n        }\n    }\n\n    /**\n     * Serializes column fields\n     */\n    get fields(): FormFieldModel[] {\n        const fields = [];\n\n        let rowContainsElement = true,\n            rowIndex = 0;\n\n        while (rowContainsElement) {\n            rowContainsElement = false;\n            for (let i = 0; i < this.content.columns.length; i++ ) {\n                let field = this.content.columns[i].fields[rowIndex];\n                if (field) {\n                    rowContainsElement = true;\n                }\n\n                fields.push(field);\n            }\n            rowIndex++;\n        }\n\n        return fields;\n    }\n\n    /**\n     * Calculate the column width based on the numberOfColumns and current field's colspan property\n     *\n     * @param field\n     */\n    getColumnWith(field: FormFieldModel): string {\n        const colspan = field ? field.colspan : 1;\n        return (100 / this.content.json.numberOfColumns) * colspan + '%';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentChecked, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormFieldModel, TabModel } from './../core/index';\n\n@Component({\n    selector: 'tabs-widget',\n    templateUrl: './tabs.widget.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabsWidgetComponent implements AfterContentChecked {\n\n    @Input()\n    tabs: TabModel[] = [];\n\n    @Output()\n    formTabChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    visibleTabs: TabModel[] = [];\n\n    hasTabs() {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    ngAfterContentChecked() {\n        this.filterVisibleTabs();\n    }\n\n    filterVisibleTabs() {\n        this.visibleTabs = this.tabs.filter(tab => {\n            return tab.isVisible;\n        });\n    }\n\n    tabChanged(field: FormFieldModel) {\n        this.formTabChanged.emit(field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'unknown-widget',\n    template: `\n            <mat-list class=\"adf-unknown-widget\">\n                <mat-list-item>\n                     <mat-icon class=\"mat-24\">error_outline</mat-icon>\n                     <span class=\"adf-unknown-text\">Unknown type: {{field.type}}</span>\n                </mat-list-item>\n            </mat-list>\n\n    `,\n    styleUrls: ['./unknown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UnknownWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'amount-widget',\n    templateUrl: './amount.widget.html',\n    styleUrls: ['./amount.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class AmountWidgetComponent extends WidgetComponent implements OnInit {\n\n    static DEFAULT_CURRENCY: string = '$';\n\n    currency: string = AmountWidgetComponent.DEFAULT_CURRENCY;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.currency) {\n            this.currency = this.field.currency;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'checkbox-widget',\n    templateUrl: './checkbox.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'date-widget',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    templateUrl: './date.widget.html',\n    styleUrls: ['./date.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private preferences: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.preferences.locale$.subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplyaFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'DD/MM/YYYY');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'DD/MM/YYYY');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'display-text-widget',\n    templateUrl: './display-text.widget.html',\n    styleUrls: ['./display-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DisplayTextWidgetComponentComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'adf-form-document-widget',\n    templateUrl: 'document.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentWidgetComponent extends WidgetComponent implements OnInit {\n\n    fileId: string = null;\n    hasFile: boolean = false;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const file = this.field.value;\n\n            if (file) {\n                this.fileId = file.id;\n                this.hasFile = true;\n            } else {\n                this.fileId = null;\n                this.hasFile = false;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'dropdown-widget',\n    templateUrl: './dropdown.widget.html',\n    styleUrls: ['./dropdown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DropdownWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getValuesByTaskId();\n            } else {\n                this.getValuesByProcessDefinitionId();\n            }\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (result: FormFieldOption[]) => {\n                    let options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((result || []));\n                    this.field.updateForm();\n                },\n                err => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (result: FormFieldOption[]) => {\n                    let options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((result || []));\n                    this.field.updateForm();\n                },\n                err => this.handleError(err)\n            );\n    }\n\n    getOptionValue(option: FormFieldOption, fieldValue: string): string {\n        let optionValue: string = '';\n        if (option.id === 'empty' || option.name !== fieldValue) {\n            optionValue = option.id;\n        } else {\n            optionValue = option.name;\n        }\n        return optionValue;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class DateCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Date'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.editable && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            let value = row.value[column.id];\n            let dateValue = moment(value, 'D-M-YYYY');\n            if (!dateValue.isValid()) {\n                if (summary) {\n                    summary.isValid = false;\n                    summary.message = `Invalid '${column.name}' format.`;\n                }\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ErrorMessageModel } from '../core/index';\n\nexport class DynamicRowValidationSummary extends ErrorMessageModel {\n\n    isValid: boolean;\n\n    constructor(json?: any) {\n        super(json);\n        this.isValid = json.isValid;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class NumberCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Number',\n        'Amount'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            let value = row.value[column.id];\n            if (value === null ||\n                value === undefined ||\n                value === '' ||\n                this.isNumber(value)) {\n                return true;\n            }\n\n            if (summary) {\n                summary.isValid = false;\n                summary.message = `Field '${column.name}' must be a number.`;\n            }\n            return false;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class RequiredCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'String',\n        'Number',\n        'Amount',\n        'Date',\n        'Dropdown'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n        if (this.isSupported(column)) {\n            let value = row.value[column.id];\n            if (column.required) {\n                if (value === null || value === undefined || value === '') {\n                    if (summary) {\n                        summary.isValid = false;\n                        summary.message = `Field '${column.name}' is required.`;\n                    }\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { ValidateDynamicTableRowEvent } from '../../../events/validate-dynamic-table-row.event';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { FormWidgetModel } from './../core/form-widget.model';\nimport { CellValidator } from './cell-validator.model';\nimport { DateCellValidator } from './date-cell-validator-model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { NumberCellValidator } from './number-cell-validator.model';\nimport { RequiredCellValidator } from './required-cell-validator.model';\n\nexport class DynamicTableModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n    columns: DynamicTableColumn[] = [];\n    visibleColumns: DynamicTableColumn[] = [];\n    rows: DynamicTableRow[] = [];\n\n    private _selectedRow: DynamicTableRow;\n    private _validators: CellValidator[] = [];\n\n    get selectedRow(): DynamicTableRow {\n        return this._selectedRow;\n    }\n\n    set selectedRow(value: DynamicTableRow) {\n        if (this._selectedRow && this._selectedRow === value) {\n            this._selectedRow.selected = false;\n            this._selectedRow = null;\n            return;\n        }\n\n        this.rows.forEach(row => row.selected = false);\n\n        this._selectedRow = value;\n\n        if (value) {\n            this._selectedRow.selected = true;\n        }\n    }\n\n    constructor(field: FormFieldModel, private formService: FormService) {\n        super(field.form, field.json);\n        this.field = field;\n\n        if (field.json) {\n            const columns = this.getColumns(field);\n            if (columns) {\n                this.columns = columns;\n                this.visibleColumns = this.columns.filter(col => col.visible);\n            }\n\n            if (field.json.value) {\n                this.rows = field.json.value.map(obj => <DynamicTableRow> {selected: false, value: obj});\n            }\n        }\n\n        this._validators = [\n            new RequiredCellValidator(),\n            new DateCellValidator(),\n            new NumberCellValidator()\n        ];\n    }\n\n    private getColumns(field: FormFieldModel): DynamicTableColumn[] {\n        if (field && field.json) {\n            let definitions = field.json.columnDefinitions;\n            if (!definitions && field.json.params && field.json.params.field) {\n                definitions = field.json.params.field.columnDefinitions;\n            }\n\n            if (definitions) {\n                return definitions.map(obj => <DynamicTableColumn> obj);\n            }\n        }\n        return null;\n    }\n\n    flushValue() {\n        if (this.field) {\n            this.field.value = this.rows.map(r => r.value);\n            this.field.updateForm();\n        }\n    }\n\n    moveRow(row: DynamicTableRow, offset: number) {\n        let oldIndex = this.rows.indexOf(row);\n        if (oldIndex > -1) {\n            let newIndex = (oldIndex + offset);\n\n            if (newIndex < 0) {\n                newIndex = 0;\n            } else if (newIndex >= this.rows.length) {\n                newIndex = this.rows.length;\n            }\n\n            let arr = this.rows.slice();\n            arr.splice(oldIndex, 1);\n            arr.splice(newIndex, 0, row);\n            this.rows = arr;\n\n            this.flushValue();\n        }\n    }\n\n    deleteRow(row: DynamicTableRow) {\n        if (row) {\n            if (this.selectedRow === row) {\n                this.selectedRow = null;\n            }\n            let idx = this.rows.indexOf(row);\n            if (idx > -1) {\n                this.rows.splice(idx, 1);\n                this.flushValue();\n            }\n        }\n    }\n\n    addRow(row: DynamicTableRow) {\n        if (row) {\n            this.rows.push(row);\n            // this.selectedRow = row;\n        }\n    }\n\n    validateRow(row: DynamicTableRow): DynamicRowValidationSummary {\n        const summary = new DynamicRowValidationSummary( {\n            isValid: true,\n            message: null\n        });\n\n        const event = new ValidateDynamicTableRowEvent(this.form, this.field, row, summary);\n        this.formService.validateDynamicTableRow.next(event);\n\n        if (event.defaultPrevented || !summary.isValid) {\n            return summary;\n        }\n\n        if (row) {\n            for (let col of this.columns) {\n                for (let validator of this._validators) {\n                    if (!validator.validate(row, col, summary)) {\n                        return summary;\n                    }\n                }\n            }\n        }\n\n        return summary;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        let result = row.value[column.id];\n\n        if (column.type === 'Dropdown') {\n            if (result) {\n                return result.name;\n            }\n        }\n\n        if (column.type === 'Boolean') {\n            return result ? true : false;\n        }\n\n        if (column.type === 'Date') {\n            if (result) {\n                return moment(result.split('T')[0], 'YYYY-MM-DD').format('DD-MM-YYYY');\n            }\n        }\n\n        return result || '';\n    }\n\n    getDisplayText(column: DynamicTableColumn): string {\n        let result = column.name;\n        if (column.type === 'Amount') {\n            let currency = column.amountCurrency || '$';\n            result = `${column.name} (${currency})`;\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetVisibilityService } from '../../../services/widget-visibility.service';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { DynamicTableModel } from './dynamic-table.widget.model';\n\n@Component({\n    selector: 'dynamic-table-widget',\n    templateUrl: './dynamic-table.widget.html',\n    styleUrls: ['./dynamic-table.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DynamicTableWidgetComponent extends WidgetComponent implements OnInit {\n\n    ERROR_MODEL_NOT_FOUND = 'Table model not found';\n\n    content: DynamicTableModel;\n\n    editMode: boolean = false;\n    editRow: DynamicTableRow = null;\n\n    private selectArrayCode = [32, 0, 13];\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef,\n                private visibilityService: WidgetVisibilityService,\n                private logService: LogService,\n                private cd: ChangeDetectorRef) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new DynamicTableModel(this.field, this.formService);\n            this.visibilityService.refreshVisibility(this.field.form);\n        }\n    }\n\n    forceFocusOnAddButton() {\n        if (this.content) {\n            this.cd.detectChanges();\n            let buttonAddRow = <HTMLButtonElement> this.elementRef.nativeElement.querySelector('#' + this.content.id + '-add-row');\n            if (this.isDynamicTableReady(buttonAddRow)) {\n                buttonAddRow.focus();\n            }\n        }\n    }\n\n    private isDynamicTableReady(buttonAddRow) {\n        return this.field && !this.editMode && buttonAddRow;\n    }\n\n    isValid() {\n        let result = true;\n\n        if (this.content && this.content.field) {\n            result = this.content.field.isValid;\n        }\n\n        return result;\n    }\n\n    onRowClicked(row: DynamicTableRow) {\n        if (this.content) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    onKeyPressed($event: KeyboardEvent, row: DynamicTableRow) {\n        if (this.content && this.isEnterOrSpacePressed($event.keyCode)) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    private isEnterOrSpacePressed(keycode) {\n        return this.selectArrayCode.indexOf(keycode) !== -1;\n    }\n\n    hasSelection(): boolean {\n        return !!(this.content && this.content.selectedRow);\n    }\n\n    moveSelectionUp(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, -1);\n            return true;\n        }\n        return false;\n    }\n\n    moveSelectionDown(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, 1);\n            return true;\n        }\n        return false;\n    }\n\n    deleteSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.deleteRow(this.content.selectedRow);\n            return true;\n        }\n        return false;\n    }\n\n    addNewRow(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = <DynamicTableRow> {\n                isNew: true,\n                selected: false,\n                value: {}\n            };\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    editSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = this.copyRow(this.content.selectedRow);\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        if (this.content) {\n            let result = this.content.getCellValue(row, column);\n            if (column.type === 'Amount') {\n                return (column.amountCurrency || '$') + ' ' + (result || 0);\n            }\n            return result;\n        }\n        return null;\n    }\n\n    onSaveChanges() {\n        if (this.content) {\n            if (this.editRow.isNew) {\n                let row = this.copyRow(this.editRow);\n                this.content.selectedRow = null;\n                this.content.addRow(row);\n                this.editRow.isNew = false;\n            } else {\n                this.content.selectedRow.value = this.copyObject(this.editRow.value);\n            }\n            this.content.flushValue();\n        } else {\n            this.logService.error(this.ERROR_MODEL_NOT_FOUND);\n        }\n        this.editMode = false;\n        this.forceFocusOnAddButton();\n    }\n\n    onCancelChanges() {\n        this.editMode = false;\n        this.editRow = null;\n        this.forceFocusOnAddButton();\n    }\n\n    copyRow(row: DynamicTableRow): DynamicTableRow {\n        return <DynamicTableRow> {\n            value: this.copyObject(row.value)\n        };\n    }\n\n    private copyObject(obj: any): any {\n        let result = obj;\n\n        if (typeof obj === 'object' && obj !== null && obj !== undefined) {\n            result = Object.assign({}, obj);\n            Object.keys(obj).forEach(key => {\n                if (typeof obj[key] === 'object') {\n                    result[key] = this.copyObject(obj[key]);\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-boolean-editor',\n    templateUrl: './boolean.editor.html',\n    styleUrls: ['./boolean.editor.scss']\n})\nexport class BooleanEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: boolean = (<HTMLInputElement> event).checked;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-date-editor',\n    templateUrl: './date.editor.html',\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}],\n    styleUrls: ['./date.editor.scss']\n})\nexport class DateEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'DD-MM-YYYY';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private preferences: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.preferences.locale$.subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplyaFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), 'YYYY-MM-DD');\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            let momentDate = moment(newDateValue.value, this.DATE_FORMAT, true);\n\n            if (!momentDate.isValid()) {\n                this.row.value[this.column.id] = '';\n            } else {\n                this.row.value[this.column.id] = `${momentDate.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                this.table.flushValue();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\n\n@Component({\n    selector: 'adf-datetime-editor',\n    templateUrl: './datetime.editor.html',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    styleUrls: ['./datetime.editor.scss']\n})\nexport class DateTimeEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'D-M-YYYY hh:mm A';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private preferences: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.preferences.locale$.subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplyaFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), this.DATE_FORMAT);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const newValue = moment(newDateValue.value, this.DATE_FORMAT);\n            this.row.value[this.column.id] = newDateValue.value.format(this.DATE_FORMAT);\n            this.value = newValue;\n            this.table.flushValue();\n        } else if (newDateValue) {\n            const newValue = moment(newDateValue, this.DATE_FORMAT);\n            this.value = newValue;\n            this.row.value[this.column.id] = newDateValue;\n            this.table.flushValue();\n        } else {\n            this.row.value[this.column.id] = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../../../services/log.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormService } from './../../../../../services/form.service';\nimport { DynamicTableColumnOption } from './../../dynamic-table-column-option.model';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-dropdown-editor',\n    templateUrl: './dropdown.editor.html',\n    styleUrls: ['./dropdown.editor.scss']\n})\nexport class DropdownEditorComponent implements OnInit {\n\n    value: any = null;\n    options: DynamicTableColumnOption[] = [];\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        let field = this.table.field;\n        if (field) {\n            if (this.column.optionType === 'rest') {\n                if (this.table.form && this.table.form.taskId) {\n                    this.getValuesByTaskId(field);\n                } else {\n                    this.getValuesByProcessDefinitionId(field);\n                }\n            } else {\n                this.options = this.column.options || [];\n                this.value = this.table.getCellValue(this.row, this.column);\n            }\n        }\n    }\n\n    getValuesByTaskId(field) {\n        this.formService\n            .getRestFieldValuesColumn(\n                field.form.taskId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (result: DynamicTableColumnOption[]) => {\n                    this.column.options = result || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                err => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId(field) {\n        this.formService\n            .getRestFieldValuesColumnByProcessId(\n                field.form.processDefinitionId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (result: DynamicTableColumnOption[]) => {\n                    this.column.options = result || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                err => this.handleError(err)\n            );\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event).value;\n        value = column.options.find(opt => opt.name === value);\n        row.value[column.id] = value;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DynamicRowValidationSummary } from './../dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './../dynamic-table-column.model';\nimport { DynamicTableRow } from './../dynamic-table-row.model';\nimport { DynamicTableModel } from './../dynamic-table.widget.model';\n\n@Component({\n    selector: 'row-editor',\n    templateUrl: './row.editor.html',\n    styleUrls: ['./row.editor.css']\n})\nexport class RowEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    @Output()\n    save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    cancel: EventEmitter<any> = new EventEmitter<any>();\n\n    validationSummary: DynamicRowValidationSummary;\n\n    constructor() {\n        this.validationSummary = new DynamicRowValidationSummary({ isValid: true, message: '' });\n    }\n\n    onCancelChanges() {\n        this.cancel.emit({\n            table: this.table,\n            row: this.row,\n            column: this.column\n        });\n    }\n\n    onSaveChanges() {\n        this.validate();\n        if (this.isValid()) {\n            this.save.emit({\n                table: this.table,\n                row: this.row,\n                column: this.column\n            });\n        }\n    }\n\n    private isValid(): boolean {\n        return this.validationSummary && this.validationSummary.isValid;\n    }\n\n    private validate() {\n        this.validationSummary = this.table.validateRow(this.row);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-text-editor',\n    templateUrl: './text.editor.html',\n    styleUrls: ['./text.editor.scss']\n})\nexport class TextEditorComponent implements OnInit {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    displayName: string;\n\n    ngOnInit() {\n        this.displayName = this.table.getDisplayText(this.column);\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event.target).value;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ErrorMessageModel } from '../core/index';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'error-widget',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n            transition('void => enter', [\n                style({opacity: 0, transform: 'translateY(-100%)'}),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ErrorWidgetComponent extends WidgetComponent implements OnChanges {\n\n    @Input()\n    error: ErrorMessageModel;\n\n    @Input()\n    required: string;\n\n    translateParameters: any = null;\n\n    _subscriptAnimationState: string = '';\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['required']) {\n            this.required = changes.required.currentValue;\n            this._subscriptAnimationState = 'enter';\n        }\n        if (changes['error'] && changes['error'].currentValue) {\n            if (changes.error.currentValue.isActive()) {\n                this.error = changes.error.currentValue;\n                this.translateParameters = this.error.getAttributesAsJsonObj();\n                this._subscriptAnimationState = 'enter';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from './../core/group.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'functional-group-widget',\n    templateUrl: './functional-group.widget.html',\n    styleUrls: ['./functional-group.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FunctionalGroupWidgetComponent extends WidgetComponent implements OnInit {\n\n    value: string;\n    oldValue: string;\n    groups: GroupModel[] = [];\n    minTermLength: number = 1;\n    groupId: string;\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            let group = this.field.value;\n            if (group) {\n                this.value = group.name;\n            }\n\n            let params = this.field.params;\n            if (params && params['restrictWithGroup']) {\n                let restrictWithGroup = <GroupModel> params['restrictWithGroup'];\n                this.groupId = restrictWithGroup.id;\n            }\n\n            // Load auto-completion for previously saved value\n            if (this.value) {\n                this.formService\n                    .getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((result: GroupModel[]) => this.groups = result || []);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.length >= this.minTermLength  && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                this.oldValue = this.value;\n                this.formService.getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((result: GroupModel[]) => {\n                        this.groups = result || [];\n                    });\n            }\n        }\n    }\n\n    flushValue() {\n        let option = this.groups.find(item => item.name.toLocaleLowerCase() === this.value.toLocaleLowerCase());\n\n        if (option) {\n            this.field.value = option;\n            this.value = option.name;\n        } else {\n            this.field.value = null;\n            this.value = null;\n        }\n\n        this.field.updateForm();\n    }\n\n    onItemClick(item: GroupModel, event: Event) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    onItemSelect(item: GroupModel) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'hyperlink-widget',\n    templateUrl: './hyperlink.widget.html',\n    styleUrls: ['./hyperlink.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class HyperlinkWidgetComponent extends WidgetComponent implements OnInit {\n\n    linkUrl: string = WidgetComponent.DEFAULT_HYPERLINK_URL;\n    linkText: string = null;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.linkUrl = this.getHyperlinkUrl(this.field);\n            this.linkText = this.getHyperlinkText(this.field);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'multiline-text-widget',\n    templateUrl: './multiline-text.widget.html',\n    styleUrls: ['./multiline-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class MultilineTextWidgetComponentComponent extends WidgetComponent  {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename   */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'number-widget',\n    templateUrl: './number.widget.html',\n    styleUrls: ['./number.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable, from, throwError } from 'rxjs';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class PeopleProcessService {\n\n    constructor(private alfrescoJsApi: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about users across all tasks.\n     * @param taskId ID of the task\n     * @param searchWord Filter text to search for\n     * @returns Array of user information objects\n     */\n    getWorkflowUsers(taskId?: string, searchWord?: string): Observable<UserProcessModel[]> {\n        let option = { excludeTaskId: taskId, filter: searchWord };\n        return from(this.getWorkflowUserApi(option))\n            .pipe(\n                map((response: any) => <UserProcessModel[]> response.data || []),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the profile picture URL for the specified user.\n     * @param user The target user\n     * @returns Profile picture URL\n     */\n    getUserImage(user: UserProcessModel): string {\n        return this.getUserProfileImageApi(user.id);\n    }\n\n    /**\n     * Sets a user to be involved with a task.\n     * @param taskId ID of the target task\n     * @param idToInvolve ID of the user to involve\n     * @returns Empty response when the update completes\n     */\n    involveUserWithTask(taskId: string, idToInvolve: string): Observable<UserProcessModel[]> {\n        let node = {userId: idToInvolve};\n        return from<UserProcessModel[]>(this.involveUserToTaskApi(taskId, node))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Removes a user who is currently involved with a task.\n     * @param taskId ID of the target task\n     * @param idToRemove ID of the user to remove\n     * @returns Empty response when the update completes\n     */\n    removeInvolvedUser(taskId: string, idToRemove: string): Observable<UserProcessModel[]> {\n        let node = {userId: idToRemove};\n        return from<UserProcessModel[]>(this.removeInvolvedUserFromTaskApi(taskId, node))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    private getWorkflowUserApi(options: any) {\n        return this.alfrescoJsApi.getInstance().activiti.usersWorkflowApi.getUsers(options);\n    }\n\n    private involveUserToTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.involveUser(taskId, node);\n    }\n\n    private removeInvolvedUserFromTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.removeInvolvedUser(taskId, node);\n    }\n\n    private getUserProfileImageApi(userId: number) {\n        return this.alfrescoJsApi.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { PeopleProcessService } from '../../../../services/people-process.service';\nimport { UserProcessModel } from '../../../../models';\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from '../core/group.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport {\n    catchError,\n    distinctUntilChanged,\n    map,\n    switchMap,\n    tap\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'people-widget',\n    templateUrl: './people.widget.html',\n    styleUrls: ['./people.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleWidgetComponent extends WidgetComponent implements OnInit {\n\n    @ViewChild('inputValue')\n    input: ElementRef;\n\n    @Output()\n    peopleSelected: EventEmitter<number>;\n\n    groupId: string;\n    value: any;\n\n    searchTerm = new FormControl();\n    errorMsg = '';\n    searchTerms$: Observable<any> = this.searchTerm.valueChanges;\n\n    users$ = this.searchTerms$.pipe(\n        tap(() => {\n            this.errorMsg = '';\n        }),\n        distinctUntilChanged(),\n        switchMap((searchTerm) => {\n            let value = searchTerm.email ? this.getDisplayName(searchTerm) : searchTerm;\n            return this.formService.getWorkflowUsers(value, this.groupId)\n                .pipe(\n                    catchError(err => {\n                        this.errorMsg = err.message;\n                        return of();\n                    })\n                );\n        }),\n        map((list: UserProcessModel[]) => {\n            let value = this.searchTerm.value.email ? this.getDisplayName(this.searchTerm.value) : this.searchTerm.value;\n            this.checkUserAndValidateForm(list, value);\n            return list;\n        })\n    );\n\n    constructor(public formService: FormService, public peopleProcessService: PeopleProcessService) {\n        super(formService);\n        this.peopleSelected = new EventEmitter();\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            if (this.field.value) {\n                this.searchTerm.setValue(this.field.value);\n            }\n            if (this.field.readOnly) {\n                this.searchTerm.disable();\n            }\n            let params = this.field.params;\n            if (params && params.restrictWithGroup) {\n                let restrictWithGroup = <GroupModel> params.restrictWithGroup;\n                this.groupId = restrictWithGroup.id;\n            }\n        }\n    }\n\n    checkUserAndValidateForm(list, value) {\n        const isValidUser = this.isValidUser(list, value);\n        if (isValidUser || value === '') {\n            this.field.validationSummary.message = '';\n            this.field.validate();\n            this.field.form.validateForm();\n        } else {\n            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            this.field.markAsInvalid();\n            this.field.form.markAsInvalid();\n        }\n    }\n\n    isValidUser(users: UserProcessModel[], name: string) {\n        if (users) {\n            return users.find((user) => {\n                const selectedUser = this.getDisplayName(user).toLocaleLowerCase() === name.toLocaleLowerCase();\n                if (selectedUser) {\n                    this.peopleSelected.emit(user && user.id || undefined);\n                }\n                return selectedUser;\n            });\n        }\n    }\n\n    getDisplayName(model: UserProcessModel) {\n        if (model) {\n            let displayName = `${model.firstName || ''} ${model.lastName || ''}`;\n            return displayName.trim();\n        }\n        return '';\n    }\n\n    onItemSelect(item: UserProcessModel) {\n        if (item) {\n            this.field.value = item;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'radio-buttons-widget',\n    templateUrl: './radio-buttons.widget.html',\n    styleUrls: ['./radio-buttons.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonsWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getOptionsByTaskId();\n            } else {\n                this.getOptionsByProcessDefinitionId();\n            }\n        }\n    }\n\n    getOptionsByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (result: FormFieldOption[]) => {\n                    this.field.options = result || [];\n                    this.field.updateForm();\n                },\n                err => this.handleError(err)\n            );\n    }\n\n    getOptionsByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (result: FormFieldOption[]) => {\n                    this.field.options = result || [];\n                    this.field.updateForm();\n                },\n                err => this.handleError(err)\n            );\n    }\n\n    onOptionClick(optionSelected: any) {\n        this.field.value = optionSelected;\n        this.fieldChanged.emit(this.field);\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable: component-selector no-use-before-declare no-input-rename  */\n\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    OnChanges,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputMaskDirective),\n    multi: true\n};\n\n@Directive({\n    selector: '[textMask]',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class InputMaskDirective implements OnChanges, ControlValueAccessor {\n\n    /** Object defining mask and \"reversed\" status. */\n    @Input('textMask') inputMask: {\n        mask: '',\n        isReversed: false\n    };\n\n    private translationMask = {\n        '0': { pattern: /\\d/ },\n        '9': { pattern: /\\d/, optional: true },\n        '#': { pattern: /\\d/, recursive: true },\n        'A': { pattern: /[a-zA-Z0-9]/ },\n        'S': { pattern: /[a-zA-Z]/ }\n    };\n\n    private byPassKeys = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91];\n    private value;\n    private invalidCharacters = [];\n\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n\n    _onChange = (_: any) => {\n    }\n\n    _onTouched = () => {\n    }\n\n    @HostListener('input', ['$event'])\n    @HostListener('keyup', ['$event']) onTextInput(event: KeyboardEvent) {\n        if (this.inputMask && this.inputMask.mask) {\n            this.maskValue(this.el.nativeElement.value, this.el.nativeElement.selectionStart,\n                this.inputMask.mask, this.inputMask.isReversed, event.keyCode);\n        } else {\n            this._onChange(this.el.nativeElement.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['inputMask'] && changes['inputMask'].currentValue['mask']) {\n            this.inputMask = changes['inputMask'].currentValue;\n        }\n    }\n\n    writeValue(value: any) {\n        this.el.nativeElement.value = value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    private maskValue(actualValue, startCaret, maskToApply, isMaskReversed, keyCode) {\n        if (this.byPassKeys.indexOf(keyCode) === -1) {\n            let value = this.getMasked(false, actualValue, maskToApply, isMaskReversed);\n            let calculatedCaret = this.calculateCaretPosition(startCaret, actualValue, keyCode);\n            this.render.setAttribute(this.el.nativeElement, 'value', value);\n            this.el.nativeElement.value = value;\n            this.setValue(value);\n            this._onChange(value);\n            this.setCaretPosition(calculatedCaret);\n        }\n    }\n\n    private setCaretPosition(caretPosition) {\n        this.el.nativeElement.moveStart = caretPosition;\n        this.el.nativeElement.moveEnd = caretPosition;\n    }\n\n    calculateCaretPosition(caretPosition, newValue, keyCode) {\n        let newValueLength = newValue.length;\n        let oldValue = this.getValue() || '';\n        let oldValueLength = oldValue.length;\n\n        if (keyCode === 8 && oldValue !== newValue) {\n            caretPosition = caretPosition - (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n        } else if (oldValue !== newValue) {\n            if (caretPosition >= oldValueLength) {\n                caretPosition = newValueLength;\n            } else {\n                caretPosition = caretPosition + (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n            }\n        }\n        return caretPosition;\n    }\n\n    getMasked(skipMaskChars, val, mask, isReversed = false) {\n        let buf = [],\n            value = val,\n            maskIndex = 0,\n            maskLen = mask.length,\n            valueIndex = 0,\n            valueLength = value.length,\n            offset = 1,\n            addMethod = 'push',\n            resetPos = -1,\n            lastMaskChar,\n            lastUntranslatedMaskChar,\n            check;\n\n        if (isReversed) {\n            addMethod = 'unshift';\n            offset = -1;\n            lastMaskChar = 0;\n            maskIndex = maskLen - 1;\n            valueIndex = valueLength - 1;\n        } else {\n            lastMaskChar = maskLen - 1;\n        }\n        check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        while (check) {\n            let maskDigit = mask.charAt(maskIndex),\n                valDigit = value.charAt(valueIndex),\n                translation = this.translationMask[maskDigit];\n\n            if (translation) {\n                if (valDigit.match(translation.pattern)) {\n                    buf[addMethod](valDigit);\n                    if (translation.recursive) {\n                        if (resetPos === -1) {\n                            resetPos = maskIndex;\n                        } else if (maskIndex === lastMaskChar) {\n                            maskIndex = resetPos - offset;\n                        }\n                        if (lastMaskChar === resetPos) {\n                            maskIndex -= offset;\n                        }\n                    }\n                    maskIndex += offset;\n                } else if (valDigit === lastUntranslatedMaskChar) {\n                    lastUntranslatedMaskChar = undefined;\n                } else if (translation.optional) {\n                    maskIndex += offset;\n                    valueIndex -= offset;\n                } else {\n                    this.invalidCharacters.push({\n                        index: valueIndex,\n                        digit: valDigit,\n                        translated: translation.pattern\n                    });\n                }\n                valueIndex += offset;\n            } else {\n                if (!skipMaskChars) {\n                    buf[addMethod](maskDigit);\n                }\n                if (valDigit === maskDigit) {\n                    valueIndex += offset;\n                } else {\n                    lastUntranslatedMaskChar = maskDigit;\n                }\n                maskIndex += offset;\n            }\n            check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        }\n\n        let lastMaskCharDigit = mask.charAt(lastMaskChar);\n        if (maskLen === valueLength + 1 && !this.translationMask[lastMaskCharDigit]) {\n            buf.push(lastMaskCharDigit);\n        }\n\n        return buf.join('');\n    }\n\n    private isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength) {\n        let check = false;\n        if (isReversed) {\n            check = (maskIndex > -1) && (valueIndex > -1);\n        } else {\n            check = (maskIndex < maskLen) && (valueIndex < valueLength);\n        }\n        return check;\n    }\n\n    private setValue(value) {\n        this.value = value;\n    }\n\n    private getValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'text-widget',\n    templateUrl: './text.widget.html',\n    styleUrls: ['./text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TextWidgetComponent extends WidgetComponent implements OnInit {\n\n    mask: string;\n    placeholder: string;\n    isMaskReversed: boolean;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.params) {\n            this.mask = this.field.params['inputMask'];\n            this.placeholder = this.field.params['inputMask'] && this.field.params['inputMaskPlaceholder'] ? this.field.params['inputMaskPlaceholder'] : this.field.placeholder;\n            this.isMaskReversed = this.field.params['inputMaskReversed'] ? this.field.params['inputMaskReversed'] : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'typeahead-widget',\n    templateUrl: './typeahead.widget.html',\n    styleUrls: ['./typeahead.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TypeaheadWidgetComponent extends WidgetComponent implements OnInit {\n\n    minTermLength: number = 1;\n    value: string;\n    oldValue: string;\n    options: FormFieldOption[] = [];\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.form.taskId && this.field.restUrl) {\n            this.getValuesByTaskId();\n        } else if (this.field.form.processDefinitionId && this.field.restUrl) {\n            this.getValuesByProcessDefinitionId();\n        }\n        if (this.isReadOnlyType()) {\n            this.value = this.field.value;\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n            this.field.form.taskId,\n            this.field.id\n            )\n            .subscribe(\n            (result: FormFieldOption[]) => {\n                let options = result || [];\n                this.field.options = options;\n\n                let fieldValue = this.field.value;\n                if (fieldValue) {\n                    let toSelect = options.find(item => item.id === fieldValue || item.name.toLocaleLowerCase() === fieldValue.toLocaleLowerCase());\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            err => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n            this.field.form.processDefinitionId,\n            this.field.id\n            )\n            .subscribe(\n            (result: FormFieldOption[]) => {\n                let options = result || [];\n                this.field.options = options;\n\n                let fieldValue = this.field.value;\n                if (fieldValue) {\n                    let toSelect = options.find(item => item.id === fieldValue);\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            err => this.handleError(err)\n            );\n    }\n\n    getOptions(): FormFieldOption[] {\n        let val = this.value.trim().toLocaleLowerCase();\n        return this.field.options.filter(item => {\n            let name = item.name.toLocaleLowerCase();\n            return name.indexOf(val) > -1;\n        });\n    }\n\n    isValidOptionName(optionName: string): boolean {\n        let option = this.field.options.find(item => item.name && item.name.toLocaleLowerCase() === optionName.toLocaleLowerCase());\n        return option ? true : false;\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.trim().length >= this.minTermLength && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                if (this.value.length >= this.minTermLength) {\n                    this.options = this.getOptions();\n                    this.oldValue = this.value;\n                    if (this.isValidOptionName(this.value)) {\n                        this.field.value = this.options[0].id;\n                    }\n                }\n            }\n        }\n        if (this.isValueDefined() && this.value.trim().length === 0) {\n            this.oldValue = this.value;\n            this.options = [];\n        }\n    }\n\n    onItemSelect(item: FormFieldOption) {\n        if (item) {\n            this.field.value = item.id;\n            this.value = item.name;\n            this.onFieldChanged(this.field);\n        }\n    }\n\n    validate() {\n        this.field.value = this.value;\n    }\n\n    isValueDefined() {\n        return this.value !== null && this.value !== undefined;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ThumbnailService } from '../../../../services/thumbnail.service';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormService } from '../../../services/form.service';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { mergeMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'upload-widget',\n    templateUrl: './upload.widget.html',\n    styleUrls: ['./upload.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string = '';\n    mimeTypeIcon: string;\n\n    @ViewChild('uploadFiles')\n    fileInput: ElementRef;\n\n    constructor(public formService: FormService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService,\n                public processContentService: ProcessContentService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n    }\n\n    removeFile(file: any) {\n        if (this.field) {\n            this.removeElementFromList(file);\n        }\n    }\n\n    onFileChanged(event: any) {\n        let files = event.target.files;\n        let filesSaved = [];\n\n        if (this.field.json.value) {\n            filesSaved = [...this.field.json.value];\n        }\n\n        if (files && files.length > 0) {\n            from(files)\n                .pipe(mergeMap(file => this.uploadRawContent(file)))\n                .subscribe(\n                    (res) => filesSaved.push(res),\n                    () => this.logService.error('Error uploading file. See console output for more details.'),\n                    () => {\n                        this.field.value = filesSaved;\n                        this.field.json.value = filesSaved;\n                        this.hasFile = true;\n                    }\n                );\n        }\n    }\n\n    private uploadRawContent(file): Observable<any> {\n        return this.processContentService.createTemporaryRawRelatedContent(file)\n            .pipe(\n                map((response: any) => {\n                    this.logService.info(response);\n                    response.contentBlob = file;\n                    return response;\n                })\n            );\n    }\n\n    getMultipleFileParam() {\n        if (this.field &&\n            this.field.params &&\n            this.field.params.multiple) {\n            this.multipleOption = this.field.params.multiple ? 'multiple' : '';\n        }\n    }\n\n    private removeElementFromList(file) {\n        let index = this.field.value.indexOf(file);\n\n        if (index !== -1) {\n            this.field.value.splice(index, 1);\n            this.field.json.value = this.field.value;\n            this.field.updateForm();\n        }\n\n        this.hasFile = this.field.value.length > 0;\n\n        this.resetFormValueWithNoFiles();\n    }\n\n    private resetFormValueWithNoFiles() {\n        if (this.field.value.length === 0) {\n            this.field.value = [];\n            this.field.json.value = [];\n        }\n    }\n\n    getIcon(mimeType) {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    fileClicked(obj: any): void {\n        const file = new ContentLinkModel(obj);\n        let fetch = this.processContentService.getContentPreview(file.id);\n        if (file.isTypeImage() || file.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(file.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                file.contentBlob = blob;\n                this.formService.formContentClicked.next(file);\n            },\n            () => {\n                this.logService.error('Unable to send event for file ' + file.name);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { UserPreferencesService } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { FormService } from './../../../services/form.service';\nimport { WidgetComponent } from './../widget.component';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'date-time-widget',\n    templateUrl: './date-time.widget.html',\n    styleUrls: ['./date-time.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateTimeWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private preferences: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.preferences.locale$.subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplyaFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContainerWidgetComponent } from './container/container.widget';\nimport { TabsWidgetComponent } from './tabs/tabs.widget';\nimport { UnknownWidgetComponent } from './unknown/unknown.widget';\n\nimport { AmountWidgetComponent } from './amount/amount.widget';\nimport { CheckboxWidgetComponent } from './checkbox/checkbox.widget';\nimport { DateWidgetComponent } from './date/date.widget';\nimport { DisplayTextWidgetComponentComponent } from './display-text/display-text.widget';\nimport { DocumentWidgetComponent } from './document/document.widget';\nimport { DropdownWidgetComponent } from './dropdown/dropdown.widget';\nimport { DynamicTableWidgetComponent } from './dynamic-table/dynamic-table.widget';\nimport { BooleanEditorComponent } from './dynamic-table/editors/boolean/boolean.editor';\nimport { DateEditorComponent } from './dynamic-table/editors/date/date.editor';\nimport { DateTimeEditorComponent } from './dynamic-table/editors/datetime/datetime.editor';\nimport { DropdownEditorComponent } from './dynamic-table/editors/dropdown/dropdown.editor';\nimport { RowEditorComponent } from './dynamic-table/editors/row.editor';\nimport { TextEditorComponent } from './dynamic-table/editors/text/text.editor';\nimport { ErrorWidgetComponent } from './error/error.component';\nimport { FunctionalGroupWidgetComponent } from './functional-group/functional-group.widget';\nimport { HyperlinkWidgetComponent } from './hyperlink/hyperlink.widget';\nimport { MultilineTextWidgetComponentComponent } from './multiline-text/multiline-text.widget';\nimport { NumberWidgetComponent } from './number/number.widget';\nimport { PeopleWidgetComponent } from './people/people.widget';\nimport { RadioButtonsWidgetComponent } from './radio-buttons/radio-buttons.widget';\nimport { InputMaskDirective } from './text/text-mask.component';\nimport { TextWidgetComponent } from './text/text.widget';\nimport { TypeaheadWidgetComponent } from './typeahead/typeahead.widget';\nimport { UploadWidgetComponent } from './upload/upload.widget';\nimport { DateTimeWidgetComponent } from './date-time/date-time.widget';\n\n// core\nexport * from './widget.component';\nexport * from './core/index';\n\n// containers\nexport * from './tabs/tabs.widget';\nexport * from './container/container.widget';\n\n// primitives\nexport * from './unknown/unknown.widget';\nexport * from './text/text.widget';\nexport * from './number/number.widget';\nexport * from './checkbox/checkbox.widget';\nexport * from './multiline-text/multiline-text.widget';\nexport * from './dropdown/dropdown.widget';\nexport * from './hyperlink/hyperlink.widget';\nexport * from './radio-buttons/radio-buttons.widget';\nexport * from './display-text/display-text.widget';\nexport * from './upload/upload.widget';\nexport * from './typeahead/typeahead.widget';\nexport * from './functional-group/functional-group.widget';\nexport * from './people/people.widget';\nexport * from './date/date.widget';\nexport * from './amount/amount.widget';\nexport * from './dynamic-table/dynamic-table.widget';\nexport * from './error/error.component';\nexport * from './document/document.widget';\nexport * from './date-time/date-time.widget';\n\n// editors (dynamic table)\nexport * from './dynamic-table/dynamic-table.widget.model';\nexport * from './dynamic-table/editors/row.editor';\nexport * from './dynamic-table/editors/date/date.editor';\nexport * from './dynamic-table/editors/dropdown/dropdown.editor';\nexport * from './dynamic-table/editors/boolean/boolean.editor';\nexport * from './dynamic-table/editors/text/text.editor';\nexport * from './dynamic-table/editors/datetime/datetime.editor';\nexport * from './text/text-mask.component';\n\nexport const WIDGET_DIRECTIVES: any[] = [\n    UnknownWidgetComponent,\n    TabsWidgetComponent,\n    ContainerWidgetComponent,\n    TextWidgetComponent,\n    NumberWidgetComponent,\n    CheckboxWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    DropdownWidgetComponent,\n    HyperlinkWidgetComponent,\n    RadioButtonsWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    UploadWidgetComponent,\n    TypeaheadWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    PeopleWidgetComponent,\n    DateWidgetComponent,\n    AmountWidgetComponent,\n    DynamicTableWidgetComponent,\n    DateEditorComponent,\n    DropdownEditorComponent,\n    BooleanEditorComponent,\n    TextEditorComponent,\n    RowEditorComponent,\n    ErrorWidgetComponent,\n    DocumentWidgetComponent,\n    DateTimeWidgetComponent,\n    DateTimeEditorComponent\n];\n\nexport const MASK_DIRECTIVE: any[] = [\n    InputMaskDirective\n];\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\nimport { Injectable, Type } from '@angular/core';\n\nimport {\n    AmountWidgetComponent,\n    CheckboxWidgetComponent,\n    ContainerWidgetComponent,\n    DateWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    DocumentWidgetComponent,\n    DropdownWidgetComponent,\n    DynamicTableWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    HyperlinkWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    NumberWidgetComponent,\n    PeopleWidgetComponent,\n    RadioButtonsWidgetComponent,\n    TextWidgetComponent,\n    TypeaheadWidgetComponent,\n    UnknownWidgetComponent,\n    UploadWidgetComponent,\n    DateTimeWidgetComponent\n} from './../components/widgets/index';\n\n@Injectable()\nexport class FormRenderingService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = UnknownWidgetComponent;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'string': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'integer': DynamicComponentResolver.fromType(NumberWidgetComponent),\n        'multi-line-text': DynamicComponentResolver.fromType(MultilineTextWidgetComponentComponent),\n        'boolean': DynamicComponentResolver.fromType(CheckboxWidgetComponent),\n        'dropdown': DynamicComponentResolver.fromType(DropdownWidgetComponent),\n        'date': DynamicComponentResolver.fromType(DateWidgetComponent),\n        'amount': DynamicComponentResolver.fromType(AmountWidgetComponent),\n        'radio-buttons': DynamicComponentResolver.fromType(RadioButtonsWidgetComponent),\n        'hyperlink': DynamicComponentResolver.fromType(HyperlinkWidgetComponent),\n        'readonly-text': DynamicComponentResolver.fromType(DisplayTextWidgetComponentComponent),\n        'typeahead': DynamicComponentResolver.fromType(TypeaheadWidgetComponent),\n        'people': DynamicComponentResolver.fromType(PeopleWidgetComponent),\n        'functional-group': DynamicComponentResolver.fromType(FunctionalGroupWidgetComponent),\n        'dynamic-table': DynamicComponentResolver.fromType(DynamicTableWidgetComponent),\n        'container': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'group': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'document': DynamicComponentResolver.fromType(DocumentWidgetComponent),\n        'upload':  DynamicComponentResolver.fromType(UploadWidgetComponent),\n        'datetime':  DynamicComponentResolver.fromType(DateTimeWidgetComponent)\n    };\n\n    constructor() {\n        super();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApi, MinimalNodeEntryEntity, RelatedContentRepresentation } from 'alfresco-js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { ExternalContent } from '../components/widgets/core/external-content';\nimport { ExternalContentLink } from '../components/widgets/core/external-content-link';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ActivitiContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoNodes(accountId: string, folderId: string): Observable<[ExternalContent]> {\n        let apiService: AlfrescoApi = this.apiService.getInstance();\n        let accountShortId = accountId.replace('alfresco-', '');\n        return from(apiService.activiti.alfrescoApi.getContentInFolder(accountShortId, folderId))\n            .pipe(\n                map(this.toJsonArray),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of all the repositories configured\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoRepositories(tenantId: number, includeAccount: boolean): Observable<any> {\n        let apiService: AlfrescoApi = this.apiService.getInstance();\n        const opts = {\n            tenantId: tenantId,\n            includeAccounts: includeAccount\n        };\n        return from(apiService.activiti.alfrescoApi.getRepositories(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param node\n     * @param siteId\n     */\n    linkAlfrescoNode(accountId: string, node: ExternalContent, siteId: string): Observable<ExternalContentLink> {\n        const apiService: AlfrescoApi = this.apiService.getInstance();\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent({\n            link: true,\n            name: node.title,\n            simpleType: node.simpleType,\n            source: accountId,\n            sourceId: node.id + '@' + siteId\n        }))\n        .pipe(\n            map(this.toJson),\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    applyAlfrescoNode(node: MinimalNodeEntryEntity, siteId: string, accountId: string) {\n        let apiService: AlfrescoApi = this.apiService.getInstance();\n        const currentSideId = siteId ? siteId : this.getSiteNameFromNodePath(node);\n        const params: RelatedContentRepresentation = {\n            source: accountId,\n            mimeType: node.content.mimeType,\n            sourceId: node.id + ';' + node.properties['cm:versionLabel'] + '@' + currentSideId,\n            name: node.name,\n            link: false\n        };\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent(params))\n            .pipe(\n                map(this.toJson),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    private getSiteNameFromNodePath(node: MinimalNodeEntryEntity): string {\n        let siteName = '';\n        if (node.path) {\n            const foundNode = node.path\n                .elements.find((pathNode: MinimalNodeEntryEntity) =>\n                    pathNode.nodeType === 'st:site' &&\n                    pathNode.name !== 'Sites');\n            siteName = foundNode ? foundNode.name : '';\n        }\n        return siteName.toLocaleLowerCase();\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    handleError(error: any): Observable<any> {\n        let errMsg = ActivitiContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ActivitiContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: '[form-custom-button]' }) export class StartFormCustomButtonDirective {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Compiler,\n    Component, ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ModuleWithComponentFactories,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { FormRenderingService } from './../../services/form-rendering.service';\nimport { WidgetVisibilityService } from './../../services/widget-visibility.service';\nimport { FormFieldModel } from './../widgets/core/form-field.model';\nimport { WidgetComponent } from './../widgets/widget.component';\n\ndeclare var adf: any;\n\n@Component({\n    selector: 'adf-form-field',\n    template: `\n        <div [id]=\"'field-'+field?.id+'-container'\"\n            [hidden]=\"!field?.isVisible\"\n            [class.adf-focus]=\"focus\"\n            (focusin)=\"focusToggle()\"\n            (focusout)=\"focusToggle()\">\n            <div #container></div>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormFieldComponent implements OnInit, OnDestroy {\n\n    @ViewChild('container', { read: ViewContainerRef })\n    container: ViewContainerRef;\n\n    /** Contains all the necessary data needed to determine what UI Widget\n     * to use when rendering the field in the form. You would typically not\n     * create this data manually but instead create the form in APS and export\n     * it to get to all the `FormFieldModel` definitions.\n     */\n    @Input()\n    field: FormFieldModel = null;\n\n    componentRef: ComponentRef<{}>;\n\n    focus: boolean = false;\n\n    constructor(private formRenderingService: FormRenderingService,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private visibilityService: WidgetVisibilityService,\n                private compiler: Compiler) {\n    }\n\n    ngOnInit() {\n        const w: any = window;\n        if (w.adf === undefined) {\n            w.adf = {};\n        }\n        let originalField = this.getField();\n        if (originalField) {\n            let customTemplate = this.field.form.customFieldTemplates[originalField.type];\n            if (customTemplate && this.hasController(originalField.type)) {\n                let factory = this.getComponentFactorySync(originalField.type, customTemplate);\n                this.componentRef = this.container.createComponent(factory);\n                let instance: any = this.componentRef.instance;\n                if (instance) {\n                    instance.field = originalField;\n                }\n            } else {\n                let componentType = this.formRenderingService.resolveComponentType(originalField);\n                if (componentType) {\n                    let factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n                    this.componentRef = this.container.createComponent(factory);\n                    let instance = <WidgetComponent> this.componentRef.instance;\n                    instance.field = this.field;\n                    instance.fieldChanged.subscribe(field => {\n                        if (field && this.field.form) {\n                            this.visibilityService.refreshVisibility(field.form);\n                            field.form.onFormFieldChanged(field);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private getField(): FormFieldModel {\n        if (this.field && this.field.params) {\n            const wrappedField = this.field.params.field;\n            if (wrappedField && wrappedField.type) {\n                return wrappedField;\n            }\n        }\n        return this.field;\n    }\n\n    private hasController(type: string): boolean {\n        return (adf && adf.components && adf.components[type]);\n    }\n\n    private getComponentFactorySync(type: string, template: string): ComponentFactory<any> {\n        let componentInfo = adf.components[type];\n\n        if (componentInfo.factory) {\n            return componentInfo.factory;\n        }\n\n        let metadata = {\n            selector: `runtime-component-${type}`,\n            template: template\n        };\n\n        let factory = this.createComponentFactorySync(this.compiler, metadata, componentInfo.class);\n        componentInfo.factory = factory;\n        return factory;\n    }\n\n    private createComponentFactorySync(compiler: Compiler, metadata: Component, componentClass: any): ComponentFactory<any> {\n        const cmpClass = componentClass || class RuntimeComponent {\n        };\n        const decoratedCmp = Component(metadata)(cmpClass);\n\n        @NgModule({ imports: [], declarations: [decoratedCmp] })\n        class RuntimeComponentModule {\n        }\n\n        let module: ModuleWithComponentFactories<any> = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n        return module.componentFactories.find(x => x.componentType === decoratedCmp);\n    }\n\n    focusToggle() {\n        this.focus = !this.focus;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialModule } from '../material.module';\n\nimport { MASK_DIRECTIVE, WIDGET_DIRECTIVES } from './components/widgets/index';\n\nimport { StartFormCustomButtonDirective } from './components/form-custom-button.directive';\n\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { FormListComponent } from './components/form-list.component';\nimport { FormComponent } from './components/form.component';\nimport { StartFormComponent } from './components/start-form.component';\nimport { ContentWidgetComponent } from './components/widgets/content/content.widget';\nimport { WidgetComponent } from './components/widgets/widget.component';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DataTableModule,\n        HttpClientModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        DataColumnModule,\n        PipeModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormComponent,\n        FormListComponent,\n        StartFormComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES,\n        ...MASK_DIRECTIVE,\n        WidgetComponent\n    ],\n    entryComponents: [\n        ...WIDGET_DIRECTIVES\n    ],\n    exports: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormComponent,\n        FormListComponent,\n        StartFormComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES\n    ]\n})\nexport class FormModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-content'\n})\nexport class SidenavLayoutContentDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-header'\n})\nexport class SidenavLayoutHeaderDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-navigation'\n})\nexport class SidenavLayoutNavigationDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChild, Input, Output, OnInit, AfterViewInit, ViewChild, OnDestroy, TemplateRef, EventEmitter } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Component({\n    selector: 'adf-sidenav-layout',\n    templateUrl: './sidenav-layout.component.html',\n    styleUrls: ['./sidenav-layout.component.scss']\n})\nexport class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    static STEP_OVER = 600;\n\n    /** The side that the drawer is attached to. Possible values are 'start' and 'end'. */\n    @Input() position = 'start';\n\n    /** Minimum size of the navigation region. */\n    @Input() sidenavMin: number;\n\n    /** Maximum size of the navigation region. */\n    @Input() sidenavMax: number;\n\n    /** Screen size at which display switches from small screen to large screen configuration. */\n    @Input() stepOver: number;\n\n    /** Toggles showing/hiding the navigation region. */\n    @Input() hideSidenav = false;\n\n    /** Should the navigation region be expanded initially? */\n    @Input() expandedSidenav = true;\n\n    /** Emitted when the menu toggle and the collapsed/expanded state of the sideNav changes. */\n    @Output() expanded = new EventEmitter<boolean>();\n\n    @ContentChild(SidenavLayoutHeaderDirective) headerDirective: SidenavLayoutHeaderDirective;\n    @ContentChild(SidenavLayoutNavigationDirective) navigationDirective: SidenavLayoutNavigationDirective;\n    @ContentChild(SidenavLayoutContentDirective) contentDirective: SidenavLayoutContentDirective;\n\n    private menuOpenStateSubject: BehaviorSubject<boolean>;\n    public menuOpenState$: Observable<boolean>;\n\n    @ViewChild('container') container: any;\n    @ViewChild('emptyTemplate') emptyTemplate: any;\n\n    mediaQueryList: MediaQueryList;\n    _isMenuMinimized;\n\n    templateContext = {\n        toggleMenu: () => {},\n        isMenuMinimized: () => this.isMenuMinimized\n    };\n\n    constructor(private mediaMatcher: MediaMatcher) {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        const initialMenuState = !this.expandedSidenav;\n\n        this.menuOpenStateSubject = new BehaviorSubject<boolean>(initialMenuState);\n        this.menuOpenState$ = this.menuOpenStateSubject.asObservable();\n\n        const stepOver = this.stepOver || SidenavLayoutComponent.STEP_OVER;\n        this.isMenuMinimized = initialMenuState;\n\n        this.mediaQueryList = this.mediaMatcher.matchMedia(`(max-width: ${stepOver}px)`);\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n    }\n\n    ngAfterViewInit() {\n        this.templateContext.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu() {\n        if (!this.mediaQueryList.matches) {\n            this.isMenuMinimized = !this.isMenuMinimized;\n        } else {\n            this.isMenuMinimized = false;\n        }\n\n        this.container.toggleMenu();\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n\n    get isMenuMinimized() {\n        return this._isMenuMinimized;\n    }\n\n    set isMenuMinimized(menuState: boolean) {\n        this._isMenuMinimized = menuState;\n        this.menuOpenStateSubject.next(!menuState);\n    }\n\n    get isHeaderInside() {\n        return this.mediaQueryList.matches;\n    }\n\n    get headerTemplate(): TemplateRef<any> {\n        return this.headerDirective && this.headerDirective.template || this.emptyTemplate;\n    }\n\n    get navigationTemplate(): TemplateRef<any> {\n        return this.navigationDirective && this.navigationDirective.template || this.emptyTemplate;\n    }\n\n    get contentTemplate(): TemplateRef<any> {\n        return this.contentDirective && this.contentDirective.template || this.emptyTemplate;\n    }\n\n    onMediaQueryChange() {\n        this.isMenuMinimized = false;\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trigger, transition, animate, style, state, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const sidenavAnimation: AnimationTriggerMetadata = trigger('sidenavAnimation', [\n    state('expanded', style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    state('compact',  style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationLeft: AnimationTriggerMetadata = trigger('contentAnimationLeft', [\n    state('expanded', style({ 'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationRight: AnimationTriggerMetadata = trigger('contentAnimationRight', [\n    state('expanded', style({ 'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { sidenavAnimation, contentAnimationLeft, contentAnimationRight } from '../../helpers/animations';\n\n@Component({\n    selector: 'adf-layout-container',\n    templateUrl: './layout-container.component.html',\n    styleUrls: ['./layout-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [sidenavAnimation, contentAnimationLeft, contentAnimationRight]\n})\nexport class LayoutContainerComponent implements OnInit, OnDestroy {\n    @Input() sidenavMin: number;\n    @Input() sidenavMax: number;\n\n    // \" | any\", because Safari throws an error otherwise...\n    @Input() mediaQueryList: MediaQueryList | any;\n\n    @Input() hideSidenav = false;\n    @Input() expandedSidenav = true;\n\n    /** The side that the drawer is attached to 'start' | 'end' page */\n    @Input() position = 'start';\n\n    @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n    sidenavAnimationState: any;\n    contentAnimationState: any;\n\n    SIDENAV_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n    CONTENT_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n\n    constructor() {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        this.SIDENAV_STATES.MOBILE = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.EXPANDED = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.COMPACT = { value: 'compact', params: { width: this.sidenavMin } };\n\n        this.CONTENT_STATES.MOBILE = { value: 'expanded', params: { margin: 0 } };\n        this.CONTENT_STATES.EXPANDED = { value: 'expanded', params: { margin: this.sidenavMin } };\n        this.CONTENT_STATES.COMPACT = { value: 'compact', params: { margin: this.sidenavMax } };\n\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        if (this.isMobileScreenSize) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.MOBILE;\n            this.contentAnimationState = this.CONTENT_STATES.MOBILE;\n        } else if (this.expandedSidenav) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n            this.contentAnimationState = this.CONTENT_STATES.COMPACT;\n        } else {\n            this.sidenavAnimationState = this.SIDENAV_STATES.COMPACT;\n            this.contentAnimationState = this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu(): void {\n        if (this.isMobileScreenSize) {\n            this.sidenav.toggle();\n        } else {\n            this.sidenavAnimationState = this.toggledSidenavAnimation;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    private get toggledSidenavAnimation() {\n        return this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED\n            ? this.SIDENAV_STATES.COMPACT\n            : this.SIDENAV_STATES.EXPANDED;\n    }\n\n    private get toggledContentAnimation() {\n        if (this.isMobileScreenSize) {\n            return this.CONTENT_STATES.MOBILE;\n        }\n\n        if (this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED) {\n            return this.CONTENT_STATES.COMPACT;\n        } else {\n            return this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    get isMobileScreenSize(): boolean {\n        return this.mediaQueryList.matches;\n    }\n\n    private onMediaQueryChange() {\n        this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n        this.contentAnimationState = this.toggledContentAnimation;\n    }\n\n    getContentAnimationStateLeft() {\n        if (this.position === 'start') {\n            return this.contentAnimationState;\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n\n    getContentAnimationStateRight() {\n        if (this.position === 'end') {\n            return this.contentAnimationState;\n\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-sidebar-action-menu',\n    templateUrl: './sidebar-action-menu.component.html',\n    styleUrls: ['./sidebar-action-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sidebar-action-menu' }\n})\n\nexport class SidebarActionMenuComponent {\n\n    /** The title of the sidebar action. */\n    @Input()\n    title: string;\n\n    /** Toggle the sidebar action menu on expand. */\n    @Input()\n    expanded: boolean;\n\n    /** Width in pixels for sidebar action menu options. */\n    @Input()\n    width: number = 272;\n\n    isExpanded(): boolean {\n        return this.expanded;\n    }\n}\n\n@Directive({ selector: '[sidebar-menu-options]' }) export class SidebarMenuDirective {}\n@Directive({ selector: '[sidebar-menu-title-icon]' }) export class SidebarMenuTitleIconDirective { }\n@Directive({ selector: '[sidebar-menu-expand-icon]' }) export class SidebarMenuExpandIconDirective { }\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'adf-layout-header',\n    templateUrl: './header.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-layout-header' }\n})\nexport class HeaderLayoutComponent implements OnInit {\n    @Input() title: string;\n    @Input() logo: string;\n    @Input() redirectUrl: string | any[] = '/';\n    @Input() tooltip: string;\n    @Input() color: string;\n    @Input() showSidenavToggle: boolean = true;\n    @Output() clicked = new EventEmitter<any>();\n\n    /** The side that the drawer is attached to 'start' | 'end' page */\n    @Input() position = 'start';\n\n    toggleMenu() {\n        this.clicked.emit(true);\n    }\n\n    ngOnInit() {\n        if (!this.logo) {\n            this.logo = './assets/images/logo.png';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\nimport { SidenavLayoutContentDirective } from './directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from './directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from './directives/sidenav-layout-navigation.directive';\nimport { SidenavLayoutComponent } from './components/sidenav-layout/sidenav-layout.component';\nimport { LayoutContainerComponent } from './components/layout-container/layout-container.component';\nimport { SidebarActionMenuComponent, SidebarMenuDirective,\n    SidebarMenuExpandIconDirective, SidebarMenuTitleIconDirective } from './components/sidebar-action/sidebar-action-menu.component';\nimport { HeaderLayoutComponent } from './components/header/header.component';\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        RouterModule\n    ],\n    exports: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ],\n    declarations: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ]\n})\nexport class LayoutModule {}\nexport { LayoutModule as SidenavLayoutModule };\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CommentModel } from '../models/comment.model';\nimport { EcmUserService } from '../userinfo/services/ecm-user.service';\nimport { PeopleProcessService } from '../services/people-process.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-comment-list',\n    templateUrl: './comment-list.component.html',\n    styleUrls: ['./comment-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class CommentListComponent {\n\n    /** The comments data used to populate the list. */\n    @Input()\n    comments: CommentModel[];\n\n    /** Emitted when the user clicks on one of the comment rows. */\n    @Output()\n    clickRow: EventEmitter<CommentModel> = new EventEmitter<CommentModel>();\n\n    selectedComment: CommentModel;\n\n    currentLocale;\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                public ecmUserService: EcmUserService,\n                public userPreferenceService: UserPreferencesService) {\n        userPreferenceService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.currentLocale = locale;\n        });\n    }\n\n    selectComment(comment: CommentModel): void {\n        if (this.selectedComment) {\n            this.selectedComment.isSelected = false;\n        }\n        comment.isSelected = true;\n        this.selectedComment = comment;\n        this.clickRow.emit(this.selectedComment);\n    }\n\n    getUserShortName(user: any): string {\n        let shortName = '';\n        if (user) {\n            if (user.firstName) {\n                shortName = user.firstName[0].toUpperCase();\n            }\n            if (user.lastName) {\n                shortName += user.lastName[0].toUpperCase();\n            }\n        }\n        return shortName;\n    }\n\n    isPictureDefined(user: any): boolean {\n        return user.pictureId || user.avatarId;\n    }\n\n    getUserImage(user: any): string {\n        if (this.isAContentUsers(user)) {\n            return this.ecmUserService.getUserProfileImage(user.avatarId);\n        } else {\n            return this.peopleProcessService.getUserImage(user);\n        }\n    }\n\n    private isAContentUsers(user: any): boolean {\n        return user.avatarId;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class CommentModel {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: any;\n    isSelected: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n            this.isSelected = obj.isSelected ? obj.isSelected : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user.*\n */\n\nimport { LightUserRepresentation } from 'alfresco-js-api';\n\nexport class UserProcessModel implements LightUserRepresentation {\n    id?: number;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    pictureId?: number = null;\n    externalId?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.email = obj.email || null;\n            this.firstName = obj.firstName || null;\n            this.lastName = obj.lastName || null;\n            this.pictureId = obj.pictureId || null;\n            this.externalId = obj.externalId || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class CommentProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a task.\n     * @param taskId ID of the target task\n     * @param message Text for the comment\n     * @returns Details about the comment\n     */\n    addTaskComment(taskId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().activiti.taskApi.addTaskComment({message: message}, taskId))\n            .pipe(\n                map((response: CommentModel) => {\n                    return new CommentModel({\n                        id: response.id,\n                        message: response.message,\n                        created: response.created,\n                        createdBy: response.createdBy\n                    });\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a task.\n     * @param taskId ID of the target task\n     * @returns Details for each comment\n     */\n    getTaskComments(taskId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.taskApi.getTaskComments(taskId))\n            .pipe(\n                map((response: any) => {\n                    let comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        let user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({id: comment.id, message: comment.message, created: comment.created, createdBy: user}));\n                    });\n                    return comments;\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @returns Details for each comment\n     */\n    getProcessInstanceComments(processInstanceId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.commentsApi.getProcessInstanceComments(processInstanceId))\n            .pipe(\n                map((response: any) => {\n                    let comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        let user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({id: comment.id, message: comment.message, created: comment.created, createdBy: user}));\n                    });\n                    return comments;\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a comment to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentModel> {\n        return from(\n            this.apiService.getInstance().activiti.commentsApi.addProcessInstanceComment({message: message}, processInstanceId)\n        ).pipe(\n            map((response: CommentModel) => {\n                return new CommentModel({\n                    id: response.id,\n                    message: response.message,\n                    created: response.created,\n                    createdBy: response.createdBy\n                });\n            }),\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { LogService } from '../services/log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class CommentContentService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a node.\n     * @param nodeId ID of the target node\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addNodeComment(nodeId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().core.commentsApi.addComment(nodeId, {content: message}))\n            .pipe(\n                map((response: any) => {\n                    return new CommentModel({\n                        id: response.entry.id,\n                        message: response.entry.content,\n                        created: response.entry.createdAt,\n                        createdBy: response.entry.createdBy\n                    });\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a node.\n     * @param nodeId ID of the target node\n     * @returns Details for each comment\n     */\n    getNodeComments(nodeId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().core.commentsApi.getComments(nodeId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.list.entries.forEach((comment: any) => {\n                        comments.push(new CommentModel({\n                            id: comment.entry.id,\n                            message: comment.entry.content,\n                            created: comment.entry.createdAt,\n                            createdBy: comment.entry.createdBy\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentProcessService } from '../services/comment-process.service';\nimport { CommentContentService } from '../services/comment-content.service';\nimport { CommentModel } from '../models/comment.model';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-comments',\n    templateUrl: './comments.component.html',\n    styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnChanges {\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string;\n\n    /** The numeric ID of the node. */\n    @Input()\n    nodeId: string;\n\n    /** Are the comments read only? */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Emitted when an error occurs while displaying/adding a comment. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService, private commentContentService: CommentContentService) {\n        this.comment$ = new Observable<CommentModel>(observer => this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.taskId = null;\n        this.nodeId = null;\n\n        this.taskId = changes['taskId'] ? changes['taskId'].currentValue : null;\n        this.nodeId = changes['nodeId'] ? changes['nodeId'].currentValue : null;\n\n        if (this.taskId || this.nodeId) {\n            this.getComments();\n        } else {\n            this.resetComments();\n        }\n    }\n\n    private getComments(): void {\n        this.resetComments();\n        if (this.isATask()) {\n            this.commentProcessService.getTaskComments(this.taskId).subscribe(\n                (res: CommentModel[]) => {\n                    if (res && res instanceof Array) {\n                        res = res.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            let date1 = new Date(comment1.created);\n                            let date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        res.forEach((comment) => {\n                            this.commentObserver.next(comment);\n                        });\n                    }\n\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n\n        if (this.isANode()) {\n            this.commentContentService.getNodeComments(this.nodeId).subscribe(\n                (res: CommentModel[]) => {\n                    if (res && res instanceof Array) {\n\n                        res = res.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        res.forEach((comment) => {\n                            this.commentObserver.next(comment);\n                        });\n                    }\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            const comment = this.sanitize(this.message);\n\n            this.beingAdded = true;\n            if (this.isATask()) {\n                this.commentProcessService.addTaskComment(this.taskId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n\n            if (this.isANode()) {\n                this.commentContentService.addNodeComment(this.nodeId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    isATask(): boolean {\n        return this.taskId ? true : false;\n    }\n\n    isANode(): boolean {\n        return this.nodeId ? true : false;\n    }\n\n    private sanitize(input: string) {\n        return input.replace(/<[^>]+>/g, '')\n            .replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '')\n            .replace(/\\r?\\n/g, '<br/>');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { CommentListComponent } from './comment-list.component';\nimport { CommentsComponent } from './comments.component';\n\n@NgModule({\n    imports: [\n        PipeModule,\n        DataColumnModule,\n        DataTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        CommentListComponent,\n        CommentsComponent\n    ],\n    exports: [\n        CommentListComponent,\n        CommentsComponent\n    ]\n})\nexport class CommentsModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { MatMenuItem } from '@angular/material';\n\n@Component({\n    selector: 'adf-buttons-action-menu',\n    templateUrl: './buttons-menu.component.html',\n    styleUrls: ['./buttons-menu.component.scss']\n})\n\nexport class ButtonsMenuComponent implements  AfterContentInit {\n\n    @ContentChildren(MatMenuItem) buttons: QueryList<MatMenuItem>;\n\n    isMenuEmpty: boolean;\n\n    ngAfterContentInit() {\n        if (this.buttons.length > 0) {\n            this.isMenuEmpty = false;\n        } else {\n            this.isMenuEmpty = true;\n        }\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ButtonsMenuComponent } from './buttons-menu.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule\n    ],\n    declarations: [\n        ButtonsMenuComponent\n    ],\n    exports: [\n        ButtonsMenuComponent\n    ]\n})\nexport class ButtonsMenuModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-sorting-picker',\n    templateUrl: './sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sorting-picker' }\n})\nexport class SortingPickerComponent {\n\n    /** Available sorting options */\n    @Input()\n    options: Array<{key: string, label: string}> = [];\n\n    /** Currently selected option key */\n    @Input()\n    selected: string;\n\n    /** Current sorting direction */\n    @Input()\n    ascending = true;\n\n    /** Raised each time sorting key or direction gets changed. */\n    @Output()\n    change = new EventEmitter<{ key: string, ascending: boolean }>();\n\n    onChanged(event: MatSelectChange) {\n        this.selected = event.value;\n        this.raiseChangedEvent();\n    }\n\n    toggleSortDirection() {\n        this.ascending = !this.ascending;\n        this.raiseChangedEvent();\n    }\n\n    private raiseChangedEvent() {\n        this.change.emit({\n            key: this.selected,\n            ascending: this.ascending\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { SortingPickerComponent } from './sorting-picker.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        SortingPickerComponent\n    ],\n    exports: [\n        SortingPickerComponent\n    ]\n})\nexport class SortingPickerModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ViewEncapsulation,\n    OnInit,\n    AfterContentChecked\n} from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n    selector: 'adf-error-content',\n    templateUrl: './error-content.component.html',\n    styleUrls: ['./error-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-error-content' }\n})\nexport class ErrorContentComponent implements OnInit, AfterContentChecked {\n\n    /** Target URL for the secondary button. */\n    @Input()\n    secondaryButtonUrl: string = 'report-issue';\n\n    /** Target URL for the return button. */\n    @Input()\n    returnButtonUrl: string = '/';\n\n    /** Error code associated with this error. */\n    @Input()\n    errorCode: string;\n\n    hasSecondButton: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        if (this.route) {\n            this.route.params.forEach((params: Params) => {\n                if (params['id'] && !this.errorCode) {\n                    this.errorCode = params['id'];\n                    let unknown = '';\n                    this.translateService.get('ERROR_CONTENT.' + this.errorCode + '.TITLE').subscribe((errorTranslation: string) => {\n                        unknown = errorTranslation;\n                    });\n                    if (unknown === 'ERROR_CONTENT.' + this.errorCode + '.TITLE') {\n                        this.errorCode = 'UNKNOWN';\n                    }\n                }\n            });\n        }\n    }\n\n    getTranslations() {\n        this.hasSecondButton = this.translateService.instant(\n            'ERROR_CONTENT.' + this.errorCode + '.SECONDARY_BUTTON.TEXT') ? true : false;\n    }\n\n    ngAfterContentChecked() {\n        this.getTranslations();\n    }\n\n    onSecondButton() {\n        this.router.navigate(['/' + this.secondaryButtonUrl]);\n    }\n\n    onReturnButton() {\n        this.router.navigate(['/' + this.returnButtonUrl]);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-content',\n    templateUrl: './empty-content.component.html',\n    styleUrls: ['./empty-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-empty-content' }\n})\nexport class EmptyContentComponent {\n\n    /** Material Icon to use. */\n    @Input()\n    icon = 'cake';\n\n    /** String or Resource Key for the title. */\n    @Input()\n    title = '';\n\n    /** String or Resource Key for the subtitle. */\n    @Input()\n    subtitle = '';\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ErrorContentComponent } from './error-content/error-content.component';\nimport { EmptyContentComponent } from './empty-content/empty-content.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ],\n    exports: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ]\n})\nexport class TemplateModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, CanActivate,\n    CanActivateChild, RouterStateSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n    constructor(private authService: AuthenticationService,\n                private router: Router,\n                private appConfig: AppConfigService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const redirectUrl = state.url;\n        return this.checkLogin(redirectUrl);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        }\n        if (!this.authService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.authService.setRedirect({ provider: 'ALL', url: redirectUrl });\n\n            const pathToLogin = this.getRouteDestinationForLogin();\n            this.router.navigate(['/' + pathToLogin]);\n        }\n\n        return false;\n    }\n\n    isOAuthWithoutSilentLogin() {\n        let oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n        return this.authService.isOauth() && oauth.silentLogin === false;\n    }\n\n    public getRouteDestinationForLogin(): string {\n        return this.appConfig &&\n        this.appConfig.get<string>(AppConfigValues.LOGIN_ROUTE) ?\n            this.appConfig.get<string>(AppConfigValues.LOGIN_ROUTE) : 'login';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Injectable()\nexport class AuthGuardEcm implements CanActivate {\n    constructor(private authService: AuthenticationService,\n                private router: Router,\n                private appConfig: AppConfigService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.checkLogin(state.url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        if (this.authService.isEcmLoggedIn()) {\n            return true;\n        }\n\n        if (!this.authService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.authService.setRedirect({ provider: 'ECM', url: redirectUrl });\n            const pathToLogin = this.getRouteDestinationForLogin();\n            this.router.navigate(['/' + pathToLogin]);\n        }\n\n        return false;\n    }\n\n    isOAuthWithoutSilentLogin() {\n        let oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n        return this.authService.isOauth() && oauth.silentLogin === false;\n    }\n\n    private getRouteDestinationForLogin(): string {\n        return this.appConfig &&\n            this.appConfig.get<string>(AppConfigValues.LOGIN_ROUTE) ?\n            this.appConfig.get<string>(AppConfigValues.LOGIN_ROUTE) : 'login';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot, Router } from '@angular/router';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { AuthenticationService } from './authentication.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n@Injectable()\nexport class AuthGuardBpm implements CanActivate, CanActivateChild {\n    constructor(private authService: AuthenticationService, private router: Router, private appConfig: AppConfigService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.checkLogin(state.url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        if (this.authService.isBpmLoggedIn()) {\n            return true;\n        }\n\n        if (!this.authService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.authService.setRedirect({ provider: 'BPM', url: redirectUrl });\n            const pathToLogin = this.getRouteDestinationForLogin();\n            this.router.navigate(['/' + pathToLogin]);\n        }\n\n        return false;\n    }\n\n    isOAuthWithoutSilentLogin() {\n        let oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n        return this.authService.isOauth() && oauth.silentLogin === false;\n    }\n\n    private getRouteDestinationForLogin(): string {\n        return this.appConfig && this.appConfig.get<string>(AppConfigValues.LOGIN_ROUTE) ? this.appConfig.get<string>(AppConfigValues.LOGIN_ROUTE) : 'login';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppDefinitionRepresentation } from 'alfresco-js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class AppsProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of deployed apps for this user.\n     * @returns The list of deployed apps\n     */\n    getDeployedApplications(): Observable<AppDefinitionRepresentation[]> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation[]> response.data),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of deployed apps for this user, where the app name is `name`.\n     * @param name Name of the app\n     * @returns The list of deployed apps\n     */\n    getDeployedApplicationsByName(name: string): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation> response.data.find(app => app.name === name)),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a specific app ID number.\n     * @param appId ID of the target app\n     * @returns Details of the app\n     */\n    getApplicationDetailsById(appId: number): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => response.data.find(app => app.id === appId)),\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { TranslationService } from './translation.service';\n\n@Injectable()\nexport class PageTitleService {\n\n    private originalTitle: string = '';\n    private translatedTitle: string = '';\n\n    constructor(\n        private titleService: Title,\n        private appConfig: AppConfigService,\n        private translationService: TranslationService) {\n        translationService.translate.onLangChange.subscribe(() => this.onLanguageChanged());\n        translationService.translate.onTranslationChange.subscribe(() => this.onLanguageChanged());\n    }\n\n    /**\n     * Sets the page title.\n     * @param value The new title\n     */\n    setTitle(value: string = '') {\n        this.originalTitle = value;\n        this.translatedTitle = this.translationService.instant(value);\n\n        this.updateTitle();\n    }\n\n    private onLanguageChanged() {\n        this.translatedTitle = this.translationService.instant(this.originalTitle);\n        this.updateTitle();\n    }\n\n    private updateTitle() {\n        const name = this.appConfig.get('application.name') || 'Alfresco ADF Application';\n\n        const title = this.translatedTitle ? `${this.translatedTitle} - ${name}` : `${name}`;\n        this.titleService.setTitle(title);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from 'alfresco-js-api';\nimport { Observable, from, interval } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { concatMap, switchMap, takeWhile } from 'rxjs/operators';\n\n/**\n * @deprecated\n * RenditionsService\n * (this service is deprecated in 2.2.0 and will be removed in future revisions)\n */\n@Injectable()\nexport class RenditionsService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /** @deprecated */\n    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean> {\n        return Observable.create((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                (res) => {\n                    let isAvailable = true;\n                    if (res.entry.status.toString() === 'NOT_CREATED') {\n                        isAvailable = false;\n                    }\n                    observer.next(isAvailable);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /** @deprecated */\n    isConversionPossible(nodeId: string, encoding: string): Observable<boolean> {\n        return Observable.create((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                () => {\n                    observer.next(true);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /** @deprecated */\n    getRenditionUrl(nodeId: string, encoding: string): string {\n        return this.apiService.contentApi.getRenditionUrl(nodeId, encoding);\n    }\n\n    /** @deprecated */\n    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRendition(nodeId, encoding));\n    }\n\n    /** @deprecated */\n    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId));\n    }\n\n    /** @deprecated */\n    createRendition(nodeId: string, encoding: string): Observable<{}> {\n        return from(this.apiService.renditionsApi.createRendition(nodeId, {id: encoding}));\n    }\n\n    /** @deprecated */\n    convert(nodeId: string, encoding: string, pollingInterval: number = 1000, retries: number = 5) {\n        return this.createRendition(nodeId, encoding)\n            .pipe(\n                concatMap(() => this.pollRendition(nodeId, encoding, pollingInterval, retries))\n            );\n    }\n\n    /** @deprecated */\n    private pollRendition(nodeId: string, encoding: string, intervalSize: number = 1000, retries: number = 5) {\n        let attempts = 0;\n        return interval(intervalSize)\n            .pipe(\n                switchMap(() => this.getRendition(nodeId, encoding)),\n                takeWhile((data) => {\n                    attempts += 1;\n                    if (attempts > retries) {\n                        return false;\n                    }\n                    return (data.entry.status.toString() !== 'CREATED');\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MatSnackBarConfig } from '@angular/material';\nimport { TranslationService } from './translation.service';\n\n@Injectable()\nexport class NotificationService {\n\n    static DEFAULT_DURATION_MESSAGE: number = 5000;\n\n    constructor(private snackBar: MatSnackBar,\n                private translationService: TranslationService) {\n    }\n\n    /**\n     * Opens a SnackBar notification to show a message.\n     * @param message The message (or resource key) to show.\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessage(message: string, config: number | MatSnackBarConfig = NotificationService.DEFAULT_DURATION_MESSAGE): MatSnackBarRef<any> {\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, null, config);\n    }\n\n    /**\n     * Opens a SnackBar notification with a message and a response button.\n     * @param message The message (or resource key) to show.\n     * @param action Caption for the response button\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessageAction(message: string, action: string, config: number | MatSnackBarConfig = NotificationService.DEFAULT_DURATION_MESSAGE): MatSnackBarRef<any> {\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, action, config);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ComponentTranslationModel {\n    name: string;\n    path: string;\n    json: string [];\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name;\n        this.path = obj && obj.path;\n        this.json = obj && obj.json || [];\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, forkJoin, throwError, of } from 'rxjs';\nimport { ComponentTranslationModel } from '../models/component.model';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { map, catchError, retry } from 'rxjs/operators';\n\n@Injectable()\nexport class TranslateLoaderService implements TranslateLoader {\n\n    private prefix: string = 'i18n';\n    private suffix: string = '.json';\n    private providers: ComponentTranslationModel[] = [];\n    private queue: string [][] = [];\n\n    constructor(private http: HttpClient) {\n    }\n\n    registerProvider(name: string, path: string) {\n        let registered = this.providers.find(provider => provider.name === name);\n        if (registered) {\n            registered.path = path;\n        } else {\n            this.providers.push(new ComponentTranslationModel({ name: name, path: path }));\n        }\n    }\n\n    providerRegistered(name: string): boolean {\n        return this.providers.find(x => x.name === name) ? true : false;\n    }\n\n    getComponentToFetch(lang: string): Array<Observable<any>> {\n        const observableBatch = [];\n        if (!this.queue[lang]) {\n            this.queue[lang] = [];\n        }\n        this.providers.forEach((component) => {\n            if (!this.isComponentInQueue(lang, component.name)) {\n                this.queue[lang].push(component.name);\n\n                const translationUrl = `${component.path}/${this.prefix}/${lang}${this.suffix}?v=${Date.now()}`;\n\n                observableBatch.push(\n                    this.http.get(translationUrl).pipe(\n                        map((res: Response) => {\n                            component.json[lang] = res;\n                        }),\n                        retry(3),\n                        catchError(() => throwError(`Failed to load ${translationUrl}`))\n                    )\n                );\n            }\n        });\n\n        return observableBatch;\n    }\n\n    init(lang: string) {\n        if (this.queue[lang] === undefined) {\n            this.queue[lang] = [];\n        }\n    }\n\n    isComponentInQueue(lang: string, name: string) {\n        return (this.queue[lang] || []).find(x => x === name) ? true : false;\n    }\n\n    getFullTranslationJSON(lang: string): any {\n        let result = {};\n\n        this.providers\n            .slice(0)\n            .sort((a, b) => {\n                if (a.name === 'app') {\n                    return 1;\n                }\n                if (b.name === 'app') {\n                    return -1;\n                }\n                return a.name.localeCompare(b.name);\n            })\n            .forEach(model => {\n                if (model.json && model.json[lang]) {\n                    result = ObjectUtils.merge(result, model.json[lang]);\n                }\n            });\n\n        return result;\n    }\n\n    getTranslation(lang: string): Observable<any> {\n        let hasFailures = false;\n        const batch = [\n            ...this.getComponentToFetch(lang).map(observable => {\n                return observable.pipe(\n                    catchError(error => {\n                        console.warn(error);\n                        hasFailures = true;\n                        return of(error);\n                    })\n                );\n            })\n        ];\n\n        return Observable.create(observer => {\n\n            if (batch.length > 0) {\n                forkJoin(batch).subscribe(\n                    () => {\n                        let fullTranslation = this.getFullTranslationJSON(lang);\n                        if (fullTranslation) {\n                            observer.next(fullTranslation);\n                        }\n                        if (hasFailures) {\n                            observer.error('Failed to load some resources');\n                        } else {\n                            observer.complete();\n                        }\n                    },\n                    (err) => {\n                        observer.error('Failed to load some resources');\n                    });\n            } else {\n                let fullTranslation = this.getFullTranslationJSON(lang);\n                if (fullTranslation) {\n                    observer.next(fullTranslation);\n                    observer.complete();\n                }\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Minimatch } from 'minimatch-browser';\nimport { Subject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport {\n    FileUploadCompleteEvent,\n    FileUploadDeleteEvent,\n    FileUploadErrorEvent,\n    FileUploadEvent\n} from '../events/file.event';\nimport { FileModel, FileUploadProgress, FileUploadStatus } from '../models/file.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable()\nexport class UploadService {\n\n    private cache: { [key: string]: any } = {};\n    private totalComplete: number = 0;\n    private totalAborted: number = 0;\n    private totalError: number = 0;\n    private excludedFileList: string[] = [];\n    private matchingOptions: any = null;\n\n    activeTask: Promise<any> = null;\n    queue: FileModel[] = [];\n\n    queueChanged: Subject<FileModel[]> = new Subject<FileModel[]>();\n    fileUpload: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadStarting: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadCancelled: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadProgress: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadAborted: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadError: Subject<FileUploadErrorEvent> = new Subject<FileUploadErrorEvent>();\n    fileUploadComplete: Subject<FileUploadCompleteEvent> = new Subject<FileUploadCompleteEvent>();\n    fileUploadDeleted: Subject<FileUploadDeleteEvent> = new Subject<FileUploadDeleteEvent>();\n    fileDeleted: Subject<string> = new Subject<string>();\n\n    constructor(protected apiService: AlfrescoApiService, private appConfigService: AppConfigService) {\n    }\n\n    /**\n     * Checks whether the service is uploading a file.\n     * @returns True if a file is uploading, false otherwise\n     */\n    isUploading(): boolean {\n        return this.activeTask ? true : false;\n    }\n\n    /**\n     * Gets the file Queue\n     * @returns Array of files that form the queue\n     */\n    getQueue(): FileModel[] {\n        return this.queue;\n    }\n\n    /**\n     * Adds files to the uploading queue to be uploaded\n     * @param files One or more separate parameters or an array of files to queue\n     * @returns Array of files that were not blocked from upload by the ignore list\n     */\n    addToQueue(...files: FileModel[]): FileModel[] {\n        const allowedFiles = files.filter(currentFile => this.filterElement(currentFile));\n        this.queue = this.queue.concat(allowedFiles);\n        this.queueChanged.next(this.queue);\n        return allowedFiles;\n    }\n\n    private filterElement(file: FileModel) {\n        let isAllowed = true;\n\n        this.excludedFileList = <string[]> this.appConfigService.get('files.excluded');\n        if (this.excludedFileList) {\n\n            this.matchingOptions = this.appConfigService.get('files.match-options');\n\n            isAllowed = this.excludedFileList.filter((pattern) => {\n                let minimatch = new Minimatch(pattern, this.matchingOptions);\n                return minimatch.match(file.name);\n            }).length === 0;\n        }\n        return isAllowed;\n    }\n\n    /**\n     * Finds all the files in the queue that are not yet uploaded and uploads them into the directory folder.\n     * @param emitter (Deprecated) Emitter to invoke on file status change\n     */\n    uploadFilesInTheQueue(emitter?: EventEmitter<any>): void {\n        if (!this.activeTask) {\n            let file = this.queue.find(currentFile => currentFile.status === FileUploadStatus.Pending);\n            if (file) {\n                this.onUploadStarting(file);\n\n                const promise = this.beginUpload(file, emitter);\n                this.activeTask = promise;\n                this.cache[file.id] = promise;\n\n                let next = () => {\n                    this.activeTask = null;\n                    setTimeout(() => this.uploadFilesInTheQueue(emitter), 100);\n                };\n\n                promise.next = next;\n\n                promise.then(\n                    () => next(),\n                    () => next()\n                );\n            }\n        }\n    }\n\n    /**\n     * Cancels uploading of files.\n     * @param files One or more separate parameters or an array of files specifying uploads to cancel\n     */\n    cancelUpload(...files: FileModel[]) {\n        files.forEach(file => {\n            const promise = this.cache[file.id];\n\n            if (promise) {\n                promise.abort();\n                delete this.cache[file.id];\n            } else {\n                const performAction = this.getAction(file);\n                performAction();\n            }\n        });\n    }\n\n    /** Clears the upload queue */\n    clearQueue() {\n        this.queue = [];\n        this.totalComplete = 0;\n        this.totalAborted = 0;\n        this.totalError = 0;\n    }\n\n    /**\n     * Gets an upload promise for a file.\n     * @param file The target file\n     * @returns Promise that is resolved if the upload is successful or error otherwise\n     */\n    getUploadPromise(file: FileModel) {\n        let opts: any = {\n            renditions: 'doclib',\n            include: ['allowableOperations']\n        };\n\n        if (file.options.newVersion === true) {\n            opts.overwrite = true;\n            opts.majorVersion = file.options.majorVersion;\n            opts.comment = file.options.comment;\n            opts.name = file.name;\n        } else {\n            opts.autoRename = true;\n        }\n\n        if (file.options.nodeType) {\n            opts.nodeType = file.options.nodeType;\n        }\n\n        if (file.id) {\n            return this.apiService.getInstance().upload.updateFile(\n                file.file,\n                file.options.path,\n                file.id,\n                file.file,\n                opts\n            );\n        } else {\n            return this.apiService.getInstance().upload.uploadFile(\n                file.file,\n                file.options.path,\n                file.options.parentId,\n                file.options,\n                opts\n            );\n        }\n    }\n\n    private beginUpload(file: FileModel, /* @deprecated */emitter: EventEmitter<any>): any {\n\n        let promise = this.getUploadPromise(file);\n\n        promise.on('progress', (progress: FileUploadProgress) => {\n            this.onUploadProgress(file, progress);\n        })\n            .on('abort', () => {\n                this.onUploadAborted(file);\n                if (emitter) {\n                    emitter.emit({ value: 'File aborted' });\n                }\n            })\n            .on('error', err => {\n                this.onUploadError(file, err);\n                if (emitter) {\n                    emitter.emit({ value: 'Error file uploaded' });\n                }\n            })\n            .on('success', data => {\n                this.onUploadComplete(file, data);\n                if (emitter) {\n                    emitter.emit({ value: data });\n                }\n            })\n            .catch(err => {\n                throw err;\n            });\n\n        return promise;\n    }\n\n    private onUploadStarting(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Starting;\n            const event = new FileUploadEvent(file, FileUploadStatus.Starting);\n            this.fileUpload.next(event);\n            this.fileUploadStarting.next(event);\n        }\n    }\n\n    private onUploadProgress(file: FileModel, progress: FileUploadProgress): void {\n        if (file) {\n            file.progress = progress;\n            file.status = FileUploadStatus.Progress;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Progress);\n            this.fileUpload.next(event);\n            this.fileUploadProgress.next(event);\n        }\n    }\n\n    private onUploadError(file: FileModel, error: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Error;\n            this.totalError++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadErrorEvent(file, error, this.totalError);\n            this.fileUpload.next(event);\n            this.fileUploadError.next(event);\n        }\n    }\n\n    private onUploadComplete(file: FileModel, data: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Complete;\n            file.data = data;\n            this.totalComplete++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadCompleteEvent(file, this.totalComplete, data, this.totalAborted);\n            this.fileUpload.next(event);\n            this.fileUploadComplete.next(event);\n        }\n    }\n\n    private onUploadAborted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Aborted;\n            this.totalAborted++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Aborted);\n            this.fileUpload.next(event);\n            this.fileUploadAborted.next(event);\n            promise.next();\n        }\n    }\n\n    private onUploadCancelled(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Cancelled;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Cancelled);\n            this.fileUpload.next(event);\n            this.fileUploadCancelled.next(event);\n        }\n    }\n\n    private onUploadDeleted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Deleted;\n            this.totalComplete--;\n\n            const event = new FileUploadDeleteEvent(file, this.totalComplete);\n            this.fileUpload.next(event);\n            this.fileUploadDeleted.next(event);\n        }\n    }\n\n    private getAction(file) {\n        const actions = {\n            [FileUploadStatus.Pending]: () => this.onUploadCancelled(file),\n            [FileUploadStatus.Deleted]: () => this.onUploadDeleted(file),\n            [FileUploadStatus.Error]: () => this.onUploadError(file, null)\n        };\n\n        return actions[file.status];\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\n\nimport { NodePaging } from 'alfresco-js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class DeletedNodesApiService {\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get nodesApi() {\n       return this.apiService.getInstance().core.nodesApi;\n    }\n\n    /**\n     * Gets a list of nodes in the trash.\n     * @param options Options for JSAPI call\n     * @returns List of nodes in the trash\n     */\n    getDeletedNodes(options?: Object): Observable<NodePaging> {\n        const defaultOptions = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.nodesApi.getDeletedNodes(queryOptions);\n\n        return from(promise).pipe(\n            catchError(err => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class FavoritesApiService {\n\n    static remapEntry({ entry }: any): any {\n        entry.properties = {\n            'cm:title': entry.title,\n            'cm:description': entry.description\n        };\n\n        return { entry };\n    }\n\n    remapFavoritesData(data: any = {}): NodePaging {\n        const list = (data.list || {});\n        const pagination = (list.pagination || {});\n        const entries: any[] = this\n            .remapFavoriteEntries(list.entries || []);\n\n        return <NodePaging> {\n            list: { entries, pagination }\n        };\n    }\n\n    remapFavoriteEntries(entries: any[]) {\n        return entries\n            .map(({ entry: { target }}: any) => ({\n                entry: target.file || target.folder\n            }))\n            .filter(({ entry }) => (!!entry))\n            .map(FavoritesApiService.remapEntry);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get favoritesApi() {\n       return this.apiService.getInstance().core.favoritesApi;\n    }\n\n    /**\n     * Gets the favorites for a user.\n     * @param personId ID of the user\n     * @param options Options supported by JSAPI\n     * @returns List of favorites\n     */\n    getFavorites(personId: string, options?: any): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.favoritesApi\n            .getFavorites(personId, queryOptions)\n            .then(this.remapFavoritesData);\n\n        return from(promise).pipe(\n            catchError(err => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class NodesApiService {\n\n    constructor(\n        private api: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get nodesApi() {\n        return this.api.getInstance().core.nodesApi;\n    }\n\n    private getEntryFromEntity(entity: MinimalNodeEntity) {\n        return entity.entry;\n    }\n\n    /**\n     * Gets the stored information about a node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JSAPI\n     * @returns Node information\n     */\n    getNode(nodeId: string, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNode(nodeId, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError(err => throwError(err))\n        );\n    }\n\n    /**\n     * Gets the items contained in a folder node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JSAPI\n     * @returns List of child items from the folder\n     */\n    getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n        const defaults = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNodeChildren(nodeId, queryOptions);\n\n        return from(promise).pipe(\n            catchError(err => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new document node inside a folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new node\n     * @param options Optional parameters supported by JSAPI\n     * @returns Details of the new node\n     */\n    createNode(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const promise = this.nodesApi\n            .addNode(parentNodeId, nodeBody, options)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError(err => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder node inside a parent folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new folder\n     * @param options Optional parameters supported by JSAPI\n     * @returns Details of the new folder\n     */\n    createFolder(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const body = Object.assign({ nodeType: 'cm:folder' }, nodeBody);\n        return this.createNode(parentNodeId, body, options);\n    }\n\n    /**\n     * Updates the information about a node.\n     * @param nodeId ID of the target node\n     * @param nodeBody New data for the node\n     * @param options Optional parameters supported by JSAPI\n     * @returns Updated node information\n     */\n    updateNode(nodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n\n        const promise = this.nodesApi\n            .updateNode(nodeId, nodeBody, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError(err => throwError(err))\n        );\n    }\n\n    /**\n     * Moves a node to the trashcan.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JSAPI\n     * @returns Empty result that notifies when the deletion is complete\n     */\n    deleteNode(nodeId: string, options: any = {}): Observable<any> {\n        const promise = this.nodesApi.deleteNode(nodeId, options);\n\n        return from(promise).pipe(\n            catchError(err => throwError(err))\n        );\n    }\n\n    /**\n     * Restores a node previously moved to the trashcan.\n     * @param nodeId ID of the node to restore\n     * @returns Details of the restored node\n     */\n    restoreNode(nodeId: string): Observable<MinimalNodeEntryEntity> {\n        const promise = this.nodesApi\n            .restoreNode(nodeId)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError(err => throwError(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class PeopleContentService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get peopleApi() {\n       return this.apiService.getInstance().core.peopleApi;\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param personId ID of the target user\n     * @returns User information\n     */\n    getPerson(personId: string): Observable<any> {\n        const promise = this.peopleApi.getPerson(personId);\n\n        return from(promise).pipe(\n            catchError(err => of(err))\n        );\n    }\n\n    /**\n     * Gets information about the user who is currently logged in.\n     * @returns User information\n     */\n    getCurrentPerson(): Observable<any> {\n        return this.getPerson('-me-');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { QueryBody } from 'alfresco-js-api';\nimport { SearchConfigurationInterface } from '../interface/search-configuration.interface';\n\n@Injectable()\nexport class SearchConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    /**\n     * Generates a QueryBody object with custom search parameters.\n     * @param searchTerm Term text to search for\n     * @param maxResults Maximum number of search results to show in a page\n     * @param skipCount The offset of the start of the page within the results list\n     * @returns Query body defined by the parameters\n     */\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        let defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `${searchTerm}* OR name:${searchTerm}*` : searchTerm\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder' OR TYPE:'cm:content'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, QueryBody } from 'alfresco-js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SearchConfigurationService } from './search-configuration.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class SearchService {\n\n    dataLoaded: Subject<NodePaging> = new Subject();\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchConfigurationService: SearchConfigurationService) {\n    }\n\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().core.queriesApi.findNodes(term, options);\n\n        promise.then((data: any) => {\n            this.dataLoaded.next(data);\n        });\n\n        return from(promise).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    search(searchTerm: string, maxResults: number, skipCount: number): Observable<NodePaging> {\n        const searchQuery = Object.assign(this.searchConfigurationService.generateQueryBody(searchTerm, maxResults, skipCount));\n        const promise = this.apiService.getInstance().search.searchApi.search(searchQuery);\n\n        promise.then((data: any) => {\n            this.dataLoaded.next(data);\n        });\n\n        return from(promise).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    searchByQueryBody(queryBody: QueryBody): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().search.searchApi.search(queryBody);\n\n        promise.then((data: any) => {\n            this.dataLoaded.next(data);\n        });\n\n        return from(promise).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any): Observable<any> {\n        return throwError(error || 'Server error');\n    }\n}\n\nexport interface SearchOptions {\n    skipCount?: number;\n    maxItems?: number;\n    rootNodeId?: string;\n    nodeType?: string;\n    include?: string[];\n    orderBy?: string;\n    fields?: string[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, SharedLinkEntry } from 'alfresco-js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class SharedLinksApiService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private preferences: UserPreferencesService) {\n    }\n\n    private get sharedLinksApi() {\n        return this.apiService.getInstance().core.sharedlinksApi;\n    }\n\n    /**\n     * Gets shared links available to the current user.\n     * @param options Options supported by JSAPI\n     * @returns List of shared links\n     */\n    getSharedLinks(options: any = {}): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: ['properties', 'allowableOperations']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, options);\n        const promise = this.sharedLinksApi.findSharedLinks(queryOptions);\n\n        return from(promise).pipe(\n            catchError(err => of(err))\n        );\n    }\n\n    /**\n     * Creates a shared link available to the current user.\n     * @param nodeId ID of the node to link to\n     * @param options Options supported by JSAPI\n     * @returns The shared link just created\n     */\n    createSharedLinks(nodeId: string, options: any = {}): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.addSharedLink({ nodeId: nodeId });\n\n        return from(promise).pipe(\n            catchError(err => of(err))\n        );\n    }\n\n    /**\n     * Deletes a shared link.\n     * @param sharedId ID of the link to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSharedLink(sharedId: string): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.deleteSharedLink(sharedId);\n\n        return from(promise).pipe(\n            catchError(err => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SitePaging, SiteEntry } from 'alfresco-js-api';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class SitesService {\n\n    constructor(\n        private apiService: AlfrescoApiService) { }\n\n    /**\n     * Gets a list of all sites in the repository.\n     * @param opts Options supported by JSAPI\n     * @returns List of sites\n     */\n    getSites(opts: any = {}): Observable<SitePaging> {\n        const defaultOptions = {\n            skipCount: 0,\n            include: ['properties']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, opts);\n        return from(this.apiService.getInstance().core.sitesApi.getSites(queryOptions))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a site.\n     * @param siteId ID of the target site\n     * @param opts Options supported by JSAPI\n     * @returns Information about the site\n     */\n    getSite(siteId: string, opts?: any): Observable<SiteEntry> {\n        return from(this.apiService.getInstance().core.sitesApi.getSite(siteId, opts))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a site.\n     * @param siteId Site to delete\n     * @param permanentFlag True: deletion is permanent; False: site is moved to the trash\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSite(siteId: string, permanentFlag: boolean = true): Observable<any> {\n        let options: any = {};\n        options.permanent = permanentFlag;\n        return from(this.apiService.getInstance().core.sitesApi.deleteSite(siteId, options))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a site's content.\n     * @param siteId ID of the target site\n     * @returns Site content\n     */\n    getSiteContent(siteId: string): Observable<SiteEntry> {\n        return this.getSite(siteId, { relations: ['containers'] });\n    }\n\n    /**\n     * Gets a list of all a site's members.\n     * @param siteId ID of the target site\n     * @returns Site members\n     */\n    getSiteMembers(siteId: string): Observable<SiteEntry> {\n        return this.getSite(siteId, { relations: ['members'] });\n    }\n\n    /**\n     * Gets the username of the user currently logged into ACS.\n     * @returns Username string\n     */\n    getEcmCurrentLoggedUserName(): string {\n        return this.apiService.getInstance().getEcmUsername();\n    }\n\n    private handleError(error: Response): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { LoginDialogComponent } from '../login/components/login-dialog.component';\nimport { LoginDialogComponentData } from '../login/components/login-dialog-component-data.interface';\n\n@Injectable()\nexport class LoginDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(actionName: string, title: string): Observable<string> {\n        const logged = new Subject<string>();\n        logged.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: LoginDialogComponentData = {\n            title,\n            actionName,\n            logged\n        };\n\n        this.openLoginDialog(data, 'adf-login-dialog', '630px');\n        return logged;\n    }\n\n    private openLoginDialog(data: LoginDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(LoginDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApi,\n    ContentApi,\n    NodesApi\n} from 'alfresco-js-api';\nimport * as alfrescoApi from 'alfresco-js-api';\n/* tslint:disable:adf-file-name */\n\n@Injectable()\nexport class ExternalAlfrescoApiService {\n\n    protected alfrescoApi: AlfrescoApi;\n\n    getInstance(): AlfrescoApi {\n        return this.alfrescoApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    init(ecmHost: string, contextRoot: string) {\n\n        let domainPrefix = this.createPrefixFromHost(ecmHost);\n\n        const config = {\n            provider: 'ECM',\n            hostEcm: ecmHost,\n            authType: 'BASIC',\n            contextRoot: contextRoot,\n            domainPrefix\n        };\n        this.initAlfrescoApi(config);\n    }\n\n    protected initAlfrescoApi(config) {\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.alfrescoApi = <AlfrescoApi> new alfrescoApi(config);\n        }\n    }\n\n    private createPrefixFromHost(url: string): string {\n        let match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n        let result = null;\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\n            result = match[2];\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { LogService } from '../services/log.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable()\nexport class ClipboardService {\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private logService: LogService,\n        private notificationService: NotificationService) {}\n\n    isTargetValid(target: HTMLInputElement | HTMLTextAreaElement) {\n        if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n            if (target.hasAttribute('disabled')) {\n                return false;\n            }\n            return true;\n        }\n\n        this.logService.error(`${target} should be input or textarea`);\n        return false;\n    }\n\n    copyToClipboard(target: HTMLInputElement | HTMLTextAreaElement, message?: string) {\n        if (this.isTargetValid(target)) {\n            try {\n                target.select();\n                target.setSelectionRange(0, target.value.length);\n                this.document.execCommand('copy');\n                this.notify(message);\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private notify(message) {\n        if (message) {\n            this.notificationService.openSnackMessage(message);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { ClipboardService } from './clipboard.service';\n\n@Directive({\n    selector: '[adf-clipboard]',\n    exportAs: 'adfClipboard'\n})\nexport class ClipboardDirective {\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-clipboard') target: HTMLInputElement | HTMLTextAreaElement;\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('clipboard-notification') message: string;\n\n    @HostListener('click', ['$event'])\n    handleClickEvent(event: MouseEvent) {\n        event.preventDefault();\n        this.copyToClipboard();\n    }\n\n    constructor(private clipboardService: ClipboardService) {}\n\n    private copyToClipboard() {\n        const isValidTarget = this.clipboardService.isTargetValid(this.target);\n\n        if (isValidTarget) {\n            this.clipboardService.copyToClipboard(this.target, this.message);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClipboardDirective } from './clipboard.directive';\nimport { ClipboardService } from './clipboard.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ClipboardService\n    ],\n    declarations: [\n        ClipboardDirective\n    ],\n    exports: [\n        ClipboardDirective\n    ]\n})\n\nexport class ClipboardModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EcmCompanyModel {\n      organization: string;\n      address1: string;\n      address2: string;\n      address3: string;\n      postcode: string;\n      telephone: string;\n      fax: string;\n      email: string;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the user redirection guard.*\n */\n\nexport class RedirectionModel {\n    provider: string;\n    url?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.provider = obj.provider;\n            this.url = obj.url || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentRepresentation, LightUserRepresentation } from 'alfresco-js-api';\n\n/**\n * @deprecated\n * CommentProcessModel\n * (this model is deprecated in 2.3.0 in favour of CommentModel and will be removed in future revisions)\n */\nexport class CommentProcessModel implements CommentRepresentation {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: LightUserRepresentation;\n    isSelected: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n            this.isSelected = obj.isSelected ?  obj.isSelected : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from 'alfresco-js-api';\n\nexport class PaginationModel implements Pagination {\n    count?: number;\n    hasMoreItems?: boolean;\n    merge?: boolean;\n    totalItems?: number;\n    skipCount?: number;\n    maxItems?: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.count = obj.count;\n            this.hasMoreItems = obj.hasMoreItems ? obj.hasMoreItems : false;\n            this.merge = obj.merge ? obj.merge : false;\n            this.totalItems = obj.totalItems;\n            this.skipCount = obj.skipCount;\n            this.maxItems = obj.maxItems;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:adf-file-name  */\nexport class AlfrescoApiMock {\n\n    login(username: string, password: string) {\n        return new Promise((resolve) => {\n            resolve('TICKET_4479f4d3bb155195879bfbb8d5206f433488a1b1');\n        });\n    }\n\n    logout() {\n        return new Promise((resolve) => {\n            resolve('logout');\n        });\n    }\n\n    changeConfig() {\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class AppConfigServiceMock extends AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent'\n    };\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    load(): Promise<any> {\n        return new Promise(resolve => {\n            resolve(this.config);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { RedirectionModel } from '../models/redirection.model';\n\n// TODO: should be extending AuthenticationService\nexport class AuthenticationMock /*extends AuthenticationService*/ {\n    private redirectUrl: RedirectionModel = null;\n\n    setRedirectUrl(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    getRedirectUrl(): string|null {\n        return this.redirectUrl ? this.redirectUrl.url : null;\n    }\n\n    // TODO: real auth service returns Observable<string>\n    login(username: string, password: string): Observable<{ type: string, ticket: any }> {\n        if (username === 'fake-username' && password === 'fake-password') {\n            return of({ type: 'type', ticket: 'ticket'});\n        }\n\n        if (username === 'fake-username-CORS-error' && password === 'fake-password') {\n            return throwError({\n                error: {\n                    crossDomain: true,\n                    message: 'ERROR: the network is offline, Origin is not allowed by Access-Control-Allow-Origin'\n                }\n            });\n        }\n\n        if (username === 'fake-username-CSRF-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: Invalid CSRF-token', status: 403});\n        }\n\n        if (username === 'fake-username-ECM-access-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: 00170728 Access Denied.  The system is currently in read-only mode', status: 403});\n        }\n\n        return throwError('Fake server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeBpmUserNoImage = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    fullname: 'fake-full-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: undefined,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmUser = {\n    apps: [],\n    capabilities: null,\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-bpm-first-name',\n    lastName: 'fake-bpm-last-name',\n    fullname: 'fake-bpm-full-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 12,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmEditedUser = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    fullname: 'fake-full-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 'src/assets/images/bpmImg.gif',\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\n\nexport let fakeUser1 = { id: 1, email: 'fake-email@dom.com', firstName: 'firstName', lastName: 'lastName' };\n\nexport let fakeUser2 = { id: 1001, email: 'some-one@somegroup.com', firstName: 'some', lastName: 'one' };\n\nexport let fakeTasksComment = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, message: 'fake-message-1', created: '', createdBy: fakeUser1\n        },\n        {\n            id: 2, message: 'fake-message-2', created: '', createdBy: fakeUser1\n        }\n    ]\n};\n\nexport let fakeProcessComment = new CommentModel({id: 1, message: 'Test', created: new Date('2016-11-10T03:37:30.010+0000'), createdBy: new UserProcessModel({\n    id: 13,\n    firstName: 'Wilbur',\n    lastName: 'Adams',\n    email: 'wilbur@app.com'\n})});\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CookieService } from '../services/cookie.service';\n\nexport class CookieServiceMock extends CookieService {\n\n    /** @override */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getItem(key: string): string | null {\n        return this[key] && this[key].data || null;\n    }\n\n    /** @override */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        this[key] = {data, expiration, path};\n    }\n\n    /** @override */\n    clear() {\n        Object.keys(this).forEach(key => {\n            if (this.hasOwnProperty(key) && typeof(this[key]) !== 'function') {\n                this[key] = undefined;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EventMock {\n\n    static keyDown(key: any) {\n        let event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keydown');\n        document.dispatchEvent(event);\n    }\n\n    static keyUp(key: any) {\n        let event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keyup');\n        document.dispatchEvent(event);\n    }\n\n    static resizeMobileView() {\n        // todo: no longer compiles with TS 2.0.2 as innerWidth/innerHeight are readonly fields\n        /*\n        window.innerWidth = 320;\n        window.innerHeight = 568;\n        */\n        window.dispatchEvent(new Event('resize'));\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeSearch = {\n    list: {\n        pagination: {\n            count: 1,\n            hasMoreItems: false,\n            totalItems: 1,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: '123',\n                    name: 'MyDoc',\n                    content: {\n                        mimetype: 'text/plain'\n                    },\n                    createdByUser: {\n                        displayName: 'John Doe'\n                    },\n                    modifiedByUser: {\n                        displayName: 'John Doe'\n                    }\n                }\n            }\n        ]\n    }\n};\n\nexport let mockError = {\n    error: {\n        errorKey: 'Search failed',\n        statusCode: 400,\n        briefSummary: '08220082 search failed',\n        stackTrace: 'For security reasons the stack trace is no longer displayed, but the property is kept for previous versions.',\n        descriptionURL: 'https://api-explorer.alfresco.com'\n    }\n};\n\nexport let searchMockApi = {\n    core: {\n        queriesApi: {\n            findNodes: (term, opts) => Promise.resolve(fakeSearch)\n        }\n    }\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationService } from '../services/translation.service';\n\nexport interface LangChangeEvent {\n    lang: string;\n    translations: any;\n}\n\nexport class TranslationMock implements TranslationService {\n\n    defaultLang: string = 'en';\n    userLang: string;\n    customLoader: any;\n\n    translate: any = {\n        onLangChange: new EventEmitter<LangChangeEvent>()\n    };\n\n    addTranslationFolder() {}\n\n    onTranslationChanged() {}\n\n    use(): any {}\n\n    loadTranslation() {}\n\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return of(key);\n    }\n\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\n\n/* tslint:disable:adf-file-name */\n@Injectable()\nexport class AlfrescoApiServiceMock extends AlfrescoApiService {\n\n    constructor(protected appConfig: AppConfigService,\n                protected storage: StorageService) {\n        super(appConfig, storage);\n        if (!this.alfrescoApi) {\n            this.initAlfrescoApi();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel, FormValues } from '../../form/components/widgets/core/index';\n\nexport let formTest = new FormModel({});\n\nexport let fakeTaskProcessVariableModels = [\n    {id: 'TEST_VAR_1', type: 'string', value: 'test_value_1'},\n    {id: 'TEST_VAR_2', type: 'string', value: 'test_value_2'},\n    {id: 'TEST_VAR_3', type: 'string', value: 'test_value_3'}\n];\n\nexport let formValues: FormValues = {\n    'test_1': 'value_1',\n    'test_2': 'value_2',\n    'test_3': 'value_1',\n    'test_4': 'dropdown_id',\n    'test_5': 'dropdown_label',\n    'dropdown': {'id': 'dropdown_id', 'name': 'dropdown_label'}\n};\n\nexport let fakeFormJson = {\n    id: '9999',\n    name: 'FORM_VISIBILITY',\n    processDefinitionId: 'PROCESS_TEST:9:9999',\n    processDefinitionName: 'PROCESS_TEST',\n    processDefinitionKey: 'PROCESS_TEST',\n    taskId: '999',\n    taskName: 'TEST',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '000000000000000000',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_TEST',\n                        name: 'FIELD_TEST',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_WITH_CONDITION',\n                        name: 'FIELD_WITH_CONDITION',\n                        type: 'text',\n                        value: 'field_with_condition_value',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'LEFT_FORM_FIELD_ID',\n                        name: 'LEFT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'LEFT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'RIGHT_FORM_FIELD_ID',\n                        name: 'RIGHT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ]\n            }\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TestBed, TestModuleMetadata } from '@angular/core/testing';\n\ninterface DoneFn extends Function {\n    (): void;\n    fail: (message?: Error | string) => void;\n}\n\ndeclare function beforeAll(action: (done: DoneFn) => void, timeout?: number): void;\ndeclare function afterAll(action: (done: DoneFn) => void, timeout?: number): void;\n\nconst resetTestingModule = TestBed.resetTestingModule;\nconst preventAngularFromResetting = () => (TestBed.resetTestingModule = () => TestBed);\nconst allowAngularToReset = () => (TestBed.resetTestingModule = resetTestingModule);\n\nexport const setupTestBed = (moduleDef: TestModuleMetadata) => {\n    beforeAll(done =>\n        (async () => {\n            localStorage.clear();\n            sessionStorage.clear();\n            resetTestingModule();\n            preventAngularFromResetting();\n            TestBed.configureTestingModule(moduleDef);\n            await TestBed.compileComponents();\n\n            // prevent Angular from resetting testing module\n            TestBed.resetTestingModule = () => TestBed;\n        })()\n            .then(done)\n            .catch(done.fail)\n    );\n\n    afterAll(() => allowAngularToReset());\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from './alfresco-api.service';\n\nexport function startupServiceFactory(alfrescoApiService: AlfrescoApiService): Function {\n    return () => alfrescoApiService.load();\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { APP_INITIALIZER, NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { MaterialModule } from './material.module';\nimport { AboutModule } from './about/about.module';\nimport { AppConfigModule } from './app-config/app-config.module';\nimport { CardViewModule } from './card-view/card-view.module';\nimport { CollapsableModule } from './collapsable/collapsable.module';\nimport { ContextMenuModule } from './context-menu/context-menu.module';\nimport { DataColumnModule } from './data-column/data-column.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { InfoDrawerModule } from './info-drawer/info-drawer.module';\nimport { LanguageMenuModule } from './language-menu/language-menu.module';\nimport { LoginModule } from './login/login.module';\nimport { PaginationModule } from './pagination/pagination.module';\nimport { HostSettingsModule } from './settings/host-settings.module';\nimport { ToolbarModule } from './toolbar/toolbar.module';\nimport { UserInfoModule } from './userinfo/userinfo.module';\nimport { ViewerModule } from './viewer/viewer.module';\nimport { FormModule } from './form/form.module';\nimport { SidenavLayoutModule } from './layout/layout.module';\nimport { CommentsModule } from './comments/comments.module';\nimport { ButtonsMenuModule } from './buttons-menu/buttons-menu.module';\nimport { TemplateModule } from './templates/template.module';\nimport { ClipboardModule } from './clipboard/clipboard.module';\n\nimport { DirectiveModule } from './directives/directive.module';\nimport { PipeModule } from './pipes/pipe.module';\n\nimport { AlfrescoApiService } from './services/alfresco-api.service';\nimport { AppsProcessService } from './services/apps-process.service';\nimport { AuthGuardBpm } from './services/auth-guard-bpm.service';\nimport { AuthGuardEcm } from './services/auth-guard-ecm.service';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { CardItemTypeService } from './card-view/services/card-item-types.service';\nimport { CardViewUpdateService } from './card-view/services/card-view-update.service';\nimport { CommentProcessService } from './services/comment-process.service';\nimport { CommentContentService } from './services/comment-content.service';\nimport { ContentService } from './services/content.service';\nimport { CookieService } from './services/cookie.service';\nimport { DeletedNodesApiService } from './services/deleted-nodes-api.service';\nimport { DiscoveryApiService } from './services/discovery-api.service';\nimport { FavoritesApiService } from './services/favorites-api.service';\nimport { HighlightTransformService } from './services/highlight-transform.service';\nimport { LogService } from './services/log.service';\nimport { NodesApiService } from './services/nodes-api.service';\nimport { NotificationService } from './services/notification.service';\nimport { PageTitleService } from './services/page-title.service';\nimport { PeopleContentService } from './services/people-content.service';\nimport { PeopleProcessService } from './services/people-process.service';\nimport { RenditionsService } from './services/renditions.service';\nimport { SearchService } from './services/search.service';\nimport { SettingsService } from './services/settings.service';\nimport { SharedLinksApiService } from './services/shared-links-api.service';\nimport { SitesService } from './services/sites.service';\nimport { StorageService } from './services/storage.service';\nimport { ThumbnailService } from './services/thumbnail.service';\nimport { TranslateLoaderService } from './services/translate-loader.service';\nimport { TranslationService } from './services/translation.service';\nimport { UploadService } from './services/upload.service';\nimport { UserPreferencesService } from './services/user-preferences.service';\nimport { SearchConfigurationService } from './services/search-configuration.service';\nimport { startupServiceFactory } from './services/startup-service-factory';\nimport { SortingPickerModule } from './sorting-picker/sorting-picker.module';\nimport { AppConfigService } from './app-config/app-config.service';\nimport { ContextMenuService } from './context-menu/context-menu.service';\nimport { ContextMenuOverlayService } from './context-menu/context-menu-overlay.service';\nimport { ActivitiContentService } from './form/services/activiti-alfresco.service';\nimport { EcmModelService } from './form/services/ecm-model.service';\nimport { FormRenderingService } from './form/services/form-rendering.service';\nimport { FormService } from './form/services/form.service';\nimport { NodeService } from './form/services/node.service';\nimport { ProcessContentService } from './form/services/process-content.service';\nimport { WidgetVisibilityService } from './form/services/widget-visibility.service';\nimport { EcmUserService } from './userinfo/services/ecm-user.service';\nimport { BpmUserService } from './userinfo/services/bpm-user.service';\nimport { ViewUtilService } from './viewer/services/view-util.service';\nimport { LoginDialogService } from './services/login-dialog.service';\nimport { ExternalAlfrescoApiService } from './services/external-alfresco-api.service';\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateLoaderService(http);\n}\n\nexport function providers() {\n    return [\n        AuthenticationService,\n        AlfrescoApiService,\n        SettingsService,\n        ContentService,\n        AuthGuard,\n        AuthGuardEcm,\n        AuthGuardBpm,\n        AppsProcessService,\n        PageTitleService,\n        StorageService,\n        CookieService,\n        RenditionsService,\n        NotificationService,\n        LogService,\n        TranslationService,\n        TranslateLoaderService,\n        ThumbnailService,\n        UploadService,\n        CardItemTypeService,\n        CardViewUpdateService,\n        UserPreferencesService,\n        HighlightTransformService,\n        DeletedNodesApiService,\n        FavoritesApiService,\n        NodesApiService,\n        PeopleContentService,\n        PeopleProcessService,\n        SearchService,\n        SharedLinksApiService,\n        SitesService,\n        DiscoveryApiService,\n        CommentProcessService,\n        CommentContentService,\n        SearchConfigurationService,\n        DatePipe,\n        AppConfigService,\n        ContextMenuService,\n        ContextMenuOverlayService,\n        ActivitiContentService,\n        EcmModelService,\n        FormRenderingService,\n        FormService,\n        NodeService,\n        ProcessContentService,\n        WidgetVisibilityService,\n        EcmUserService,\n        BpmUserService,\n        ViewUtilService,\n        LoginDialogService,\n        ExternalAlfrescoApiService\n    ];\n}\n\n@NgModule({\n    imports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        CollapsableModule,\n        FormModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        TranslateModule.forChild({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient, LogService]\n            }\n        }),\n        SortingPickerModule\n    ],\n    exports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        CollapsableModule,\n        FormModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        TranslateModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        SortingPickerModule\n    ]\n})\nexport class CoreModuleLazy {\n}\n\n@NgModule({\n    imports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        CollapsableModule,\n        FormModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient, LogService]\n            }\n        }),\n        SortingPickerModule\n    ],\n    exports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        CollapsableModule,\n        FormModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        TranslateModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        SortingPickerModule\n    ],\n    providers: [\n        ...providers(),\n        {\n            provide: APP_INITIALIZER,\n            useFactory: startupServiceFactory,\n            deps: [\n                AlfrescoApiService\n            ],\n            multi: true\n        }\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                ...providers(),\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: startupServiceFactory,\n                    deps: [\n                        AlfrescoApiService\n                    ],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CoreModuleLazy\n        };\n    }\n\n    constructor(translation: TranslationService) {\n        translation.addTranslationFolder('adf-core', 'assets/adf-core');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeApps = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, defaultAppId: null, name: 'Sales-Fakes-App', description: 'desc-fake1', modelId: 22,\n            theme: 'theme-1-fake', icon: 'glyphicon-asterisk', 'deploymentId': '111', 'tenantId': null\n        },\n        {\n            id: 2, defaultAppId: null, name: 'health-care-Fake', description: 'desc-fake2', modelId: 33,\n            theme: 'theme-2-fake', icon: 'glyphicon-asterisk', 'deploymentId': '444', 'tenantId': null\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EcmCompanyModel } from '../models/ecm-company.model';\n\nexport let fakeEcmCompany: EcmCompanyModel = {\n    organization: 'company-fake-name',\n    address1: 'fake-address-1',\n    address2: 'fake-address-2',\n    address3: 'fake-address-3',\n    postcode: 'fAk1',\n    telephone: '00000000',\n    fax: '11111111',\n    email: 'fakeCompany@fake.com'\n};\n\nexport let fakeEcmUser = {\n    id: 'fake-id',\n    firstName: 'fake-ecm-first-name',\n    lastName: 'fake-ecm-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'job-ecm-test',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmUserNoImage = {\n    id: 'fake-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: null,\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: null,\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmEditedUser = {\n    id: 'fake-id',\n    firstName: null,\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'test job',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeRedition = {\n    'entry': {\n        'id': 'pdf',\n        'content': {'mimeType': 'application/pdf', 'mimeTypeName': 'Adobe PDF Document'},\n        'status': 'NOT_CREATED'\n    }\n};\n\nexport let fakeReditionCreated = {\n    'entry': {\n        'id': 'pdf',\n        'content': {'mimeType': 'application/pdf', 'mimeTypeName': 'Adobe PDF Document'},\n        'status': 'CREATED'\n    }\n};\n\nexport let fakeReditionsList = {\n    'list': {\n        'pagination': {\n            'count': 6,\n            'hasMoreItems': false,\n            'totalItems': 6,\n            'skipCount': 0,\n            'maxItems': 100\n        },\n        'entries': [{\n            'entry': {\n                'id': 'avatar',\n                'content': {'mimeType': 'image/png', 'mimeTypeName': 'PNG Image'},\n                'status': 'NOT_CREATED'\n            }\n        }, {\n            'entry': {\n                'id': 'avatar32',\n                'content': {'mimeType': 'image/png', 'mimeTypeName': 'PNG Image'},\n                'status': 'NOT_CREATED'\n            }\n        }, {\n            'entry': {\n                'id': 'doclib',\n                'content': {'mimeType': 'image/png', 'mimeTypeName': 'PNG Image'},\n                'status': 'NOT_CREATED'\n            }\n        }, {\n            'entry': {\n                'id': 'imgpreview',\n                'content': {'mimeType': 'image/jpeg', 'mimeTypeName': 'JPEG Image'},\n                'status': 'NOT_CREATED'\n            }\n        }, {\n            'entry': {\n                'id': 'medium',\n                'content': {'mimeType': 'image/jpeg', 'mimeTypeName': 'JPEG Image'},\n                'status': 'NOT_CREATED'\n            }\n        }, {\n            'entry': {\n                'id': 'pdf',\n                'content': {'mimeType': 'application/pdf', 'mimeTypeName': 'Adobe PDF Document'},\n                'status': 'NOT_CREATED'\n            }\n        }]\n    }\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeForm = {\n    id: 1001,\n    name: 'ISSUE_FORM',\n    processDefinitionId: 'ISSUE_APP:1:2504',\n    processDefinitionName: 'ISSUE_APP',\n    processDefinitionKey: 'ISSUE_APP',\n    taskId: '7506',\n    taskDefinitionKey: 'sid-F67A2996-1684-4774-855A-4591490081FD',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212398417',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'label',\n                        name: 'Label',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'test1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'test2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'test3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio',\n                        name: 'radio',\n                        type: 'radio-buttons',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: [\n                            {\n                                id: 'option_1',\n                                name: 'Option 1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'Option 2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'Option 3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 2,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212413062',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefinitionTwoTextFields = {\n    id: 20,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:1:153',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '159',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507044399260',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'firstname',\n                        name: 'firstName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'lastname',\n                        name: 'lastName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionDropdownField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionRequiredField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formReadonlyTwoTextFields = {\n    id: 22,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:3:182',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '188',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n      {\n        fieldType: 'ContainerRepresentation',\n        id: '1507044399260',\n        name: 'Label',\n        type: 'container',\n        value: null,\n        required: false,\n        readOnly: false,\n        overrideId: false,\n        colspan: 1,\n        placeholder: null,\n        minLength: 0,\n        maxLength: 0,\n        minValue: null,\n        maxValue: null,\n        regexPattern: null,\n        optionType: null,\n        hasEmptyValue: null,\n        options: null,\n        restUrl: null,\n        restResponsePath: null,\n        restIdProperty: null,\n        restLabelProperty: null,\n        tab: null,\n        className: null,\n        dateDisplayFormat: null,\n        layout: null,\n        sizeX: 2,\n        sizeY: 1,\n        row: -1,\n        col: -1,\n        visibilityCondition: null,\n        numberOfColumns: 2,\n        fields: {\n          '1': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'firstname',\n              name: 'firstName',\n              type: 'readonly',\n              value: 'fakeFirstName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 2,\n                field: {\n                  id: 'firstname',\n                  name: 'firstName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ],\n          '2': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'lastname',\n              name: 'lastName',\n              type: 'readonly',\n              value: 'fakeLastName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 1,\n                field: {\n                  id: 'lastname',\n                  name: 'lastName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ]\n        }\n      }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n  };\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefVisibilitiFieldDependsOnNextOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefVisibilitiFieldDependsOnPreviousOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let startFormDateWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormNumberWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'number',\n                        name: 'number widget',\n                        type: 'integer',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormAmountWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'amount',\n                        name: 'amount widget',\n                        type: 'amount',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormRadioButtonWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio-but',\n                        name: 'radio-buttons',\n                        type: 'radio-buttons',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormTextDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'mocktext',\n                        name: 'mockText',\n                        type: 'text',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormDropdownDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'mockTypeDropDown',\n                        name: 'mock DropDown',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'opt1',\n                                name: 'Option-1'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-2'\n                            },\n                            {\n                                id: 'opt3',\n                                name: 'Option-3'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-3'\n                            }\n                        ]\n                    }]}\n        }]\n};\n\nexport let startMockForm = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billamount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalname',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        },\n        {\n            id: 'start_process',\n            name: 'Start Process'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n\nexport let startMockFormWithTab = {\n    id: 4,\n    taskName: 'Mock Title',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [\n        {\n            id: 'form1',\n            name: 'Tab 1'\n        },\n        {\n            id: 'form2',\n            name: 'Tab 2'\n        }\n    ],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billamount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalname',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formModelTabs = {\n    id: 16,\n    name: 'start event',\n    description: '',\n    version: 2,\n    lastUpdatedBy: 4,\n    lastUpdatedByFullName: 'User Test',\n    lastUpdated: '2017-10-04T13:00:03.030+0000',\n    stencilSetId: null,\n    referenceId: null,\n    formDefinition: {\n      tabs: [],\n      fields: [\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037668653',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'AmountFieldRepresentation',\n                id: 'label',\n                name: 'Label',\n                type: 'amount',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null,\n                enableFractions: false,\n                currency: null\n              }\n            ],\n            '2': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label1',\n                name: 'Label1',\n                type: 'date',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 1\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ]\n          }\n        },\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037670167',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label2',\n                name: 'Label2',\n                type: 'boolean',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ],\n            '2': []\n          }\n        }\n      ],\n      outcomes: [],\n      javascriptEvents: [],\n      className: '',\n      style: '',\n      customFieldTemplates: {},\n      metadata: {},\n      variables: [],\n      customFieldsValueInfo: {},\n      gridsterForm: false\n    }\n  };\n"]}