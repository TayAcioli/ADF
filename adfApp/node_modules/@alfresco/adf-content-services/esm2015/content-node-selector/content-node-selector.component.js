/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation, Input } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material';
import { SitePaging } from 'alfresco-js-api';
export class ContentNodeSelectorComponent {
    /**
     * @param {?} data
     */
    constructor(data) {
        this.data = data;
        /**
         * @deprecated in 2.1.0
         */
        this.title = null;
        /**
         * @deprecated in 2.1.0
         */
        this.currentFolderId = null;
        /**
         * @deprecated in 2.1.0
         */
        this.dropdownHideMyFiles = false;
        /**
         * @deprecated in 2.1.0
         */
        this.dropdownSiteList = null;
        /**
         * @deprecated in 2.1.0
         */
        this.rowFilter = null;
        /**
         * @deprecated in 2.1.0
         */
        this.imageResolver = null;
        this.buttonActionName = data.actionName ? `NODE_SELECTOR.${data.actionName.toUpperCase()}` : 'NODE_SELECTOR.CHOOSE';
    }
    /**
     * @return {?}
     */
    close() {
        this.data.select.complete();
    }
    /**
     * @param {?} nodeList
     * @return {?}
     */
    onSelect(nodeList) {
        this.chosenNode = nodeList;
    }
    /**
     * @return {?}
     */
    onClick() {
        this.data.select.next(this.chosenNode);
        this.data.select.complete();
    }
}
ContentNodeSelectorComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-content-node-selector',
                template: "<header\n    mat-dialog-title\n    data-automation-id=\"content-node-selector-title\">{{title || data?.title}}\n</header>\n\n<mat-dialog-content>\n    <adf-content-node-selector-panel\n        [currentFolderId]=\"currentFolderId || data?.currentFolderId\"\n        [dropdownHideMyFiles]=\"dropdownHideMyFiles || data?.dropdownHideMyFiles\"\n        [dropdownSiteList]=\"dropdownSiteList || data?.dropdownSiteList\"\n        [rowFilter]=\"rowFilter || data?.rowFilter\"\n        [imageResolver]=\"imageResolver || data?.imageResolver\"\n        [isSelectionValid]=\"data?.isSelectionValid\"\n        [breadcrumbTransform]=\"data?.breadcrumbTransform\"\n        (select)=\"onSelect($event)\">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"content-node-selector-actions-cancel\">{{ 'NODE_SELECTOR.CANCEL' | translate }}\n    </button>\n\n    <button mat-button\n        [disabled]=\"!chosenNode\"\n        class=\"choose-action\"\n        (click)=\"onClick()\"\n        data-automation-id=\"content-node-selector-actions-choose\">{{ buttonActionName | translate }}\n    </button>\n</mat-dialog-actions>\n\n",
                encapsulation: ViewEncapsulation.None,
                styles: [""]
            }] }
];
/** @nocollapse */
ContentNodeSelectorComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
ContentNodeSelectorComponent.propDecorators = {
    title: [{ type: Input }],
    currentFolderId: [{ type: Input }],
    dropdownHideMyFiles: [{ type: Input }],
    dropdownSiteList: [{ type: Input }],
    rowFilter: [{ type: Input }],
    imageResolver: [{ type: Input }],
    pageSize: [{ type: Input }]
};
if (false) {
    /**
     * @deprecated in 2.1.0
     * @type {?}
     */
    ContentNodeSelectorComponent.prototype.title;
    /**
     * @deprecated in 2.1.0
     * @type {?}
     */
    ContentNodeSelectorComponent.prototype.currentFolderId;
    /**
     * @deprecated in 2.1.0
     * @type {?}
     */
    ContentNodeSelectorComponent.prototype.dropdownHideMyFiles;
    /**
     * @deprecated in 2.1.0
     * @type {?}
     */
    ContentNodeSelectorComponent.prototype.dropdownSiteList;
    /**
     * @deprecated in 2.1.0
     * @type {?}
     */
    ContentNodeSelectorComponent.prototype.rowFilter;
    /**
     * @deprecated in 2.1.0
     * @type {?}
     */
    ContentNodeSelectorComponent.prototype.imageResolver;
    /**
     * @deprecated in 2.1.0
     * @type {?}
     */
    ContentNodeSelectorComponent.prototype.pageSize;
    /** @type {?} */
    ContentNodeSelectorComponent.prototype.buttonActionName;
    /** @type {?} */
    ContentNodeSelectorComponent.prototype.chosenNode;
    /** @type {?} */
    ContentNodeSelectorComponent.prototype.data;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1ub2RlLXNlbGVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImNvbnRlbnQtbm9kZS1zZWxlY3Rvci9jb250ZW50LW5vZGUtc2VsZWN0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUEwQixVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQVdyRSxNQUFNOzs7O0lBK0NGLFlBQTRDLElBQXNDO1FBQXRDLFNBQUksR0FBSixJQUFJLENBQWtDOzs7O3FCQXpDbEUsSUFBSTs7OzsrQkFNTSxJQUFJOzs7O21DQU1DLEtBQUs7Ozs7Z0NBTUwsSUFBSTs7Ozt5QkFNWixJQUFJOzs7OzZCQU1JLElBQUk7UUFZL0IsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDO0tBQ3ZIOzs7O0lBRUQsS0FBSztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0tBQy9COzs7OztJQUVELFFBQVEsQ0FBQyxRQUFrQztRQUN2QyxJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztLQUM5Qjs7OztJQUVELE9BQU87UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0tBQy9COzs7WUFwRUosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLDh1Q0FBcUQ7Z0JBRXJELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOzthQUN4Qzs7Ozs0Q0FnRGdCLE1BQU0sU0FBQyxlQUFlOzs7b0JBMUNsQyxLQUFLOzhCQU1MLEtBQUs7a0NBTUwsS0FBSzsrQkFNTCxLQUFLO3dCQU1MLEtBQUs7NEJBTUwsS0FBSzt1QkFNTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIFZpZXdFbmNhcHN1bGF0aW9uLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTUFUX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgTWluaW1hbE5vZGVFbnRyeUVudGl0eSwgU2l0ZVBhZ2luZyB9IGZyb20gJ2FsZnJlc2NvLWpzLWFwaSc7XG5pbXBvcnQgeyBDb250ZW50Tm9kZVNlbGVjdG9yQ29tcG9uZW50RGF0YSB9IGZyb20gJy4vY29udGVudC1ub2RlLXNlbGVjdG9yLmNvbXBvbmVudC1kYXRhLmludGVyZmFjZSc7XG5pbXBvcnQgeyBSb3dGaWx0ZXIgfSBmcm9tICcuLi9kb2N1bWVudC1saXN0L2RhdGEvcm93LWZpbHRlci5tb2RlbCc7XG5pbXBvcnQgeyBJbWFnZVJlc29sdmVyIH0gZnJvbSAnLi4vZG9jdW1lbnQtbGlzdC9kYXRhL2ltYWdlLXJlc29sdmVyLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtY29udGVudC1ub2RlLXNlbGVjdG9yJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY29udGVudC1ub2RlLXNlbGVjdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9jb250ZW50LW5vZGUtc2VsZWN0b3IuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIENvbnRlbnROb2RlU2VsZWN0b3JDb21wb25lbnQge1xuXG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgaW4gMi4xLjBcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlOiBzdHJpbmcgPSBudWxsO1xuXG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgaW4gMi4xLjBcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGN1cnJlbnRGb2xkZXJJZDogc3RyaW5nID0gbnVsbDtcblxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkIGluIDIuMS4wXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBkcm9wZG93bkhpZGVNeUZpbGVzOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBAZGVwcmVjYXRlZCBpbiAyLjEuMFxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgZHJvcGRvd25TaXRlTGlzdDogU2l0ZVBhZ2luZyA9IG51bGw7XG5cbiAgICAvKipcbiAgICAgKiBAZGVwcmVjYXRlZCBpbiAyLjEuMFxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcm93RmlsdGVyOiBSb3dGaWx0ZXIgPSBudWxsO1xuXG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgaW4gMi4xLjBcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGltYWdlUmVzb2x2ZXI6IEltYWdlUmVzb2x2ZXIgPSBudWxsO1xuXG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgaW4gMi4xLjBcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHBhZ2VTaXplOiBudW1iZXI7XG5cbiAgICBidXR0b25BY3Rpb25OYW1lOiBzdHJpbmc7XG4gICAgY2hvc2VuTm9kZTogTWluaW1hbE5vZGVFbnRyeUVudGl0eVtdO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiBDb250ZW50Tm9kZVNlbGVjdG9yQ29tcG9uZW50RGF0YSkge1xuICAgICAgICB0aGlzLmJ1dHRvbkFjdGlvbk5hbWUgPSBkYXRhLmFjdGlvbk5hbWUgPyBgTk9ERV9TRUxFQ1RPUi4ke2RhdGEuYWN0aW9uTmFtZS50b1VwcGVyQ2FzZSgpfWAgOiAnTk9ERV9TRUxFQ1RPUi5DSE9PU0UnO1xuICAgIH1cblxuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLmRhdGEuc2VsZWN0LmNvbXBsZXRlKCk7XG4gICAgfVxuXG4gICAgb25TZWxlY3Qobm9kZUxpc3Q6IE1pbmltYWxOb2RlRW50cnlFbnRpdHlbXSkge1xuICAgICAgICB0aGlzLmNob3Nlbk5vZGUgPSBub2RlTGlzdDtcbiAgICB9XG5cbiAgICBvbkNsaWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmRhdGEuc2VsZWN0Lm5leHQodGhpcy5jaG9zZW5Ob2RlKTtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdC5jb21wbGV0ZSgpO1xuICAgIH1cbn1cbiJdfQ==