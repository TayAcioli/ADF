/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DataColumn, DataRow, DataSorting, DataTableAdapter, ThumbnailService } from '@alfresco/adf-core';
import { NodePaging } from 'alfresco-js-api';
import { PermissionStyleModel } from './../models/permissions-style.model';
import { DocumentListService } from './../services/document-list.service';
export declare class ShareDataTableAdapter implements DataTableAdapter {
    private documentListService;
    private thumbnailService;
    ERR_ROW_NOT_FOUND: string;
    ERR_COL_NOT_FOUND: string;
    private _sortingMode;
    private sorting;
    private rows;
    private columns;
    private filter;
    private imageResolver;
    thumbnails: boolean;
    permissionsStyle: PermissionStyleModel[];
    selectedRow: DataRow;
    sortingMode: string;
    constructor(documentListService: DocumentListService, thumbnailService: ThumbnailService, schema?: DataColumn[], sorting?: DataSorting, sortingMode?: string);
    getRows(): Array<DataRow>;
    setRows(rows: Array<DataRow>): void;
    getColumns(): Array<DataColumn>;
    setColumns(columns: Array<DataColumn>): void;
    getValue(row: DataRow, col: DataColumn): any;
    getSorting(): DataSorting;
    setSorting(sorting: DataSorting): void;
    sort(key?: string, direction?: string): void;
    setFilter(filter: any): void;
    setImageResolver(resolver: any): void;
    isSmartFolder(node: any): boolean;
    private getNodeAspectNames;
    private sortRows;
    loadPage(page: NodePaging, merge?: boolean): void;
}
