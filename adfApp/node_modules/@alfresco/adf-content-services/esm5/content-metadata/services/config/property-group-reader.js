/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** @type {?} */
var emptyGroup = {
    properties: {}
};
/**
 * @param {?} object
 * @return {?}
 */
function convertObjectToArray(object) {
    return Object.keys(object).map(function (key) { return object[key]; });
}
/**
 * @param {?} propertyGroups
 * @param {?} groupName
 * @return {?}
 */
export function getGroup(propertyGroups, groupName) {
    return propertyGroups[groupName];
}
/**
 * @param {?} propertyGroups
 * @param {?} groupName
 * @param {?} propertyName
 * @return {?}
 */
export function getProperty(propertyGroups, groupName, propertyName) {
    /** @type {?} */
    var groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;
    /** @type {?} */
    var propertyDefinitions;
    if (propertyName === '*') {
        propertyDefinitions = convertObjectToArray(groupDefinition.properties);
    }
    else {
        propertyDefinitions = groupDefinition.properties[propertyName];
    }
    return propertyDefinitions;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktZ3JvdXAtcmVhZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb250ZW50LXNlcnZpY2VzLyIsInNvdXJjZXMiOlsiY29udGVudC1tZXRhZGF0YS9zZXJ2aWNlcy9jb25maWcvcHJvcGVydHktZ3JvdXAtcmVhZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxJQUFNLFVBQVUsR0FBRztJQUNmLFVBQVUsRUFBRSxFQUFFO0NBQ2pCLENBQUM7Ozs7O0FBRUYsOEJBQThCLE1BQVc7SUFDckMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBWCxDQUFXLENBQUMsQ0FBQztDQUN0RDs7Ozs7O0FBRUQsTUFBTSxtQkFBbUIsY0FBc0MsRUFBRSxTQUFpQjtJQUM5RSxPQUFPLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUNwQzs7Ozs7OztBQUVELE1BQU0sc0JBQXNCLGNBQXNDLEVBQUUsU0FBaUIsRUFBRSxZQUFvQjs7SUFDdkcsSUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsSUFBSSxVQUFVLENBQUM7O0lBQzFFLElBQUksbUJBQW1CLENBQUM7SUFFeEIsSUFBSSxZQUFZLEtBQUssR0FBRyxFQUFFO1FBQ3RCLG1CQUFtQixHQUFHLG9CQUFvQixDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUMxRTtTQUFNO1FBQ0gsbUJBQW1CLEdBQUcsZUFBZSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztLQUNsRTtJQUVELE9BQU8sbUJBQW1CLENBQUM7Q0FDOUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBQcm9wZXJ0eUdyb3VwLCBQcm9wZXJ0eSwgUHJvcGVydHlHcm91cENvbnRhaW5lciB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvY29udGVudC1tZXRhZGF0YS5pbnRlcmZhY2VzJztcblxuY29uc3QgZW1wdHlHcm91cCA9IHtcbiAgICBwcm9wZXJ0aWVzOiB7fVxufTtcblxuZnVuY3Rpb24gY29udmVydE9iamVjdFRvQXJyYXkob2JqZWN0OiBhbnkpOiBQcm9wZXJ0eVtdIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqZWN0KS5tYXAoa2V5ID0+IG9iamVjdFtrZXldKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEdyb3VwKHByb3BlcnR5R3JvdXBzOiBQcm9wZXJ0eUdyb3VwQ29udGFpbmVyLCBncm91cE5hbWU6IHN0cmluZyk6IFByb3BlcnR5R3JvdXAgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBwcm9wZXJ0eUdyb3Vwc1tncm91cE5hbWVdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvcGVydHkocHJvcGVydHlHcm91cHM6IFByb3BlcnR5R3JvdXBDb250YWluZXIsIGdyb3VwTmFtZTogc3RyaW5nLCBwcm9wZXJ0eU5hbWU6IHN0cmluZyk6IFByb3BlcnR5IHwgUHJvcGVydHlbXSB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgZ3JvdXBEZWZpbml0aW9uID0gZ2V0R3JvdXAocHJvcGVydHlHcm91cHMsIGdyb3VwTmFtZSkgfHwgZW1wdHlHcm91cDtcbiAgICBsZXQgcHJvcGVydHlEZWZpbml0aW9ucztcblxuICAgIGlmIChwcm9wZXJ0eU5hbWUgPT09ICcqJykge1xuICAgICAgICBwcm9wZXJ0eURlZmluaXRpb25zID0gY29udmVydE9iamVjdFRvQXJyYXkoZ3JvdXBEZWZpbml0aW9uLnByb3BlcnRpZXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHByb3BlcnR5RGVmaW5pdGlvbnMgPSBncm91cERlZmluaXRpb24ucHJvcGVydGllc1twcm9wZXJ0eU5hbWVdO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9wZXJ0eURlZmluaXRpb25zO1xufVxuIl19