!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/material"),require("@alfresco/adf-core"),require("rxjs"),require("rxjs/operators"),require("moment-es6"),require("@angular/forms"),require("@angular/common"),require("@angular/flex-layout"),require("@angular/animations"),require("@angular/cdk/keycodes"),require("@angular/material/core"),require("@mat-datetimepicker/core"),require("@mat-datetimepicker/moment")):"function"==typeof define&&define.amd?define("@alfresco/adf-content-services",["exports","@angular/core","@angular/material","@alfresco/adf-core","rxjs","rxjs/operators","moment-es6","@angular/forms","@angular/common","@angular/flex-layout","@angular/animations","@angular/cdk/keycodes","@angular/material/core","@mat-datetimepicker/core","@mat-datetimepicker/moment"],t):t((e.alfresco=e.alfresco||{},e.alfresco["adf-content-services"]={}),e.ng.core,e["@angular/material"],e["@alfresco/adf-core"],e.rxjs,e.rxjs.operators,e["moment-es6"],e.ng.forms,e.ng.common,e["@angular/flex-layout"],e["@angular/animations"],e.ng.cdk.keycodes,e["@angular/material/core"],e["@mat-datetimepicker/core"],e["@mat-datetimepicker/moment"])}(this,function(e,c,n,d,u,s,a,l,t,i,o,r,p,h,f){"use strict";a=a&&a.hasOwnProperty("default")?a["default"]:a;var m=function(){function e(e,t,n,i){this.apiService=e,this.dialogRef=t,this.data=n,this.logService=i,this.cancelled=!1}return e.prototype.ngOnInit=function(){this.data&&this.data.nodeIds&&0<this.data.nodeIds.length&&(this.cancelled?this.logService.log("Cancelled"):this.downloadZip(this.data.nodeIds))},e.prototype.cancelDownload=function(){this.cancelled=!0,this.dialogRef.close(!1)},e.prototype.downloadZip=function(e){var o=this;if(e&&0<e.length){var t=this.apiService.getInstance().core.downloadsApi.createDownload({nodeIds:e});t.on("progress",function(e){return o.logService.log("Progress",e)}),t.on("error",function(e){return o.logService.error("Error",e)}),t.on("abort",function(e){return o.logService.log("Abort",e)}),t.on("success",function(n){if(n&&n.entry&&n.entry.id){var i=o.apiService.getInstance().content.getContentUrl(n.entry.id,!0);o.apiService.getInstance().core.nodesApi.getNode(n.entry.id).then(function(e){o.logService.log(e);var t=e.entry.name;o.waitAndDownload(n.entry.id,i,t)})}})}},e.prototype.waitAndDownload=function(t,n,i){var o=this;this.cancelled||this.apiService.getInstance().core.downloadsApi.getDownload(t).then(function(e){e.entry&&("DONE"===e.entry.status?o.download(n,i):setTimeout(function(){o.waitAndDownload(t,n,i)},1e3))})},e.prototype.download=function(e,t){if(e&&t){var n=document.createElement("a");n.style.display="none",n.download=t,n.href=e,document.body.appendChild(n),n.click(),document.body.removeChild(n)}this.dialogRef.close(!0)},e.decorators=[{type:c.Component,args:[{selector:"adf-download-zip-dialog",template:'<h1 matDialogTitle>{{ \'CORE.DIALOG.DOWNLOAD_ZIP.TITLE\' | translate }}</h1>\n<div mat-dialog-content>\n    <mat-progress-bar color="primary" mode="indeterminate"></mat-progress-bar>\n</div>\n<div mat-dialog-actions>\n    <span class="spacer"></span>\n    <button mat-button color="primary" (click)="cancelDownload()">\n        {{ \'CORE.DIALOG.DOWNLOAD_ZIP.ACTIONS.CANCEL\' | translate }}\n    </button>\n</div>\n',host:{"class":"adf-download-zip-dialog"},encapsulation:c.ViewEncapsulation.None,styles:[".spacer{flex:1 1 auto}.adf-download-zip-dialog .mat-dialog-actions .mat-button-wrapper{text-transform:uppercase}"]}]}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService},{type:n.MatDialogRef},{type:undefined,decorators:[{type:c.Inject,args:[n.MAT_DIALOG_DATA]}]},{type:d.LogService}]},e}(),g=function(){function e(e,t){this.apiService=e,this.dialog=t}return e.prototype.onClick=function(){this.downloadNodes(this.nodes)},e.prototype.downloadNodes=function(e){e&&0!==e.length&&(1===e.length?this.downloadNode(e[0]):this.downloadZip(e))},e.prototype.downloadNode=function(e){if(e&&e.entry){var t=e.entry;t.isFile&&this.downloadFile(e),t.isFolder&&this.downloadZip([e]),t.isFile||t.isFolder||!t.nodeId||this.downloadFile(e)}},e.prototype.downloadFile=function(e){if(e&&e.entry){var t=this.apiService.getInstance().content,n=e.entry.nodeId||e.entry.id,i=t.getContentUrl(n,!0),o=e.entry.name;this.download(i,o)}},e.prototype.downloadZip=function(e){if(e&&0<e.length){var t=e.map(function(e){return e.entry.nodeId||e.entry.id});this.dialog.open(m,{width:"600px",disableClose:!0,data:{nodeIds:t}})}},e.prototype.download=function(e,t){if(e&&t){var n=document.createElement("a");n.style.display="none",n.download=t,n.href=e,document.body.appendChild(n),n.click(),document.body.removeChild(n)}},e.decorators=[{type:c.Directive,args:[{selector:"[adfNodeDownload]"}]}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService},{type:n.MatDialog}]},e.propDecorators={nodes:[{type:c.Input,args:["adfNodeDownload"]}],onClick:[{type:c.HostListener,args:["click"]}]},e}();function y(){return[n.MatButtonModule,n.MatChipsModule,n.MatDialogModule,n.MatIconModule,n.MatCardModule,n.MatInputModule,n.MatListModule,n.MatProgressSpinnerModule,n.MatProgressBarModule,n.MatRippleModule,n.MatMenuModule,n.MatOptionModule,n.MatExpansionModule,n.MatSelectModule,n.MatCheckboxModule,n.MatDatepickerModule,n.MatSlideToggleModule,n.MatRadioModule,n.MatSliderModule]}var v=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:y(),exports:y()}]}],e}(),b=function(e,t){return(b=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function S(e,t){function n(){this.constructor=e}b(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var E=function(){return(E=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function I(i,o){var r,s,a,e,l={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return e={next:t(0),"throw":t(1),"return":t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(n){return function(e){return function t(e){if(r)throw new TypeError("Generator is already executing.");for(;l;)try{if(r=1,s&&(a=2&e[0]?s["return"]:e[0]?s["throw"]||((a=s["return"])&&a.call(s),0):s.next)&&!(a=a.call(s,e[1])).done)return a;switch(s=0,a&&(e=[2&e[0],a.value]),e[0]){case 0:case 1:a=e;break;case 4:return l.label++,{value:e[1],done:!1};case 5:l.label++,s=e[1],e=[0];continue;case 7:e=l.ops.pop(),l.trys.pop();continue;default:if(!(a=0<(a=l.trys).length&&a[a.length-1])&&(6===e[0]||2===e[0])){l=0;continue}if(3===e[0]&&(!a||e[1]>a[0]&&e[1]<a[3])){l.label=e[1];break}if(6===e[0]&&l.label<a[1]){l.label=a[1],a=e;break}if(a&&l.label<a[2]){l.label=a[2],l.ops.push(e);break}a[2]&&l.ops.pop(),l.trys.pop();continue}e=o.call(i,l)}catch(t){e=[6,t],s=0}finally{r=a=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([n,e])}}}function A(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}function C(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,o,r=n.call(e),s=[];try{for(;(void 0===t||0<t--)&&!(i=r.next()).done;)s.push(i.value)}catch(a){o={error:a}}finally{try{i&&!i.done&&(n=r["return"])&&n.call(r)}finally{if(o)throw o.error}}return s}function O(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(C(arguments[t]));return e}var T=function(){function r(e,t,n,i,o){this.contentService=t,this.apiService=n,this.logService=i,this.thumbnailService=o}return r.prototype.getNodesPromise=function(e,t,n){void 0===n&&(n=[]);var i=r.ROOT_ID;t&&t.rootFolderId&&(i=t.rootFolderId);var o={includeSource:!0,include:O(["path","properties","allowableOperations","permissions","aspectNames"],n).filter(function(e,t,n){return t===n.indexOf(e)})};return e&&(o.relativePath=e),t&&(t.maxItems&&(o.maxItems=t.maxItems),t.skipCount&&(o.skipCount=t.skipCount)),this.apiService.getInstance().nodes.getNodeChildren(i,o)},r.prototype.deleteNode=function(e){return u.from(this.apiService.getInstance().nodes.deleteNode(e))},r.prototype.copyNode=function(e,t){var n=this;return u.from(this.apiService.getInstance().nodes.copyNode(e,{targetParentId:t})).pipe(s.catchError(function(e){return n.handleError(e)}))},r.prototype.moveNode=function(e,t){var n=this;return u.from(this.apiService.getInstance().nodes.moveNode(e,{targetParentId:t})).pipe(s.catchError(function(e){return n.handleError(e)}))},r.prototype.createFolder=function(e,t){var n=this;return u.from(this.apiService.getInstance().nodes.createFolder(e,"/",t)).pipe(s.catchError(function(e){return n.handleError(e)}))},r.prototype.getFolder=function(e,t,n){var i=this;return void 0===n&&(n=[]),u.from(this.getNodesPromise(e,t,n)).pipe(s.catchError(function(e){return i.handleError(e)}))},r.prototype.getNode=function(e,t){void 0===t&&(t=[]);var n={includeSource:!0,include:O(["path","properties","allowableOperations","permissions"],t).filter(function(e,t,n){return t===n.indexOf(e)})};return this.contentService.getNode(e,n)},r.prototype.getFolderNode=function(e,t){void 0===t&&(t=[]);var n={includeSource:!0,include:O(["path","properties","allowableOperations","permissions","aspectNames"],t).filter(function(e,t,n){return t===n.indexOf(e)})};return u.from(this.apiService.getInstance().nodes.getNodeInfo(e,n))},r.prototype.getDocumentThumbnailUrl=function(e){return this.thumbnailService.getDocumentThumbnailUrl(e)},r.prototype.getMimeTypeIcon=function(e){return this.thumbnailService.getMimeTypeIcon(e)},r.prototype.getDefaultMimeTypeIcon=function(){return this.thumbnailService.getDefaultMimeTypeIcon()},r.prototype.hasPermission=function(e,t){return this.contentService.hasPermission(e,t)},r.prototype.handleError=function(e){return this.logService.error(e),u.throwError(e||"Server error")},r.ROOT_ID="-root-",r.decorators=[{type:c.Injectable}],r.ctorParameters=function(){return[{type:d.AuthenticationService},{type:d.ContentService},{type:d.AlfrescoApiService},{type:d.LogService},{type:d.ThumbnailService}]},r}(),F=function(){function e(e){this.data=e,this.title=null,this.currentFolderId=null,this.dropdownHideMyFiles=!1,this.dropdownSiteList=null,this.rowFilter=null,this.imageResolver=null,this.buttonActionName=e.actionName?"NODE_SELECTOR."+e.actionName.toUpperCase():"NODE_SELECTOR.CHOOSE"}return e.prototype.close=function(){this.data.select.complete()},e.prototype.onSelect=function(e){this.chosenNode=e},e.prototype.onClick=function(){this.data.select.next(this.chosenNode),this.data.select.complete()},e.decorators=[{type:c.Component,args:[{selector:"adf-content-node-selector",template:'<header\n    mat-dialog-title\n    data-automation-id="content-node-selector-title">{{title || data?.title}}\n</header>\n\n<mat-dialog-content>\n    <adf-content-node-selector-panel\n        [currentFolderId]="currentFolderId || data?.currentFolderId"\n        [dropdownHideMyFiles]="dropdownHideMyFiles || data?.dropdownHideMyFiles"\n        [dropdownSiteList]="dropdownSiteList || data?.dropdownSiteList"\n        [rowFilter]="rowFilter || data?.rowFilter"\n        [imageResolver]="imageResolver || data?.imageResolver"\n        [isSelectionValid]="data?.isSelectionValid"\n        [breadcrumbTransform]="data?.breadcrumbTransform"\n        (select)="onSelect($event)">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align="end">\n    <button\n        mat-button\n        (click)="close()"\n        data-automation-id="content-node-selector-actions-cancel">{{ \'NODE_SELECTOR.CANCEL\' | translate }}\n    </button>\n\n    <button mat-button\n        [disabled]="!chosenNode"\n        class="choose-action"\n        (click)="onClick()"\n        data-automation-id="content-node-selector-actions-choose">{{ buttonActionName | translate }}\n    </button>\n</mat-dialog-actions>\n\n',encapsulation:c.ViewEncapsulation.None,styles:[""]}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:c.Inject,args:[n.MAT_DIALOG_DATA]}]}]},e.propDecorators={title:[{type:c.Input}],currentFolderId:[{type:c.Input}],dropdownHideMyFiles:[{type:c.Input}],dropdownSiteList:[{type:c.Input}],rowFilter:[{type:c.Input}],imageResolver:[{type:c.Input}],pageSize:[{type:c.Input}]},e}(),D=function(){function e(e,t,n,i){this.formBuilder=e,this.dialog=t,this.alfrescoApi=n,this.data=i,this.node=null}return e.prototype.ngOnInit=function(){var e=this.data.node;this.nodeName=e.name,this.form=this.formBuilder.group({isLocked:e.isLocked||!1,allowOwner:"WRITE_LOCK"===e.properties["cm:lockType"],isTimeLock:!!e.properties["cm:expiryDate"],time:e.properties["cm:expiryDate"]?a(e.properties["cm:expiryDate"]):a()})},Object.defineProperty(e.prototype,"lockTimeInSeconds",{get:function(){return this.form.value.isTimeLock?a.duration(a(this.form.value.time).diff(a())).asSeconds():0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nodeBodyLock",{get:function(){return{timeToExpire:this.lockTimeInSeconds,type:this.form.value.allowOwner?"ALLOW_OWNER_CHANGES":"FULL",lifetime:"PERSISTENT"}},enumerable:!0,configurable:!0}),e.prototype.toggleLock=function(){var e=this.alfrescoApi.nodesApi,t=this.data.node;return this.form.value.isLocked?e.lockNode(t.id,this.nodeBodyLock):e.unlockNode(t.id)},e.prototype.submit=function(){var t=this;this.toggleLock().then(function(e){t.data.node.isLocked=t.form.value.isLocked,t.dialog.close(e.entry)})["catch"](function(e){return t.data.onError(e)})},e.decorators=[{type:c.Component,args:[{selector:"adf-node-lock",template:'<h2 mat-dialog-title>\n    {{ \'CORE.FILE_DIALOG.FILE_LOCK\' | translate }}\n</h2>\n\n<mat-dialog-content>\n    <br />\n    <form [formGroup]="form" (submit)="submit()">\n        <mat-checkbox class="adf-lock-file-name" [formControl]="form.controls[\'isLocked\']" ngDefaultControl>\n            {{ \'CORE.FILE_DIALOG.FILE_LOCK_CHECKBOX\' | translate }} <strong>"{{ nodeName }}"</strong>\n        </mat-checkbox>\n\n        <br />\n\n        <div *ngIf="form.value.isLocked">\n            <mat-checkbox class="adf-lock-file-name" [formControl]="form.controls[\'allowOwner\']" ngDefaultControl>\n                {{ \'CORE.FILE_DIALOG.ALLOW_OTHERS_CHECKBOX\' | translate }}\n            </mat-checkbox>\n\n            <br />\n\n            <mat-checkbox class="adf-lock-file-name" [formControl]="form.controls[\'isTimeLock\']" ngDefaultControl>\n                {{ \'CORE.FILE_DIALOG.TIME_LOCK_CHECKBOX\' | translate }}\n            </mat-checkbox>\n\n            <br />\n\n            <mat-form-field *ngIf="form.value.isTimeLock">\n                <mat-datetimepicker-toggle [for]="datetimePicker" matSuffix></mat-datetimepicker-toggle>\n                <mat-datetimepicker #datetimePicker type="datetime" openOnFocus="true" timeInterval="1"></mat-datetimepicker>\n                <input matInput [formControl]="form.controls[\'time\']" [matDatetimepicker]="datetimePicker" required autocomplete="false">\n            </mat-form-field>\n        </div>\n    </form>\n    <br />\n</mat-dialog-content>\n\n<mat-dialog-actions class="adf-dialog-buttons">\n    <span class="adf-fill-remaining-space"></span>\n\n    <button mat-button mat-dialog-close>\n        {{ \'CORE.FILE_DIALOG.CANCEL_BUTTON.LABEL\' | translate }}\n    </button>\n\n    <button class="adf-dialog-action-button" mat-button (click)="submit()">\n        {{ \'CORE.FILE_DIALOG.SAVE_BUTTON.LABEL\' | translate }}\n    </button>\n</mat-dialog-actions>\n',styles:[".adf-fill-remaining-space{flex:1 1 auto}.adf-full-width,.adf-lock-file-name .mat-checkbox-layout{width:100%}.adf-lock-file-name .mat-checkbox-label{text-overflow:ellipsis;overflow:hidden}.adf-lock-file-name .mat-checkbox-inner-container{margin:auto 8px auto 0}"]}]}],e.ctorParameters=function(){return[{type:l.FormBuilder},{type:n.MatDialogRef},{type:d.AlfrescoApiService},{type:undefined,decorators:[{type:c.Optional},{type:c.Inject,args:[n.MAT_DIALOG_DATA]}]}]},e}(),w=function(){function e(e,t,n,i,o){this.dialog=e,this.contentService=t,this.documentListService=n,this.siteService=i,this.translation=o,this.error=new c.EventEmitter}return e.prototype.openFileBrowseDialogByFolderId=function(e){var t=this;return this.documentListService.getFolderNode(e).pipe(s.switchMap(function(e){return t.openUploadFileDialog("Choose",e)}))},e.prototype.openLockNodeDialog=function(e){var t=this,n=new u.Subject;return this.contentService.hasPermission(e,d.PermissionsEnum.LOCK)?this.dialog.open(D,{data:{node:e,onError:function(e){t.error.emit(e),n.error(e)}},width:"400px"}):n.error("OPERATION.FAIL.NODE.NO_PERMISSION"),n},e.prototype.openFileBrowseDialogBySite=function(){var t=this;return this.siteService.getSites().pipe(s.switchMap(function(e){return t.openFileBrowseDialogByFolderId(e.list.entries[0].entry.guid)}))},e.prototype.openFolderBrowseDialogBySite=function(){var t=this;return this.siteService.getSites().pipe(s.switchMap(function(e){return t.openFolderBrowseDialogByFolderId(e.list.entries[0].entry.guid)}))},e.prototype.openFolderBrowseDialogByFolderId=function(e){var t=this;return this.documentListService.getFolderNode(e).pipe(s.switchMap(function(e){return t.openUploadFolderDialog("Choose",e)}))},e.prototype.openCopyMoveDialog=function(e,t,n){if(this.contentService.hasPermission(t,n)){var i=new u.Subject;i.subscribe({complete:this.close.bind(this)});var o={title:this.getTitleTranslation(e,t.name),actionName:e,currentFolderId:t.parentId,imageResolver:this.imageResolver.bind(this),rowFilter:this.rowFilter.bind(this,t.id),isSelectionValid:this.isCopyMoveSelectionValid.bind(this),select:i};return this.openContentNodeDialog(o,"adf-content-node-selector-dialog","630px"),i}var r=new Error(JSON.stringify({error:{statusCode:403}}));return u.throwError(r)},e.prototype.getTitleTranslation=function(e,t){return this.translation.instant("NODE_SELECTOR."+e.toUpperCase()+"_ITEM",{name:t})},e.prototype.openUploadFolderDialog=function(e,t){var n=new u.Subject;n.subscribe({complete:this.close.bind(this)});var i={title:e+" '"+t.name+"' to ...",actionName:e,currentFolderId:t.id,imageResolver:this.imageResolver.bind(this),isSelectionValid:this.hasPermissionOnNodeFolder.bind(this),rowFilter:this.rowFilter.bind(this,t.id),select:n};return this.openContentNodeDialog(i,"adf-content-node-selector-dialog","630px"),n},e.prototype.openUploadFileDialog=function(e,t){var n=new u.Subject;n.subscribe({complete:this.close.bind(this)});var i={title:e+" '"+t.name+"' to ...",actionName:e,currentFolderId:t.id,imageResolver:this.imageResolver.bind(this),isSelectionValid:this.isNodeFile.bind(this),select:n};return this.openContentNodeDialog(i,"adf-content-node-selector-dialog","630px"),n},e.prototype.openContentNodeDialog=function(e,t,n){this.dialog.open(F,{data:e,panelClass:t,width:n})},e.prototype.imageResolver=function(e,t){var n=e.node.entry;return this.contentService.hasPermission(n,"create")?null:this.documentListService.getMimeTypeIcon("disable/folder")},e.prototype.rowFilter=function(e,t){var n=t.node.entry;return n.id!==e&&!n.isFile},e.prototype.isNodeFile=function(e){return e.isFile},e.prototype.hasPermissionOnNodeFolder=function(e){return this.isNodeFolder(e)&&this.contentService.hasPermission(e,"create")},e.prototype.isNodeFolder=function(e){return e.isFolder},e.prototype.isCopyMoveSelectionValid=function(e){return this.hasEntityCreatePermission(e)&&!this.isSite(e)},e.prototype.hasEntityCreatePermission=function(e){return this.contentService.hasPermission(e,"create")},e.prototype.isSite=function(e){return!!e.guid||"st:site"===e.nodeType||"st:sites"===e.nodeType},e.prototype.close=function(){this.dialog.closeAll()},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:n.MatDialog},{type:d.ContentService},{type:T},{type:d.SitesService},{type:d.TranslationService}]},e.propDecorators={error:[{type:c.Output}]},e}(),N=function(){function e(e,t,n,i){this.element=e,this.renderer=t,this.contentService=n,this.contentNodeDialogService=i}return e.prototype.onClick=function(e){e.preventDefault(),this.contentNodeDialogService.openLockNodeDialog(this.node)},e.prototype.ngAfterViewInit=function(){var e=this.contentService.hasPermission(this.node,d.PermissionsEnum.LOCK);this.renderer.setProperty(this.element.nativeElement,"disabled",!e)},e.decorators=[{type:c.Directive,args:[{selector:"[adf-node-lock]"}]}],e.ctorParameters=function(){return[{type:c.ElementRef},{type:c.Renderer2},{type:d.ContentService},{type:w}]},e.propDecorators={node:[{type:c.Input,args:["adf-node-lock"]}],onClick:[{type:c.HostListener,args:["click",["$event"]]}]},e}(),L=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v],declarations:[g,N],exports:[g,N]}]}],e}(),R=function(){function e(e){this.apiService=e}return e.prototype.getRating=function(e,t){return u.from(this.apiService.getInstance().core.ratingsApi.getRating(e,t)).pipe(s.catchError(this.handleError))},e.prototype.postRating=function(e,t,n){var i={id:t,myRating:n};return u.from(this.apiService.getInstance().core.ratingsApi.rate(e,i)).pipe(s.catchError(this.handleError))},e.prototype.deleteRating=function(e,t){return u.from(this.apiService.getInstance().core.ratingsApi.removeRating(e,t)).pipe(s.catchError(this.handleError))},e.prototype.handleError=function(e){return console.error(e),u.throwError(e||"Server error")},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService}]},e}(),k=function(){function e(e){this.ratingService=e,this.average=0,this.ratingType="fiveStar",this.changeVote=new c.EventEmitter,this.stars=[]}return e.prototype.ngOnChanges=function(){var t=this,e=this.ratingService.getRating(this.nodeId,this.ratingType);return e.subscribe(function(e){e.entry.aggregate&&(t.average=e.entry.aggregate.average,t.calculateStars())}),e},e.prototype.calculateStars=function(){this.stars=[];for(var e=0;e<5;e++)e<this.average?this.stars.push({fill:!0}):this.stars.push({fill:!1});this.changeVote.emit(this.average)},e.prototype.updateVote=function(e){var t=this;this.ratingService.postRating(this.nodeId,this.ratingType,e).subscribe(function(e){e.entry.aggregate&&t.average!==e.entry.aggregate.average&&(t.average=e.entry.aggregate.average,t.calculateStars())})},e.decorators=[{type:c.Component,args:[{selector:"adf-rating",template:'<mat-list id="adf-rating-container" class="adf-rating-container">\n    <mat-list-item class="adf-rating-star" *ngFor="let currentRate of stars; let idx = index">\n            <span id="adf-rate-{{idx}}">\n                <mat-icon id="adf-grey-star-{{idx}}" *ngIf="currentRate.fill" class="adf-colored-star"\n                         (click)="updateVote(idx + 1)">star_rate\n                </mat-icon>\n                <mat-icon id="adf-colored-star-{{idx}}" *ngIf="!currentRate.fill" class="adf-grey-star"\n                         (click)="updateVote(idx + 1)">star_border\n                </mat-icon>\n            </span>\n    </mat-list-item>\n</mat-list>\n',encapsulation:c.ViewEncapsulation.None,styles:[".adf-rating-container{overflow:hidden;width:100%}.adf-rating-container .adf-rating-star{float:left;transition:.3s;padding:1px;cursor:pointer}.adf-rating-container .adf-rating-star .mat-list-item-content{padding:0 2px!important}.adf-rating-container .adf-colored-star{color:#ffe944}.adf-rating-container .adf-grey-star{color:grey}.adf-rating-container .adf-stars-container{padding:0!important;margin:0!important;display:inline-block}.adf-rating-container .adf-rating-star:hover{-webkit-transform:rotate(13deg) scale(1.2);transform:rotate(13deg) scale(1.2)}"]}]}],e.ctorParameters=function(){return[{type:R}]},e.propDecorators={nodeId:[{type:c.Input}],changeVote:[{type:c.Output}]},e}(),P=function(){function e(e){this.ratingService=e,this.changeVote=new c.EventEmitter,this.likesCounter=0,this.ratingType="likes",this.isLike=!1}return e.prototype.ngOnChanges=function(){var t=this;this.clean(),this.ratingService.getRating(this.nodeId,this.ratingType).subscribe(function(e){e.entry.aggregate&&(t.likesCounter=e.entry.aggregate.numberOfRatings,e.entry.ratedAt&&(t.isLike=!0))})},e.prototype.likeClick=function(){var t=this;this.isLike?this.ratingService.deleteRating(this.nodeId,this.ratingType).subscribe(function(){t.likesCounter-=1,t.isLike=!1,t.changeVote.emit(t.likesCounter)}):this.ratingService.postRating(this.nodeId,this.ratingType,!0).subscribe(function(e){t.likesCounter=e.entry.aggregate.numberOfRatings,t.isLike=!0,t.changeVote.emit(t.likesCounter)})},e.prototype.clean=function(){this.isLike=!1,this.likesCounter=0},e.decorators=[{type:c.Component,args:[{selector:"adf-like",template:'<div id="adf-like-container" class="adf-like-container">\n    <div class="adf-like">\n        <span id="adf-like-{{nodeId}}" [ngClass]="{\'adf-like-select\': isLike ,\'adf-like-grey\': !isLike  }"\n              (click)="likeClick()">\n            <mat-icon>thumb_up</mat-icon>\n        </span>\n    </div>\n    <div id="adf-like-counter" class="adf-like-counter">{{likesCounter}}</div>\n    <div class="adf-left" *ngIf="likesCounter<=1">Like</div>\n    <div class="adf-left" *ngIf="likesCounter>1">Likes</div>\n</div>\n',encapsulation:c.ViewEncapsulation.None,styles:[".adf-like-container{overflow:hidden;width:100%}.adf-like-container .adf-like{padding:5px;cursor:pointer;float:left;margin:5px 0 5px 5px}.adf-like-container .adf-like-select{cursor:pointer;color:#2196f3}.adf-like-container .adf-like-grey,.adf-like-container .adf-like-select:hover{cursor:pointer;color:grey}.adf-like-container .adf-like-grey:hover{cursor:pointer;color:#2196f3}.adf-like-container .adf-like-counter{float:left;padding:13px 0 0}.adf-like-container .adf-left{float:left;padding:13px 0 0 4px}"]}]}],e.ctorParameters=function(){return[{type:R}]},e.propDecorators={nodeId:[{type:c.Input}],changeVote:[{type:c.Output}]},e}(),M=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v],exports:[k,P],declarations:[k,P]}]}],e}(),x=function(){function e(e,t){this.apiService=e,this.logService=t,this.refresh=new c.EventEmitter}return e.prototype.getTagsByNodeId=function(e){var t=this;return u.from(this.apiService.getInstance().core.tagsApi.getNodeTags(e)).pipe(s.catchError(function(e){return t.handleError(e)}))},e.prototype.getAllTheTags=function(e){var t=this;return u.from(this.apiService.getInstance().core.tagsApi.getTags(e)).pipe(s.catchError(function(e){return t.handleError(e)}))},e.prototype.addTag=function(e,t){var n=this,i=new(this.apiService.getInstance().core.TagBody);i.tag=t;var o=u.from(this.apiService.getInstance().core.tagsApi.addTag(e,i));return o.subscribe(function(e){n.refresh.emit(e)},function(e){n.handleError(e)}),o},e.prototype.removeTag=function(e,t){var n=this,i=u.from(this.apiService.getInstance().core.tagsApi.removeTag(e,t));return i.subscribe(function(e){n.refresh.emit(e)},function(e){n.handleError(e)}),i},e.prototype.handleError=function(e){return this.logService.error(e),u.throwError(e||"Server error")},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService},{type:d.LogService}]},e.propDecorators={refresh:[{type:c.Output}]},e}(),_=function(){function e(e,t){this.tagService=e,this.translateService=t,this.successAdd=new c.EventEmitter,this.error=new c.EventEmitter,this.result=new c.EventEmitter,this.disableAddTag=!0,this.subscriptions=[]}return e.prototype.ngOnInit=function(){var e=this;this.subscriptions.push(this.tagService.refresh.subscribe(function(){e.refreshTag()}))},e.prototype.ngOnChanges=function(){return this.refreshTag()},e.prototype.ngOnDestroy=function(){this.subscriptions.forEach(function(e){return e.unsubscribe()}),this.subscriptions=[]},e.prototype.refreshTag=function(){var t=this;this.nodeId&&this.tagService.getTagsByNodeId(this.nodeId).subscribe(function(e){t.tagsEntries=e.list.entries,t.disableAddTag=!1,t.result.emit(t.tagsEntries)},function(){t.tagsEntries=null,t.disableAddTag=!0,t.result.emit(t.tagsEntries)})},e.prototype.addTag=function(){var t=this;this.searchTag(this.newTagName)?(this.translateService.get("TAG.MESSAGES.EXIST").subscribe(function(e){t.errorMsg=e}),this.error.emit(this.errorMsg)):this.tagService.addTag(this.nodeId,this.newTagName).subscribe(function(){t.newTagName="",t.successAdd.emit(t.nodeId)})},e.prototype.searchTag=function(t){if(this.tagsEntries)return this.tagsEntries.find(function(e){return t===e.entry.tag})},e.prototype.cleanErrorMsg=function(){this.errorMsg=""},e.prototype.removeTag=function(e){this.tagService.removeTag(this.nodeId,e)},e.decorators=[{type:c.Component,args:[{selector:"adf-tag-node-actions-list",template:'<mat-list>\n    <mat-list-item *ngFor="let currentEntry of tagsEntries; let idx = index">\n        <div class="adf-tag-actions-container" id="tag_delete_{{currentEntry.entry.tag}}" (click)="removeTag(currentEntry.entry.id)">\n            <div class="adf-tag-actions-delete-text" id="tag_name_{{currentEntry.entry.tag}}">\n                {{currentEntry.entry.tag}}\n            </div>\n            <mat-icon class="adf-tag-actions-delete-icon">delete</mat-icon>\n        </div>\n    </mat-list-item>\n</mat-list>\n<table class="adf-full-width" cellspacing="0">\n    <tr>\n        <td>\n            <mat-form-field class="adf-full-width">\n                <input matInput placeholder="{{\'TAG.LABEL.NEWTAG\' | translate }}"\n                       type="text"\n                       (keypress)="cleanErrorMsg()"\n                       [(ngModel)]="newTagName"\n                       id="new-tag-text"/>\n                <mat-hint data-automation-id="errorMessage" *ngIf="error" [ngStyle]="{\'color\': \'red\'}" align="start">{{errorMsg}}</mat-hint>\n            </mat-form-field>\n        </td>\n        <td>\n            <button class="adf-full-width" color="primary" id="add-tag" (click)="addTag()" [disabled]="disableAddTag"\n                    mat-raised-button>\n                {{\'TAG.BUTTON.ADD\' | translate }}\n            </button>\n        </td>\n    </tr>\n</table>\n',encapsulation:c.ViewEncapsulation.None,styles:[".adf-full-width{width:100%}.adf-tag-actions-delete-icon{float:right;cursor:pointer}.adf-tag-actions-delete-text{font-size:16px;float:left}.adf-tag-actions-container{padding:8px 0;height:20px}"]}]}],e.ctorParameters=function(){return[{type:x},{type:d.TranslationService}]},e.propDecorators={nodeId:[{type:c.Input}],successAdd:[{type:c.Output}],error:[{type:c.Output}],result:[{type:c.Output}]},e}(),U=function(){function e(e){var t=this;this.tagService=e,this.result=new c.EventEmitter,this.tagsEntries=[],this.size=10,this.isLoading=!1,this.isSizeMinimum=!0,this.defaultPagination={skipCount:0,maxItems:this.size,hasMoreItems:!1},this.pagination=this.defaultPagination,this.tagService.refresh.subscribe(function(){t.tagsEntries=[],t.refreshTag(t.defaultPagination)})}return e.prototype.ngOnInit=function(){return this.refreshTag(this.defaultPagination)},e.prototype.refreshTag=function(e){var t=this;this.tagService.getAllTheTags(e).subscribe(function(e){t.tagsEntries=t.tagsEntries.concat(e.list.entries),t.pagination=e.list.pagination,t.result.emit(t.tagsEntries),t.isLoading=!1})},e.prototype.loadMoreTags=function(){this.pagination.hasMoreItems&&(this.isLoading=!0,this.isSizeMinimum=!1,this.refreshTag({skipCount:this.pagination.skipCount+this.pagination.count,maxItems:this.size}))},e.prototype.loadLessTags=function(){this.isSizeMinimum=!1,this.tagsEntries=this.tagsEntries.slice(0,this.tagsEntries.length-this.pagination.count),this.pagination.skipCount=this.pagination.skipCount-this.pagination.count,this.pagination.hasMoreItems=!0,this.tagsEntries.length<=this.size&&(this.isSizeMinimum=!0)},e.decorators=[{type:c.Component,args:[{selector:"adf-tag-list",template:'<mat-chip-list class="adf-tag-chips-list">\n    <div class="adf-list-tag" *ngFor="let currentEntry of tagsEntries; let idx = index">\n        <mat-chip class="adf-primary-background-color">\n            <span id="tag_name_{{idx}}">{{currentEntry.entry.tag}}</span>\n        </mat-chip>\n    </div>\n</mat-chip-list>\n\n<div class="adf-tag-list-controls">\n    <button\n        *ngIf="!isSizeMinimum"\n        [disabled]="isLoading"\n        data-automation-id="show-fewer-tags"\n        mat-icon-button\n        (click)="loadLessTags()">\n        <mat-icon>keyboard_arrow_up</mat-icon>\n    </button>\n    <button\n        *ngIf="pagination.hasMoreItems"\n        [disabled]="isLoading"\n        data-automation-id="show-more-tags"\n        mat-icon-button\n        (click)="loadMoreTags()">\n        <mat-icon>keyboard_arrow_down</mat-icon>\n    </button>\n</div>\n',encapsulation:c.ViewEncapsulation.None,styles:[".adf-tag-chips-list,.adf-tag-chips-list div{display:flex;flex-direction:column}.adf-list-tag{display:block;font-size:16px}.adf-tag-list-controls{margin-top:30px;display:flex;justify-content:center}"]}]}],e.ctorParameters=function(){return[{type:x}]},e.propDecorators={result:[{type:c.Output}]},e}(),V=function(){function e(e){var t=this;this.tagService=e,this.showDelete=!0,this.results=new c.EventEmitter,this.tagService.refresh.subscribe(function(){t.refreshTag()})}return e.prototype.ngOnChanges=function(){return this.refreshTag()},e.prototype.refreshTag=function(){var t=this;this.nodeId&&this.tagService.getTagsByNodeId(this.nodeId).subscribe(function(e){t.tagsEntries=e.list.entries,t.results.emit(t.tagsEntries)})},e.prototype.removeTag=function(e){var t=this;this.tagService.removeTag(this.nodeId,e).subscribe(function(){t.refreshTag()})},e.decorators=[{type:c.Component,args:[{selector:"adf-tag-node-list",template:'<mat-chip-list>\n    <mat-chip class="adf-tag-chips adf-primary-background-color" *ngFor="let currentEntry of tagsEntries; let idx = index">\n        <span id="tag_name_{{idx}}">{{currentEntry.entry.tag}}</span>\n        <button *ngIf="showDelete" class="adf-tag-chips-delete" id="tag_chips_delete_{{currentEntry.entry.tag}}" type="button" (click)="removeTag(currentEntry.entry.id)">\n            <mat-icon class="adf-tag-chips-delete-icon adf-primary-contrast-text-color" matChipRemove>cancel</mat-icon>\n        </button>\n    </mat-chip>\n</mat-chip-list>\n',encapsulation:c.ViewEncapsulation.None,styles:[".adf-tag-chips-delete{overflow:visible;cursor:pointer;height:17px;width:20px;float:right;border:0;background:0 0;padding:0;margin:-1px 0 0 10px}.adf-tag-chips-delete-icon{font-size:20px;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:20px;width:20px}"]}]}],e.ctorParameters=function(){return[{type:x}]},e.propDecorators={nodeId:[{type:c.Input}],showDelete:[{type:c.Input}],results:[{type:c.Output}]},e}(),B=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v,l.FormsModule,l.ReactiveFormsModule,d.CoreModule.forChild()],exports:[_,U,V],declarations:[_,U,V]}]}],e}(),j=function(){function e(e,t){this.apiService=e,this.logService=t,this.showData=!0,this.contextRoot="alfresco",this.servicePath="service",this.contentType="TEXT",this.success=new c.EventEmitter,this.data=undefined,this.showError=!1}return e.prototype.ngOnChanges=function(e){var i=this;return this.showData&&this.clean(),new Promise(function(t,n){i.apiService.getInstance().webScript.executeWebScript("GET",i.scriptPath,i.scriptArgs,i.contextRoot,i.servicePath).then(function(e){i.data=e,i.showData&&"DATATABLE"===i.contentType&&(i.data=i.showDataAsDataTable(e)),i.success.emit(i.data),t()},function(e){i.logService.log("Error"+e),n()})})},e.prototype.showDataAsDataTable=function(e){try{e.schema||(e.schema=d.ObjectDataTableAdapter.generateSchema(e.data)),e.schema&&0<e.schema.length&&(this.data=new d.ObjectDataTableAdapter(e.data,e.schema))}catch(t){this.logService.error("error during the cast as datatable")}return null},e.prototype.clean=function(){this.data=undefined},e.prototype.isDataTableContent=function(){return"DATATABLE"===this.contentType},e.decorators=[{type:c.Component,args:[{selector:"adf-webscript-get",template:'<div *ngIf="showData">\n    <div *ngIf="contentType === \'JSON\'" id="webscript-data-JSON">{{data | json}}</div>\n    <div *ngIf="contentType === \'HTML\'" id="webscript-data-HTML" [innerHTML]="data"></div>\n    <div *ngIf="contentType === \'TEXT\'" id="webscript-data-TEXT">{{data}}</div>\n    <div *ngIf="isDataTableContent()">\n        <adf-datatable id="webscript-datatable-wrapper" [data]="data"></adf-datatable>\n        <div>\n            <div *ngIf="showError" id="error">{{\'WEBSCRIPT.ERROR\' | translate: {\n                data: data,\n                contentType: contentType\n                }\n                }}\n            </div>\n        </div>\n    </div>\n</div>\n'}]}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService},{type:d.LogService}]},e.propDecorators={scriptPath:[{type:c.Input}],scriptArgs:[{type:c.Input}],showData:[{type:c.Input}],contextRoot:[{type:c.Input}],servicePath:[{type:c.Input}],contentType:[{type:c.Input}],success:[{type:c.Output}]},e}(),H=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v,d.CoreModule.forChild()],exports:[j],declarations:[j]}]}],e}(),Q=function(){function o(e,t,n,i){if(this.obj=e,this.documentListService=t,this.permissionsStyle=n,this.thumbnailService=i,this.cache={},this.isSelected=!1,this.cssClass="",!e)throw new Error(o.ERR_OBJECT_NOT_FOUND);this.isDropTarget=this.isFolderAndHasPermissionToUpload(e),n&&(this.cssClass=this.getPermissionClass(e))}return Object.defineProperty(o.prototype,"node",{get:function(){return this.obj},enumerable:!0,configurable:!0}),o.prototype.getPermissionClass=function(t){var n=this,i="";return this.permissionsStyle.forEach(function(e){(n.applyPermissionStyleToFolder(t.entry,e)||n.applyPermissionStyleToFile(t.entry,e))&&n.documentListService.hasPermission(t.entry,e.permission)&&(i+=" "+e.css)}),i},o.prototype.applyPermissionStyleToFile=function(e,t){return t.isFile&&e.isFile},o.prototype.applyPermissionStyleToFolder=function(e,t){return t.isFolder&&e.isFolder},o.prototype.isFolderAndHasPermissionToUpload=function(e){return this.isFolder(e)&&this.documentListService.hasPermission(e.entry,"create")},o.prototype.isFolder=function(e){return e.entry&&e.entry.isFolder},o.prototype.cacheValue=function(e,t){return this.cache[e]=t},o.prototype.getValue=function(e){return this.cache[e]!==undefined?this.cache[e]:d.ObjectUtils.getValue(this.obj.entry,e)},o.prototype.imageErrorResolver=function(e){return this.thumbnailService.getMimeTypeIcon(this.obj.entry.content.mimeType)},o.prototype.hasValue=function(e){return this.getValue(e)!==undefined},o.ERR_OBJECT_NOT_FOUND="Object source not found",o}(),G=function(){function e(e,t,n,i,o){void 0===n&&(n=[]),void 0===o&&(o="client"),this.documentListService=e,this.thumbnailService=t,this.ERR_ROW_NOT_FOUND="Row not found",this.ERR_COL_NOT_FOUND="Column not found",this.thumbnails=!1,this.rows=[],this.columns=n||[],this.sorting=i,this.sortingMode=o}return Object.defineProperty(e.prototype,"sortingMode",{get:function(){return this._sortingMode},set:function(e){var t=(e||"client").toLowerCase();"client"!==t&&"server"!==t&&(t="client"),this._sortingMode=t},enumerable:!0,configurable:!0}),e.prototype.getRows=function(){return this.rows},e.prototype.setRows=function(e){this.rows=e||[],this.sort()},e.prototype.getColumns=function(){return this.columns},e.prototype.setColumns=function(e){this.columns=e||[]},e.prototype.getValue=function(e,t){if(!e)throw new Error(this.ERR_ROW_NOT_FOUND);if(!t)throw new Error(this.ERR_COL_NOT_FOUND);var n=e,i=e.getValue(t.key);if(n.cache[t.key]!==undefined)return n.cache[t.key];if("$thumbnail"===t.key){var o;if(this.imageResolver)if(o=this.imageResolver(e,t))return o;var r=e.node;if(r.entry.isFolder)return this.isSmartFolder(r)?this.documentListService.getMimeTypeIcon("smartFolder"):this.documentListService.getMimeTypeIcon("folder");if(r.entry.isFile&&this.thumbnails)return this.documentListService.getDocumentThumbnailUrl(r);if(r.entry.content){var s=r.entry.content.mimeType;if(s)return this.documentListService.getMimeTypeIcon(s)}return this.documentListService.getDefaultMimeTypeIcon()}if("image"===t.type&&(this.imageResolver&&(o=this.imageResolver(e,t))))return o;return n.cacheValue(t.key,i)},e.prototype.getSorting=function(){return this.sorting},e.prototype.setSorting=function(e){this.sorting=e,this.sortRows(this.rows,this.sorting)},e.prototype.sort=function(e,t){var n=this.sorting||new d.DataSorting;e&&(n.key=e,n.direction=t||"asc"),this.setSorting(n)},e.prototype.setFilter=function(e){this.filter=e},e.prototype.setImageResolver=function(e){this.imageResolver=e},e.prototype.isSmartFolder=function(e){var t=this.getNodeAspectNames(e);return-1<t.indexOf("smf:customConfigSmartFolder")||-1<t.indexOf("smf:systemConfigSmartFolder")},e.prototype.getNodeAspectNames=function(e){return e.entry&&e.entry.aspectNames?e.entry.aspectNames:e.aspectNames?e.aspectNames:[]},e.prototype.sortRows=function(e,o){if("server"!==this.sortingMode){var r={};o&&o.key&&e&&0<e.length&&((o.key.includes("sizeInBytes")||"name"===o.key)&&(r.numeric=!0),e.sort(function(e,t){if(e.node.entry.isFolder!==t.node.entry.isFolder)return e.node.entry.isFolder?-1:1;var n=e.getValue(o.key);n=n?n instanceof Date?n.valueOf().toString():n.toString():"";var i=t.getValue(o.key);return i=i?i instanceof Date?i.valueOf().toString():i.toString():"","asc"===o.direction?n.localeCompare(i,undefined,r):i.localeCompare(n,undefined,r)}))}},e.prototype.loadPage=function(e,t){var n=this;void 0===t&&(t=!1);var i=[];if(e&&e.list){var o=e.list.entries;if(o&&0<o.length&&(i=o.map(function(e){return new Q(e,n.documentListService,n.permissionsStyle,n.thumbnailService)}),this.filter&&(i=i.filter(this.filter)),"server"!==this.sortingMode&&this.columns&&0<this.columns.length)){var r=this.getSorting();if(r)this.sortRows(i,r);else{var s=this.columns.filter(function(e){return e.sortable});0<s.length?this.sort(s[0].key,"asc"):this.sort(this.columns[0].key,"asc")}}}if(t){var a=i.filter(function(t){return!n.rows.find(function(e){return e.obj.entry.id===t.obj.entry.id})});this.rows=this.rows.concat(a)}else this.rows=i},e}(),q={"-trashcan-":[{key:"$thumbnail",type:"image",srTitle:"ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL",sortable:!1},{key:"name",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.NAME",cssClass:"full-width ellipsis-cell",sortable:!0},{key:"path",type:"location",title:"ADF-DOCUMENT-LIST.LAYOUT.LOCATION",sortable:!0},{key:"content.sizeInBytes",type:"fileSize",title:"ADF-DOCUMENT-LIST.LAYOUT.SIZE",sortable:!0},{key:"archivedAt",type:"date",title:"ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON",format:"timeAgo",sortable:!0},{key:"archivedByUser.displayName",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY",sortable:!0}],"-sites-":[{key:"$thumbnail",type:"image",srTitle:"ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL",sortable:!1},{key:"title",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.NAME",cssClass:"full-width ellipsis-cell",sortable:!0},{key:"visibility",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.STATUS",sortable:!0}],"-mysites-":[{key:"$thumbnail",type:"image",srTitle:"ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL",sortable:!1},{key:"title",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.NAME",cssClass:"full-width ellipsis-cell",sortable:!0},{key:"visibility",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.STATUS",sortable:!0}],"-favorites-":[{key:"$thumbnail",type:"image",srTitle:"ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL",sortable:!1},{key:"name",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.NAME",cssClass:"full-width ellipsis-cell",sortable:!0},{key:"path",type:"location",title:"ADF-DOCUMENT-LIST.LAYOUT.LOCATION",sortable:!0},{key:"content.sizeInBytes",type:"fileSize",title:"ADF-DOCUMENT-LIST.LAYOUT.SIZE",sortable:!0},{key:"modifiedAt",type:"date",title:"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON",format:"timeAgo",sortable:!0},{key:"modifiedByUser.displayName",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY",sortable:!0}],"-recent-":[{key:"$thumbnail",type:"image",srTitle:"ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL",sortable:!1},{key:"name",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.NAME",cssClass:"full-width ellipsis-cell",sortable:!0},{key:"path",type:"location",title:"ADF-DOCUMENT-LIST.LAYOUT.LOCATION",cssClass:"ellipsis-cell",sortable:!0},{key:"content.sizeInBytes",type:"fileSize",title:"ADF-DOCUMENT-LIST.LAYOUT.SIZE",sortable:!0},{key:"modifiedAt",type:"date",title:"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON",format:"timeAgo",sortable:!0}],"-sharedlinks-":[{key:"$thumbnail",type:"image",srTitle:"ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL",sortable:!1},{key:"name",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.NAME",cssClass:"full-width ellipsis-cell",sortable:!0},{key:"path",type:"location",title:"ADF-DOCUMENT-LIST.LAYOUT.LOCATION",cssClass:"ellipsis-cell",sortable:!0},{key:"content.sizeInBytes",type:"fileSize",title:"ADF-DOCUMENT-LIST.LAYOUT.SIZE",sortable:!0},{key:"modifiedAt",type:"date",title:"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON",format:"timeAgo",sortable:!0},{key:"modifiedByUser.displayName",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY",sortable:!0},{key:"sharedByUser.displayName",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY",sortable:!0}],"default":[{key:"$thumbnail",type:"image",srTitle:"ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL",sortable:!1},{key:"name",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.NAME",cssClass:"full-width ellipsis-cell",sortable:!0},{key:"content.sizeInBytes",type:"fileSize",title:"ADF-DOCUMENT-LIST.LAYOUT.SIZE",sortable:!0},{key:"modifiedAt",type:"date",title:"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON",format:"timeAgo",sortable:!0},{key:"modifiedByUser.displayName",type:"text",title:"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY",sortable:!0}]},z=function $(e){this.disableWithNoPermission=!1,this.disabled=!1,this.visible=!0,e&&(this.icon=e.icon,this.title=e.title,this.handler=e.handler,this.execute=e.execute,this.target=e.target,this.permission=e.permission,this.disableWithNoPermission=e.disableWithNoPermission,e.hasOwnProperty("disabled")&&(this.disabled=e.disabled),e.hasOwnProperty("visible")&&(this.visible=e.visible))},Y={Document:"document",Folder:"folder",All:"all"},W=function(n){function e(e){var t=n.call(this,e)||this;return t.target="document",t}return S(e,n),e}(z),Z=function(n){function e(e){var t=n.call(this,e)||this;return t.target="folder",t}return S(e,n),e}(z),X=function(n){function e(e){var t=n.call(this)||this;return t.value=e,t}return S(e,n),e}(d.BaseEvent),K=function(n){function e(e){var t=n.call(this)||this;return t.value=e,t}return S(e,n),e}(d.BaseEvent),J=function(){function e(e,t){this.apiService=e,this.logService=t,this.CREATE_PERMISSION="create"}return e.prototype.getRecentFiles=function(e,o){var r=this;return new u.Observable(function(i){r.apiService.peopleApi.getPerson(e).then(function(e){var t=e.entry.id,n={query:{query:"*",language:"afts"},filterQueries:[{query:"cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]"},{query:"cm:modifier:"+t+" OR cm:creator:"+t},{query:'TYPE:"content" AND -TYPE:"app:filelink" AND -TYPE:"fm:post"'}],include:["path","properties","allowableOperations"],sort:[{type:"FIELD",field:"cm:modified",ascending:!1}],paging:{maxItems:o.maxItems,skipCount:o.skipCount}};return r.apiService.searchApi.search(n).then(function(e){i.next(e),i.complete()},function(e){i.error(e),i.complete()})},function(e){i.error(e),i.complete()})}).pipe(s.catchError(function(e){return r.handleError(e)}))},e.prototype.loadFavorites=function(e,t){var i=this;void 0===t&&(t=[]);var n=this.getIncludesFields(t),o={maxItems:e.maxItems,skipCount:e.skipCount,where:"(EXISTS(target/file) OR EXISTS(target/folder))",include:n};return new u.Observable(function(n){i.apiService.favoritesApi.getFavorites("-me-",o).then(function(e){var t={list:{entries:e.list.entries.map(function(e){var t=e.entry.target;return{entry:t.file||t.folder}}).map(function(e){var t=e.entry;return t.properties={"cm:title":t.title,"cm:description":t.description},{entry:t}}),pagination:e.list.pagination}};n.next(t),n.complete()},function(e){n.error(e),n.complete()})}).pipe(s.catchError(function(e){return i.handleError(e)}))},e.prototype.loadMemberSites=function(e){var i=this,t={include:["properties"],maxItems:e.maxItems,skipCount:e.skipCount};return new u.Observable(function(n){i.apiService.peopleApi.getSiteMembership("-me-",t).then(function(e){var t={list:{entries:e.list.entries.map(function(e){var t=e.entry.site;return t.allowableOperations=t.allowableOperations?t.allowableOperations:[i.CREATE_PERMISSION],t.name=t.name||t.title,{entry:t}}),pagination:e.list.pagination}};n.next(t),n.complete()},function(e){n.error(e),n.complete()})}).pipe(s.catchError(function(e){return i.handleError(e)}))},e.prototype.loadSites=function(e){var n=this,i={include:["properties","aspectNames"],maxItems:e.maxItems,skipCount:e.skipCount};return new u.Observable(function(t){n.apiService.sitesApi.getSites(i).then(function(e){e.list.entries.map(function(e){var t=e.entry;return t.name=t.name||t.title,{entry:t}}),t.next(e),t.complete()},function(e){t.error(e),t.complete()})}).pipe(s.catchError(function(e){return n.handleError(e)}))},e.prototype.loadTrashcan=function(e,t){var n=this;void 0===t&&(t=[]);var i={include:this.getIncludesFields(t),maxItems:e.maxItems,skipCount:e.skipCount};return u.from(this.apiService.nodesApi.getDeletedNodes(i)).pipe(s.catchError(function(e){return n.handleError(e)}))},e.prototype.loadSharedLinks=function(e,t){var n=this;void 0===t&&(t=[]);var i={include:this.getIncludesFields(t),maxItems:e.maxItems,skipCount:e.skipCount};return u.from(this.apiService.sharedLinksApi.findSharedLinks(i)).pipe(s.catchError(function(e){return n.handleError(e)}))},e.prototype.isCustomSource=function(e){var t=!1;return-1<["-trashcan-","-sharedlinks-","-sites-","-mysites-","-favorites-","-recent-"].indexOf(e)&&(t=!0),t},e.prototype.isSupportedSource=function(e){var t=!1;return-1<["-my-","-root-","-shared-"].indexOf(e)&&(t=!0),t},e.prototype.loadFolderByNodeId=function(e,t,n){return"-trashcan-"===e?this.loadTrashcan(t,n):"-sharedlinks-"===e?this.loadSharedLinks(t,n):"-sites-"===e?this.loadSites(t):"-mysites-"===e?this.loadMemberSites(t):"-favorites-"===e?this.loadFavorites(t,n):"-recent-"===e?this.getRecentFiles("-me-",t):void 0},e.prototype.getCorrespondingNodeIds=function(t,e){return void 0===e&&(e={}),this.isCustomSource(t)?this.loadFolderByNodeId(t,e,[]).pipe(s.map(function(e){return e.list.entries.map(function(e){return"-sharedlinks-"===t?e.entry.nodeId:"-sites-"===t||"-mysites-"===t?e.entry.guid:"-favorites-"===t?e.entry.targetGuid:e.entry.id})})):t?u.from(this.apiService.nodesApi.getNode(t).then(function(e){return[e.entry.id]})):u.of([])},e.prototype.hasCorrespondingNodeIds=function(e){return this.isCustomSource(e)||this.isSupportedSource(e)},e.prototype.getIncludesFields=function(e){return O(["path","properties","allowableOperations","permissions","aspectNames"],e).filter(function(e,t,n){return t===n.indexOf(e)})},e.prototype.handleError=function(e){return this.logService.error(e),u.throwError(e||"Server error")},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService},{type:d.LogService}]},e}(),ee={Finite:0,Infinite:1};ee[ee.Finite]="Finite",ee[ee.Infinite]="Infinite";var te=function(){function l(e,t,n,i,o,r,s,a){this.documentListService=e,this.ngZone=t,this.elementRef=n,this.appConfig=i,this.preferences=o,this.customResourcesService=r,this.contentService=s,this.thumbnailService=a,this.display=d.DisplayMode.List,this.permissionsStyle=[],this.locationFormat="/",this.navigate=!0,this.showHeader=!0,this.navigationMode=l.DOUBLE_CLICK_NAVIGATION,this.thumbnails=!1,this.selectionMode="single",this.multiselect=!1,this.contentActions=!1,this.contentActionsPosition="right",this.contextMenuActions=!1,this.emptyFolderImageUrl="./assets/images/empty_doc_lib.svg",this.allowDropFiles=!1,this.sorting=["name","asc"],this.sortingMode="client",this.loading=!1,this.rowFilter=null,this.imageResolver=null,this.currentFolderId=null,this.folderNode=null,this.node=null,this.skipCount=0,this.enableInfiniteScrolling=!1,this.nodeClick=new c.EventEmitter,this.nodeDblClick=new c.EventEmitter,this.folderChange=new c.EventEmitter,this.preview=new c.EventEmitter,this.ready=new c.EventEmitter,this.error=new c.EventEmitter,this.actions=[],this.contextActionHandler=new u.Subject,this.noPermission=!1,this.selection=new Array,this.layoutPresets={},this.subscriptions=[],this.rowMenuCache={}}return l.prototype.getContextActions=function(t){var n=this;if(t&&t.entry){var e=this.getNodeActions(t);if(e&&0<e.length)return e.map(function(e){return{model:e,node:t,subject:n.contextActionHandler}})}return null},Object.defineProperty(l.prototype,"supportedPageSizes",{get:function(){return this.preferences.getDefaultPageSizes()},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"hasCustomLayout",{get:function(){return this.columnList&&this.columnList.columns&&0<this.columnList.columns.length},enumerable:!0,configurable:!0}),l.prototype.getDefaultSorting=function(){var e;if(this.sorting){var t=C(this.sorting,2),n=t[0],i=t[1];e=new d.DataSorting(n,i)}return e},l.prototype.getLayoutPreset=function(e){return void 0===e&&(e="default"),(this.layoutPresets[e]||this.layoutPresets["default"]).map(function(e){return new d.ObjectDataColumn(e)})},Object.defineProperty(l.prototype,"pagination",{get:function(){var e=this.preferences.paginationSize;if(!this._pagination){this.maxItems&&(e=this.maxItems);var t={maxItems:e,skipCount:0,totalItems:0,hasMoreItems:!1};this._pagination=new u.BehaviorSubject(t)}return this._pagination},enumerable:!0,configurable:!0}),l.prototype.isEmptyTemplateDefined=function(){return!(!this.dataTable||!this.emptyFolderTemplate)},l.prototype.isNoPermissionTemplateDefined=function(){return!(!this.dataTable||!this.noPermissionTemplate)},l.prototype.isMobile=function(){return!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},l.prototype.isEmpty=function(){return!this.data||0===this.data.getRows().length},l.prototype.ngOnInit=function(){var t=this;this.rowMenuCache={},this.loadLayoutPresets(),this.data=new G(this.documentListService,this.thumbnailService,null,this.getDefaultSorting(),this.sortingMode),this.data.thumbnails=this.thumbnails,this.data.permissionsStyle=this.permissionsStyle,this.rowFilter&&this.data.setFilter(this.rowFilter),this.imageResolver&&this.data.setImageResolver(this.imageResolver),this.subscriptions.push(this.contextActionHandler.subscribe(function(e){return t.contextActionCallback(e)})),this.enforceSingleClickNavigationForMobile()},l.prototype.ngAfterContentInit=function(){var e=this;this.columnList&&this.subscriptions.push(this.columnList.columns.changes.subscribe(function(){e.setTableSchema()})),this.setTableSchema()},l.prototype.setTableSchema=function(){var e=[];this.hasCustomLayout&&(e=this.columnList.columns.map(function(e){return e})),this.data?e&&0<e.length&&this.data.setColumns(e):this.data=new G(this.documentListService,this.thumbnailService,e,this.getDefaultSorting(),this.sortingMode);var t=this.data.getColumns();t&&0!==t.length||this.setupDefaultColumns(this.currentFolderId)},l.prototype.ngOnChanges=function(e){var t=this;if(this.resetSelection(),this.data&&(this.data.thumbnails=this.thumbnails),e.sortingMode&&!e.sortingMode.firstChange&&this.data&&(this.data.sortingMode=e.sortingMode.currentValue),e.sorting&&!e.sorting.firstChange&&this.data){var n=e.sorting.currentValue;if(n&&0<n.length){var i=C(n,2),o=i[0],r=i[1];this.data.setSorting(new d.DataSorting(o,r))}}e.folderNode&&e.folderNode.currentValue?(this.currentFolderId=e.folderNode.currentValue.id,this.resetNewFolderPagination(),this.loadFolder()):e.currentFolderId&&e.currentFolderId.currentValue&&e.currentFolderId.currentValue!==e.currentFolderId.previousValue?(this.resetNewFolderPagination(),this.loadFolder()):this.data&&(e.node&&e.node.currentValue?(this.data.loadPage(e.node.currentValue),this.onDataReady(e.node.currentValue)):e.rowFilter&&e.rowFilter.currentValue!==e.rowFilter.previousValue?(this.data.setFilter(e.rowFilter.currentValue),this.currentFolderId&&this.loadFolderNodesByFolderNodeId(this.currentFolderId,this.pagination.getValue())["catch"](function(e){return t.error.emit(e)})):e.imageResolver&&this.data.setImageResolver(e.imageResolver.currentValue))},l.prototype.reload=function(){var e=this;this.ngZone.run(function(){e.resetSelection(),e.node?(e.data.loadPage(e.node),e.onDataReady(e.node)):e.loadFolder()})},l.prototype.contextActionCallback=function(e){e&&this.executeContentAction(e.node,e.model)},l.prototype.getNodeActions=function(t){var n=this;if(t&&t.entry){var i=null;if(t.entry.isFile?i="document":t.entry.isFolder&&(i="folder"),i){var e=this.rowMenuCache[t.entry.id];if(e)return e.forEach(function(e){n.refreshAction(e,t)}),e;var o=this.actions.filter(function(e){return("function"==typeof e.visible?e.visible(t):e.visible)&&e.target.toLowerCase()===i}).map(function(e){return new z(e)});return o.forEach(function(e){n.refreshAction(e,t)}),this.rowMenuCache[t.entry.id]=o}}return[]},l.prototype.refreshAction=function(e,t){e.disabled=this.isActionDisabled(e,t),e.visible=this.isActionVisible(e,t)},l.prototype.isActionVisible=function(e,t){return"function"==typeof e.visible?e.visible(t):e.visible},l.prototype.isActionDisabled=function(e,t){return"function"==typeof e.disabled?e.disabled(t):!(!e.permission||!e.disableWithNoPermission||this.contentService.hasPermission(t.entry,e.permission))||e.disabled},l.prototype.onShowContextMenu=function(e){e&&this.contextMenuActions&&e.preventDefault()},l.prototype.performNavigation=function(e){return!!this.canNavigateFolder(e)&&(this.updateFolderData(e),!0)},l.prototype.performCustomSourceNavigation=function(e){return!!this.customResourcesService.isCustomSource(this.currentFolderId)&&(this.updateFolderData(e),!0)},l.prototype.updateFolderData=function(e){this.resetNewFolderPagination(),this.currentFolderId=e.entry.id,this.reload(),this.folderChange.emit(new K(e.entry))},l.prototype.updateCustomSourceData=function(e){this.folderNode=null,this.currentFolderId=e},l.prototype.executeContentAction=function(e,t){if(e&&e.entry&&t){var n=void 0;n="function"==typeof t.handler?t.handler(e,this,t.permission):u.of(!0),"function"==typeof t.execute&&n&&n.subscribe(function(){t.execute(e)})}},l.prototype.loadFolder=function(){var t=this;if(this.pagination.getValue().merge||(this.loading=!0),this.hasCustomLayout||this.setupDefaultColumns(this.currentFolderId),this.folderNode)return this.loadFolderNodesByFolderNodeId(this.folderNode.id,this.pagination.getValue())["catch"](function(e){return t.handleError(e)});this.loadFolderByNodeId(this.currentFolderId)},l.prototype.loadFolderByNodeId=function(e){var t=this;this.customResourcesService.isCustomSource(e)?(this.updateCustomSourceData(e),this.customResourcesService.loadFolderByNodeId(e,this.pagination.getValue(),this.includeFields).subscribe(function(e){t.onPageLoaded(e)},function(e){t.error.emit(e)})):this.documentListService.getFolderNode(e,this.includeFields).subscribe(function(e){return t.folderNode=e,t.loadFolderNodesByFolderNodeId(e.id,t.pagination.getValue())["catch"](function(e){return t.handleError(e)})},function(e){t.handleError(e)})},l.prototype.loadFolderNodesByFolderNodeId=function(n,i){var o=this;return new Promise(function(t,e){o.documentListService.getFolder(null,{maxItems:i.maxItems,skipCount:i.skipCount,rootFolderId:n},o.includeFields).subscribe(function(e){o.data.loadPage(e,o.pagination.getValue().merge),o.loading=!1,o.onDataReady(e),t(!0)},function(e){o.handleError(e)})})},l.prototype.resetSelection=function(){this.dataTable.resetSelection(),this.selection=[],this.noPermission=!1},l.prototype.onPageLoaded=function(e){e&&(this.data.loadPage(e,this.pagination.getValue().merge),this.loading=!1,this.onDataReady(e))},l.prototype.setupDefaultColumns=function(e){if(void 0===e&&(e="default"),this.data){var t=this.getLayoutPreset(e);this.data.setColumns(t)}},l.prototype.onPreviewFile=function(e){e&&this.preview.emit(new X(e))},l.prototype.onNodeClick=function(e){var t=new CustomEvent("node-click",{detail:{sender:this,node:e},bubbles:!0});this.elementRef.nativeElement.dispatchEvent(t);var n=new X(e);this.nodeClick.emit(n),n.defaultPrevented||this.navigate&&this.navigationMode===l.SINGLE_CLICK_NAVIGATION&&e&&e.entry&&(e.entry.isFile&&this.onPreviewFile(e),e.entry.isFolder&&this.performNavigation(e))},l.prototype.onNodeDblClick=function(e){var t=new CustomEvent("node-dblclick",{detail:{sender:this,node:e},bubbles:!0});this.elementRef.nativeElement.dispatchEvent(t);var n=new X(e);this.nodeDblClick.emit(n),n.defaultPrevented||this.navigate&&this.navigationMode===l.DOUBLE_CLICK_NAVIGATION&&e&&e.entry&&(e.entry.isFile&&this.onPreviewFile(e),e.entry.isFolder&&this.performNavigation(e))},l.prototype.onNodeSelect=function(e){this.selection=e.selection.map(function(e){return e.node});var t=new CustomEvent("node-select",{detail:{node:e.row.node,selection:this.selection},bubbles:!0});this.elementRef.nativeElement.dispatchEvent(t)},l.prototype.onNodeUnselect=function(e){this.selection=e.selection.map(function(e){return e.node});var t=new CustomEvent("node-unselect",{detail:{node:e.row.node,selection:this.selection},bubbles:!0});this.elementRef.nativeElement.dispatchEvent(t)},l.prototype.onShowRowContextMenu=function(e){if(this.contextMenuActions){var t=e.value,n=t.row.node;n&&(t.actions=this.getContextActions(n)||[])}},l.prototype.onShowRowActionsMenu=function(e){if(this.contentActions){var t=e.value,n=t.row.node;n&&(t.actions=this.getNodeActions(n)||[])}},l.prototype.onExecuteRowAction=function(e){if(this.contentActions){var t=e.value,n=t.row.node,i=t.action;this.executeContentAction(n,i)}},l.prototype.enforceSingleClickNavigationForMobile=function(){this.isMobile()&&(this.navigationMode=l.SINGLE_CLICK_NAVIGATION)},l.prototype.canNavigateFolder=function(e){var t=!1;return this.customResourcesService.isCustomSource(this.currentFolderId)?t=!1:e&&e.entry&&e.entry.isFolder&&(t=!0),t},l.prototype.loadLayoutPresets=function(){var e=this.appConfig.get("document-list.presets",null);this.layoutPresets=e?Object.assign({},q,e):q},l.prototype.onDataReady=function(e){this.ready.emit(e),this.pagination.next(e.list.pagination)},l.prototype.updatePagination=function(e){this.pagination.next(e),this.reload()},l.prototype.navigateTo=function(e){this.currentFolderId=e,this.resetNewFolderPagination(),this.loadFolder(),this.folderChange.emit(new K({id:e}))},l.prototype.resetNewFolderPagination=function(){this.folderNode=null,this.pagination.value.skipCount=0},l.prototype.ngOnDestroy=function(){this.subscriptions.forEach(function(e){return e.unsubscribe()}),this.subscriptions=[]},l.prototype.handleError=function(e){e.message&&403===JSON.parse(e.message).error.statusCode&&(this.loading=!1,this.noPermission=!0),this.error.emit(e)},l.SINGLE_CLICK_NAVIGATION="click",l.DOUBLE_CLICK_NAVIGATION="dblclick",l.DEFAULT_PAGE_SIZE=20,l.decorators=[{type:c.Component,args:[{selector:"adf-document-list",template:'<adf-datatable\n    #dataTable\n    [selectionMode]="selectionMode"\n    [data]="data"\n    [actions]="contentActions"\n    [actionsPosition]="contentActionsPosition"\n    [multiselect]="multiselect"\n    [allowDropFiles]="allowDropFiles"\n    [contextMenu]="contextMenuActions"\n    [rowStyle]="rowStyle"\n    [rowStyleClass]="rowStyleClass"\n    [loading]="loading"\n    [display]="display"\n    [noPermission]="noPermission"\n    [showHeader]="!isEmpty() && showHeader"\n    [rowMenuCacheEnabled]="false"\n    (showRowContextMenu)="onShowRowContextMenu($event)"\n    (showRowActionsMenu)="onShowRowActionsMenu($event)"\n    (executeRowAction)="onExecuteRowAction($event)"\n    (rowClick)="onNodeClick($event.value?.node)"\n    (rowDblClick)="onNodeDblClick($event.value?.node)"\n    (row-select)="onNodeSelect($event.detail)"\n    (row-unselect)="onNodeUnselect($event.detail)"\n    [class.adf-datatable-gallery-thumbnails]="data.thumbnails">\n\n    <div *ngIf="!isEmptyTemplateDefined()">\n        <no-content-template>\n            <ng-template>\n                <adf-empty-list>\n                    <div class="adf-empty-list_template adf-empty-folder">\n                        <div class="adf-empty-folder-this-space-is-empty">{{\'ADF-DOCUMENT-LIST.EMPTY.HEADER\' | translate}}</div>\n                        <div fxHide.lt-md="true" class="adf-empty-folder-drag-drop">{{ \'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE\' | translate }}</div>\n                        <div fxHide.lt-md="true" class="adf-empty-folder-any-files-here-to-add">{{ \'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.SUBTITLE\' | translate }}</div>\n                        <img class="adf-empty-folder-image" [src]="emptyFolderImageUrl">\n                    </div>\n                    \x3c!-- <div adf-empty-list-header class="adf-empty-list-header"> {{\'ADF-DOCUMENT-LIST.EMPTY.HEADER\' | translate}} </div> --\x3e\n                </adf-empty-list>\n            </ng-template>\n        </no-content-template>\n    </div>\n\n    <div *ngIf="!isNoPermissionTemplateDefined()">\n        <no-permission-template>\n            <ng-template>\n                <div class="adf-no-permission__template">\n                    <mat-icon>ic_error</mat-icon>\n                    <p class="adf-no-permission__template--text">{{ \'ADF-DOCUMENT-LIST.NO_PERMISSION\' | translate }}</p>\n                </div>\n            </ng-template>\n        </no-permission-template>\n    </div>\n\n    <div>\n        <loading-content-template>\n            <ng-template>\n                <div class="adf-document-list-loading-container">\n                    <mat-progress-spinner\n                        id="adf-document-list-loading"\n                        class="adf-document-list-loading-margin"\n                        [color]="\'primary\'"\n                        [mode]="\'indeterminate\'">\n                    </mat-progress-spinner>\n                </div>\n            </ng-template>\n        </loading-content-template>\n    </div>\n</adf-datatable>\n',encapsulation:c.ViewEncapsulation.None,styles:[""]}]}],l.ctorParameters=function(){return[{type:T},{type:c.NgZone},{type:c.ElementRef},{type:d.AppConfigService},{type:d.UserPreferencesService},{type:J},{type:d.ContentService},{type:d.ThumbnailService}]},l.propDecorators={columnList:[{type:c.ContentChild,args:[d.DataColumnListComponent]}],includeFields:[{type:c.Input}],display:[{type:c.Input}],permissionsStyle:[{type:c.Input}],locationFormat:[{type:c.Input}],navigate:[{type:c.Input}],showHeader:[{type:c.Input}],navigationMode:[{type:c.Input}],thumbnails:[{type:c.Input}],selectionMode:[{type:c.Input}],multiselect:[{type:c.Input}],contentActions:[{type:c.Input}],contentActionsPosition:[{type:c.Input}],contextMenuActions:[{type:c.Input}],emptyFolderImageUrl:[{type:c.Input}],allowDropFiles:[{type:c.Input}],sorting:[{type:c.Input}],sortingMode:[{type:c.Input}],rowStyle:[{type:c.Input}],rowStyleClass:[{type:c.Input}],loading:[{type:c.Input}],rowFilter:[{type:c.Input}],imageResolver:[{type:c.Input}],currentFolderId:[{type:c.Input}],folderNode:[{type:c.Input}],node:[{type:c.Input}],maxItems:[{type:c.Input}],skipCount:[{type:c.Input}],enableInfiniteScrolling:[{type:c.Input}],nodeClick:[{type:c.Output}],nodeDblClick:[{type:c.Output}],folderChange:[{type:c.Output}],preview:[{type:c.Output}],ready:[{type:c.Output}],error:[{type:c.Output}],dataTable:[{type:c.ViewChild,args:["dataTable"]}],onShowContextMenu:[{type:c.HostListener,args:["contextmenu",["$event"]]}]},l}(),ne=function(){function e(e,t){this.documentList=e,this.logService=t,this.logService.log("ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.")}return e.prototype.registerColumn=function(e){return!(!this.documentList||!e)&&(this.documentList.data.getColumns().push(e),!0)},e.decorators=[{type:c.Component,args:[{selector:"content-columns",template:""}]}],e.ctorParameters=function(){return[{type:te},{type:d.LogService}]},e}(),ie=function(){function e(e,t){this.list=e,this.logService=t,this.type="text",this.sortable=!1,this.title="",this.logService.log("ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.")}return e.prototype.ngOnInit=function(){this.srTitle||"$thumbnail"!==this.key||(this.srTitle="Thumbnail")},e.prototype.ngAfterContentInit=function(){this.register()},e.prototype.register=function(){return!!this.list&&this.list.registerColumn(this)},e.decorators=[{type:c.Component,args:[{selector:"content-column",template:""}]}],e.ctorParameters=function(){return[{type:ne},{type:d.LogService}]},e.propDecorators={key:[{type:c.Input}],type:[{type:c.Input}],format:[{type:c.Input}],sortable:[{type:c.Input}],title:[{type:c.Input}],template:[{type:c.ContentChild,args:[c.TemplateRef]}],srTitle:[{type:c.Input,args:["sr-title"]}],cssClass:[{type:c.Input,args:["class"]}]},e}(),oe=function re(e){e&&(this.type=e.type||null,this.action=e.action||null,this.permission=e.permission||null)},se=function(){function e(e,t,n,i,o,r){this.contentDialogService=e,this.dialogRef=t,this.content=n,this.documentListService=i,this.apiService=o,this.dialog=r,this.error=new c.EventEmitter}return e.prototype.downloadNode=function(e){new g(this.apiService,this.dialog).downloadNode(e)},e.prototype.copyContent=function(e,t){return this.doFileOperation("copy","content",e,t)},e.prototype.copyFolder=function(e,t){return this.doFileOperation("copy","folder",e,t)},e.prototype.moveContent=function(e,t){return this.doFileOperation("move","content",e,t)},e.prototype.moveFolder=function(e,t){return this.doFileOperation("move","folder",e,t)},e.prototype.doFileOperation=function(n,i,o,e){var r=this,s=new u.Subject;return this.contentDialogService.openCopyMoveDialog(n,o,e).subscribe(function(e){var t=e[0];r.documentListService[n+"Node"].call(r.documentListService,o.id,t.id).subscribe(s.next.bind(s,"OPERATION.SUCCESS."+i.toUpperCase()+"."+n.toUpperCase()),s.error.bind(s))},function(e){return s.error(e),s}),s},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:w},{type:n.MatDialog},{type:d.ContentService},{type:T},{type:d.AlfrescoApiService},{type:n.MatDialog}]},e.propDecorators={error:[{type:c.Output}]},e}(),ae=function(){function e(e,t,n,i,o){this.nodeActionsService=e,this.contentNodeDialogService=t,this.translation=n,this.documentListService=i,this.contentService=o,this.permissionEvent=new u.Subject,this.error=new u.Subject,this.success=new u.Subject,this.handlers={},this.setupActionHandlers()}return e.prototype.getHandler=function(e){if(e){var t=e.toLowerCase();return this.handlers[t]||null}return null},e.prototype.setHandler=function(e,t){if(e){var n=e.toLowerCase();return this.handlers[n]=t,!0}return!1},e.prototype.canExecuteAction=function(e){return this.documentListService&&e&&!0===e.entry.isFile},e.prototype.setupActionHandlers=function(){this.handlers.copy=this.copyNode.bind(this),this.handlers.move=this.moveNode.bind(this),this.handlers["delete"]=this.deleteNode.bind(this),this.handlers.download=this.downloadNode.bind(this),this.handlers.lock=this.lockNode.bind(this)},e.prototype.lockNode=function(e,t,n){return this.contentNodeDialogService.openLockNodeDialog(e.entry)},e.prototype.downloadNode=function(e,t,n){this.nodeActionsService.downloadNode(e)},e.prototype.copyNode=function(e,t,n){var i=this.nodeActionsService.copyContent(e.entry,n);return this.prepareHandlers(i,"content","copy",t,n),i},e.prototype.moveNode=function(e,t,n){var i=this.nodeActionsService.moveContent(e.entry,n);return this.prepareHandlers(i,"content","move",t,n),i},e.prototype.prepareHandlers=function(e,t,n,i,o){var r=this;e.subscribe(function(e){r.success.next(e)},this.error.next.bind(this.error))},e.prototype.deleteNode=function(t,e,n){var i,o=this;if(this.canExecuteAction(t))return this.contentService.hasPermission(t.entry,n)?((i=this.documentListService.deleteNode(t.entry.id)).subscribe(function(){var e=o.translation.instant("CORE.DELETE_NODE.SINGULAR",{name:t.entry.name});o.success.next(e)},function(){var e=o.translation.instant("CORE.DELETE_NODE.ERROR_SINGULAR",{name:t.entry.name});o.error.next(e)}),i):(this.permissionEvent.next(new oe({type:"content",action:"delete",permission:n})),u.throwError(new Error("No permission to delete")))},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:se},{type:w},{type:d.TranslationService},{type:T},{type:d.ContentService}]},e}(),le=function(){function e(e,t,n,i){this.nodeActionsService=e,this.documentListService=t,this.contentService=n,this.translation=i,this.permissionEvent=new u.Subject,this.error=new u.Subject,this.success=new u.Subject,this.handlers={},this.setupActionHandlers()}return e.prototype.getHandler=function(e){if(e){var t=e.toLowerCase();return this.handlers[t]||null}return null},e.prototype.setHandler=function(e,t){if(e){var n=e.toLowerCase();return this.handlers[n]=t,!0}return!1},e.prototype.canExecuteAction=function(e){return this.documentListService&&e&&!0===e.entry.isFolder},e.prototype.setupActionHandlers=function(){this.handlers.copy=this.copyNode.bind(this),this.handlers.move=this.moveNode.bind(this),this.handlers["delete"]=this.deleteNode.bind(this),this.handlers.download=this.downloadNode.bind(this)},e.prototype.downloadNode=function(e,t,n){this.nodeActionsService.downloadNode(e)},e.prototype.copyNode=function(e,t,n){var i=this.nodeActionsService.copyFolder(e.entry,n);return this.prepareHandlers(i,"folder","copy",t,n),i},e.prototype.moveNode=function(e,t,n){var i=this.nodeActionsService.moveFolder(e.entry,n);return this.prepareHandlers(i,"folder","move",t,n),i},e.prototype.prepareHandlers=function(e,t,n,i,o){var r=this;e.subscribe(function(e){i&&"function"==typeof i.reload&&i.reload(),r.success.next(e)},this.error.next.bind(this.error))},e.prototype.deleteNode=function(t,n,e){var i,o=this;if(this.canExecuteAction(t))return this.contentService.hasPermission(t.entry,e)?((i=this.documentListService.deleteNode(t.entry.id)).subscribe(function(){n&&"function"==typeof n.reload&&n.reload();var e=o.translation.instant("CORE.DELETE_NODE.SINGULAR",{name:t.entry.name});o.success.next(e)},function(){var e=o.translation.instant("CORE.DELETE_NODE.ERROR_SINGULAR",{name:t.entry.name});o.error.next(e)}),i):(this.permissionEvent.next(new oe({type:"folder",action:"delete",permission:e})),u.throwError(new Error("No permission to delete")))},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:se},{type:T},{type:d.ContentService},{type:d.TranslationService}]},e}(),ce=function(){function e(e){this.documentList=e}return e.prototype.registerAction=function(e){return!(!this.documentList||!e)&&(this.documentList.actions.push(e),!0)},e.prototype.unregisterAction=function(e){if(this.documentList&&e){var t=this.documentList.actions.indexOf(e);if(0<=t)return this.documentList.actions.splice(t,1),!0}return!1},e.decorators=[{type:c.Component,args:[{selector:"content-actions",template:""}]}],e.ctorParameters=function(){return[{type:te}]},e}(),de=function(){function e(e,t,n){this.list=e,this.documentActions=t,this.folderActions=n,this.title="Action",this.visible=!0,this.target=Y.All,this.disabled=!1,this.execute=new c.EventEmitter,this.permissionEvent=new c.EventEmitter,this.error=new c.EventEmitter,this.success=new c.EventEmitter,this.subscriptions=[]}return e.prototype.ngOnInit=function(){this.target===Y.All?(this.folderActionModel=this.generateAction(Y.Folder),this.documentActionModel=this.generateAction(Y.Document)):this.documentActionModel=this.generateAction(this.target)},e.prototype.ngOnChanges=function(e){e.visible&&!e.visible.firstChange&&(this.documentActionModel&&(this.documentActionModel.visible=e.visible.currentValue),this.folderActionModel&&(this.folderActionModel.visible=e.visible.currentValue)),e.disabled&&!e.disabled.firstChange&&(this.documentActionModel&&(this.documentActionModel.disabled=e.disabled.currentValue),this.folderActionModel&&(this.folderActionModel.disabled=e.disabled.currentValue))},e.prototype.ngOnDestroy=function(){this.subscriptions.forEach(function(e){return e.unsubscribe()}),this.subscriptions=[],this.documentActionModel&&(this.unregister(this.documentActionModel),this.documentActionModel=null),this.folderActionModel&&(this.unregister(this.folderActionModel),this.folderActionModel=null)},e.prototype.register=function(e){return!!this.list&&this.list.registerAction(e)},e.prototype.unregister=function(e){return!!this.list&&this.list.unregisterAction(e)},e.prototype.generateAction=function(e){var t=this,n=new z({title:this.title,icon:this.icon,permission:this.permission,disableWithNoPermission:this.disableWithNoPermission,target:e,disabled:this.disabled,visible:this.visible});return this.handler&&(n.handler=this.getSystemHandler(e,this.handler)),this.execute&&(n.execute=function(e){t.execute.emit({value:e})}),this.register(n),n},e.prototype.getSystemHandler=function(e,t){var n=this;if(e){if((e=e.toLowerCase())===Y.Document)return this.documentActions?(this.subscriptions.push(this.documentActions.permissionEvent.subscribe(function(e){n.permissionEvent.emit(e)}),this.documentActions.error.subscribe(function(e){n.error.emit(e)}),this.documentActions.success.subscribe(function(e){n.success.emit(e)})),this.documentActions.getHandler(t)):null;if(e===Y.Folder)return this.folderActions?(this.subscriptions.push(this.folderActions.permissionEvent.subscribe(function(e){n.permissionEvent.emit(e)}),this.folderActions.error.subscribe(function(e){n.error.emit(e)}),this.folderActions.success.subscribe(function(e){n.success.emit(e)})),this.folderActions.getHandler(t)):null}return null},e.decorators=[{type:c.Component,args:[{selector:"content-action",template:"",providers:[ae,le]}]}],e.ctorParameters=function(){return[{type:ce},{type:ae},{type:le}]},e.propDecorators={title:[{type:c.Input}],icon:[{type:c.Input}],visible:[{type:c.Input}],handler:[{type:c.Input}],target:[{type:c.Input}],permission:[{type:c.Input}],disableWithNoPermission:[{type:c.Input}],disabled:[{type:c.Input}],execute:[{type:c.Output}],permissionEvent:[{type:c.Output}],error:[{type:c.Output}],success:[{type:c.Output}]},e}(),ue=function(){function e(e){this.documentList=e}return e.prototype.ngAfterContentInit=function(){this.documentList.emptyFolderTemplate=this.template,this.documentList.dataTable.noContentTemplate=this.template},e.decorators=[{type:c.Directive,args:[{selector:"empty-folder-content"}]}],e.ctorParameters=function(){return[{type:te}]},e.propDecorators={template:[{type:c.ContentChild,args:[c.TemplateRef]}]},e}(),pe=function(){function e(e){this.documentList=e}return e.prototype.ngAfterContentInit=function(){this.documentList.noPermissionTemplate=this.template,this.documentList.dataTable.noPermissionTemplate=this.template},e.decorators=[{type:c.Directive,args:[{selector:"no-permission-content"}]}],e.ctorParameters=function(){return[{type:te}]},e.propDecorators={template:[{type:c.ContentChild,args:[c.TemplateRef]}]},e}(),he=function fe(){},me=function ge(){},ye=function ve(){},be=function Se(){},Ee=function Ie(){this.properties={}},Ae=function Ce(){},Oe=function Te(){},Fe=function De(){},we=function Ne(){},Le=function Re(e,t,n,i){void 0===n&&(n=!0),void 0===i&&(i=!0),this.isFolder=!0,this.isFile=!0,this.css=e,this.permission=t,this.isFile=n,this.isFolder=i},ke=function(){function e(e,t){this.uploadService=e,this.changeDetecor=t,this.position="right",this.error=new c.EventEmitter,this.filesUploadingList=[],this.isDialogActive=!1,this.totalCompleted=0,this.totalErrors=0,this.isDialogMinimized=!1,this.isConfirmation=!1}return e.prototype.ngOnInit=function(){var n=this;this.listSubscription=this.uploadService.queueChanged.subscribe(function(e){n.filesUploadingList=e,n.filesUploadingList.length&&(n.isDialogActive=!0)}),this.counterSubscription=u.merge(this.uploadService.fileUploadComplete,this.uploadService.fileUploadDeleted).subscribe(function(e){n.totalCompleted=e.totalComplete,n.changeDetecor.detectChanges()}),this.errorSubscription=this.uploadService.fileUploadError.subscribe(function(e){n.totalErrors=e.totalError,n.changeDetecor.detectChanges()}),this.fileUploadSubscription=this.uploadService.fileUpload.subscribe(function(){n.changeDetecor.detectChanges()}),this.uploadService.fileDeleted.subscribe(function(t){if(n.filesUploadingList){var e=n.filesUploadingList.find(function(e){return e.data.entry.id===t});e&&(e.status=d.FileUploadStatus.Cancelled,n.changeDetecor.detectChanges())}})},e.prototype.toggleConfirmation=function(){this.isConfirmation=!this.isConfirmation,this.isDialogMinimized&&(this.isDialogMinimized=!1)},e.prototype.cancelAllUploads=function(){this.toggleConfirmation(),this.uploadList.cancelAllFiles()},e.prototype.toggleMinimized=function(){this.isDialogMinimized=!this.isDialogMinimized,this.changeDetecor.detectChanges()},e.prototype.close=function(){this.isConfirmation=!1,this.totalCompleted=0,this.totalErrors=0,this.filesUploadingList=[],this.isDialogActive=!1,this.isDialogMinimized=!1,this.uploadService.clearQueue(),this.changeDetecor.detectChanges()},e.prototype.ngOnDestroy=function(){this.uploadService.clearQueue(),this.listSubscription.unsubscribe(),this.counterSubscription.unsubscribe(),this.fileUploadSubscription.unsubscribe(),this.errorSubscription.unsubscribe()},e.decorators=[{type:c.Component,args:[{selector:"adf-file-uploading-dialog, file-uploading-dialog",template:'<div *ngIf="isDialogActive"\n     class="upload-dialog"\n     id="upload-dialog"\n     [class.upload-dialog--minimized]="isDialogMinimized"\n     [class.upload-dialog--position-left]="position === \'left\'"\n     [class.upload-dialog--position-right]="position === \'right\'">\n    <header class="upload-dialog__header">\n        <button\n            mat-button\n            color="secondary"\n            [disabled]="isConfirmation"\n            (click)="toggleMinimized()">\n            <mat-icon\n                mat-list-icon\n                title="{{ (isDialogMinimized ? \'ADF_FILE_UPLOAD.BUTTON.MAXIMIZE\': \'ADF_FILE_UPLOAD.BUTTON.MINIMIZE\') | translate }}">\n                    {{ isDialogMinimized ? \'keyboard_arrow_up\' : \'keyboard_arrow_down\' }}\n            </mat-icon>\n        </button>\n\n        <span\n            class="upload-dialog__title"\n            *ngIf="!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()">\n            {{ \'FILE_UPLOAD.MESSAGES.UPLOAD_PROGRESS\'\n                | translate: {\n                    completed: totalCompleted,\n                    total: filesUploadingList.length\n                }\n            }}\n        </span>\n\n        <span\n            class="upload-dialog__title"\n            *ngIf="uploadList.isUploadCompleted()">\n            {{ \'FILE_UPLOAD.MESSAGES.UPLOAD_COMPLETED\'\n                | translate: {\n                    completed: totalCompleted,\n                    total: filesUploadingList.length\n                }\n            }}\n        </span>\n\n        <span\n            class="upload-dialog__title"\n            *ngIf="uploadList.isUploadCancelled()">\n            {{ \'FILE_UPLOAD.MESSAGES.UPLOAD_CANCELED\' | translate }}\n        </span>\n    </header>\n\n    <section class="upload-dialog__info"\n        *ngIf="totalErrors">\n        {{\n            (totalErrors > 1\n                 ? \'FILE_UPLOAD.MESSAGES.UPLOAD_ERRORS\'\n                 : \'FILE_UPLOAD.MESSAGES.UPLOAD_ERROR\')\n                 | translate: { total: totalErrors }\n        }}\n    </section>\n\n    <section class="upload-dialog__content"\n        [class.upload-dialog--padding]="isConfirmation">\n        <adf-file-uploading-list\n            [class.upload-dialog--hide]="isConfirmation"\n            #uploadList\n            [files]="filesUploadingList">\n                <ng-template let-file="$implicit">\n                     <adf-file-uploading-list-row\n                        [file]="file"\n                        (remove)="uploadList.removeFile(file)"\n                        (cancel)="uploadList.cancelFile(file)">\n                    </adf-file-uploading-list-row>\n                </ng-template>\n        </adf-file-uploading-list>\n\n        <div\n            class="upload-dialog__confirmation"\n            [class.upload-dialog--hide]="!isConfirmation">\n                <p class="upload-dialog__confirmation--title">\n                    {{ \'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TITLE\' | translate }}\n                </p>\n\n                <p class="upload-dialog__confirmation--text">\n                    {{ \'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TEXT\' | translate }}\n                </p>\n        </div>\n    </section>\n\n    <footer class="upload-dialog__actions"\n            *ngIf="!isConfirmation">\n        <button\n            id="adf-upload-dialog-cancel-all"\n            color="primary"\n            mat-button\n            *ngIf="!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()"\n            (click)="toggleConfirmation()">\n            {{ \'ADF_FILE_UPLOAD.BUTTON.CANCEL_ALL\' | translate }}\n        </button>\n\n        <button\n            id="adf-upload-dialog-close"\n            *ngIf="uploadList.isUploadCompleted() || uploadList.isUploadCancelled()"\n            mat-button\n            color="primary"\n            (click)="close()">\n            {{ \'ADF_FILE_UPLOAD.BUTTON.CLOSE\' | translate }}\n        </button>\n    </footer>\n\n    <footer class="upload-dialog__actions"\n            *ngIf="isConfirmation">\n        <button\n            id="adf-upload-dialog-cancel"\n            color="secondary"\n            mat-button\n            (click)="cancelAllUploads()">\n            {{ \'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CANCEL\' | translate }}\n        </button>\n\n        <button\n            id="adf-upload-dialog-confirm"\n            mat-button\n            color="primary"\n            (click)="toggleConfirmation()">\n            {{ \'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CONTINUE\' | translate }}\n        </button>\n    </footer>\n</div>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:d.UploadService},{type:c.ChangeDetectorRef}]},e.propDecorators={uploadList:[{type:c.ViewChild,args:["uploadList"]}],position:[{type:c.Input}],error:[{type:c.Output}]},e}(),Pe=function(){function e(){this.cancel=new c.EventEmitter,this.remove=new c.EventEmitter,this.FileUploadStatus=d.FileUploadStatus}return e.prototype.onCancel=function(e){this.cancel.emit(e)},e.prototype.onRemove=function(e){this.remove.emit(e)},e.decorators=[{type:c.Component,args:[{selector:"adf-file-uploading-list-row",template:'<div class="adf-file-uploading-row">\n    <mat-icon\n        mat-list-icon\n        class="adf-file-uploading-row__type">\n        insert_drive_file\n    </mat-icon>\n\n    <span\n        class="adf-file-uploading-row__name"\n        title="{{ file.name }}">\n        {{ file.name }}\n    </span>\n\n    <div\n        *ngIf="file.status === FileUploadStatus.Progress || file.status === FileUploadStatus.Starting"\n        (click)="onCancel(file)"\n        class="adf-file-uploading-row__group adf-file-uploading-row__group--toggle"\n        title="{{ \'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE\' | translate }}">\n        <span class="adf-file-uploading-row__status">\n            {{ file.progress.loaded | adfFileSize }} / {{ file.progress.total | adfFileSize }}\n        </span>\n\n        <mat-icon\n            mat-list-icon\n            class="adf-file-uploading-row__action adf-file-uploading-row__action--cancel">\n            clear\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf="file.status === FileUploadStatus.Complete"\n        (click)="onRemove(file)"\n        class="adf-file-uploading-row__group adf-file-uploading-row__group--toggle"\n        title="{{ \'ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE\' | translate }}">\n        <mat-icon\n            mat-list-icon\n            class="adf-file-uploading-row__status adf-file-uploading-row__status--done">\n            check_circle\n        </mat-icon>\n\n        <mat-icon\n            mat-list-icon\n            class="adf-file-uploading-row__action adf-file-uploading-row__action--remove">\n            remove_circle\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf="file.status === FileUploadStatus.Pending"\n        (click)="onCancel(file)"\n        class="adf-file-uploading-row__group adf-file-uploading-row__group--toggle">\n        <mat-icon\n            mat-list-icon\n            class="adf-file-uploading-row__status adf-file-uploading-row__status--pending">\n            schedule\n        </mat-icon>\n\n        <mat-icon\n            mat-list-icon\n            class="adf-file-uploading-row__action adf-file-uploading-row__action--remove">\n            remove_circle\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf="file.status === FileUploadStatus.Error"\n        class="adf-file-uploading-row__block adf-file-uploading-row__status--error">\n        <mat-icon mat-list-icon>\n            report_problem\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf="file.status === FileUploadStatus.Cancelled  ||\n            file.status === FileUploadStatus.Aborted ||\n            file.status === FileUploadStatus.Deleted"\n        class="adf-file-uploading-row__block adf-file-uploading-row__status--cancelled">\n        {{ \'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS\' | translate }}\n    </div>\n<div>\n',styles:[""]}]}],e.propDecorators={file:[{type:c.Input}],cancel:[{type:c.Output}],remove:[{type:c.Output}]},e}(),Me=function(){function e(e,t,n){this.uploadService=e,this.nodesApi=t,this.translateService=n,this.FileUploadStatus=d.FileUploadStatus,this.files=[],this.error=new c.EventEmitter}return e.prototype.cancelFile=function(e){this.uploadService.cancelUpload(e)},e.prototype.removeFile=function(e){var t=this;this.deleteNode(e).subscribe(function(){e.status===d.FileUploadStatus.Error&&t.notifyError(e),t.uploadService.cancelUpload(e)})},e.prototype.cancelAllFiles=function(){var i=this;this.getUploadingFiles().forEach(function(e){return i.uploadService.cancelUpload(e)});var e=this.files.filter(function(e){return e.status===d.FileUploadStatus.Complete}).map(function(e){return i.deleteNode(e)});u.forkJoin.apply(void 0,O(e)).subscribe(function(e){var t,n=e.filter(function(e){return e.status===d.FileUploadStatus.Error});n.length&&i.notifyError.apply(i,O(n)),(t=i.uploadService).cancelUpload.apply(t,O(e))})},e.prototype.isUploadCompleted=function(){return!this.isUploadCancelled()&&Boolean(this.files.length)&&!this.files.some(function(e){var t=e.status;return t===d.FileUploadStatus.Starting||t===d.FileUploadStatus.Progress||t===d.FileUploadStatus.Pending})},e.prototype.isUploadCancelled=function(){return!!this.files.length&&this.files.every(function(e){var t=e.status;return t===d.FileUploadStatus.Aborted||t===d.FileUploadStatus.Cancelled||t===d.FileUploadStatus.Deleted})},e.prototype.deleteNode=function(e){var t=e.data.entry.id;return this.nodesApi.deleteNode(t,{permanent:!0}).pipe(s.map(function(){return e.status=d.FileUploadStatus.Deleted,e}),s.catchError(function(){return e.status=d.FileUploadStatus.Error,u.of(e)}))},e.prototype.notifyError=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=null;n=1===e.length?this.translateService.instant("FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR",{fileName:e[0].name}):this.translateService.instant("FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR",{total:e.length}),this.error.emit(n)},e.prototype.getUploadingFiles=function(){return this.files.filter(function(e){if(e.status===d.FileUploadStatus.Pending||e.status===d.FileUploadStatus.Progress||e.status===d.FileUploadStatus.Starting)return e})},e.decorators=[{type:c.Component,args:[{selector:"adf-file-uploading-list",template:'<div class="upload-list">\n    <ng-template\n        ngFor\n        [ngForOf]="files"\n        [ngForTemplate]="template">\n    </ng-template>\n</div>\n',styles:[":host{display:flex;flex-direction:column}"]}]}],e.ctorParameters=function(){return[{type:d.UploadService},{type:d.NodesApiService},{type:d.TranslationService}]},e.propDecorators={template:[{type:c.ContentChild,args:[c.TemplateRef]}],files:[{type:c.Input}],error:[{type:c.Output}]},e}(),xe=function(){function e(e,t,n){this.files=e,this.uploadService=t,this.callback=n,this.isDefaultPrevented=!1}return Object.defineProperty(e.prototype,"defaultPrevented",{get:function(){return this.isDefaultPrevented},enumerable:!0,configurable:!0}),e.prototype.preventDefault=function(){this.isDefaultPrevented=!0},e.prototype.pauseUpload=function(){this.preventDefault()},e.prototype.resumeUpload=function(){var e;this.files&&0<this.files.length&&((e=this.uploadService).addToQueue.apply(e,O(this.files)),this.uploadService.uploadFilesInTheQueue(this.callback))},e}(),_e=function(){function e(e,t,n){this.uploadService=e,this.translationService=t,this.ngZone=n,this.rootFolderId="-root-",this.disabled=!1,this.acceptedFilesType="*",this.versioning=!1,this.majorVersion=!1,this.nodeType="cm:content",this.success=new c.EventEmitter,this.createFolder=new c.EventEmitter,this.error=new c.EventEmitter,this.beginUpload=new c.EventEmitter,this.subscriptions=[]}return e.prototype.ngOnInit=function(){var t=this;this.subscriptions.push(this.uploadService.fileUploadError.subscribe(function(e){t.error.emit(e)}))},e.prototype.ngOnDestroy=function(){this.subscriptions.forEach(function(e){return e.unsubscribe()}),this.subscriptions=[]},e.prototype.uploadFiles=function(e){var t=this,n=e.map(function(e){return t.createFileModel(e,t.rootFolderId,(e.webkitRelativePath||"").replace(/\/[^\/]*$/,""))});this.uploadQueue(n)},e.prototype.uploadFilesInfo=function(e){var t=this,n=e.map(function(e){return t.createFileModel(e.file,t.rootFolderId,e.relativeFolder)});this.uploadQueue(n)},e.prototype.uploadQueue=function(e){var n=this,i=e.filter(this.isFileAcceptable.bind(this)).filter(this.isFileSizeAcceptable.bind(this));this.ngZone.run(function(){var e,t=new xe(O(i),n.uploadService,n.success);n.beginUpload.emit(t),t.defaultPrevented||0<i.length&&((e=n.uploadService).addToQueue.apply(e,O(i)),n.uploadService.uploadFilesInTheQueue(n.success))})},e.prototype.isFileAcceptable=function(e){return"*"===this.acceptedFilesType||-1!==this.acceptedFilesType.split(",").map(function(e){return e.replace(/^\./,"")}).indexOf(e.extension)},e.prototype.createFileModel=function(e,t,n,i){return new d.FileModel(e,{comment:this.comment,majorVersion:this.majorVersion,newVersion:this.versioning,parentId:t,path:n,nodeType:this.nodeType},i)},e.prototype.isFileSizeAllowed=function(e){var t=!0;return this.isMaxFileSizeDefined()&&(t=this.isFileSizeCorrect(e)),t},e.prototype.isMaxFileSizeDefined=function(){return this.maxFilesSize!==undefined&&null!==this.maxFilesSize},e.prototype.isFileSizeCorrect=function(e){return 0<=this.maxFilesSize&&e.size<=this.maxFilesSize},e.prototype.isFileSizeAcceptable=function(e){var t=!0;if(!this.isFileSizeAllowed(e)){t=!1;var n=this.translationService.instant("FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE",{fileName:e.name});this.error.emit(n)}return t},e.propDecorators={maxFilesSize:[{type:c.Input}],rootFolderId:[{type:c.Input}],disabled:[{type:c.Input}],acceptedFilesType:[{type:c.Input}],versioning:[{type:c.Input}],majorVersion:[{type:c.Input}],comment:[{type:c.Input}],nodeType:[{type:c.Input}],success:[{type:c.Output}],createFolder:[{type:c.Output}],error:[{type:c.Output}],beginUpload:[{type:c.Output}]},e}(),Ue=function(s){function e(e,t,n,i,o){var r=s.call(this,e,n,o)||this;return r.uploadService=e,r.contentService=t,r.translationService=n,r.logService=i,r.ngZone=o,r.uploadFolders=!1,r.multipleFiles=!1,r.tooltip=null,r.permissionEvent=new c.EventEmitter,r.hasPermission=!1,r.permissionValue=new u.Subject,r}return S(e,s),e.prototype.ngOnInit=function(){var t=this;this.permissionValue.subscribe(function(e){t.hasPermission=e})},e.prototype.ngOnChanges=function(e){var t=e.rootFolderId;t&&t.currentValue&&this.checkPermission()},e.prototype.isButtonDisabled=function(){return!!this.disabled||undefined},e.prototype.onFilesAdded=function(e){var t=d.FileUtils.toFileArray(e.currentTarget.files);this.hasPermission?this.uploadFiles(t):this.permissionEvent.emit(new oe({type:"content",action:"upload",permission:"create"})),e.target.value=""},e.prototype.onDirectoryAdded=function(e){if(this.hasPermission){var t=d.FileUtils.toFileArray(e.currentTarget.files);this.uploadFiles(t)}else this.permissionEvent.emit(new oe({type:"content",action:"upload",permission:"create"}));e.target.value=""},e.prototype.checkPermission=function(){var t=this;if(this.rootFolderId){this.contentService.getNode(this.rootFolderId,{includeSource:!0,include:["allowableOperations"]}).subscribe(function(e){return t.permissionValue.next(t.nodeHasPermission(e.entry,d.PermissionsEnum.CREATE))},function(e){return t.error.emit(e)})}},e.prototype.nodeHasPermission=function(e,t){return this.contentService.hasPermission(e,t)},e.decorators=[{type:c.Component,args:[{selector:"adf-upload-button",template:'<form class="adf-upload-button-file-container">\n    \x3c!--Files Upload--\x3e\n    <a *ngIf="!uploadFolders"\n        [disabled]="isButtonDisabled()"\n        mat-raised-button color="primary">\n        <mat-icon>file_upload</mat-icon>\n\n        \x3c!--Multiple Files Upload--\x3e\n        <span *ngIf="multipleFiles">\n            <label\n                id="upload-multiple-file-label"\n                *ngIf="!staticTitle"\n                for="upload-multiple-files">{{ \'FILE_UPLOAD.BUTTON.UPLOAD_FILE\' | translate }}</label>\n            <label\n                id="upload-multiple-file-label-static"\n                *ngIf="staticTitle"\n                for="upload-multiple-files">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id="upload-multiple-files"\n                data-automation-id="upload-multiple-files"\n                type="file"\n                name="uploadFiles"\n                multiple="multiple"\n                accept="{{acceptedFilesType}}"\n                [attr.disabled]="isButtonDisabled()"\n                [title]="tooltip"\n                (change)="onFilesAdded($event)">\n        </span>\n\n        \x3c!--Single Files Upload--\x3e\n        <span *ngIf="!multipleFiles">\n            <label\n                id="upload-single-file-label"\n                *ngIf="!staticTitle"\n                for="upload-single-file">{{ \'FILE_UPLOAD.BUTTON.UPLOAD_FILE\' | translate }}</label>\n            <label\n                id="upload-single-file-label-static"\n                *ngIf="staticTitle"\n                for="upload-single-file">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id="upload-single-file"\n                data-automation-id="upload-single-file"\n                type="file"\n                name="uploadFiles"\n                accept="{{acceptedFilesType}}"\n                [attr.disabled]="isButtonDisabled()"\n                [title]="tooltip"\n                (change)="onFilesAdded($event)">\n        </span>\n    </a>\n\n    \x3c!--Folders Upload--\x3e\n    <a *ngIf="uploadFolders"\n        [disabled]="isButtonDisabled()" mat-raised-button color="primary">\n        <mat-icon>file_upload</mat-icon>\n        <label\n            id="uploadFolder-label"\n            *ngIf="!staticTitle"\n            for="uploadFolder">{{ \'FILE_UPLOAD.BUTTON.UPLOAD_FOLDER\' | translate }}</label>\n        <label\n            id="uploadFolder-label-static"\n            *ngIf="staticTitle"\n            for="uploadFolder">{{ staticTitle }}</label>\n        <input #uploadFolders\n            id="uploadFolder"\n            data-automation-id="uploadFolder"\n            type="file"\n            name="uploadFiles"\n            multiple="multiple"\n            accept="{{acceptedFilesType}}"\n            webkitdirectory directory\n            [attr.disabled]="isButtonDisabled()"\n            [title]="tooltip"\n            (change)="onDirectoryAdded($event)">\n    </a>\n</form>\n',viewProviders:[{provide:d.EXTENDIBLE_COMPONENT,useExisting:c.forwardRef(function(){return e})}],encapsulation:c.ViewEncapsulation.None,styles:[".adf-upload-button-file-container input{cursor:pointer;height:100%;right:0;opacity:0;position:absolute;top:0;width:300px;z-index:4}"]}]}],e.ctorParameters=function(){return[{type:d.UploadService},{type:d.ContentService},{type:d.TranslationService},{type:d.LogService},{type:c.NgZone}]},e.propDecorators={uploadFolders:[{type:c.Input}],multipleFiles:[{type:c.Input}],staticTitle:[{type:c.Input}],tooltip:[{type:c.Input}],permissionEvent:[{type:c.Output}]},e}(_e),Ve=function(i){function e(){return null!==i&&i.apply(this,arguments)||this}return S(e,i),e.prototype.createFileModel=function(e){var t=i.prototype.createFileModel.call(this,e,this.rootFolderId,(e.webkitRelativePath||"").replace(/\/[^\/]*$/,""),this.node.id);if(!this.isFileAcceptable(t)){var n=this.translationService.instant("FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION");this.error.emit(n)}return t},e.prototype.ngOnInit=function(){i.prototype.ngOnInit.call(this),this.checkPermission()},e.prototype.checkPermission=function(){this.permissionValue.next(this.nodeHasPermission(this.node,d.PermissionsEnum.UPDATE))},e.decorators=[{type:c.Component,args:[{selector:"adf-upload-version-button",template:'<form class="adf-upload-button-file-container">\n    \x3c!--Files Upload--\x3e\n    <a *ngIf="!uploadFolders"\n        [disabled]="isButtonDisabled()"\n        mat-raised-button color="primary">\n        <mat-icon>file_upload</mat-icon>\n\n        \x3c!--Multiple Files Upload--\x3e\n        <span *ngIf="multipleFiles">\n            <label\n                id="upload-multiple-file-label"\n                *ngIf="!staticTitle"\n                for="upload-multiple-files">{{ \'FILE_UPLOAD.BUTTON.UPLOAD_FILE\' | translate }}</label>\n            <label\n                id="upload-multiple-file-label-static"\n                *ngIf="staticTitle"\n                for="upload-multiple-files">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id="upload-multiple-files"\n                data-automation-id="upload-multiple-files"\n                type="file"\n                name="uploadFiles"\n                multiple="multiple"\n                accept="{{acceptedFilesType}}"\n                [attr.disabled]="isButtonDisabled()"\n                [title]="tooltip"\n                (change)="onFilesAdded($event)">\n        </span>\n\n        \x3c!--Single Files Upload--\x3e\n        <span *ngIf="!multipleFiles">\n            <label\n                id="upload-single-file-label"\n                *ngIf="!staticTitle"\n                for="upload-single-file">{{ \'FILE_UPLOAD.BUTTON.UPLOAD_FILE\' | translate }}</label>\n            <label\n                id="upload-single-file-label-static"\n                *ngIf="staticTitle"\n                for="upload-single-file">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id="upload-single-file"\n                data-automation-id="upload-single-file"\n                type="file"\n                name="uploadFiles"\n                accept="{{acceptedFilesType}}"\n                [attr.disabled]="isButtonDisabled()"\n                [title]="tooltip"\n                (change)="onFilesAdded($event)">\n        </span>\n    </a>\n\n    \x3c!--Folders Upload--\x3e\n    <a *ngIf="uploadFolders"\n        [disabled]="isButtonDisabled()" mat-raised-button color="primary">\n        <mat-icon>file_upload</mat-icon>\n        <label\n            id="uploadFolder-label"\n            *ngIf="!staticTitle"\n            for="uploadFolder">{{ \'FILE_UPLOAD.BUTTON.UPLOAD_FOLDER\' | translate }}</label>\n        <label\n            id="uploadFolder-label-static"\n            *ngIf="staticTitle"\n            for="uploadFolder">{{ staticTitle }}</label>\n        <input #uploadFolders\n            id="uploadFolder"\n            data-automation-id="uploadFolder"\n            type="file"\n            name="uploadFiles"\n            multiple="multiple"\n            accept="{{acceptedFilesType}}"\n            webkitdirectory directory\n            [attr.disabled]="isButtonDisabled()"\n            [title]="tooltip"\n            (change)="onDirectoryAdded($event)">\n    </a>\n</form>\n',viewProviders:[{provide:d.EXTENDIBLE_COMPONENT,useExisting:c.forwardRef(function(){return e})}],encapsulation:c.ViewEncapsulation.None,styles:[".adf-upload-button-file-container input{cursor:pointer;height:100%;right:0;opacity:0;position:absolute;top:0;width:300px;z-index:4}"]}]}],e.propDecorators={node:[{type:c.Input}]},e}(Ue),Be=function(s){function e(e,t,n,i,o){var r=s.call(this,e,t,o)||this;return r.uploadService=e,r.translationService=t,r.notificationService=n,r.contentService=i,r.ngZone=o,r}return S(e,s),Object.defineProperty(e.prototype,"parentId",{set:function(e){this.rootFolderId=e},enumerable:!0,configurable:!0}),e.prototype.onFilesDropped=function(e){!this.disabled&&e.length&&this.uploadFiles(e)},e.prototype.onFilesEntityDropped=function(e){var t=this;this.disabled||e.file(function(e){t.uploadFiles([e])})},e.prototype.onFolderEntityDropped=function(e){var t=this;!this.disabled&&e.isDirectory&&d.FileUtils.flattern(e).then(function(e){t.uploadFilesInfo(e)})},e.prototype.showUndoNotificationBar=function(t){var e,n,i=this;e=this.translationService.get("FILE_UPLOAD.MESSAGES.PROGRESS"),n=this.translationService.get("FILE_UPLOAD.ACTION.UNDO"),this.notificationService.openSnackMessageAction(e.value,n.value,3e3).onAction().subscribe(function(){var e;(e=i.uploadService).cancelUpload.apply(e,O(t))})},e.prototype.isDroppable=function(){return!this.disabled},e.prototype.onUploadFiles=function(e){if(e.stopPropagation(),e.preventDefault(),this.contentService.hasPermission(e.detail.data.obj.entry,d.PermissionsEnum.CREATE)){var t=e.detail.files;if(this.isTargetNodeFolder(e)){var n=e.detail.data.obj.entry.name;t.map(function(e){return e.relativeFolder=n?n.concat(e.relativeFolder):e.relativeFolder})}t&&0<t.length&&this.uploadFilesInfo(t)}},e.prototype.isTargetNodeFolder=function(e){return e.detail.data.obj&&e.detail.data.obj.entry.isFolder},e.decorators=[{type:c.Component,args:[{selector:"adf-upload-drag-area",template:'<div [file-draggable]="isDroppable()" class="upload-border"\n     (filesDropped)="onFilesDropped($event)"\n     (folderEntityDropped)="onFolderEntityDropped($event)"\n     (upload-files)="onUploadFiles($event)"\n     dropzone="" webkitdropzone="*" #droparea>\n    <ng-content></ng-content>\n</div>\n',host:{"class":"adf-upload-drag-area"},viewProviders:[{provide:d.EXTENDIBLE_COMPONENT,useExisting:c.forwardRef(function(){return e})}],encapsulation:c.ViewEncapsulation.None,styles:["adf-upload-drag-area{overflow:hidden}.upload-border{vertical-align:middle;text-align:center;width:100%;box-sizing:border-box}.file-draggable__input-focus{color:#2196f3;border:1px dashed #2196f3}"]}]}],e.ctorParameters=function(){return[{type:d.UploadService},{type:d.TranslationService},{type:d.NotificationService},{type:d.ContentService},{type:c.NgZone}]},e.propDecorators={parentId:[{type:c.Input}]},e}(_e),je=function(){function e(e,t){this.ngZone=t,this.enabled=!0,this.filesDropped=new c.EventEmitter,this.filesEntityDropped=new c.EventEmitter,this.folderEntityDropped=new c.EventEmitter,this.cssClassName="file-draggable__input-focus",this.element=e.nativeElement}return e.prototype.ngOnInit=function(){var e=this;this.ngZone.runOutsideAngular(function(){e.element.addEventListener("dragenter",e.onDragEnter.bind(e)),e.element.addEventListener("dragover",e.onDragOver.bind(e)),e.element.addEventListener("dragleave",e.onDragLeave.bind(e)),e.element.addEventListener("drop",e.onDropFiles.bind(e))})},e.prototype.ngOnDestroy=function(){this.element.removeEventListener("dragenter",this.onDragEnter),this.element.removeEventListener("dragover",this.onDragOver),this.element.removeEventListener("dragleave",this.onDragLeave),this.element.removeEventListener("drop",this.onDropFiles)},e.prototype.onDropFiles=function(e){if(this.enabled&&!e.defaultPrevented){this.preventDefault(e);var t=e.dataTransfer.items;if(t){for(var n=[],i=0;i<t.length;i++)if(t[i].webkitGetAsEntry){var o=t[i].webkitGetAsEntry();if(o)if(o.isFile){var r=t[i].getAsFile();r&&n.push(r)}else o.isDirectory&&this.folderEntityDropped.emit(o)}0<n.length&&this.filesDropped.emit(n)}else{n=d.FileUtils.toFileArray(e.dataTransfer.files);this.filesDropped.emit(n)}this.element.classList.remove(this.cssClassName)}},e.prototype.onDragEnter=function(e){this.enabled&&!e.defaultPrevented&&(this.preventDefault(e),this.element.classList.add(this.cssClassName))},e.prototype.onDragLeave=function(e){this.enabled&&!e.defaultPrevented&&(this.preventDefault(e),this.element.classList.remove(this.cssClassName))},e.prototype.onDragOver=function(e){this.enabled&&!e.defaultPrevented&&(this.preventDefault(e),this.element.classList.add(this.cssClassName))},e.prototype.preventDefault=function(e){e.stopPropagation(),e.preventDefault()},e.decorators=[{type:c.Directive,args:[{selector:"[file-draggable]"}]}],e.ctorParameters=function(){return[{type:c.ElementRef},{type:c.NgZone}]},e.propDecorators={enabled:[{type:c.Input,args:["file-draggable"]}],filesDropped:[{type:c.Output}],filesEntityDropped:[{type:c.Output}],folderEntityDropped:[{type:c.Output}]},e}(),He=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[d.CoreModule.forChild(),t.CommonModule,v],declarations:[je,Be,Ue,Ve,ke,Me,Pe],exports:[je,Be,Ue,Ve,ke,Me,Pe]}]}],e}(),Qe=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[d.CoreModule.forChild(),t.CommonModule,i.FlexLayoutModule,v,He],declarations:[te,ie,ne,de,ce,ue,pe],exports:[te,ie,ne,de,ce,ue,pe]}]}],e}(),Ge=function(){function e(e,t){this.appConfig=e,this.alfrescoApiService=t,this._userQuery="",this.updated=new u.Subject,this.executed=new u.Subject,this.categories=[],this.queryFragments={},this.filterQueries=[],this.paging=null,this.sorting=[],this.userFacetQueries=[],this.userFacetBuckets={},this.ranges={},this.resetToDefaults()}return Object.defineProperty(e.prototype,"userQuery",{get:function(){return this._userQuery},set:function(e){e=(e||"").trim(),this._userQuery=e?"("+e+")":""},enumerable:!0,configurable:!0}),e.prototype.resetToDefaults=function(){var e=this.appConfig.get("search");e&&(this.config=JSON.parse(JSON.stringify(e)),this.categories=(this.config.categories||[]).filter(function(e){return e.enabled}),this.filterQueries=this.config.filterQueries||[],this.userFacetBuckets={},this.userFacetQueries=[],this.config.sorting&&(this.sorting=this.config.sorting.defaults||[]))},e.prototype.addUserFacetQuery=function(t){if(t){var e=this.userFacetQueries.find(function(e){return e.label===t.label});e?e.query=t.query:this.userFacetQueries.push(E({},t))}},e.prototype.removeUserFacetQuery=function(t){t&&(this.userFacetQueries=this.userFacetQueries.filter(function(e){return e.label!==t.label}))},e.prototype.addUserFacetBucket=function(e,t){if(e&&e.field&&t){var n=this.userFacetBuckets[e.field]||[];n.find(function(e){return e.label===t.label})||n.push(t),this.userFacetBuckets[e.field]=n}},e.prototype.getUserFacetBuckets=function(e){return this.userFacetBuckets[e]||[]},e.prototype.removeUserFacetBucket=function(e,t){if(e&&e.field&&t){var n=this.userFacetBuckets[e.field]||[];this.userFacetBuckets[e.field]=n.filter(function(e){return e.label!==t.label})}},e.prototype.addFilterQuery=function(t){t&&(this.filterQueries.find(function(e){return e.query===t})||this.filterQueries.push({query:t}))},e.prototype.removeFilterQuery=function(t){t&&(this.filterQueries=this.filterQueries.filter(function(e){return e.query!==t}))},e.prototype.getFacetQuery=function(t){if(t&&this.hasFacetQueries){var e=this.config.facetQueries.queries.find(function(e){return e.label===t});if(e)return E({},e)}return null},e.prototype.getFacetField=function(t){if(t){var e=(this.config.facetFields.fields||[]).find(function(e){return e.label===t});if(e)return E({},e)}return null},e.prototype.update=function(){var e=this.buildQuery();this.updated.next(e)},e.prototype.execute=function(){return function e(t,s,a,l){return new(a||(a=Promise))(function(e,n){function i(e){try{r(l.next(e))}catch(t){n(t)}}function o(e){try{r(l["throw"](e))}catch(t){n(t)}}function r(t){t.done?e(t.value):new a(function(e){e(t.value)}).then(i,o)}r((l=l.apply(t,s||[])).next())})}(this,void 0,void 0,function(){var t,n;return I(this,function(e){switch(e.label){case 0:return(t=this.buildQuery())?[4,this.alfrescoApiService.searchApi.search(t)]:[3,2];case 1:n=e.sent(),this.executed.next(n),e.label=2;case 2:return[2]}})})},e.prototype.buildQuery=function(){var e=this.getFinalQuery(),t=this.config.include||[];return 0===t.length&&t.push("path","allowableOperations"),e?{query:{query:e,language:"afts"},include:t,paging:this.paging,fields:this.config.fields,filterQueries:this.filterQueries,facetQueries:this.facetQueries,facetFields:this.facetFields,sort:this.sort}:null},e.prototype.getPrimarySorting=function(){return this.sorting&&0<this.sorting.length?this.sorting[0]:null},e.prototype.getSortingOptions=function(){return this.config&&this.config.sorting&&this.config.sorting.options||[]},Object.defineProperty(e.prototype,"hasFacetQueries",{get:function(){return!!(this.config&&this.config.facetQueries&&this.config.facetQueries.queries&&0<this.config.facetQueries.queries.length)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sort",{get:function(){return this.sorting.map(function(e){return{type:e.type,field:e.field,ascending:e.ascending}})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"facetQueries",{get:function(){return this.hasFacetQueries?this.config.facetQueries.queries.map(function(e){return E({},e)}):null},enumerable:!0,configurable:!0}),e.prototype.getFinalQuery=function(){var n=this,i="";this.categories.forEach(function(e){var t=n.queryFragments[e.id];t&&(0<i.length&&(i+=" AND "),i+="("+t+")")});var o=[this.userQuery,i].filter(function(e){return e}).join(" AND ");if(this.userFacetQueries&&0<this.userFacetQueries.length){var e=this.userFacetQueries.map(function(e){return e.query}).join(" OR ");o+=" AND ("+e+")"}return this.userFacetBuckets&&Object.keys(this.userFacetBuckets).forEach(function(e){var t=(n.userFacetBuckets[e]||[]).map(function(e){return e.filterQuery}).join(" OR ");t&&(0<o.length&&(o+=" AND "),o+="("+t+")")}),o},Object.defineProperty(e.prototype,"facetFields",{get:function(){var e=this.config.facetFields&&this.config.facetFields.fields;return e&&0<e.length?{facets:e.map(function(e){return{field:e.field,mincount:e.mincount,label:e.label,limit:e.limit,offset:e.offset,prefix:e.prefix}})}:null},enumerable:!0,configurable:!0}),e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.AppConfigService},{type:d.AlfrescoApiService}]},e}(),qe=function(){function e(e,t){var n=this;this.searchService=e,this._elementRef=t,this.displayWith=null,this.maxResults=20,this.skipResults=0,this.searchTerm="",this.resultLoaded=new c.EventEmitter,this.error=new c.EventEmitter,this.showPanel=!1,this._isOpen=!1,this.keyPressedStream=new u.Subject,this._classList={},this.keyPressedStream.asObservable().pipe(s.debounceTime(200)).subscribe(function(e){n.loadSearchResults(e)}),e.dataLoaded.subscribe(function(e){return n.onSearchDataLoaded(e)},function(e){return n.onSearchDataError(e)})}return Object.defineProperty(e.prototype,"classList",{set:function(e){var t=this;e&&e.length&&(e.split(" ").forEach(function(e){return t._classList[e.trim()]=!0}),this._elementRef.nativeElement.className="")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isOpen",{get:function(){return this._isOpen&&this.showPanel},set:function(e){this._isOpen=e},enumerable:!0,configurable:!0}),e.prototype.ngAfterContentInit=function(){this.setVisibility()},e.prototype.ngOnChanges=function(e){e.queryBody&&this.hasDifferentQueryBody(e.queryBody.previousValue,e.queryBody.currentValue)&&this.loadSearchResults(),e.searchTerm&&e.searchTerm.currentValue&&this.loadSearchResults(e.searchTerm.currentValue)},e.prototype.resetResults=function(){this.cleanResults(),this.setVisibility()},e.prototype.reload=function(){this.loadSearchResults(this.searchTerm)},e.prototype.hasDifferentQueryBody=function(e,t){return JSON.stringify(e)!==JSON.stringify(t)},e.prototype.cleanResults=function(){this.results&&(this.results={})},e.prototype.loadSearchResults=function(e){var t=this;this.resetResults(),e?this.queryBody?this.searchService.searchByQueryBody(this.queryBody).subscribe(function(e){return t.onSearchDataLoaded(e)},function(e){return t.onSearchDataError(e)}):this.searchService.search(e,this.maxResults,this.skipResults).subscribe(function(e){return t.onSearchDataLoaded(e)},function(e){return t.onSearchDataError(e)}):this.cleanResults()},e.prototype.onSearchDataLoaded=function(e){e&&(this.results=e,this.resultLoaded.emit(this.results),this.isOpen=!0,this.setVisibility())},e.prototype.onSearchDataError=function(e){e&&400!==e.status&&(this.results=null,this.error.emit(e))},e.prototype.hidePanel=function(){this.isOpen&&(this._classList["adf-search-show"]=!1,this._classList["adf-search-hide"]=!0,this.isOpen=!1)},e.prototype.setVisibility=function(){this.showPanel=!!this.results&&!!this.results.list,this._classList["adf-search-show"]=this.showPanel,this._classList["adf-search-hide"]=!this.showPanel},e.decorators=[{type:c.Component,args:[{selector:"adf-search",template:'<div role="listbox" id="adf-search-results-content" [ngClass]="_classList" #panel>\n    <ng-template\n        [ngTemplateOutlet]="template"\n        [ngTemplateOutletContext]="{ $implicit: results }">\n    </ng-template>\n</div>\n\n\n',encapsulation:c.ViewEncapsulation.None,preserveWhitespaces:!1,exportAs:"searchAutocomplete",host:{"class":"adf-search"},styles:[""]}]}],e.ctorParameters=function(){return[{type:d.SearchService},{type:c.ElementRef}]},e.propDecorators={panel:[{type:c.ViewChild,args:["panel"]}],template:[{type:c.ContentChild,args:[c.TemplateRef]}],displayWith:[{type:c.Input}],maxResults:[{type:c.Input}],skipResults:[{type:c.Input}],queryBody:[{type:c.Input}],searchTerm:[{type:c.Input}],classList:[{type:c.Input,args:["class"]}],resultLoaded:[{type:c.Output}],error:[{type:c.Output}]},e}(),ze=function(){function e(){}return e.decorators=[{type:c.Component,args:[{selector:"adf-empty-search-result",template:'<div class="adf-empty-search-result">\n    <ng-content></ng-content>\n</div>\n',encapsulation:c.ViewEncapsulation.None}]}],e}(),$e=function(){function e(e,t){var n=this;this.authService=e,this.thumbnailService=t,this.expandable=!0,this.highlight=!1,this.inputType="text",this.autocomplete=!1,this.liveSearchEnabled=!0,this.liveSearchMaxResults=5,this.submit=new c.EventEmitter,this.searchChange=new c.EventEmitter,this.optionClicked=new c.EventEmitter,this.searchTerm="",this.noSearchResultTemplate=null,this.toggleSearch=new u.Subject,this.focusSubject=new u.Subject,this.toggleSearch.asObservable().pipe(s.debounceTime(200)).subscribe(function(){n.expandable&&(n.subscriptAnimationState="inactive"===n.subscriptAnimationState?"active":"inactive","inactive"===n.subscriptAnimationState&&(n.searchTerm="",n.searchAutocomplete.resetResults(),document.activeElement.id===n.searchInput.nativeElement.id&&n.searchInput.nativeElement.blur()))})}return e.prototype.applySearchFocus=function(e){"active"===e.toState&&this.searchInput.nativeElement.focus()},e.prototype.ngOnInit=function(){this.subscriptAnimationState=this.expandable?"inactive":"no-animation",this.setupFocusEventHandlers()},e.prototype.isNoSearchTemplatePresent=function(){return!!this.emptySearchTemplate},e.prototype.ngOnDestroy=function(){this.focusSubject&&(this.focusSubject.unsubscribe(),this.focusSubject=null),this.toggleSearch&&(this.toggleSearch.unsubscribe(),this.toggleSearch=null)},e.prototype.isLoggedIn=function(){return this.authService.isEcmLoggedIn()},e.prototype.searchSubmit=function(e){this.submit.emit(e),this.toggleSearchBar()},e.prototype.inputChange=function(e){this.searchChange.emit(e)},e.prototype.getAutoComplete=function(){return this.autocomplete?"on":"off"},e.prototype.getMimeTypeIcon=function(e){var t;return e.entry.content&&e.entry.content.mimeType&&(t=e.entry.content.mimeType),e.entry.isFolder&&(t="folder"),this.thumbnailService.getMimeTypeIcon(t)},e.prototype.isSearchBarActive=function(){return"active"===this.subscriptAnimationState&&this.liveSearchEnabled},e.prototype.toggleSearchBar=function(){this.toggleSearch&&this.toggleSearch.next()},e.prototype.elementClicked=function(e){e.entry&&(this.optionClicked.next(e),this.toggleSearchBar())},e.prototype.onFocus=function(e){this.focusSubject.next(e)},e.prototype.onBlur=function(e){this.focusSubject.next(e)},e.prototype.activateToolbar=function(){this.isSearchBarActive()||this.toggleSearchBar()},e.prototype.selectFirstResult=function(){this.listResultElement&&0<this.listResultElement.length&&this.listResultElement.first._getHostElement().focus()},e.prototype.onRowArrowDown=function(e){var t=this.getNextElementSibling(e.target);t&&t.focus()},e.prototype.onRowArrowUp=function(e){var t=this.getPreviousElementSibling(e.target);t?t.focus():(this.searchInput.nativeElement.focus(),this.focusSubject.next(new FocusEvent("focus")))},e.prototype.setupFocusEventHandlers=function(){var t=this;this.focusSubject.asObservable().pipe(s.debounceTime(50),s.filter(function(e){return t.isSearchBarActive()&&("blur"===e.type||"focusout"===e.type)})).subscribe(function(){t.toggleSearchBar()})},e.prototype.getNextElementSibling=function(e){return e.nextElementSibling},e.prototype.getPreviousElementSibling=function(e){return e.previousElementSibling},e.decorators=[{type:c.Component,args:[{selector:"adf-search-control",template:'<div class="adf-search-container">\n    <div *ngIf="isLoggedIn()" [@transitionMessages]="subscriptAnimationState"\n         (@transitionMessages.done)="applySearchFocus($event)">\n        <button mat-icon-button\n                *ngIf="expandable"\n                id="adf-search-button"\n                class="adf-search-button"\n                [title]="\'SEARCH.BUTTON.TOOLTIP\' | translate"\n                (click)="toggleSearchBar()"\n                (keyup.enter)="toggleSearchBar()">\n            <mat-icon [attr.aria-label]="\'SEARCH.BUTTON.ARIA-LABEL\' | translate">search</mat-icon>\n        </button>\n        <mat-form-field class="adf-input-form-field-divider">\n            <input matInput\n                   #searchInput\n                   [attr.aria-label]="\'SEARCH.INPUT.ARIA-LABEL\' | translate"\n                   [attr.type]="inputType"\n                   [autocomplete]="getAutoComplete()"\n                   id="adf-control-input"\n                   [(ngModel)]="searchTerm"\n                   (focus)="activateToolbar()"\n                   (blur)="onBlur($event)"\n                   (keyup.escape)="toggleSearchBar()"\n                   (keyup.arrowdown)="selectFirstResult()"\n                   (ngModelChange)="inputChange($event)"\n                   [searchAutocomplete]="auto"\n                   (keyup.enter)="searchSubmit($event)">\n        </mat-form-field>\n    </div>\n</div>\n\n<adf-search #search\n            #auto="searchAutocomplete"\n            class="adf-search-result-autocomplete"\n            [maxResults]="liveSearchMaxResults"\n            [queryBody]="customQueryBody">\n    <ng-template let-data>\n        <mat-list *ngIf="isSearchBarActive()" id="autocomplete-search-result-list">\n            <mat-list-item\n                *ngFor="let item of data?.list?.entries; let idx = index"\n                id="result_option_{{idx}}"\n                [attr.data-automation-id]="\'autocomplete_for_\' + item.entry.name"\n                [tabindex]="0"\n                (focus)="onFocus($event)"\n                (blur)="onBlur($event)"\n                (keyup.arrowdown)="onRowArrowDown($event)"\n                (keyup.arrowup)="onRowArrowUp($event)"\n                class="adf-search-autocomplete-item"\n                (click)="elementClicked(item)"\n                (keyup.enter)="elementClicked(item)"\n                (touchend)="elementClicked(item)">\n                \x3c!-- This is a comment --\x3e\n                <mat-icon mat-list-icon>\n                    <img [src]="getMimeTypeIcon(item)"/>\n                </mat-icon>\n                <h4 mat-line id="result_name_{{idx}}"\n                    *ngIf="highlight; else elseBlock"\n                    class="adf-search-fixed-text"\n                    [innerHtml]="item.entry.name | highlight: searchTerm">\n                    {{ item?.entry.name }}\n                </h4>\n                <ng-template #elseBlock>\n                    <h4 class="adf-search-fixed-text" mat-line id="result_name_{{idx}}"\n                        [innerHtml]="item.entry.name"></h4>\n                </ng-template>\n                <p mat-line class="adf-search-fixed-text"> {{item?.entry.createdByUser.displayName}} </p>\n            </mat-list-item>\n            <mat-list-item id="search_no_result"\n                           data-automation-id="search_no_result_found"\n                           *ngIf="data?.list?.entries.length === 0">\n                <ng-content\n                    selector="adf-empty-search-result"\n                    *ngIf="isNoSearchTemplatePresent() else defaultNoResult">\n                </ng-content>\n                <ng-template #defaultNoResult>\n                    <p mat-line class="adf-search-fixed-text">{{ \'SEARCH.RESULTS.NONE\' | translate:{searchTerm:\n                        searchTerm} }}</p>\n                </ng-template>\n            </mat-list-item>\n        </mat-list>\n    </ng-template>\n</adf-search>\n',animations:[o.trigger("transitionMessages",[o.state("active",o.style({transform:"translateX(0%)","margin-left":"13px"})),o.state("inactive",o.style({transform:"translateX(81%)"})),o.state("no-animation",o.style({transform:"translateX(0%)",width:"100%"})),o.transition("inactive => active",o.animate("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")),o.transition("active => inactive",o.animate("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"))])],encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-control"},styles:[""]}]}],e.ctorParameters=function(){return[{type:d.AuthenticationService},{type:d.ThumbnailService}]},e.propDecorators={expandable:[{type:c.Input}],highlight:[{type:c.Input}],inputType:[{type:c.Input}],autocomplete:[{type:c.Input}],liveSearchEnabled:[{type:c.Input}],liveSearchMaxResults:[{type:c.Input}],customQueryBody:[{type:c.Input}],submit:[{type:c.Output}],searchChange:[{type:c.Output}],optionClicked:[{type:c.Output}],searchAutocomplete:[{type:c.ViewChild,args:["search"]}],searchInput:[{type:c.ViewChild,args:["searchInput"]}],listResultElement:[{type:c.ViewChildren,args:[n.MatListItem]}],emptySearchTemplate:[{type:c.ContentChild,args:[ze]}]},e}(),Ye={provide:l.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return We}),multi:!0},We=function(){function e(e,t,n,i){this.element=e,this.ngZone=t,this.changeDetectorRef=n,this.document=i,this.onDestroy$=new u.Subject,this.autocomplete="off",this._panelOpen=!1,this.escapeEventStream=new u.Subject,this.onChange=function(){},this.onTouched=function(){}}return e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete(),this.escapeEventStream&&(this.escapeEventStream.unsubscribe(),this.escapeEventStream=null),this.closingActionsSubscription&&this.closingActionsSubscription.unsubscribe()},Object.defineProperty(e.prototype,"panelOpen",{get:function(){return this._panelOpen&&this.searchPanel.showPanel},enumerable:!0,configurable:!0}),e.prototype.openPanel=function(){this.searchPanel.isOpen=this._panelOpen=!0,this.closingActionsSubscription=this.subscribeToClosingActions()},e.prototype.closePanel=function(){this._panelOpen&&(this.closingActionsSubscription.unsubscribe(),this._panelOpen=!1,this.searchPanel.resetResults(),this.searchPanel.hidePanel(),this.changeDetectorRef.detectChanges())},Object.defineProperty(e.prototype,"panelClosingActions",{get:function(){return u.merge(this.escapeEventStream,this.outsideClickStream)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outsideClickStream",{get:function(){var n=this;return this.document?u.merge(u.fromEvent(this.document,"click"),u.fromEvent(this.document,"touchend")).pipe(s.filter(function(e){var t=e.target;return n._panelOpen&&t!==n.element.nativeElement})):u.of(null)},enumerable:!0,configurable:!0}),e.prototype.writeValue=function(e){var t=this;Promise.resolve(null).then(function(){return t.setTriggerValue(e)})},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.handleKeydown=function(e){var t=e.keyCode;t===r.ESCAPE&&this.panelOpen?(this.escapeEventStream.next(),e.stopPropagation()):t===r.ENTER&&(this.escapeEventStream.next(),e.preventDefault())},e.prototype.handleInput=function(e){if(document.activeElement===e.target){var t=e.target.value;this.onChange(t),t?(this.searchPanel.keyPressedStream.next(t),this.openPanel()):(this.searchPanel.resetResults(),this.closePanel())}},e.prototype.isPanelOptionClicked=function(e){var t=!1;if(e){var n=e.target;t=!this.isNoResultOption(e)&&!!this.searchPanel.panel&&!!this.searchPanel.panel.nativeElement.contains(n)}return t},e.prototype.isNoResultOption=function(e){return!this.searchPanel.results.list||0===this.searchPanel.results.list.entries.length},e.prototype.subscribeToClosingActions=function(){var t=this,e=this.ngZone.onStable.asObservable(),n=this.searchPanel.keyPressedStream.asObservable();return u.merge(e,n).pipe(s.takeUntil(this.onDestroy$),s.switchMap(function(){return t.searchPanel.setVisibility(),t.panelClosingActions})).subscribe(function(e){return t.setValueAndClose(e)})},e.prototype.setTriggerValue=function(e){var t=this.searchPanel&&this.searchPanel.displayWith?this.searchPanel.displayWith(e):e,n=null!=t?t:"";this.element.nativeElement.value=n},e.prototype.setValueAndClose=function(e){this.isPanelOptionClicked(e)&&!e.defaultPrevented&&(this.setTriggerValue(e.target.textContent.trim()),this.onChange(e.target.textContent.trim()),this.element.nativeElement.focus()),this.closePanel()},e.decorators=[{type:c.Directive,args:[{selector:"input[searchAutocomplete], textarea[searchAutocomplete]",host:{role:"combobox","[attr.autocomplete]":"autocomplete","aria-autocomplete":"list","[attr.aria-expanded]":"panelOpen.toString()","(blur)":"onTouched()","(input)":"handleInput($event)","(keydown)":"handleKeydown($event)"},providers:[Ye]}]}],e.ctorParameters=function(){return[{type:c.ElementRef},{type:c.NgZone},{type:c.ChangeDetectorRef},{type:undefined,decorators:[{type:c.Optional},{type:c.Inject,args:[t.DOCUMENT]}]}]},e.propDecorators={searchPanel:[{type:c.Input,args:["searchAutocomplete"]}],autocomplete:[{type:c.Input}]},e}(),Ze=function(){function e(e,t){void 0===e&&(e=[]),this.filteredItems=[],this._filterText="",this.items=[],this.pageSize=5,this.currentPageSize=5,this._filter=function(){return!0},this.items=e,this.filteredItems=e,this.pageSize=t||5,this.currentPageSize=t||5}return Object.defineProperty(e.prototype,"filterText",{get:function(){return this._filterText},set:function(e){this._filterText=e,this.applyFilter()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filter",{get:function(){return this._filter},set:function(e){this._filter=e,this.applyFilter()},enumerable:!0,configurable:!0}),e.prototype.applyFilter=function(){this.filter?this.filteredItems=this.items.filter(this.filter):this.filteredItems=this.items,this.currentPageSize=this.pageSize},Object.defineProperty(e.prototype,"visibleItems",{get:function(){return this.filteredItems.slice(0,this.currentPageSize)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"length",{get:function(){return this.items.length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canShowMoreItems",{get:function(){return this.filteredItems.length>this.currentPageSize},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canShowLessItems",{get:function(){return this.currentPageSize>this.pageSize},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fitsPage",{get:function(){return this.pageSize>=this.filteredItems.length},enumerable:!0,configurable:!0}),e.prototype.showMoreItems=function(){this.canShowMoreItems&&(this.currentPageSize+=this.pageSize)},e.prototype.showLessItems=function(){this.canShowLessItems&&(this.currentPageSize-=this.pageSize)},e.prototype.clear=function(){this.currentPageSize=this.pageSize,this.items=[],this.filteredItems=[],this.filterText=""},e.prototype[Symbol.iterator]=function(){var e=0,t=this.visibleItems;return{next:function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0,value:null}}}},e}(),Xe=function(i){function e(e,t){void 0===e&&(e=[]),void 0===t&&(t=5);var n=i.call(this,e.filter(function(e){return 0<e.count}),t)||this;return n.filter=function(e){if(n.filterText&&e.label){var t=(n.filterText||"").toLowerCase();return e.label.toLowerCase().startsWith(t)}return!0},n}return S(e,i),e}(Ze),Ke=function(){function e(e,t,n){var i=this;this.queryBuilder=e,this.searchService=t,this.translationService=n,this.DEFAULT_PAGE_SIZE=5,this.isAlive=!0,this.responseFacetQueries=null,this.responseFacetFields=null,this.facetQueriesPageSize=this.DEFAULT_PAGE_SIZE,this.facetQueriesLabel="Facet Queries",this.facetQueriesExpanded=!1,this.facetFieldsExpanded=!1,this.canResetSelectedQueries=!1,this.selectedFacetQueries=[],this.selectedBuckets=[],e.config&&e.config.facetQueries&&(this.facetQueriesLabel=e.config.facetQueries.label||"Facet Queries",this.facetQueriesPageSize=e.config.facetQueries.pageSize||this.DEFAULT_PAGE_SIZE,this.facetQueriesExpanded=e.config.facetQueries.expanded),e.config&&e.config.facetFields&&(this.facetFieldsExpanded=e.config.facetFields.expanded),this.queryBuilder.updated.pipe(s.takeWhile(function(){return i.isAlive})).subscribe(function(){i.queryBuilder.execute()})}return e.prototype.ngOnInit=function(){var t=this;this.queryBuilder&&this.queryBuilder.executed.pipe(s.takeWhile(function(){return t.isAlive})).subscribe(function(e){t.onDataLoaded(e),t.searchService.dataLoaded.next(e)})},e.prototype.ngOnDestroy=function(){this.isAlive=!1},e.prototype.onToggleFacetQuery=function(e,t){e&&t&&(e.checked?this.selectFacetQuery(t):this.unselectFacetQuery(t))},e.prototype.selectFacetQuery=function(e){e&&(e.checked=!0,this.queryBuilder.addUserFacetQuery(e),this.updateSelectedFields(),this.queryBuilder.update())},e.prototype.unselectFacetQuery=function(e){e&&(e.checked=!1,this.queryBuilder.removeUserFacetQuery(e),this.updateSelectedFields(),this.queryBuilder.update())},e.prototype.updateSelectedBuckets=function(){var e,t;if(this.responseFacetFields){this.selectedBuckets=[];var n=function(t){var e;t.buckets&&(e=i.selectedBuckets).push.apply(e,O(i.queryBuilder.getUserFacetBuckets(t.field).filter(function(e){return e.checked}).map(function(e){return{field:t,bucket:e}})))},i=this;try{for(var o=A(this.responseFacetFields),r=o.next();!r.done;r=o.next()){n(r.value)}}catch(s){e={error:s}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}}else this.selectedBuckets=[]},e.prototype.updateSelectedFields=function(){this.responseFacetQueries?(this.selectedFacetQueries=this.responseFacetQueries.items.filter(function(e){return e.checked}),this.canResetSelectedQueries=0<this.selectedFacetQueries.length):(this.selectedFacetQueries=[],this.canResetSelectedQueries=!1)},e.prototype.onToggleBucket=function(e,t,n){e&&n&&(e.checked?this.selectFacetBucket(t,n):this.unselectFacetBucket(t,n))},e.prototype.selectFacetBucket=function(e,t){t&&(t.checked=!0,this.queryBuilder.addUserFacetBucket(e,t),this.updateSelectedBuckets(),this.queryBuilder.update())},e.prototype.unselectFacetBucket=function(e,t){t&&(t.checked=!1,this.queryBuilder.removeUserFacetBucket(e,t),this.updateSelectedBuckets(),this.queryBuilder.update())},e.prototype.resetSelectedQueries=function(){var e,t;if(this.canResetSelectedQueries){try{for(var n=A(this.responseFacetQueries.items),i=n.next();!i.done;i=n.next()){var o=i.value;o.checked=!1,this.queryBuilder.removeUserFacetQuery(o)}}catch(r){e={error:r}}finally{try{i&&!i.done&&(t=n["return"])&&t.call(n)}finally{if(e)throw e.error}}this.selectedFacetQueries=[],this.canResetSelectedQueries=!1,this.queryBuilder.update()}},e.prototype.canResetSelectedBuckets=function(e){return!(!e||!e.buckets)&&e.buckets.items.some(function(e){return e.checked})},e.prototype.resetSelectedBuckets=function(e){var t,n;if(e&&e.buckets){try{for(var i=A(e.buckets.items),o=i.next();!o.done;o=i.next()){var r=o.value;r.checked=!1,this.queryBuilder.removeUserFacetBucket(e,r)}}catch(s){t={error:s}}finally{try{o&&!o.done&&(n=i["return"])&&n.call(i)}finally{if(t)throw t.error}}this.updateSelectedBuckets(),this.queryBuilder.update()}},e.prototype.onDataLoaded=function(e){var t=e.list.context;t?(this.parseFacetFields(t),this.parseFacetQueries(t)):(this.responseFacetQueries=null,this.responseFacetFields=null)},e.prototype.parseFacetFields=function(o){var r=this;if(this.responseFacetFields)this.responseFacetFields=this.responseFacetFields.map(function(t){var n=(o.facetsFields||[]).find(function(e){return e.label===t.label});return(t&&t.buckets&&t.buckets.items||[]).map(function(t){var e=(n&&n.buckets||[]).find(function(e){return e.label===t.label});return t.count=e?e.count:0,t}),t});else{var e=this.queryBuilder.config.facetFields&&this.queryBuilder.config.facetFields.fields||[];this.responseFacetFields=e.map(function(n){var e=(o.facetsFields||[]).find(function(e){return e.label===n.label}),t=(e&&e.buckets||[]).map(function(t){var e=r.selectedBuckets.find(function(e){return e.bucket.label===t.label&&e.field.field===n.field});return E({},t,{checked:!!e,display:r.translationService.instant(t.display),label:r.translationService.instant(t.label)})}),i=new Ze(t,n.pageSize);return i.filter=function(e){if(e&&i.filterText){var t=(i.filterText||"").toLowerCase();return(e.display||e.label||"").toLowerCase().startsWith(t)}return!0},E({},n,{label:r.translationService.instant(n.label),pageSize:n.pageSize|r.DEFAULT_PAGE_SIZE,currentPageSize:n.pageSize|r.DEFAULT_PAGE_SIZE,buckets:i})})}},e.prototype.parseFacetQueries=function(e){var i=this,o=this.getFacetQueryMap(e);if(this.queryBuilder.config.facetQueries){var r=Object.assign({},this.responseFacetQueries),t=(this.queryBuilder.config.facetQueries.queries||[]).map(function(t){var e=o[t.label],n=(r.items||[]).find(function(e){return e.label===t.label});return n?(n.count=e.count,n):E({},t,{label:i.translationService.instant(t.label),count:e.count})});0<t.length?this.responseFacetQueries?this.responseFacetQueries.items=t:this.responseFacetQueries=new Xe(t,this.facetQueriesPageSize):this.responseFacetQueries=null}},e.prototype.getFacetQueryMap=function(e){var t={};return(e.facetQueries||[]).forEach(function(e){t[e.label]=e}),t},e.decorators=[{type:c.Component,args:[{selector:"adf-search-filter",template:'<mat-accordion multi="true" displayMode="flat">\n\n    <mat-expansion-panel\n        *ngFor="let category of queryBuilder.categories"\n        [attr.data-automation-id]="\'expansion-panel-\'+category.name"\n        [(expanded)]="category.expanded">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{ category.name | translate }}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <adf-search-widget-container\n            [id]="category.id"\n            [selector]="category.component.selector"\n            [settings]="category.component.settings">\n        </adf-search-widget-container>\n    </mat-expansion-panel>\n\n    <ng-container *ngIf="responseFacetQueries">\n        <mat-expansion-panel [expanded]="facetQueriesExpanded" [attr.data-automation-id]="\'expansion-panel-\'+facetQueriesLabel">\n            <mat-expansion-panel-header>\n                <mat-panel-title>{{ facetQueriesLabel | translate }}</mat-panel-title>\n            </mat-expansion-panel-header>\n            <div class="facet-result-filter">\n                <mat-form-field>\n                    <input\n                        matInput\n                        placeholder="{{ \'SEARCH.FILTER.ACTIONS.FILTER-CATEGORY\' | translate }}"\n                        [attr.data-automation-id]="\'facet-result-filter-\'+facetQueriesLabel"\n                        [(ngModel)]="responseFacetQueries.filterText">\n                    <button *ngIf="responseFacetQueries.filterText"\n                        mat-button matSuffix mat-icon-button\n                        (click)="responseFacetQueries.filterText = \'\'">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <div class="checklist">\n                <ng-container *ngFor="let query of responseFacetQueries">\n                    <mat-checkbox\n                        [checked]="query.checked"\n                        [attr.data-automation-id]="\'checkbox-\'+facetQueriesLabel+\'-\'+query.label"\n                        (change)="onToggleFacetQuery($event, query)">\n                        {{ query.label }} ({{ query.count }})\n                    </mat-checkbox>\n                </ng-container>\n            </div>\n            <div class="facet-buttons">\n                <button mat-icon-button\n                    *ngIf="canResetSelectedQueries"\n                    title="{{ \'SEARCH.FILTER.ACTIONS.CLEAR-ALL\' | translate }}"\n                    (click)="resetSelectedQueries()">\n                    <mat-icon>clear</mat-icon>\n                </button>\n                <button mat-icon-button\n                    *ngIf="responseFacetQueries.canShowLessItems"\n                    title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-LESS\' | translate }}"\n                    (click)="responseFacetQueries.showLessItems()">\n                    <mat-icon>keyboard_arrow_up</mat-icon>\n                </button>\n                <button mat-icon-button\n                    *ngIf="responseFacetQueries.canShowMoreItems"\n                    title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-MORE\' | translate }}"\n                    (click)="responseFacetQueries.showMoreItems()">\n                    <mat-icon>keyboard_arrow_down</mat-icon>\n                </button>\n            </div>\n        </mat-expansion-panel>\n    </ng-container>\n\n    <ng-container *ngIf="responseFacetFields">\n        <mat-expansion-panel [attr.data-automation-id]="\'expansion-panel-\'+field.label" *ngFor="let field of responseFacetFields"\n                             [expanded]="facetFieldsExpanded">\n            <mat-expansion-panel-header>\n                <mat-panel-title>{{ field.label }}</mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <div class="facet-result-filter">\n                <mat-form-field>\n                    <input\n                        matInput\n                        placeholder="{{ \'SEARCH.FILTER.ACTIONS.FILTER-CATEGORY\' | translate }}"\n                        [attr.data-automation-id]="\'facet-result-filter-\'+field.label"\n                        [(ngModel)]="field.buckets.filterText">\n                    <button *ngIf="field.buckets.filterText"\n                        mat-button matSuffix mat-icon-button\n                        (click)="field.buckets.filterText = \'\'">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n\n            <div class="checklist">\n                <mat-checkbox\n                    *ngFor="let bucket of field.buckets"\n                    [checked]="bucket.checked"\n                    [attr.data-automation-id]="\'checkbox-\'+field.label+\'-\'+(bucket.display || bucket.label)"\n                    (change)="onToggleBucket($event, field, bucket)">\n                    {{ bucket.display || bucket.label }} <span *ngIf="bucket.count!==null">(</span>{{ bucket.count }}<span *ngIf="bucket.count!==null">)</span>\n                </mat-checkbox>\n            </div>\n\n            <div class="facet-buttons" *ngIf="field.buckets.fitsPage">\n                <button *ngIf="canResetSelectedBuckets(field)"\n                    mat-button\n                    color="primary"\n                    (click)="resetSelectedBuckets(field)">\n                    {{ \'SEARCH.FILTER.ACTIONS.CLEAR-ALL\' | translate }}\n                </button>\n            </div>\n\n            <div class="facet-buttons" *ngIf="!field.buckets.fitsPage">\n                <button mat-icon-button\n                    *ngIf="canResetSelectedBuckets(field)"\n                    title="{{ \'SEARCH.FILTER.ACTIONS.CLEAR-ALL\' | translate }}"\n                    (click)="resetSelectedBuckets(field)">\n                    <mat-icon>clear</mat-icon>\n                </button>\n                <button mat-icon-button\n                    *ngIf="field.buckets.canShowLessItems"\n                    (click)="field.buckets.showLessItems()"\n                    title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-LESS\' | translate }}">\n                    <mat-icon>keyboard_arrow_up</mat-icon>\n                </button>\n                <button mat-icon-button\n                    *ngIf="field.buckets.canShowMoreItems"\n                    (click)="field.buckets.showMoreItems()"\n                    title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-MORE\' | translate }}">\n                    <mat-icon>keyboard_arrow_down</mat-icon>\n                </button>\n            </div>\n        </mat-expansion-panel>\n    </ng-container>\n</mat-accordion>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-filter"},styles:[".adf-search-filter .checklist{display:flex;flex-direction:column}.adf-search-filter .checklist .mat-checkbox{margin:5px}.adf-search-filter .checklist .mat-checkbox.mat-checkbox-checked .mat-checkbox-label{font-weight:700}.adf-search-filter .facet-result-filter{display:flex;flex-direction:column}.adf-search-filter .facet-result-filter>*{width:100%}.adf-search-filter .facet-buttons{text-align:right}.adf-search-filter .facet-buttons .mat-button{text-transform:uppercase}.adf-search-filter .facet-buttons--topSpace{padding-top:15px}"]}]}],e.ctorParameters=function(){return[{type:Ge},{type:d.SearchService},{type:d.TranslationService}]},e}(),Je=function(){function e(){this.value=""}return e.prototype.ngOnInit=function(){if(this.context&&this.settings&&this.settings.pattern){var e=new RegExp(this.settings.pattern,"g").exec(this.context.queryFragments[this.id]||"");e&&1<e.length&&(this.value=e[1])}},e.prototype.reset=function(){this.value="",this.updateQuery(null)},e.prototype.onChangedHandler=function(e){this.value=e.target.value,this.updateQuery(this.value)},e.prototype.updateQuery=function(e){this.context&&this.settings&&this.settings.field&&(this.context.queryFragments[this.id]=e?this.settings.field+":'"+e+"'":"",this.context.update())},e.decorators=[{type:c.Component,args:[{selector:"adf-search-text",template:'<mat-form-field>\n    <input\n        matInput\n        [placeholder]="settings?.placeholder"\n        [(ngModel)]="value"\n        (change)="onChangedHandler($event)">\n    <button mat-button *ngIf="value" matSuffix mat-icon-button (click)="reset()">\n        <mat-icon>close</mat-icon>\n    </button>\n</mat-form-field>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-text"},styles:[".adf-search-text .mat-form-field{width:100%}"]}]}],e.propDecorators={value:[{type:c.Input}]},e}(),et=function(){function e(){this.pageSize=5,this.options=new Ze}return e.prototype.ngOnInit=function(){this.settings&&(this.pageSize=this.settings.pageSize||5,this.settings.options&&0<this.settings.options.length&&(this.options=new Ze(this.settings.options,this.pageSize))),this.setValue(this.getSelectedValue())},e.prototype.getSelectedValue=function(){var e=this.settings.options||[];if(e&&0<e.length){var t=e.find(function(e){return e["default"]});return t||(t=e[0]),t.value}return null},e.prototype.setValue=function(e){this.value=e,this.context.queryFragments[this.id]=e,this.context.update()},e.prototype.changeHandler=function(e){this.setValue(e.value)},e.decorators=[{type:c.Component,args:[{selector:"adf-search-radio",template:'<mat-radio-group\n    [(ngModel)]="value"\n    (change)="changeHandler($event)">\n    <mat-radio-button\n        *ngFor="let option of options"\n        [value]="option.value">\n        {{ option.name | translate }}\n    </mat-radio-button>\n</mat-radio-group>\n\n<div class="facet-buttons" *ngIf="!options.fitsPage">\n    <button mat-icon-button\n        *ngIf="options.canShowLessItems"\n        title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-LESS\' | translate }}"\n        (click)="options.showLessItems()">\n        <mat-icon>keyboard_arrow_up</mat-icon>\n    </button>\n    <button mat-icon-button\n        *ngIf="options.canShowMoreItems"\n        title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-MORE\' | translate }}"\n        (click)="options.showMoreItems()">\n        <mat-icon>keyboard_arrow_down</mat-icon>\n    </button>\n</div>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-radio"},styles:[".adf-search-radio .mat-radio-group{display:inline-flex;flex-direction:column}.adf-search-radio .mat-radio-button{margin:5px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={value:[{type:c.Input}]},e}(),tt=function(){function e(){this.thumbLabel=!1}return e.prototype.ngOnInit=function(){this.settings&&(this.settings.hasOwnProperty("min")&&(this.min=this.settings.min),this.settings.hasOwnProperty("max")&&(this.max=this.settings.max),this.settings.hasOwnProperty("step")&&(this.step=this.settings.step),this.thumbLabel=!!this.settings.thumbLabel)},e.prototype.reset=function(){this.value=this.min||0,this.updateQuery(null)},e.prototype.onChangedHandler=function(e){this.value=e.value,this.updateQuery(this.value)},e.prototype.updateQuery=function(e){this.id&&this.context&&this.settings&&this.settings.field&&(this.context.queryFragments[this.id]=null===e?"":this.settings.field+":[0 TO "+e+"]",this.context.update())},e.decorators=[{type:c.Component,args:[{selector:"adf-search-slider",template:'<mat-slider\n    [(value)]="value"\n    [min]="min"\n    [max]="max"\n    [step]="step"\n    [thumbLabel]="thumbLabel"\n    (change)="onChangedHandler($event)">\n</mat-slider>\n\n<div class="facet-buttons">\n    <button mat-button color="primary" (click)="reset()">\n        {{ \'SEARCH.FILTER.ACTIONS.CLEAR\' | translate }}\n    </button>\n</div>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-slider"},styles:[".adf-search-slider .mat-slider{width:100%}"]}]}],e.propDecorators={value:[{type:c.Input}]},e}(),nt=function(){function e(){}return e.prototype.isErrorState=function(e,t){var n=t&&t.submitted;return!!(e&&e.invalid&&(e.dirty||e.touched||!e.pristine&&n))},e}(),it=function(){function e(){this.matcher=new nt,this.format="[{FROM} TO {TO}]"}return e.prototype.ngOnInit=function(){this.settings&&(this.field=this.settings.field,this.format=this.settings.format||"[{FROM} TO {TO}]"),this.validators=l.Validators.compose([l.Validators.required,l.Validators.pattern(/^-?(0|[1-9]\d*)?$/),l.Validators.min(0)]),this.from=new l.FormControl("",this.validators),this.to=new l.FormControl("",this.validators),this.form=new l.FormGroup({from:this.from,to:this.to},this.formValidator)},e.prototype.formValidator=function(e){return parseInt(e.get("from").value,10)<parseInt(e.get("to").value,10)?null:{mismatch:!0}},e.prototype.apply=function(e,t){if(t&&this.id&&this.context&&this.field){var n=new Map;n.set("FROM",e.from),n.set("TO",e.to);var i=this.formatString(this.format,n);this.context.queryFragments[this.id]=this.field+":"+i,this.context.update()}},e.prototype.formatString=function(e,t){var i=e;return t.forEach(function(e,t){var n=new RegExp("{"+t+"}","gm");i=i.replace(n,e)}),i},e.prototype.reset=function(){this.form.reset({from:"",to:""}),this.id&&this.context&&(this.context.queryFragments[this.id]="",this.context.update())},e.decorators=[{type:c.Component,args:[{selector:"adf-search-number-range",template:'<form [formGroup]="form" novalidate (ngSubmit)="apply(form.value, form.valid)">\n\n    <mat-form-field>\n        <input\n            matInput [formControl]="from" [errorStateMatcher]="matcher"\n            placeholder="{{ \'SEARCH.FILTER.RANGE.FROM\' | translate }}"\n            autocomplete="off">\n        <mat-error *ngIf="from.hasError(\'pattern\') || from.hasError(\'min\')">\n            {{ \'SEARCH.FILTER.VALIDATION.INVALID-FORMAT\' | translate }}\n        </mat-error>\n        <mat-error *ngIf="from.hasError(\'required\')">\n            {{ \'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE\' | translate }}\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n        <input\n            matInput [formControl]="to" [errorStateMatcher]="matcher"\n            placeholder="{{ \'SEARCH.FILTER.RANGE.TO\' | translate }}"\n            autocomplete="off">\n        <mat-error *ngIf="to.hasError(\'pattern\') || to.hasError(\'min\')">\n            {{ \'SEARCH.FILTER.VALIDATION.INVALID-FORMAT\' | translate }}\n        </mat-error>\n        <mat-error *ngIf="to.hasError(\'required\')">\n            {{ \'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE\' | translate }}\n        </mat-error>\n    </mat-form-field>\n\n\n    <div class="facet-buttons">\n        <button mat-button color="primary" type="button" (click)="reset()">\n            {{ \'SEARCH.FILTER.ACTIONS.CLEAR\' | translate }}\n        </button>\n        <button mat-button color="primary" type="submit" [disabled]="!form.valid">\n            {{ \'SEARCH.FILTER.ACTIONS.APPLY\' | translate }}\n        </button>\n    </div>\n</form>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-number-range"},styles:[".adf-search-number-range>form{display:inline-flex;flex-direction:column;width:100%}"]}]}],e}(),ot=function(){function e(){this.operator="OR",this.pageSize=5,this.options=new Ze}return e.prototype.ngOnInit=function(){this.settings&&(this.operator=this.settings.operator||"OR",this.pageSize=this.settings.pageSize||5,this.settings.options&&0<this.settings.options.length&&(this.options=new Ze(this.settings.options,this.pageSize)))},e.prototype.reset=function(){this.options.items.forEach(function(e){e.checked=!1}),this.id&&this.context&&(this.context.queryFragments[this.id]="",this.context.update())},e.prototype.changeHandler=function(e,t){t.checked=e.checked,this.flush()},e.prototype.flush=function(){var e=this.options.items.filter(function(e){return e.checked}).map(function(e){return e.value}).join(" "+this.operator+" ");this.id&&this.context&&(this.context.queryFragments[this.id]=e,this.context.update())},e.decorators=[{type:c.Component,args:[{selector:"adf-search-check-list",template:'<div class="checklist">\n    <mat-checkbox\n        *ngFor="let option of options"\n        [checked]="option.checked"\n        (change)="changeHandler($event, option)">\n        {{ option.name | translate }}\n    </mat-checkbox>\n</div>\n\n<div class="facet-buttons" *ngIf="options.fitsPage">\n    <button mat-button color="primary" (click)="reset()">\n        {{ \'SEARCH.FILTER.ACTIONS.CLEAR-ALL\' | translate }}\n    </button>\n</div>\n\n<div class="facet-buttons" *ngIf="!options.fitsPage">\n    <button mat-icon-button\n        title="{{ \'SEARCH.FILTER.ACTIONS.CLEAR-ALL\' | translate }}"\n        (click)="reset()">\n        <mat-icon>clear</mat-icon>\n    </button>\n    <button mat-icon-button\n        *ngIf="options.canShowLessItems"\n        title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-LESS\' | translate }}"\n        (click)="options.showLessItems()">\n        <mat-icon>keyboard_arrow_up</mat-icon>\n    </button>\n    <button mat-icon-button\n        *ngIf="options.canShowMoreItems"\n        title="{{ \'SEARCH.FILTER.ACTIONS.SHOW-MORE\' | translate }}"\n        (click)="options.showMoreItems()">\n        <mat-icon>keyboard_arrow_down</mat-icon>\n    </button>\n</div>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-check-list"},styles:[".adf-search-check-list{display:flex;flex-direction:column}"]}]}],e.ctorParameters=function(){return[]},e}(),rt="DD/MM/YYYY",st=d.MOMENT_DATE_FORMATS,at=function(){function e(e,t){this.dateAdapter=e,this.userPreferencesService=t,this.matcher=new nt,this.datePickerDateFormat=rt}return e.prototype.getFromValidationMessage=function(){return this.from.hasError("invalidOnChange")||this.hasParseError(this.from)?"SEARCH.FILTER.VALIDATION.INVALID-DATE":this.from.hasError("matDatepickerMax")?"SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE":this.from.hasError("required")?"SEARCH.FILTER.VALIDATION.REQUIRED-VALUE":""},e.prototype.getToValidationMessage=function(){return this.to.hasError("invalidOnChange")||this.hasParseError(this.to)?"SEARCH.FILTER.VALIDATION.INVALID-DATE":this.to.hasError("matDatepickerMin")?"SEARCH.FILTER.VALIDATION.NO-DAYS":this.to.hasError("matDatepickerMax")?"SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE":this.to.hasError("required")?"SEARCH.FILTER.VALIDATION.REQUIRED-VALUE":""},e.prototype.ngOnInit=function(){var t=this;this.settings&&(this.datePickerDateFormat=this.settings.dateFormat||rt),this.dateAdapter.overrideDisplyaFormat=this.datePickerDateFormat,this.userPreferencesService.select(d.UserPreferenceValues.Locale).subscribe(function(e){t.setLocale(e)});var e=l.Validators.compose([l.Validators.required]);this.from=new l.FormControl("",e),this.to=new l.FormControl("",e),this.form=new l.FormGroup({from:this.from,to:this.to}),this.maxDate=this.dateAdapter.today().startOf("day")},e.prototype.apply=function(e,t){if(t&&this.id&&this.context&&this.settings&&this.settings.field){var n=moment(e.from).startOf("day").format(),i=moment(e.to).endOf("day").format();this.context.queryFragments[this.id]=this.settings.field+":['"+n+"' TO '"+i+"']",this.context.update()}},e.prototype.reset=function(){this.form.reset({from:"",to:""}),this.id&&this.context&&(this.context.queryFragments[this.id]="",this.context.update())},e.prototype.onChangedHandler=function(e,t){var n=e.srcElement.value,i=this.dateAdapter.parse(n,this.datePickerDateFormat);i&&i.isValid()?t.setValue(i):i?t.setErrors({invalidOnChange:!0}):t.setErrors({required:!0})},e.prototype.setLocale=function(e){this.dateAdapter.setLocale(e),moment.locale(e)},e.prototype.hasParseError=function(e){return e.hasError("matDatepickerParse")&&e.getError("matDatepickerParse").text},e.prototype.forcePlaceholder=function(e){e.srcElement.click()},e.decorators=[{type:c.Component,args:[{selector:"adf-search-date-range",template:'<form [formGroup]="form" novalidate (ngSubmit)="apply(form.value, form.valid)">\n    <mat-form-field>\n        <input matInput\n                (input)="forcePlaceholder($event)"\n                [formControl]="from"\n                [errorStateMatcher]="matcher"\n                placeholder="{{ \'SEARCH.FILTER.RANGE.FROM-DATE\' | translate }}"\n                [matDatepicker]="fromDatepicker"\n                [max]="maxDate"\n                (focusout)="onChangedHandler($event, from)">\n        <mat-datepicker-toggle matSuffix [for]="fromDatepicker"></mat-datepicker-toggle>\n        <mat-datepicker #fromDatepicker></mat-datepicker>\n        <mat-error *ngIf="from.invalid">\n            {{ getFromValidationMessage() | translate: { requiredFormat: datePickerDateFormat } }}\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput\n                (input)="forcePlaceholder($event)"\n                [formControl]="to"\n                [errorStateMatcher]="matcher"\n                placeholder="{{ \'SEARCH.FILTER.RANGE.TO-DATE\' | translate }}"\n                [matDatepicker]="toDatepicker"\n                [min]="from.value"\n                [max]="maxDate"\n                (focusout)="onChangedHandler($event, to)">\n        <mat-datepicker-toggle matSuffix [for]="toDatepicker"></mat-datepicker-toggle>\n        <mat-datepicker #toDatepicker></mat-datepicker>\n        <mat-error *ngIf="to.invalid">\n            {{ getToValidationMessage() | translate: { requiredFormat: datePickerDateFormat } }}\n        </mat-error>\n    </mat-form-field>\n\n    <div class="facet-buttons facet-buttons--topSpace">\n        <button mat-button color="primary" type="button" (click)="reset()">\n            {{ \'SEARCH.FILTER.ACTIONS.CLEAR\' | translate }}\n        </button>\n        <button mat-button color="primary" type="submit" [disabled]="!form.valid">\n            {{ \'SEARCH.FILTER.ACTIONS.APPLY\' | translate }}\n        </button>\n    </div>\n</form>\n',providers:[{provide:p.DateAdapter,useClass:d.MomentDateAdapter,deps:[p.MAT_DATE_LOCALE]},{provide:p.MAT_DATE_FORMATS,useValue:st}],encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-date-range"},styles:[".adf-search-date-range>form{display:inline-flex;flex-direction:column;width:100%}"]}]}],e.ctorParameters=function(){return[{type:p.DateAdapter},{type:d.UserPreferencesService}]},e}(),lt=function(){function e(){this.widgets={text:Je,radio:et,slider:tt,"number-range":it,"check-list":ot,"date-range":at}}return e.decorators=[{type:c.Injectable}],e}(),ct=function(){function e(){}return e.decorators=[{type:c.Component,args:[{selector:"adf-search-chip-list",template:'<mat-chip-list>\n    <ng-container *ngIf="searchFilter && searchFilter.selectedFacetQueries.length">\n        <mat-chip\n            *ngFor="let query of searchFilter.selectedFacetQueries"\n            [removable]="true"\n            (removed)="searchFilter.unselectFacetQuery(query)">\n            {{ query.label | translate }}\n            <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n    </ng-container>\n    <ng-container *ngIf="searchFilter && searchFilter.selectedBuckets.length">\n        <mat-chip\n            *ngFor="let selection of searchFilter.selectedBuckets"\n            [removable]="true"\n            (removed)="searchFilter.unselectFacetBucket(selection.field, selection.bucket)">\n            {{ (selection.bucket.display || selection.bucket.label) | translate }}\n            <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n    </ng-container>\n</mat-chip-list>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-chip-list"}}]}],e.propDecorators={searchFilter:[{type:c.Input}]},e}(),dt=function(){function e(e){this.queryBuilder=e,this.options=[]}return e.prototype.ngOnInit=function(){this.options=this.queryBuilder.getSortingOptions();var e=this.queryBuilder.getPrimarySorting();e&&(this.value=e.key,this.ascending=e.ascending)},e.prototype.onChanged=function(e){this.value=e.key,this.ascending=e.ascending,this.applySorting()},e.prototype.findOptionByKey=function(t){return t?this.options.find(function(e){return e.key===t}):null},e.prototype.applySorting=function(){var e=this.findOptionByKey(this.value);e&&(this.queryBuilder.sorting=[E({},e,{ascending:this.ascending})],this.queryBuilder.update())},e.decorators=[{type:c.Component,args:[{selector:"adf-search-sorting-picker",template:'<adf-sorting-picker\n    [options]="options"\n    [selected]="value"\n    [ascending]="ascending"\n    (change)="onChanged($event)">\n</adf-sorting-picker>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-search-sorting-picker"}}]}],e.ctorParameters=function(){return[{type:Ge}]},e}(),ut=function(){function e(e,t,n){this.searchFilterService=e,this.queryBuilder=t,this.componentFactoryResolver=n}return e.prototype.ngOnInit=function(){var e=this.searchFilterService.widgets[this.selector];if(e){var t=this.componentFactoryResolver.resolveComponentFactory(e);t&&(this.content.clear(),this.componentRef=this.content.createComponent(t,0),this.setupWidget(this.componentRef))}},e.prototype.setupWidget=function(e){e&&e.instance&&(e.instance.id=this.id,e.instance.settings=E({},this.settings),e.instance.context=this.queryBuilder)},e.prototype.ngOnDestroy=function(){this.componentRef&&(this.componentRef.destroy(),this.componentRef=null)},e.decorators=[{type:c.Component,args:[{selector:"adf-search-widget-container",template:"<div #content></div>"}]}],e.ctorParameters=function(){return[{type:lt},{type:Ge},{type:c.ComponentFactoryResolver}]},e.propDecorators={content:[{type:c.ViewChild,args:["content",{read:c.ViewContainerRef}]}],id:[{type:c.Input}],selector:[{type:c.Input}],settings:[{type:c.Input}],config:[{type:c.Input}]},e}(),pt=[qe,$e,We,ze,Ke,ct],ht=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,l.FormsModule,l.ReactiveFormsModule,v,d.CoreModule.forChild()],declarations:O(pt,[ut,Je,et,tt,it,ot,at,dt]),exports:O(pt,[ut,Je,et,tt,it,ot,at,dt]),entryComponents:[ut,Je,et,tt,it,ot,at]}]}],e}(),ft={Members:"members",Containers:"containers"},mt=function(){function e(e,t){this.sitesService=e,this.logService=t,this.hideMyFiles=!1,this.siteList=null,this.value=null,this.placeholder="DROPDOWN.PLACEHOLDER_LABEL",this.change=new c.EventEmitter,this.selected=null,this.MY_FILES_VALUE="-my-"}return e.prototype.ngOnInit=function(){this.siteList||this.setDefaultSiteList()},e.prototype.selectedSite=function(e){this.change.emit(e.value)},e.prototype.setDefaultSiteList=function(){var t=this,e=null;this.relations&&(e={relations:[this.relations]}),this.sitesService.getSites(e).subscribe(function(e){if(t.siteList=t.relations===ft.Members?t.filteredResultsByMember(e):e,!t.hideMyFiles){t.siteList.list.entries.unshift({entry:{id:"-my-",guid:"-my-",title:"DROPDOWN.MY_FILES_OPTION"}}),t.value||(t.value="-my-")}t.selected=t.siteList.list.entries.find(function(e){return e.entry.id===t.value})},function(e){t.logService.error(e)})},e.prototype.filteredResultsByMember=function(e){var t=this,n=this.sitesService.getEcmCurrentLoggedUserName();return e.list.entries=e.list.entries.filter(function(e){return t.isCurrentUserMember(e,n)}),e},e.prototype.isCurrentUserMember=function(e,t){return"PUBLIC"===e.entry.visibility||!!e.relations.members.list.entries.find(function(e){return e.entry.id.toLowerCase()===t.toLowerCase()})},e.decorators=[{type:c.Component,args:[{selector:"adf-sites-dropdown",template:'<div id="site-dropdown-container" class="adf-site-dropdown-container">\n    <mat-form-field>\n        <mat-select\n            data-automation-id="site-my-files-option"\n            class="adf-site-dropdown-list-element"\n            id="site-dropdown"\n            placeholder="{{placeholder | translate}}"\n            floatPlaceholder="never"\n            data-automation-id="site-my-files-select"\n            [(value)]="selected"\n            (selectionChange)="selectedSite($event)">\n            <mat-option *ngFor="let site of siteList?.list.entries" [value]="site">\n                {{ site.entry.title | translate}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-sites-dropdown"},styles:[".adf-sites-dropdown.full-width .mat-form-field{width:100%}"]}]}],e.ctorParameters=function(){return[{type:d.SitesService},{type:d.LogService}]},e.propDecorators={hideMyFiles:[{type:c.Input}],siteList:[{type:c.Input}],value:[{type:c.Input}],placeholder:[{type:c.Input}],relations:[{type:c.Input}],change:[{type:c.Output}]},e}(),gt=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v,l.FormsModule,l.ReactiveFormsModule,d.CoreModule.forChild()],exports:[mt],declarations:[mt]}]}],e}(),yt=function(){function e(){this.folderNode=null,this.root=null,this.rootId=null,this.route=[],this.navigate=new c.EventEmitter}return Object.defineProperty(e.prototype,"hasRoot",{get:function(){return!!this.root},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.transform=this.transform?this.transform:null},e.prototype.ngOnChanges=function(e){if(e.folderNode){var t=null;t=this.transform?this.transform(e.folderNode.currentValue):e.folderNode.currentValue,this.route=this.parseRoute(t)}if(e.transform){t=this.transform?this.transform(this.folderNode):this.folderNode;this.route=this.parseRoute(t)}this.recalculateNodes()},e.prototype.recalculateNodes=function(){this.maxItems&&this.route.length>this.maxItems?(this.lastNodes=this.route.slice(this.route.length-this.maxItems),this.previousNodes=this.route.slice(0,this.route.length-this.maxItems),this.previousNodes.reverse()):(this.lastNodes=this.route,this.previousNodes=null)},e.prototype.open=function(){this.dropdown&&this.dropdown.open()},e.prototype.hasPreviousNodes=function(){return!!this.previousNodes},e.prototype.parseRoute=function(e){if(e&&e.path){var t=(e.path.elements||[]).slice();t.push({id:e.id,name:e.name});var n=this.getElementPosition(t,this.rootId);return 0<n&&t.splice(0,n),-1===n&&this.rootId&&(t[0].id=this.rootId),this.root&&(t[0].name=this.root),t}return[]},e.prototype.getElementPosition=function(e,t){var n=-1;return e&&0<e.length&&t&&(n=e.findIndex(function(e){return e.id===t})),n},e.prototype.onRoutePathClick=function(e,t){t&&t.preventDefault(),e&&(this.navigate.emit(e),this.target&&this.target.navigateTo(e.id))},e.decorators=[{type:c.Component,args:[{selector:"adf-breadcrumb",template:'<nav *ngIf="folderNode" data-automation-id="breadcrumb" class="adf-breadcrumb-container" role="list">\n    <button\n        *ngIf="hasPreviousNodes()"\n        tabindex="0"\n        class="adf-breadcrumb-dropdown-trigger"\n        (click)="open()">\n        <div class="adf-breadcrumb-dropdown-trigger-icon">\n            <mat-icon [class.isRoot]="!hasPreviousNodes()">folder</mat-icon>\n            <mat-icon [class.isRoot]="!hasPreviousNodes()" class="adf-breadcrumb-dropdown-trigger-arrow">arrow_drop_down</mat-icon>\n        </div>\n    </button>\n\n    <mat-select\n        #dropdown\n        *ngIf="hasPreviousNodes()"\n        class="adf-breadcrumb-dropdown-path"\n        tabindex="0">\n\n        <mat-option\n            *ngFor="let node of previousNodes;"\n            (click)="onRoutePathClick(node, $event)"\n            class="adf-breadcrumb-path-option"\n            tabindex="0">\n            {{ node.name | translate }}\n        </mat-option>\n    </mat-select>\n\n    <div *ngFor="let item of lastNodes; let last = last"\n        [class.active]="last"\n        [ngSwitch]="last"\n        title="{{ item.name | translate }}"\n        class="adf-breadcrumb-item"\n        role="listitem">\n\n        <a *ngSwitchDefault href="#" [attr.data-automation-id]="\'breadcrumb_\' + item.name"\n            class="adf-breadcrumb-item-anchor"\n            (click)="onRoutePathClick(item, $event)">\n            {{ item.name | translate }}\n        </a>\n\n        <div *ngSwitchCase="true" class="adf-breadcrumb-item-current">\n            {{ item.name | translate }}\n        </div>\n\n        <mat-icon class="adf-breadcrumb-item-chevron" *ngIf="!last">\n            chevron_right\n        </mat-icon>\n    </div>\n</nav>\n\n<nav *ngIf="!folderNode && hasRoot" data-automation-id="breadcrumb" role="navigation">\n    <div class="adf-breadcrumb-item active" role="listitem">\n        <div class="adf-breadcrumb-item-current">\n            {{ root | translate }}\n        </div>\n    </div>\n</nav>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-breadcrumb"},styles:[""]}]}],e.propDecorators={folderNode:[{type:c.Input}],root:[{type:c.Input}],rootId:[{type:c.Input}],target:[{type:c.Input}],transform:[{type:c.Input}],dropdown:[{type:c.ViewChild,args:["dropdown"]}],maxItems:[{type:c.Input}],navigate:[{type:c.Output}]},e}(),vt=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return S(t,e),t.prototype.ngOnChanges=function(e){if(e.folderNode){var t=null;t=this.transform?this.transform(e.folderNode.currentValue):e.folderNode.currentValue,this.route=this.parseRoute(t)}if(e.transform){t=this.transform?this.transform(this.folderNode):this.folderNode;this.route=this.parseRoute(t)}this.recalculateNodes()},t.prototype.recalculateNodes=function(){this.currentNode=this.route[this.route.length-1],this.previousNodes=this.route.slice(0,this.route.length-1).reverse()},t.prototype.open=function(){this.dropdown&&this.dropdown.open()},t.prototype.hasPreviousNodes=function(){return 0<this.previousNodes.length},t.decorators=[{type:c.Component,args:[{selector:"adf-dropdown-breadcrumb",template:'<ng-container *ngIf="route.length > 0">\n\n    <button\n        tabindex="0"\n        class="adf-dropdown-breadcrumb-trigger"\n        (click)="open()"\n        data-automation-id="dropdown-breadcrumb-trigger">\n        <mat-icon [class.isRoot]="!hasPreviousNodes()">folder</mat-icon>\n    </button>\n    <mat-icon class="adf-dropdown-breadcrumb-item-chevron">chevron_right</mat-icon>\n\n    <mat-select\n        #dropdown\n        *ngIf="hasPreviousNodes()"\n        class="adf-dropdown-breadcrumb-path"\n        tabindex="0"\n        data-automation-id="dropdown-breadcrumb-path" >\n\n        <mat-option\n            *ngFor="let node of previousNodes;"\n            (click)="onRoutePathClick(node, $event)"\n            class="adf-dropdown-breadcrumb-path-option"\n            tabindex="0"\n            data-automation-class="dropdown-breadcrumb-path-option">\n            {{ node.name | translate }}\n        </mat-option>\n    </mat-select>\n\n    <span\n        class="adf-current-folder"\n        [class.isRoot]="!hasPreviousNodes()"\n        data-automation-id="current-folder">{{ currentNode.name }}</span>\n</ng-container>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-dropdown-breadcrumb"},styles:[""]}]}],t.propDecorators={dropdown:[{type:c.ViewChild,args:["dropdown"]}]},t}(yt),bt=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v,d.CoreModule.forChild()],exports:[yt,vt],declarations:[yt,vt]}]}],e}(),St=function(){function e(e){e=e||{},this.title=e.title||"ADF_CONFIRM_DIALOG.CONFIRM",this.message=e.message||"ADF_CONFIRM_DIALOG.MESSAGE",this.yesLabel=e.yesLabel||"ADF_CONFIRM_DIALOG.YES_LABEL",this.noLabel=e.noLabel||"ADF_CONFIRM_DIALOG.NO_LABEL"}return e.decorators=[{type:c.Component,args:[{selector:"adf-confirm-dialog",template:'\n        <h1 mat-dialog-title>{{ title | translate }}</h1>\n        <mat-dialog-content>\n            <p>{{ message | translate }}</p>\n        </mat-dialog-content>\n        <mat-dialog-actions>\n            <span class="spacer"></span>\n            <button id="adf-confirm-accept" mat-button color="primary" [mat-dialog-close]="true">{{ yesLabel | translate }}</button>\n            <button id="adf-confirm-cancel" mat-button [mat-dialog-close]="false" cdkFocusInitial>{{ noLabel | translate }}</button>\n        </mat-dialog-actions>\n    ',host:{"class":"adf-confirm-dialog"},encapsulation:c.ViewEncapsulation.None,styles:["\n        .spacer { flex: 1 1 auto; }\n\n        .adf-confirm-dialog .mat-dialog-actions .mat-button-wrapper {\n            text-transform: uppercase;\n        }\n    "]}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:c.Inject,args:[n.MAT_DIALOG_DATA]}]}]},e}(),Et=function(){function e(e,t,n){this.alfrescoApi=e,this.contentService=t,this.dialog=n,this.versions=[],this.isLoading=!0,this.showComments=!0,this.allowDownload=!0,this.showActions=!0,this.restored=new c.EventEmitter,this.deleted=new c.EventEmitter,this.versionsApi=this.alfrescoApi.versionsApi}return e.prototype.ngOnChanges=function(){this.loadVersionHistory()},e.prototype.canUpdate=function(){return this.contentService.hasPermission(this.node,"update")&&1<this.versions.length},e.prototype.canDelete=function(){return this.contentService.hasPermission(this.node,"delete")&&1<this.versions.length},e.prototype.restore=function(e){var t=this;this.canUpdate()&&this.versionsApi.revertVersion(this.node.id,e,{majorVersion:!0,comment:""}).then(function(){return t.onVersionRestored(t.node)})},e.prototype.loadVersionHistory=function(){var t=this;this.isLoading=!0,this.versionsApi.listVersionHistory(this.node.id).then(function(e){t.versions=e.list.entries,t.isLoading=!1})},e.prototype.downloadVersion=function(e){if(this.allowDownload){var t=this.getVersionContentUrl(this.node.id,e,!0);this.downloadContent(t)}},e.prototype.deleteVersion=function(t){var n=this;this.canUpdate()&&this.dialog.open(St,{data:{title:"ADF_VERSION_LIST.CONFIRM_DELETE.TITLE",message:"ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE",yesLabel:"ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL",noLabel:"ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL"},minWidth:"250px"}).afterClosed().subscribe(function(e){!0===e&&n.alfrescoApi.versionsApi.deleteVersion(n.node.id,t).then(function(){return n.onVersionDeleted(n.node)})})},e.prototype.onVersionDeleted=function(e){this.loadVersionHistory(),this.deleted.emit(e)},e.prototype.onVersionRestored=function(e){this.loadVersionHistory(),this.restored.emit(e)},e.prototype.getVersionContentUrl=function(e,t,n){return this.alfrescoApi.contentApi.getContentUrl(e,n).replace("/content","/versions/"+t+"/content")},e.prototype.downloadContent=function(e){if(e){var t=document.createElement("a");t.style.display="none",t.href=e,document.body.appendChild(t),t.click(),document.body.removeChild(t)}},e.decorators=[{type:c.Component,args:[{selector:"adf-version-list",template:'<mat-list class="adf-version-list" *ngIf="!isLoading; else loading_template">\n    <mat-list-item *ngFor="let version of versions; let idx = index">\n        <mat-icon mat-list-icon>insert_drive_file</mat-icon>\n        <h4 mat-line class="adf-version-list-item-name" [id]="\'adf-version-list-item-name-\' + version.entry.id" >{{version.entry.name}}</h4>\n        <p mat-line>\n            <span class="adf-version-list-item-version"  [id]="\'adf-version-list-item-version-\' + version.entry.id" >{{version.entry.id}}</span> -\n            <span class="adf-version-list-item-date"     [id]="\'adf-version-list-item-date-\' + version.entry.id" >{{version.entry.modifiedAt | date}}</span>\n        </p>\n        <p mat-line [id]="\'adf-version-list-item-comment-\'+ version.entry.id" class="adf-version-list-item-comment"\n           *ngIf="showComments">{{version.entry.versionComment}}</p>\n\n        <div *ngIf="showActions">\n            <mat-menu [id]="\'adf-version-list-action-menu-\'+version.entry.id"\n                      #versionMenu="matMenu" yPosition="below" xPosition="before">\n                <button\n                    [id]="\'adf-version-list-action-restore-\'+version.entry.id"\n                    [disabled]="!canUpdate()"\n                    mat-menu-item\n                    (click)="restore(version.entry.id)">\n                    {{ \'ADF_VERSION_LIST.ACTIONS.RESTORE\' | translate }}\n                </button>\n                <button *ngIf="allowDownload"\n                        [id]="\'adf-version-list-action-download-\'+version.entry.id"\n                        mat-menu-item\n                        (click)="downloadVersion(version.entry.id)">\n                    {{ \'ADF_VERSION_LIST.ACTIONS.DOWNLOAD\' | translate }}\n                </button>\n                <button\n                    [disabled]="!canDelete()"\n                    [id]="\'adf-version-list-action-delete-\'+version.entry.id"\n                    (click)="deleteVersion(version.entry.id)"\n                    mat-menu-item>\n                    {{ \'ADF_VERSION_LIST.ACTIONS.DELETE\' | translate }}\n                </button>\n            </mat-menu>\n\n            <button mat-icon-button [matMenuTriggerFor]="versionMenu" [id]="\'adf-version-list-action-menu-button-\'+version.entry.id">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n        </div>\n    </mat-list-item>\n</mat-list>\n\n<ng-template #loading_template>\n    <mat-progress-bar data-automation-id="version-history-loading-bar" mode="indeterminate"\n                      color="accent"></mat-progress-bar>\n</ng-template>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-version-list"},styles:[".adf-version-list .mat-list-item-content{border-bottom:1px solid #d8d8d8}.adf-version-list-item-version{font-weight:700}.adf-version-list-item-date{opacity:.6}.adf-version-list-item-comment{opacity:.5}"]}]}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService},{type:d.ContentService},{type:n.MatDialog}]},e.propDecorators={id:[{type:c.Input}],node:[{type:c.Input}],showComments:[{type:c.Input}],allowDownload:[{type:c.Input}],showActions:[{type:c.Input}],restored:[{type:c.Output}],deleted:[{type:c.Output}]},e}(),It=function(){function e(e,t,n){this.contentService=t,this.alfrescoApiService=n,this.showComments=!0,this.allowDownload=!0,this.uploadSuccess=new c.EventEmitter,this.uploadError=new c.EventEmitter,this.uploadState="close"}return e.prototype.refresh=function(e){this.alfrescoApiService.nodeUpdated.next(e),this.versionListComponent.loadVersionHistory(),this.uploadSuccess.emit(e),this.uploadState="close"},e.prototype.onUploadSuccess=function(e){this.alfrescoApiService.nodeUpdated.next(e.value.entry),this.versionListComponent.loadVersionHistory(),this.uploadSuccess.emit(e.value.entry),this.uploadState="close"},e.prototype.onUploadError=function(e){this.uploadError.emit(e)},e.prototype.onUploadCancel=function(){this.uploadState="close"},e.prototype.toggleNewVersion=function(){this.uploadState="open"===this.uploadState?"close":"open"},e.prototype.canUpdate=function(){return this.contentService.hasPermission(this.node,"update")},e.decorators=[{type:c.Component,args:[{selector:"adf-version-manager",template:'<div class="adf-new-version-container">\n    <div class="adf-new-version-uploader-container" id="adf-new-version-uploader-container" fxLayout="row" fxLayoutAlign="end center" [@uploadToggle]="uploadState">\n        <table class="adf-version-upload" *ngIf="uploadState !== \'close\'">\n            <tr>\n                <td>\n                    <adf-version-upload\n                        id="adf-version-upload-button"\n                        [node]="node"\n                        (success)="onUploadSuccess($event)"\n                        (cancel)="onUploadCancel()"\n                        (error)="onUploadError($event)">\n                    </adf-version-upload>\n                </td>\n            </tr>\n        </table>\n    </div>\n\n    <div class="adf-version-list-container">\n        <div class="adf-version-list-table">\n            <div>\n                <button mat-raised-button\n                        id="adf-show-version-upload-button"\n                        (click)="toggleNewVersion()" color="primary"\n                        *ngIf="uploadState ===\'close\'">{{\n                    \'ADF_VERSION_LIST.ACTIONS.UPLOAD.ADD\'|\n                    translate }}\n                </button>\n            </div>\n            <div>\n\n                <adf-version-list\n                    #versionList\n                    [node]="node"\n                    [allowDownload]="allowDownload"\n                    [showComments]="showComments"\n                    (deleted)="refresh($event)"\n                    (restored)="refresh($event)">\n                </adf-version-list>\n            </div>\n        </div>\n    </div>\n</div>\n',animations:[o.trigger("uploadToggle",[o.state("open",o.style({height:"175px",opacity:1,visibility:"visible"})),o.state("close",o.style({height:"0%",opacity:0,visibility:"hidden"})),o.transition("open => close",[o.style({visibility:"hidden"}),o.animate("0.4s cubic-bezier(0.25, 0.8, 0.25, 1)")]),o.transition("close => open",[o.style({visibility:"visible"}),o.animate("0.4s cubic-bezier(0.25, 0.8, 0.25, 1)")])])],encapsulation:c.ViewEncapsulation.None,styles:[".adf-button.upload-new-version{box-shadow:none;width:100%;height:175px;float:left;position:relative}.adf-new-version-uploader-container{border-bottom:1px solid #d8d8d8;padding:16px 0;width:100%;height:0%;position:relative;display:hidden;float:left!important}.adf-new-version-container{height:800px;overflow:hidden}.adf-version-list-table,.adf-version-upload-table{width:100%}.adf-version-list{width:100%!important;float:left!important}"]}]}],e.ctorParameters=function(){return[{type:d.AppConfigService},{type:d.ContentService},{type:d.AlfrescoApiService}]},e.propDecorators={node:[{type:c.Input}],showComments:[{type:c.Input}],allowDownload:[{type:c.Input}],uploadSuccess:[{type:c.Output}],uploadError:[{type:c.Output}],versionListComponent:[{type:c.ViewChild,args:["versionList"]}]},e}(),At=function(){function e(e){this.contentService=e,this.semanticVersion="minor",this.uploadVersion=!1,this.success=new c.EventEmitter,this.error=new c.EventEmitter,this.cancel=new c.EventEmitter}return e.prototype.canUpload=function(){return this.contentService.hasPermission(this.node,"update")},e.prototype.isMajorVersion=function(){return"minor"!==this.semanticVersion},e.prototype.cancelUpload=function(){this.cancel.emit()},e.decorators=[{type:c.Component,args:[{selector:"adf-version-upload",template:'<div class="adf-new-version-max-width">\n    <mat-radio-group class="adf-new-version-radio-group" [(ngModel)]="semanticVersion">\n        <mat-radio-button class="adf-new-version-radio-button" id="adf-new-version-minor"[value]="\'minor\'">{{\n            \'ADF_VERSION_LIST.ACTIONS.UPLOAD.MINOR\' |\n            translate }}\n        </mat-radio-button>\n        <mat-radio-button class="adf-new-version-radio-button" id="adf-new-version-major" [value]="\'major\'">{{\n            \'ADF_VERSION_LIST.ACTIONS.UPLOAD.MAJOR\' |\n            translate }}\n        </mat-radio-button>\n    </mat-radio-group>\n    <mat-form-field class="adf-new-version-max-width">\n                    <textarea matInput [(ngModel)]="comment" class="adf-new-version-text-area" id="adf-new-version-text-area"\n                              placeholder="{{ \'ADF_VERSION_LIST.ACTIONS.UPLOAD.COMMENT\' | translate }}"></textarea>\n    </mat-form-field>\n\n</div>\n<div class="adf-version-upload-buttons">\n    <adf-upload-version-button\n        data-automation-id="adf-new-version-file-upload"\n        staticTitle="{{ \'ADF_VERSION_LIST.ACTIONS.UPLOAD.TITLE\' | translate }}"\n        [node]="node"\n        [disabled]="!canUpload()"\n        [rootFolderId]="node.parentId"\n        tooltip="{{ \'ADF_VERSION_LIST.ACTIONS.UPLOAD.TOOLTIP\' | translate }}"\n        [comment]="comment"\n        [versioning]="true"\n        [majorVersion]="isMajorVersion()"\n        (success)="success.emit($event)"\n        (error)="error.emit($event)">\n    </adf-upload-version-button>\n    <button mat-raised-button (click)="cancelUpload()" id="adf-new-version-cancel"  >{{\n        \'ADF_VERSION_LIST.ACTIONS.UPLOAD.CANCEL\'| translate }}\n    </button>\n</div>\n\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-version-upload"},styles:[".adf-new-version-radio-group{display:inline-flex;flex-direction:column}.adf-new-version-radio-button{margin:5px}.adf-version-upload-buttons{display:flex;float:right;justify-content:space-between;width:100%}.adf-new-version-max-width{width:100%;float:right}.adf-new-version-text-area{resize:none!important}"]}]}],e.ctorParameters=function(){return[{type:d.ContentService}]},e.propDecorators={node:[{type:c.Input}],success:[{type:c.Output}],error:[{type:c.Output}],cancel:[{type:c.Output}]},e}(),Ct=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v,d.CoreModule.forChild(),He,l.FormsModule],exports:[At,It,Et,l.FormsModule],declarations:[At,It,Et]}]}],e}(),Ot=function(){function e(){this.name="",this.path=""}return e.prototype.ngOnInit=function(){if(this.row){this.name=this.row.getValue("name");var e=this.row.getValue("path");e&&(this.path=e.name||"")}},e.decorators=[{type:c.Component,args:[{selector:"adf-name-location-cell",template:'\n        <div class="adf-name-location-cell-name">{{ name }}</div>\n        <div class="adf-name-location-cell-location" [title]="path">{{ path }}</div>\n    ',encapsulation:c.ViewEncapsulation.None,changeDetection:c.ChangeDetectionStrategy.OnPush,host:{"class":"adf-name-location-cell"},styles:[""]}]}],e.propDecorators={row:[{type:c.Input}]},e}(),Tt=function(){function e(e){this.searchService=e}return e.prototype.search=function(e,t,n,i,o){void 0===t&&(t=null),void 0===n&&(n=0),void 0===i&&(i=25);var r="";o&&o.length&&o.filter(function(e){return e!==t}).forEach(function(e){r+=" OR ANCESTOR:'workspace://SpacesStore/"+e+"'"});var s={query:{query:e+"* OR name:"+e+"*"},include:["path","allowableOperations"],paging:{maxItems:i,skipCount:n},filterQueries:O([{query:"TYPE:'cm:folder'"},{query:"NOT cm:creator:System"}],t?[{query:"ANCESTOR:'workspace://SpacesStore/"+t+"'"+r}]:[]),scope:{locations:["nodes"]}};return this.searchService.searchByQueryBody(s)},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.SearchService}]},e}(),Ft=function(){return!0},Dt=function(){function e(e,t,n,i){var o=this;this.contentNodeSelectorService=e,this.apiService=t,this.customResourcesService=n,this.preferences=i,this.currentFolderId=null,this.dropdownHideMyFiles=!1,this.dropdownSiteList=null,this.rowFilter=null,this.imageResolver=null,this.isSelectionValid=Ft,this.select=new c.EventEmitter,this.nodes=null,this.searchTerm="",this.showingSearchResults=!1,this.loadingSearchResults=!1,this.inDialog=!1,this._chosenNode=null,this.folderIdToShow=null,this.paginationStrategy=ee.Infinite,this.skipCount=0,this.infiniteScroll=!1,this.debounceSearch=200,this.searchInput=new l.FormControl,this.searchInput.valueChanges.pipe(s.debounceTime(this.debounceSearch)).subscribe(function(e){o.search(e)}),this.pageSize=this.preferences.paginationSize;var r={maxItems:this.pageSize,skipCount:0,totalItems:0,hasMoreItems:!1};this.pagination=new u.BehaviorSubject(r)}return Object.defineProperty(e.prototype,"chosenNode",{get:function(){return this._chosenNode},set:function(e){var t=null;(this._chosenNode=e)&&(t=[e]),this.select.next(t)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.folderIdToShow=this.currentFolderId,this.breadcrumbTransform=this.breadcrumbTransform?this.breadcrumbTransform:null,this.isSelectionValid=this.isSelectionValid?this.isSelectionValid:Ft},e.prototype.siteChanged=function(e){this.siteId=e.entry.guid,this.updateResults()},e.prototype.search=function(e){this.searchTerm=e,this.updateResults()},Object.defineProperty(e.prototype,"breadcrumbFolderNode",{get:function(){return this.showingSearchResults&&this.chosenNode?this.chosenNode:this.documentList.folderNode},enumerable:!0,configurable:!0}),e.prototype.clear=function(){this.clearSearch(),this.folderIdToShow=this.siteId||this.currentFolderId},e.prototype.clearSearch=function(){this.searchTerm="",this.nodes=null,this.skipCount=0,this.chosenNode=null,this.showingSearchResults=!1},e.prototype.updateResults=function(){0===this.searchTerm.length?this.clear():this.startNewSearch()},e.prototype.startNewSearch=function(){this.nodes=null,this.skipCount=0,this.chosenNode=null,this.folderIdToShow=null,this.querySearch()},e.prototype.updatePagination=function(e){this.infiniteScroll=!0,this.skipCount=e.skipCount,0<this.searchTerm.length&&this.querySearch()},e.prototype.querySearch=function(){var t=this;this.loadingSearchResults=!0,this.customResourcesService.hasCorrespondingNodeIds(this.siteId)?this.customResourcesService.getCorrespondingNodeIds(this.siteId).subscribe(function(e){t.contentNodeSelectorService.search(t.searchTerm,t.siteId,t.skipCount,t.pageSize,e).subscribe(t.showSearchResults.bind(t))},function(){t.showSearchResults({list:{entries:[]}})}):this.contentNodeSelectorService.search(this.searchTerm,this.siteId,this.skipCount,this.pageSize).subscribe(this.showSearchResults.bind(this))},e.prototype.showSearchResults=function(e){this.showingSearchResults=!0,this.loadingSearchResults=!1,this.nodes?this.documentList.data.loadPage(e,!0):this.nodes=e,this.pagination.next(e.list.pagination),this.highlight()},e.prototype.highlight=function(){var e=this;setTimeout(function(){e.highlighter.highlight(e.searchTerm)},0)},e.prototype.onFolderChange=function(){this.showingSearchResults=!1,this.infiniteScroll=!1,this.clearSearch()},e.prototype.onFolderLoaded=function(e){this.showingSearchResults||this.attemptNodeSelection(this.documentList.folderNode)},e.prototype.showBreadcrumbs=function(){return!this.showingSearchResults||this.chosenNode},e.prototype.getNextPageOfSearch=function(e){this.infiniteScroll=!0,this.skipCount=e.skipCount,0<this.searchTerm.length&&this.querySearch()},e.prototype.attemptNodeSelection=function(e){this.isSelectionValid(e)?this.chosenNode=e:this.resetChosenNode()},e.prototype.resetChosenNode=function(){this.chosenNode=null},e.prototype.onNodeSelect=function(e){this.attemptNodeSelection(e.detail.node.entry)},e.prototype.onNodeDoubleClick=function(e){var t=this,n=e.detail.node.entry;if(n&&n.guid){var i={maxItems:this.pageSize,skipCount:this.skipCount,include:["path","properties","allowableOperations"]};this.apiService.nodesApi.getNode(n.guid,i).then(function(e){t.documentList.performCustomSourceNavigation(e)})}},e.decorators=[{type:c.Component,args:[{selector:"adf-content-node-selector-panel",template:'<div class="adf-content-node-selector-content" (node-select)="onNodeSelect($event)">\n    <mat-form-field floatPlaceholder="never" class="adf-content-node-selector-content-input">\n        <input matInput\n            id="searchInput"\n            [formControl]="searchInput"\n            type="text"\n            placeholder="{{\'NODE_SELECTOR.SEARCH\' | translate}}"\n            [value]="searchTerm"\n            data-automation-id="content-node-selector-search-input">\n\n        <mat-icon *ngIf="searchTerm.length > 0"\n            matSuffix (click)="clear()"\n            class="adf-content-node-selector-content-input-icon"\n            data-automation-id="content-node-selector-search-clear">clear\n        </mat-icon>\n\n        <mat-icon *ngIf="searchTerm.length === 0"\n            matSuffix\n            class="adf-content-node-selector-content-input-icon"\n            data-automation-id="content-node-selector-search-icon">search\n        </mat-icon>\n\n    </mat-form-field>\n\n    <adf-sites-dropdown\n        class="full-width"\n        (change)="siteChanged($event)"\n        [placeholder]="\'NODE_SELECTOR.SELECT_LOCATION\'"\n        [hideMyFiles]="dropdownHideMyFiles"\n        [siteList]="dropdownSiteList"\n        data-automation-id="content-node-selector-sites-combo">\n    </adf-sites-dropdown>\n\n    <adf-toolbar>\n        <adf-toolbar-title>\n            <ng-container *ngIf="!showBreadcrumbs()">\n                <span class="search-results-label">{{ \'NODE_SELECTOR.SEARCH_RESULTS\' | translate }}</span>\n            </ng-container>\n            <adf-dropdown-breadcrumb *ngIf="showBreadcrumbs()"\n                class="adf-content-node-selector-content-breadcrumb"\n                (navigate)="clearSearch()"\n                [target]="documentList"\n                [transform]="breadcrumbTransform"\n                [folderNode]="breadcrumbFolderNode"\n                data-automation-id="content-node-selector-content-breadcrumb">\n            </adf-dropdown-breadcrumb>\n        </adf-toolbar-title>\n    </adf-toolbar>\n\n    <div\n        class="adf-content-node-selector-content-list"\n        [class.adf-content-node-selector-content-list-searchLayout]="showingSearchResults"\n        data-automation-id="content-node-selector-content-list">\n        <adf-document-list\n            #documentList\n            adf-highlight\n            adf-highlight-selector="adf-name-location-cell .adf-name-location-cell-name"\n            [showHeader]="false"\n            [node]="nodes"\n            [maxItems]="pageSize"\n            [rowFilter]="rowFilter"\n            [imageResolver]="imageResolver"\n            [currentFolderId]="folderIdToShow"\n            selectionMode="single"\n            [contextMenuActions]="false"\n            [contentActions]="false"\n            [allowDropFiles]="false"\n            (folderChange)="onFolderChange()"\n            (ready)="onFolderLoaded($event)"\n            (node-dblclick)="onNodeDoubleClick($event)"\n            data-automation-id="content-node-selector-document-list">\n            <empty-folder-content>\n                <ng-template>\n                    <div>{{ \'NODE_SELECTOR.NO_RESULTS\' | translate }}</div>\n                </ng-template>\n            </empty-folder-content>\n\n            <data-columns>\n                <data-column key="$thumbnail" type="image"></data-column>\n                <data-column key="name" type="text" class="full-width ellipsis-cell">\n                    <ng-template let-context>\n                        <adf-name-location-cell [row]="context.row"></adf-name-location-cell>\n                    </ng-template>\n                </data-column>\n                <data-column key="modifiedAt" type="date" format="timeAgo" class="adf-content-selector-modified-cell"></data-column>\n                <data-column key="modifiedByUser.displayName" type="text" class="adf-content-selector-modifier-cell"></data-column>\n                <data-column key="visibility" type="text"></data-column>\n            </data-columns>\n\n        </adf-document-list>\n\n        <adf-infinite-pagination\n            [target]="documentList"\n            [loading]="loadingSearchResults"\n            (loadMore)="getNextPageOfSearch($event)"\n            data-automation-id="content-node-selector-search-pagination">\n            {{ \'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE\' | translate }}\n        </adf-infinite-pagination>\n    </div>\n</div>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-content-node-selector-panel"},styles:[""]}]}],e.ctorParameters=function(){return[{type:Tt},{type:d.AlfrescoApiService},{type:J},{type:d.UserPreferencesService}]},e.propDecorators={currentFolderId:[{type:c.Input}],dropdownHideMyFiles:[{type:c.Input}],dropdownSiteList:[{type:c.Input}],rowFilter:[{type:c.Input}],imageResolver:[{type:c.Input}],pageSize:[{type:c.Input}],isSelectionValid:[{type:c.Input}],breadcrumbTransform:[{type:c.Input}],select:[{type:c.Output}],documentList:[{type:c.ViewChild,args:["documentList"]}],highlighter:[{type:c.ViewChild,args:[d.HighlightDirective]}]},e}(),wt=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[l.FormsModule,l.ReactiveFormsModule,d.CoreModule.forChild(),t.CommonModule,v,gt,bt,Qe],exports:[Dt,Ot,F],entryComponents:[Dt,F],declarations:[Dt,Ot,F]}]}],e}(),Nt="CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS";function Lt(e){var t=e.value;return!/([\*\"\<\>\\\/\?\:\|])/.test(t)?null:{message:Nt+".SPECIAL_CHARACTERS"}}function Rt(e){return"."!==(e.value||"").trim().split("").pop()?null:{message:Nt+".ENDING_DOT"}}function kt(e){return!!(e.value||"").trim()?null:{message:Nt+".ONLY_SPACES"}}var Pt=function(){function e(e,t,n,i,o){this.formBuilder=e,this.dialog=t,this.nodesApi=n,this.translation=i,this.data=o,this.folder=null,this.error=new c.EventEmitter,this.success=new c.EventEmitter,this.editTitle="CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE",this.createTitle="CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE",this.nodeType="cm:folder",o&&(this.editTitle=o.editTitle||this.editTitle,this.createTitle=o.createTitle||this.createTitle,this.nodeType=o.nodeType||this.nodeType)}return Object.defineProperty(e.prototype,"editing",{get:function(){return!!this.data.folder},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this.data.folder,t="",n="";if(e){var i=e.properties;t=e.name||"",n=i?i["cm:description"]:""}var o={name:[l.Validators.required,Lt,Rt,kt]};this.form=this.formBuilder.group({name:[t,o.name],description:[n]})},Object.defineProperty(e.prototype,"name",{get:function(){return(this.form.value.name||"").trim()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"description",{get:function(){return(this.form.value.description||"").trim()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"properties",{get:function(){return{"cm:title":this.name,"cm:description":this.description}},enumerable:!0,configurable:!0}),e.prototype.create=function(){var e=this,t=e.name,n=e.properties,i=e.nodeType,o=e.nodesApi,r=e.data.parentNodeId;return o.createFolder(r,{name:t,properties:n,nodeType:i})},e.prototype.edit=function(){var e=this.name,t=this.properties,n=this.nodesApi,i=this.data.folder.id;return n.updateNode(i,{name:e,properties:t})},e.prototype.submit=function(){var t=this,e=this.form,n=this.dialog,i=this.editing;e.valid&&(i?this.edit():this.create()).subscribe(function(e){t.success.emit(e),n.close(e)},function(e){return t.handleError(e)})},e.prototype.handleError=function(e){var t="CORE.MESSAGES.ERRORS.GENERIC";try{409===JSON.parse(e.message).error.statusCode&&(t="CORE.MESSAGES.ERRORS.EXISTENT_FOLDER")}catch(n){}return this.error.emit(this.translation.instant(t)),e},e.decorators=[{type:c.Component,args:[{selector:"adf-folder-dialog",template:'<h2 mat-dialog-title>\n    {{ (editing ? editTitle : createTitle) | translate }}\n</h2>\n\n<mat-dialog-content>\n    <form [formGroup]="form" (submit)="submit()">\n        <mat-form-field class="adf-full-width">\n            <input\n                id="adf-folder-name-input"\n                placeholder="{{ \'CORE.FOLDER_DIALOG.FOLDER_NAME.LABEL\' | translate }}"\n                matInput\n                required\n                [formControl]="form.controls[\'name\']"/>\n\n            <mat-hint *ngIf="form.controls[\'name\'].dirty">\n                <span *ngIf="form.controls[\'name\'].errors?.required">\n                    {{ \'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS.REQUIRED\' | translate }}\n                </span>\n\n                <span *ngIf="!form.controls[\'name\'].errors?.required && form.controls[\'name\'].errors?.message">\n                    {{ form.controls[\'name\'].errors?.message | translate }}\n                </span>\n            </mat-hint>\n        </mat-form-field>\n\n        <br />\n        <br />\n\n        <mat-form-field class="adf-full-width">\n            <textarea\n                id="adf-folder-description-input"\n                matInput\n                placeholder="{{ \'CORE.FOLDER_DIALOG.FOLDER_DESCRIPTION.LABEL\' | translate }}"\n                rows="4"\n                [formControl]="form.controls[\'description\']"></textarea>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class="adf-dialog-buttons">\n    <span class="adf-fill-remaining-space"></span>\n\n    <button\n        mat-button\n        id="adf-folder-cancel-button"\n        mat-dialog-close>\n        {{ \'CORE.FOLDER_DIALOG.CANCEL_BUTTON.LABEL\' | translate }}\n    </button>\n\n    <button class="adf-dialog-action-button"\n            id="adf-folder-create-button"\n            mat-button\n            (click)="submit()"\n            [disabled]="!form.valid">\n        {{\n        (editing\n        ? \'CORE.FOLDER_DIALOG.UPDATE_BUTTON.LABEL\'\n        : \'CORE.FOLDER_DIALOG.CREATE_BUTTON.LABEL\'\n        ) | translate\n        }}\n    </button>\n</mat-dialog-actions>\n',styles:[".adf-fill-remaining-space{flex:1 1 auto}.adf-full-width,.adf-lock-file-name .mat-checkbox-layout{width:100%}.adf-lock-file-name .mat-checkbox-label{text-overflow:ellipsis;overflow:hidden}.adf-lock-file-name .mat-checkbox-inner-container{margin:auto 8px auto 0}"]}]}],e.ctorParameters=function(){return[{type:l.FormBuilder},{type:n.MatDialogRef},{type:d.NodesApiService},{type:d.TranslationService},{type:undefined,decorators:[{type:c.Optional},{type:c.Inject,args:[n.MAT_DIALOG_DATA]}]}]},e.propDecorators={error:[{type:c.Output}],success:[{type:c.Output}]},e}(),Mt=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v,d.CoreModule.forChild(),l.FormsModule,l.ReactiveFormsModule,f.MatMomentDatetimeModule,h.MatDatetimepickerModule],declarations:[m,Pt,D,St],exports:[m,Pt,D,St],entryComponents:[m,Pt,D,St]}]}],e}(),xt=function(){function t(e,t){this.dialogRef=e,this.content=t,this.parentNodeId="-my-",this.title=null,this.nodeType="cm:folder",this.error=new c.EventEmitter,this.success=new c.EventEmitter}return t.prototype.onClick=function(e){e.preventDefault(),this.openDialog()},Object.defineProperty(t.prototype,"dialogConfig",{get:function(){var e=t.DIALOG_WIDTH;return{data:{parentNodeId:this.parentNodeId,createTitle:this.title,nodeType:this.nodeType},width:e+"px"}},enumerable:!0,configurable:!0}),t.prototype.openDialog=function(){var t=this,e=this.dialogRef,n=this.dialogConfig,i=this.content,o=e.open(Pt,n);o.componentInstance.error.subscribe(function(e){t.error.emit(e)}),o.componentInstance.success.subscribe(function(e){t.success.emit(e)}),o.afterClosed().subscribe(function(e){e&&i.folderCreate.next(e)})},t.DIALOG_WIDTH=400,t.decorators=[{type:c.Directive,args:[{selector:"[adf-create-folder]"}]}],t.ctorParameters=function(){return[{type:n.MatDialog},{type:d.ContentService}]},t.propDecorators={parentNodeId:[{type:c.Input,args:["adf-create-folder"]}],title:[{type:c.Input}],nodeType:[{type:c.Input}],error:[{type:c.Output}],success:[{type:c.Output}],onClick:[{type:c.HostListener,args:["click",["$event"]]}]},t}(),_t=function(){function t(e,t,n){this.dialogRef=e,this.elementRef=t,this.content=n,this.error=new c.EventEmitter,this.title=null,this.success=new c.EventEmitter}return t.prototype.onClick=function(e){e.preventDefault(),this.folder&&this.openDialog()},Object.defineProperty(t.prototype,"dialogConfig",{get:function(){var e=t.DIALOG_WIDTH;return{data:{folder:this.folder,editTitle:this.title},width:e+"px"}},enumerable:!0,configurable:!0}),t.prototype.openDialog=function(){var t=this,e=this.dialogRef,n=this.dialogConfig,i=this.content,o=e.open(Pt,n);o.componentInstance.error.subscribe(function(e){t.error.emit(e)}),o.componentInstance.success.subscribe(function(e){t.success.emit(e)}),o.afterClosed().subscribe(function(e){e&&i.folderEdit.next(e)})},t.DIALOG_WIDTH=400,t.decorators=[{type:c.Directive,args:[{selector:"[adf-edit-folder]"}]}],t.ctorParameters=function(){return[{type:n.MatDialog},{type:c.ElementRef},{type:d.ContentService}]},t.propDecorators={folder:[{type:c.Input,args:["adf-edit-folder"]}],error:[{type:c.Output}],title:[{type:c.Input}],success:[{type:c.Output}],onClick:[{type:c.HostListener,args:["click",["$event"]]}]},t}(),Ut=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v],declarations:[xt,_t],exports:[xt,_t]}]}],e}(),Vt=function(){function e(e){this.contentService=e,this.displayEmpty=!1,this.readOnly=!1,this.multi=!1,this._displayDefaultProperties=!0,this.editable=!1}return Object.defineProperty(e.prototype,"displayDefaultProperties",{get:function(){return this._displayDefaultProperties},set:function(e){this._displayDefaultProperties=e,this.onDisplayDefaultPropertiesChange()},enumerable:!0,configurable:!0}),e.prototype.onDisplayDefaultPropertiesChange=function(){this.expanded=!this._displayDefaultProperties},e.prototype.toggleEdit=function(){this.editable=!this.editable},e.prototype.toggleExpanded=function(){this.expanded=!this.expanded},e.prototype.hasPermission=function(){return this.contentService.hasPermission(this.node,d.PermissionsEnum.UPDATE)},e.decorators=[{type:c.Component,args:[{selector:"adf-content-metadata-card",template:'<mat-card *ngIf="node">\n    <mat-card-content>\n        <adf-content-metadata\n            [displayDefaultProperties]="displayDefaultProperties"\n            [expanded]="expanded"\n            [node]="node"\n            [displayEmpty]="displayEmpty"\n            [editable]="editable"\n            [multi]="multi"\n            [preset]="preset">\n        </adf-content-metadata>\n    </mat-card-content>\n    <mat-card-footer class="adf-content-metadata-card-footer" fxLayout="row" fxLayoutAlign="space-between stretch">\n        <div>\n            <button *ngIf="!readOnly && hasPermission()"\n                mat-icon-button\n                (click)="toggleEdit()"\n                [attr.title]="\'CORE.METADATA.ACTIONS.EDIT\' | translate"\n                data-automation-id="meta-data-card-toggle-edit">\n                <mat-icon>mode_edit</mat-icon>\n            </button>\n        </div>\n        <button *ngIf="displayDefaultProperties" mat-button (click)="toggleExpanded()" data-automation-id="meta-data-card-toggle-expand">\n            <ng-container *ngIf="!expanded">\n                <span data-automation-id="meta-data-card-toggle-expand-label">{{ \'ADF_VIEWER.SIDEBAR.METADATA.MORE_INFORMATION\' | translate }}</span>\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </ng-container>\n            <ng-container *ngIf="expanded">\n                <span data-automation-id="meta-data-card-toggle-expand-label">{{ \'ADF_VIEWER.SIDEBAR.METADATA.LESS_INFORMATION\' | translate }}</span>\n                <mat-icon>keyboard_arrow_up</mat-icon>\n            </ng-container>\n        </button>\n    </mat-card-footer>\n</mat-card>\n',encapsulation:c.ViewEncapsulation.None,host:{"class":"adf-content-metadata-card"},styles:[""]}]}],e.ctorParameters=function(){return[{type:d.ContentService}]},e.propDecorators={node:[{type:c.Input}],displayEmpty:[{type:c.Input}],preset:[{type:c.Input}],readOnly:[{type:c.Input}],multi:[{type:c.Input}],displayDefaultProperties:[{type:c.Input}]},e}(),Bt=function(){function e(e){this.fileSizePipe=e}return e.prototype.getProperties=function(e){var t=e.content?e.content.sizeInBytes:"",n=e.content?e.content.mimeTypeName:"",i=e.properties?e.properties["cm:author"]:"",o=e.properties?e.properties["cm:description"]:"",r=e.properties?e.properties["cm:title"]:"";return[new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.NAME",value:e.name,key:"name",editable:!0}),new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.TITLE",value:r,key:"properties.cm:title",editable:!0}),new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.CREATOR",value:e.createdByUser.displayName,key:"createdByUser.displayName",editable:!1}),new d.CardViewDateItemModel({label:"CORE.METADATA.BASIC.CREATED_DATE",value:e.createdAt,key:"createdAt",editable:!1}),new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.SIZE",value:t,key:"content.sizeInBytes",pipes:[{pipe:this.fileSizePipe}],editable:!1}),new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.MODIFIER",value:e.modifiedByUser.displayName,key:"modifiedByUser.displayName",editable:!1}),new d.CardViewDateItemModel({label:"CORE.METADATA.BASIC.MODIFIED_DATE",value:e.modifiedAt,key:"modifiedAt",editable:!1}),new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.MIMETYPE",value:n,key:"content.mimeTypeName",editable:!1}),new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.AUTHOR",value:i,key:"properties.cm:author",editable:!0}),new d.CardViewTextItemModel({label:"CORE.METADATA.BASIC.DESCRIPTION",value:o,key:"properties.cm:description",multiline:!0,editable:!0})]},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.FileSizePipe}]},e}(),jt="d:mltext",Ht="d:datetime",Qt="d:float",Gt="d:double",qt="d:boolean",zt=function(){function t(e){this.logService=e}return t.prototype.translateToCardViewGroups=function(e,n){var i=this;return e.map(function(e){var t=Object.assign({},e);return t.properties=i.translateArray(e.properties,n),t})},t.prototype.translateArray=function(e,t){var n=this;return e.map(function(e){return n.translate(e,t[e.name])})},t.prototype.translate=function(e,t){this.checkECMTypeValidity(e.dataType);var n,i={label:e.title,value:t,key:"properties."+e.name,"default":e.defaultValue,editable:!0};switch(e.dataType){case jt:n=new d.CardViewTextItemModel(Object.assign(i,{multiline:!0}));break;case"d:int":case"d:long":n=new d.CardViewIntItemModel(i);break;case Qt:case Gt:n=new d.CardViewFloatItemModel(i);break;case"d:date":n=new d.CardViewDateItemModel(i);break;case Ht:n=new d.CardViewDatetimeItemModel(i);break;case qt:n=new d.CardViewBoolItemModel(i);break;case"d:text":default:n=new d.CardViewTextItemModel(Object.assign(i,{multiline:!1}))}return n},t.prototype.checkECMTypeValidity=function(e){-1===t.RECOGNISED_ECM_TYPES.indexOf(e)&&this.logService.error("Unknown type for mapping: "+e)},t.RECOGNISED_ECM_TYPES=["d:text",jt,"d:date",Ht,"d:int","d:long",Qt,Gt,qt],t.decorators=[{type:c.Injectable}],t.ctorParameters=function(){return[{type:d.LogService}]},t}(),$t={properties:{}};function Yt(e,t){return e[t]}function Wt(e,t,n){var i=Yt(e,t)||$t;return"*"===n?function o(t){return Object.keys(t).map(function(e){return t[e]})}(i.properties):i.properties[n]}var Zt=function(){function e(e){this.config=e}return e.prototype.isGroupAllowed=function(e){return-1!==Object.keys(this.config).indexOf(e)},e.prototype.reorganiseByConfig=function(i){var o=this,e=this.config;return Object.keys(e).reduce(function(e,t){var n=o.getOrganisedPropertyGroup(i,t);return e.concat(n)},[]).filter(function(e){return 0<e.properties.length})},e.prototype.getOrganisedPropertyGroup=function(t,n){var e=Yt(t,n),i=[];if(e){var o=this.config[n],r=void 0;r="*"===o?Wt(t,n,o):o.map(function(e){return Wt(t,n,e)}).filter(function(e){return e!==undefined}),i=[{title:e.title,properties:r}]}return i},e}(),Xt=function(){function e(e){}return e.prototype.isGroupAllowed=function(e){return!0},e.prototype.reorganiseByConfig=function(i){return Object.keys(i).map(function(e){var t=i[e],n=t.properties;return Object.assign({},t,{properties:Object.keys(n).map(function(e){return n[e]})})})},e}(),Kt=function(){function e(e){this.config=e}return e.prototype.isGroupAllowed=function(e){return 0<this.getMatchingGroups(e).length},e.prototype.reorganiseByConfig=function(i){var n=this;return this.config.map(function(e){var t=n.flattenItems(e.items).reduce(function(e,t){var n=Wt(i,t.groupName,t.propertyName)||[];return e.concat(n)},[]);return{title:e.title,properties:t}})},e.prototype.flattenItems=function(e){return e.reduce(function(e,t){var n=(Array.isArray(t.properties)?t.properties:[t.properties]).map(function(e){return{groupName:t.aspect||t.type,propertyName:e}});return e.concat(n)},[])},e.prototype.getMatchingGroups=function(t){return this.config.map(function(e){return e.items}).reduce(function(e,t){return e.concat(t)},[]).filter(function(e){return e.aspect===t||e.type===t})},e}(),Jt=function(){function i(e,t){this.appConfigService=e,this.logService=t}return i.prototype.get=function(e){var t;void 0===e&&(e="default");try{t=this.appConfigService.config["content-metadata"].presets[e]}catch(n){e!==i.DEFAULT_PRESET_NAME&&this.logService.error("No content-metadata preset for: "+e),t=i.INDIFFERENT_PRESET}return this.createConfig(t)},i.prototype.createConfig=function(e){var t;return t=this.isLayoutOrientedPreset(e)?new Kt(e):this.isAspectOrientedPreset(e)?new Zt(e):new Xt(e),Object.freeze(t),t},i.prototype.isAspectOrientedPreset=function(e){return this.isObject(e)},i.prototype.isLayoutOrientedPreset=function(e){return Array.isArray(e)},i.prototype.isObject=function(e){return null!=e&&"object"==typeof e},i.INDIFFERENT_PRESET="*",i.DEFAULT_PRESET_NAME="default",i.decorators=[{type:c.Injectable}],i.ctorParameters=function(){return[{type:d.AppConfigService},{type:d.LogService}]},i}(),en=function(){function e(e){this.alfrescoApiService=e}return e.prototype.load=function(e){var t=this,n=e.map(function(e){return e.replace(":","_")}).map(function(e){return u.defer(function(){return t.alfrescoApiService.classesApi.getClass(e)})});return u.forkJoin(n).pipe(s.map(this.convertToObject))},e.prototype.convertToObject=function(e){return e.reduce(function(e,t){var n;return Object.assign({},e,((n={})[t.name]=t,n))},{})},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService}]},e}(),tn=function(){function e(e,t,n,i){this.basicPropertiesService=e,this.contentMetadataConfigFactory=t,this.propertyGroupTranslatorService=n,this.propertyDescriptorsService=i}return e.prototype.getBasicProperties=function(e){return u.of(this.basicPropertiesService.getProperties(e))},e.prototype.getGroupedProperties=function(t,e){var n=this;void 0===e&&(e="default");var i=u.of([]);if(t.aspectNames){var o=this.contentMetadataConfigFactory.get(e),r=t.aspectNames.concat(t.nodeType).filter(function(e){return o.isGroupAllowed(e)});0<r.length&&(i=this.propertyDescriptorsService.load(r).pipe(s.map(function(e){return o.reorganiseByConfig(e)}),s.map(function(e){return n.propertyGroupTranslatorService.translateToCardViewGroups(e,t.properties)})))}return i},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:Bt},{type:Jt},{type:zt},{type:en}]},e}(),nn=function(){function e(e,t,n,i,o){this.contentMetadataService=e,this.cardViewUpdateService=t,this.nodesApiService=n,this.logService=i,this.alfrescoApiService=o,this.editable=!1,this.displayEmpty=!1,this.expanded=!1,this.multi=!1,this.displayDefaultProperties=!0}return e.prototype.ngOnInit=function(){var t=this;this.disposableNodeUpdate=this.cardViewUpdateService.itemUpdated$.pipe(s.switchMap(this.saveNode.bind(this))).subscribe(function(e){Object.assign(t.node,e),t.alfrescoApiService.nodeUpdated.next(t.node)},function(e){return t.logService.error(e)}),this.loadProperties(this.node)},e.prototype.ngOnChanges=function(e){e.node&&!e.node.firstChange&&this.loadProperties(e.node.currentValue)},e.prototype.loadProperties=function(e){e&&(this.basicProperties$=this.contentMetadataService.getBasicProperties(e),this.groupedProperties$=this.contentMetadataService.getGroupedProperties(e,this.preset))},e.prototype.saveNode=function(e){var t=e.changed;return this.nodesApiService.updateNode(this.node.id,t)},e.prototype.ngOnDestroy=function(){this.disposableNodeUpdate.unsubscribe()},e.decorators=[{type:c.Component,args:[{selector:"adf-content-metadata",template:'<div class="adf-metadata-properties">\n    <mat-accordion displayMode="flat" [multi]="multi">\n        <mat-expansion-panel\n            *ngIf="displayDefaultProperties"\n            [expanded]="!expanded"\n            [hideToggle]="!expanded"\n            [attr.data-automation-id]="\'adf-metadata-group-properties\'" >\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{ \'CORE.METADATA.BASIC.HEADER\' | translate }}\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <adf-card-view\n                [properties]="basicProperties$ | async"\n                [editable]="editable"\n                [displayEmpty]="displayEmpty">\n            </adf-card-view>\n        </mat-expansion-panel>\n\n        <ng-container *ngIf="expanded">\n            <ng-container *ngIf="groupedProperties$ | async; else loading; let groupedProperties">\n                <div *ngFor="let group of groupedProperties; let first = first;" class="adf-metadata-grouped-properties-container">\n                    <mat-expansion-panel\n                    [attr.data-automation-id]="\'adf-metadata-group-\' + group.title"\n                    [expanded]="!displayDefaultProperties && first">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                {{ group.title | translate }}\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <adf-card-view\n                            [properties]="group.properties"\n                            [editable]="editable"\n                            [displayEmpty]="displayEmpty">\n                        </adf-card-view>\n                    </mat-expansion-panel>\n\n                </div>\n            </ng-container>\n            <ng-template #loading>\n                <mat-progress-bar mode="indeterminate"></mat-progress-bar>\n            </ng-template>\n        </ng-container>\n    </mat-accordion>\n</div>\n',host:{"class":"adf-content-metadata"},encapsulation:c.ViewEncapsulation.None,styles:[""]}]}],e.ctorParameters=function(){return[{type:tn},{type:d.CardViewUpdateService},{type:d.NodesApiService},{type:d.LogService},{type:d.AlfrescoApiService}]},e.propDecorators={node:[{type:c.Input}],editable:[{type:c.Input}],displayEmpty:[{type:c.Input}],expanded:[{type:c.Input}],multi:[{type:c.Input}],preset:[{type:c.Input}],displayDefaultProperties:[{type:c.Input}]},e}(),on=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,v,i.FlexLayoutModule,d.CoreModule.forChild()],exports:[nn,Vt],declarations:[nn,Vt]}]}],e}(),rn=function sn(e){this.isInherited=!1,e&&(this.authorityId=e.authorityId,this.name=e.name,this.accessStatus=e.accessStatus,this.isInherited=null!==e.isInherited&&e.isInherited!==undefined&&e.isInherited,this.icon=e.icon?e.icon:"vpn_key")},an=function(){function e(e,t,n,i){this.apiService=e,this.searchApiService=t,this.nodeService=n,this.translation=i}return e.prototype.getNodeRoles=function(n){var i=this,e=this.buildRetrieveSiteQueryBody(n.path.elements);return this.searchApiService.searchByQueryBody(e).pipe(s.switchMap(function(e){if(0<e.list.entries.length){var t=e.list.entries[0].entry.name;return i.getGroupMembersBySiteName(t)}return u.of(n.permissions.settable)}))},e.prototype.updatePermissionRole=function(e,t){var n={permissions:{locallySet:[]}},i=e.permissions.locallySet.map(function(e){return e.authorityId}).indexOf(t.authorityId);return n.permissions.locallySet=n.permissions.locallySet.concat(e.permissions.locallySet),-1!==i?n.permissions.locallySet[i]=t:n.permissions.locallySet.push(t),this.nodeService.updateNode(e.id,n)},e.prototype.updateNodePermissions=function(e,i){var o=this;return this.nodeService.getNode(e).pipe(s.switchMap(function(t){return o.getNodeRoles(t).pipe(s.switchMap(function(e){return u.of({node:t,nodeRoles:e})}))}),s.switchMap(function(e){var t=e.node,n=e.nodeRoles;return o.updateLocallySetPermissions(t,i,n)}))},e.prototype.updateLocallySetPermissions=function(e,t,n){var i={permissions:{locallySet:[]}},o=this.transformNodeToPermissionElement(t,n[0]),r=this.getDuplicatedPermissions(e.permissions.locallySet,o);if(0<r.length){var s=r.map(function(e){return"authority -> "+e.authorityId+" / role -> "+e.name}).join(", "),a=this.translation.instant("PERMISSION_MANAGER.ERROR.DUPLICATE-PERMISSION",{list:s});return u.throwError(a)}return i.permissions.locallySet=e.permissions.locallySet?e.permissions.locallySet.concat(o):o,this.nodeService.updateNode(e.id,i)},e.prototype.getDuplicatedPermissions=function(n,e){var i=this,o=[];return n&&e.forEach(function(t){var e=n.find(function(e){return i.isEqualPermission(e,t)});e&&o.push(e)}),o},e.prototype.isEqualPermission=function(e,t){return e.accessStatus===t.accessStatus&&e.authorityId===t.authorityId&&e.name===t.name},e.prototype.transformNodeToPermissionElement=function(e,t){return e.map(function(e){return{authorityId:e.entry.properties["cm:authorityName"]?e.entry.properties["cm:authorityName"]:e.entry.properties["cm:userName"],name:t,accessStatus:"ALLOWED"}})},e.prototype.removePermission=function(e,t){var n={permissions:{locallySet:[]}},i=e.permissions.locallySet.map(function(e){return e.authorityId}).indexOf(t.authorityId);if(-1!==i)return e.permissions.locallySet.splice(i,1),n.permissions.locallySet=e.permissions.locallySet,this.nodeService.updateNode(e.id,n)},e.prototype.getGroupMembersBySiteName=function(n){var i=this,e="GROUP_site_"+n;return this.getGroupMemeberByGroupName(e).pipe(s.map(function(e){var t=[];return e.list.entries.forEach(function(e){t.push(i.formattedRoleName(e.entry.displayName,"site_"+n))}),t}))},e.prototype.getGroupMemeberByGroupName=function(e,t){return u.from(this.apiService.groupsApi.getGroupMembers(e,t))},e.prototype.formattedRoleName=function(e,t){return e.replace(t+"_","")},e.prototype.buildRetrieveSiteQueryBody=function(e){return{query:{query:e.map(function(e){return'name: "'+e.name+'"'}).join(" OR ")},paging:{maxItems:100,skipCount:0},include:["aspectNames","properties"],filterQueries:[{query:"TYPE:'st:site'"}]}},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:d.AlfrescoApiService},{type:d.SearchService},{type:d.NodesApiService},{type:d.TranslationService}]},e}(),ln=function(){function e(e,t){this.nodeService=e,this.nodePermissionService=t,this.nodeId="",this.update=new c.EventEmitter,this.error=new c.EventEmitter}return e.prototype.ngOnInit=function(){this.fetchNodePermissions()},e.prototype.reload=function(){this.fetchNodePermissions()},e.prototype.fetchNodePermissions=function(){var t=this;this.nodeService.getNode(this.nodeId).subscribe(function(e){t.actualNode=e,t.permissionList=t.getPermissionList(e),t.nodePermissionService.getNodeRoles(e).subscribe(function(e){t.settableRoles=e})})},e.prototype.getPermissionList=function(e){var n=[];return e.permissions.locallySet&&e.permissions.locallySet.map(function(e){var t=new rn(e);n.push(t)}),e.permissions.inherited&&e.permissions.inherited.map(function(e){var t=new rn(e);t.isInherited=!0,n.push(t)}),n},e.prototype.saveNewRole=function(e,t){var n=this,i=this.buildUpdatedPermission(e.value,t);this.nodePermissionService.updatePermissionRole(this.actualNode,i).subscribe(function(e){n.update.emit(i)})},e.prototype.buildUpdatedPermission=function(e,t){var n={};return n.accessStatus=t.accessStatus,n.name=e,n.authorityId=t.authorityId,n},e.prototype.removePermission=function(e){var t=this;this.nodePermissionService.removePermission(this.actualNode,e).subscribe(function(e){t.update.emit(e)},function(e){return t.error.emit(e)})},e.decorators=[{type:c.Component,args:[{selector:"adf-permission-list",template:'<div id="adf-permission-display-container" class="adf-display-permission-container">\n\n    <div *ngIf="!permissionList || !permissionList.length" id="adf-no-permissions-template">\n        <div #ref>\n            <ng-content select="adf-no-permission-template"></ng-content>\n        </div>\n\n        <p *ngIf="ref.children.length == 0">\n            {{ \'PERMISSION_MANAGER.PERMISSION_DISPLAY.NO_PERMISSIONS\' | translate }}\n        </p>\n    </div>\n\n    <adf-datatable [rows]="permissionList" class="adf-datatable-permission" *ngIf="permissionList && permissionList.length">\n        <data-columns>\n            <data-column key="icon" type="icon" [sortable]="false">\n            </data-column>\n            <data-column title="{{\'PERMISSION_MANAGER.PERMISSION_DISPLAY.AUTHORITY_ID\' | translate}}" key="authorityId"></data-column>\n            <data-column title="{{\'PERMISSION_MANAGER.PERMISSION_DISPLAY.ROLE\' | translate}}" key="name">\n                <ng-template let-entry="$implicit">\n                    <mat-form-field *ngIf="!entry.row.getValue(\'isInherited\') else show_only_label">\n                        <mat-select id="adf-select-role-permission"\n                                    [placeholder]="entry.data.getValue(entry.row, entry.col)"\n                                    value="{{entry.data.getValue(entry.row, entry.col)}}"\n                                    (selectionChange)="saveNewRole($event, entry.row.obj)">\n                          <mat-option *ngFor="let role of settableRoles" [value]="role">\n                            {{ role }}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <ng-template #show_only_label>\n                          <span>{{entry.data.getValue(entry.row, entry.col)}}</span>\n                      </ng-template>\n                </ng-template>\n            </data-column>\n            <data-column title="{{\'PERMISSION_MANAGER.PERMISSION_DISPLAY.INHERITED\' | translate}}" key="isInherited">\n                <ng-template let-entry="$implicit">\n                    <mat-chip-list>\n                        <mat-chip *ngIf="!!entry.data.getValue(entry.row, entry.col) else locally_set_chip"\n                                id="adf-permission-inherited-label"\n                                color="primary" selected="true">{{\'PERMISSION_MANAGER.PERMISSION_DISPLAY.INHERITED\' | translate}}</mat-chip>\n                    </mat-chip-list>\n                    <ng-template #locally_set_chip>\n                            <mat-chip-list>\n                                    <mat-chip id="adf-permission-locallyset-label"\n                                              color="accent" selected="true">\n                                              {{\'PERMISSION_MANAGER.PERMISSION_DISPLAY.LOCALLY_SET\' | translate}}\n                                    </mat-chip>\n                            </mat-chip-list>\n                    </ng-template>\n                </ng-template>\n            </data-column>\n            <data-column key="delete">\n            <ng-template let-entry="$implicit">\n                <button *ngIf="!entry.row.getValue(\'isInherited\')" mat-icon-button color="primary" (click)="removePermission(entry.row.obj)">\n                    <mat-icon>highlight_off</mat-icon>\n                </button>\n            </ng-template>\n        </data-column>\n        </data-columns>\n    </adf-datatable>\n</div>\n\n',encapsulation:c.ViewEncapsulation.None,styles:[""]}]}],e.ctorParameters=function(){return[{type:d.NodesApiService},{type:an}]},e.propDecorators={nodeId:[{type:c.Input}],update:[{type:c.Output}],error:[{type:c.Output}]},e}(),cn=function(){function e(){}return e.decorators=[{type:c.Component,args:[{selector:"adf-no-permission-template",template:"<ng-content></ng-content>"}]}],e}(),dn=function(){function e(e,t){this.nodeService=e,this.contentService=t,this.updated=new c.EventEmitter,this.error=new c.EventEmitter}return e.prototype.onInheritPermissionClicked=function(){var n=this;this.nodeService.getNode(this.nodeId).subscribe(function(e){if(n.contentService.hasPermission(e,d.PermissionsEnum.UPDATEPERMISSIONS)){var t={permissions:{isInheritanceEnabled:!e.permissions.isInheritanceEnabled}};n.nodeService.updateNode(n.nodeId,t,{include:["permissions"]}).subscribe(function(e){n.updated.emit(e)},function(e){return n.error.emit(e)})}else n.error.emit("PERMISSION_MANAGER.ERROR.NOT-ALLOWED")})},e.decorators=[{type:c.Directive,args:[{selector:"button[adf-inherit-permission], mat-button-toggle[adf-inherit-permission]",host:{role:"button","(click)":"onInheritPermissionClicked()"}}]}],e.ctorParameters=function(){return[{type:d.NodesApiService},{type:d.ContentService}]},e.propDecorators={nodeId:[{type:c.Input}],updated:[{type:c.Output}],error:[{type:c.Output}]},e}(),un=function(){function e(e){this.data=e,this.currentSelection=[]}return e.prototype.onSelect=function(e){this.currentSelection=e},e.prototype.onAddClicked=function(){this.data.confirm.next(this.currentSelection),this.data.confirm.complete()},e.decorators=[{type:c.Component,args:[{selector:"adf-add-permission-dialog",template:'<h2 mat-dialog-title id="add-permission-dialog-title">\n    {{(data?.title ? data?.title : \'PERMISSION_MANAGER.ADD-PERMISSION.BASE-DIALOG-TITLE\') | translate}}\n</h2>\n<mat-dialog-content>\n    <adf-add-permission-panel\n        (select)="onSelect($event)">\n    </adf-add-permission-panel>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close id="add-permission-dialog-close-button">{{\'PERMISSION_MANAGER.ADD-PERMISSION.CLOSE-ACTION\' | translate}}</button>\n    <button mat-button id="add-permission-dialog-confirm-button" [mat-dialog-close]="true"\n            class="choose-action"\n            [disabled]="currentSelection?.length === 0"\n            (click)="onAddClicked()">{{\'PERMISSION_MANAGER.ADD-PERMISSION.ADD-ACTION\' | translate}}</button>\n</mat-dialog-actions>\n\n',encapsulation:c.ViewEncapsulation.None,styles:[""]}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:c.Inject,args:[n.MAT_DIALOG_DATA]}]}]},e.propDecorators={addPermissionComponent:[{type:c.ViewChild,args:["addPermission"]}]},e}(),pn=function(){function e(e,t,n){this.dialog=e,this.nodePermissionService=t,this.contentService=n}return e.prototype.openAddPermissionDialog=function(e,t){if(this.contentService.hasPermission(e,d.PermissionsEnum.UPDATEPERMISSIONS)){var n=new u.Subject;n.subscribe({complete:this.close.bind(this)});var i={nodeId:e.id,title:t,confirm:n};return this.openDialog(i,"adf-add-permission-dialog","630px"),n}var o=new Error(JSON.stringify({error:{statusCode:403}}));return o.message="PERMISSION_MANAGER.ERROR.NOT-ALLOWED",u.throwError(o)},e.prototype.openDialog=function(e,t,n){this.dialog.open(un,{data:e,panelClass:t,width:n})},e.prototype.close=function(){this.dialog.closeAll()},e.prototype.updateNodePermissionByDialog=function(t,n){var i=this;return this.contentService.getNode(t,{include:["allowableOperations"]}).pipe(s.switchMap(function(e){return i.openAddPermissionDialog(e.entry,n).pipe(s.switchMap(function(e){return i.nodePermissionService.updateNodePermissions(t,e)}))}))},e.decorators=[{type:c.Injectable}],e.ctorParameters=function(){return[{type:n.MatDialog},{type:an},{type:d.ContentService}]},e}(),hn=function(){function e(){}return e.prototype.generateQueryBody=function(e,t,n){return{query:{query:e?"authorityName:*"+e+"* OR userName:*"+e+"*":e},include:["properties","aspectNames"],paging:{maxItems:t,skipCount:n},filterQueries:[{query:"TYPE:'cm:authority'"}]}},e}(),fn=function(){function e(){var t=this;this.select=new c.EventEmitter,this.searchInput=new l.FormControl,this.searchedWord="",this.debounceSearch=200,this.selectedItems=[],this.EVERYONE={entry:{properties:{"cm:authorityName":"GROUP_EVERYONE"}}},this.searchInput.valueChanges.pipe(s.debounceTime(this.debounceSearch)).subscribe(function(e){(t.searchedWord=e)||t.search.resetResults()})}return e.prototype.elementClicked=function(e){this.isAlreadySelected(e)?this.selectedItems.splice(this.selectedItems.indexOf(e),1):this.selectedItems.push(e),this.select.emit(this.selectedItems)},e.prototype.isAlreadySelected=function(e){return 0<=this.selectedItems.indexOf(e)},e.prototype.clearSearch=function(){this.searchedWord="",this.selectedItems.splice(0,this.selectedItems.length),this.search.resetResults()},e.decorators=[{type:c.Component,args:[{selector:"adf-add-permission-panel",template:'<mat-form-field floatPlaceholder="never" class="adf-permission-search-input">\n    <input matInput\n        id="searchInput"\n        [formControl]="searchInput"\n        type="text"\n        placeholder="{{\'PERMISSION_MANAGER.ADD-PERMISSION.SEARCH\' | translate}}"\n        [value]="searchedWord">\n\n    <mat-icon *ngIf="searchedWord?.length > 0"\n        class="adf-permission-search-icon"\n        data-automation-id="adf-permission-clear-input"\n        id="adf-permission-clear-input"\n        matSuffix (click)="clearSearch()">clear\n    </mat-icon>\n\n    <mat-icon *ngIf="searchedWord?.length === 0"\n        class="adf-permission-search-icon"\n        data-automation-id="adf-permission-search-icon"\n        matSuffix>search\n    </mat-icon>\n</mat-form-field>\n\n<div *ngIf="searchedWord?.length === 0" id="adf-add-permission-type-search">\n    <span class="adf-permission-start-message">{{\'PERMISSION_MANAGER.ADD-PERMISSION.TYPE-MESSAGE\' | translate}}</span>\n</div>\n\n<adf-search #search [searchTerm]="searchedWord"\n        id="adf-add-permission-authority-results"\n        class="adf-permission-result-list"\n        [class.adf-permission-result-list-search]="searchedWord.length === 0">\n<ng-template let-data>\n    <mat-selection-list class="adf-permission-result-list-elements">\n        <mat-list-option\n            id="adf-add-permission-group-everyone"\n            class="adf-list-option-item"\n            (click)="elementClicked(EVERYONE)">\n            <mat-icon mat-list-icon id="add-group-icon">\n                group_add\n            </mat-icon>\n            <p>\n                {{\'PERMISSION_MANAGER.ADD-PERMISSION.EVERYONE\' | translate}}\n            </p>\n        </mat-list-option>\n\n        <mat-list-option *ngFor="let item of data?.list?.entries; let idx = index"\n                            (click)="elementClicked(item)"\n                            class="adf-list-option-item"\n                            id="result_option_{{idx}}">\n            <mat-icon mat-list-icon id="add-group-icon"\n                      *ngIf="item?.entry?.nodeType === \'cm:authorityContainer\' else show_person_icon">\n                      group_add\n            </mat-icon>\n            <ng-template #show_person_icon>\n                <mat-icon id="add-person-icon" mat-list-icon>person_add</mat-icon>\n            </ng-template>\n            <p>\n             {{item.entry?.properties[\'cm:authorityName\']?\n                                    item.entry?.properties[\'cm:authorityName\'] :\n                                    item.entry?.properties[\'cm:firstName\']}}</p>\n        </mat-list-option>\n    </mat-selection-list>\n</ng-template>\n</adf-search>\n',encapsulation:c.ViewEncapsulation.None,providers:[{provide:d.SearchConfigurationService,useClass:hn},d.SearchService],styles:[""]}]}],e.ctorParameters=function(){return[]},e.propDecorators={search:[{type:c.ViewChild,args:["search"]}],select:[{type:c.Output}]},e}(),mn=function(){function e(e,t,n){var i=this;this.nodePermissionService=e,this.nodeApiService=t,this.contentService=n,this.success=new c.EventEmitter,this.error=new c.EventEmitter,this.selectedItems=[],this.nodeApiService.getNode(this.nodeId).subscribe(function(e){return i.currentNode=e})}return e.prototype.onSelect=function(e){this.selectedItems=e},e.prototype.isAddEnabled=function(){return this.contentService.hasPermission(this.currentNode,d.PermissionsEnum.UPDATEPERMISSIONS)&&0!==this.selectedItems.length},e.prototype.applySelection=function(){var t=this;this.contentService.hasPermission(this.currentNode,d.PermissionsEnum.UPDATEPERMISSIONS)&&this.nodePermissionService.updateNodePermissions(this.nodeId,this.selectedItems).subscribe(function(e){t.success.emit(e)},function(e){t.error.emit(e)})},e.decorators=[{type:c.Component,args:[{selector:"adf-add-permission",template:'<adf-add-permission-panel\n    (select)="onSelect($event)">\n</adf-add-permission-panel>\n<div id="adf-add-permission-actions">\n   <button mat-button\n          id="adf-add-permission-action-button"\n          class="adf-permission-action"\n          [disabled]="!isAddEnabled()"\n          (click)="applySelection()">\n     {{\'PERMISSION_MANAGER.ADD-PERMISSION.ADD-ACTION\' | translate}}\n    </button>\n</div>\n\n\n',encapsulation:c.ViewEncapsulation.None,styles:[""]}]}],e.ctorParameters=function(){return[{type:an},{type:d.NodesApiService},{type:d.ContentService}]},e.propDecorators={nodeId:[{type:c.Input}],success:[{type:c.Output}],error:[{type:c.Output}]},e}(),gn=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[d.CoreModule.forChild(),t.CommonModule,l.FormsModule,l.ReactiveFormsModule,v,ht],declarations:[ln,cn,fn,dn,mn,un],entryComponents:[fn,mn,un],exports:[ln,cn,fn,dn,mn,un]}]}],e}(),yn=function(){function e(e,t,n,i,o,r){this.sharedLinksApiService=e,this.dialogRef=t,this.dialog=n,this.nodesApiService=i,this.contentService=o,this.data=r,this.subscriptions=[],this.minDate=a().add(1,"d"),this.isFileShared=!1,this.isDisabled=!1,this.form=new l.FormGroup({sharedUrl:new l.FormControl(""),time:new l.FormControl({value:"",disabled:!1})})}return e.prototype.ngOnInit=function(){var t=this;if(this.canUpdate||this.form.controls.time.disable(),this.subscriptions.push(this.form.valueChanges.pipe(s.skip(1),s.tap(function(e){t.updateNode(e)})).subscribe(function(e){return t.updateEntryExpiryDate(e)})),this.data.node&&this.data.node.entry){this.fileName=this.data.node.entry.name,this.baseShareUrl=this.data.baseShareUrl;var e=this.data.node.entry.properties;e&&!e["qshare:sharedId"]?this.createSharedLinks(this.data.node.entry.id):(this.sharedId=e["qshare:sharedId"],this.isFileShared=!0,this.updateForm())}},e.prototype.ngOnDestroy=function(){this.subscriptions.forEach(function(e){return e.unsubscribe})},e.prototype.removeShare=function(){this.deleteSharedLink(this.sharedId)},e.prototype.onSlideShareChange=function(e){e.checked?this.createSharedLinks(this.data.node.entry.id):this.openConfirmationDialog()},Object.defineProperty(e.prototype,"canUpdate",{get:function(){return this.contentService.hasPermission(this.data.node.entry,"update")},enumerable:!0,configurable:!0}),e.prototype.openConfirmationDialog=function(){var t=this;this.isFileShared=!1,this.dialog.open(St,{data:{title:"SHARE.CONFIRMATION.DIALOG-TITLE",message:"SHARE.CONFIRMATION.MESSAGE",yesLabel:"SHARE.CONFIRMATION.REMOVE",noLabel:"SHARE.CONFIRMATION.CANCEL"},minWidth:"250px",closeOnNavigation:!0}).beforeClose().subscribe(function(e){e?t.deleteSharedLink(t.sharedId):t.isFileShared=!0})},e.prototype.createSharedLinks=function(e){var t=this;this.isDisabled=!0,this.sharedLinksApiService.createSharedLinks(e).subscribe(function(e){e.entry&&(t.sharedId=e.entry.id,t.data.node.entry.properties["qshare:sharedId"]=t.sharedId,t.isDisabled=!1,t.isFileShared=!0,t.updateForm())},function(){t.isDisabled=!1,t.isFileShared=!1})},e.prototype.deleteSharedLink=function(e){var t=this;this.isDisabled=!0,this.sharedLinksApiService.deleteSharedLink(e).subscribe(function(){t.data.node.entry.properties["qshare:sharedId"]=null,t.data.node.entry.properties["qshare:expiryDate"]=null,t.dialogRef.close(!1)},function(){t.isDisabled=!1,t.isFileShared=!1})},e.prototype.updateForm=function(){var e=this.data.node.entry.properties["qshare:expiryDate"];this.form.setValue({sharedUrl:""+this.baseShareUrl+this.sharedId,time:e||null})},e.prototype.updateNode=function(e){return this.nodesApiService.updateNode(this.data.node.entry.id,{properties:{"qshare:expiryDate":e.time?e.time.utc().format():null}})},e.prototype.updateEntryExpiryDate=function(e){this.data.node.entry.properties["qshare:expiryDate"]=e.time?e.time.local():null},e.decorators=[{type:c.Component,args:[{selector:"adf-share-dialog",template:'<div class="adf-share-link__dialog-content">\n    <h1 data-automation-id="adf-share-dialog-title"\n        class="adf-share-link__title">\n        {{ \'SHARE.DIALOG-TITLE\' | translate }} {{ fileName }}\n    </h1>\n\n    <mat-dialog-content>\n        <p class="adf-share-link__info">{{ \'SHARE.DESCRIPTION\' | translate }}</p>\n\n        <div class="adf-share-link--row">\n            <h1 class="adf-share-link__label">{{ \'SHARE.TITLE\' | translate }}</h1>\n\n            <mat-slide-toggle\n                color="primary"\n                data-automation-id="adf-share-toggle"\n                [checked]="isFileShared"\n                [disabled]="!canUpdate || isDisabled"\n                (change)="onSlideShareChange($event)">\n            </mat-slide-toggle>\n        </div>\n\n        <form [formGroup]="form">\n            <mat-form-field class="full-width">\n                <input #sharedLinkInput\n                    data-automation-id="adf-share-link"\n                    class="adf-share-link__input"\n                    matInput\n                    cdkFocusInitial\n                    placeholder="{{ \'SHARE.PUBLIC-LINK\' | translate }}"\n                    formControlName="sharedUrl"\n                    readonly="readonly">\n                    <mat-icon class="input-action" matSuffix\n                          [clipboard-notification]="\'SHARE.CLIPBOARD-MESSAGE\' | translate"\n                          [adf-clipboard]="sharedLinkInput">\n                        link\n                    </mat-icon>\n            </mat-form-field>\n\n            <h1 class="adf-share-link__label">{{ \'SHARE.EXPIRES\' | translate }}</h1>\n            <mat-form-field class="full-width">\n                <mat-datetimepicker-toggle [for]="datetimePicker" matSuffix></mat-datetimepicker-toggle>\n                <mat-datetimepicker #datetimePicker type="datetime" openOnFocus="true" timeInterval="1"></mat-datetimepicker>\n                <input class="adf-share-link__input"\n                    matInput\n                    [min]="minDate"\n                    formControlName="time"\n                    [matDatetimepicker]="datetimePicker">\n            </mat-form-field>\n        </form>\n    </mat-dialog-content>\n\n    <div mat-dialog-actions>\n        <button\n            data-automation-id="adf-share-dialog-close"\n            mat-button color="primary" mat-dialog-close>\n            {{ \'SHARE.CLOSE\' | translate }}\n        </button>\n    </div>\n</div>\n',host:{"class":"adf-share-dialog"},encapsulation:c.ViewEncapsulation.None,styles:[".adf-share-link-dialog .adf-share-link__dialog-content{display:flex;flex-direction:column}.adf-share-link-dialog .adf-share-link__label{letter-spacing:-.4px;line-height:2;font-weight:400;font-style:normal;font-stretch:normal;font-size:16px;opacity:.87;flex:1 1 auto}.adf-share-link-dialog .adf-share-link__title{letter-spacing:-.4px;line-height:2;font-weight:400;font-style:normal;font-stretch:normal;font-size:16px;opacity:.87}.adf-share-link-dialog .adf-share-link__info{letter-spacing:-.4px;line-height:2;font-weight:400;font-style:normal;font-stretch:normal;opacity:.87;opacity:.54;font-size:13px}.adf-share-link-dialog .adf-share-link--row{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center}.adf-share-link-dialog .adf-share-link__input{opacity:.54}.adf-share-link-dialog .input-action{cursor:pointer}.adf-share-link-dialog .full-width{width:100%}.adf-share-link-dialog .mat-form-field-infix{border-top:unset}.adf-share-link-dialog .mat-dialog-actions{justify-content:flex-end}.adf-share-link-dialog .mat-dialog-actions>button{text-transform:uppercase}.adf-share-link-dialog .mat-form-field-flex{align-items:center}"]}]}],e.ctorParameters=function(){return[{type:d.SharedLinksApiService},{type:n.MatDialogRef},{type:n.MatDialog},{type:d.NodesApiService},{type:d.ContentService},{type:undefined,decorators:[{type:c.Inject,args:[n.MAT_DIALOG_DATA]}]}]},e.propDecorators={sharedLinkInput:[{type:c.ViewChild,args:["sharedLinkInput"]}]},e}(),vn=function(){function e(e,t){this.dialog=e,this.zone=t,this.isFile=!1,this.isShared=!1}return e.prototype.onClick=function(){this.node&&this.shareNode(this.node)},e.prototype.shareNode=function(e){e&&e.entry&&e.entry.isFile&&this.dialog.open(yn,{width:"600px",panelClass:"adf-share-link-dialog",data:{node:e,baseShareUrl:this.baseShareUrl}})},e.prototype.ngOnChanges=function(){var e=this;this.zone.onStable.subscribe(function(){e.node&&(e.isFile=e.node.entry.isFile,e.isShared=e.node.entry.properties["qshare:sharedId"])})},e.decorators=[{type:c.Directive,args:[{selector:"[adf-share]",exportAs:"adfShare"}]}],e.ctorParameters=function(){return[{type:n.MatDialog},{type:c.NgZone}]},e.propDecorators={node:[{type:c.Input,args:["adf-share"]}],baseShareUrl:[{type:c.Input}],onClick:[{type:c.HostListener,args:["click"]}]},e}(),bn=function(){function e(){}return e.forRoot=function(){return{ngModule:e}},e.forChild=function(){return{ngModule:e}},e.decorators=[{type:c.NgModule,args:[{imports:[d.CoreModule.forChild(),t.CommonModule,v],declarations:[yn,vn],exports:[yn,vn],entryComponents:[yn]}]}],e}();
/*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */function Sn(){return[R,tn,en,Jt,Bt,zt,Ge,lt,Tt,w,T,le,ae,se,J,pn,an,x]}var En=function(){function e(){}return e.decorators=[{type:c.NgModule,args:[{imports:[d.CoreModule.forChild(),M,B,t.CommonModule,H,l.FormsModule,l.ReactiveFormsModule,Mt,ht,Qe,He,v,gt,bt,wt,bn,on,Ut,L,gn,Ct],exports:[M,B,H,Qe,He,ht,gt,bt,wt,bn,on,Mt,Ut,L,gn,Ct]}]}],e}(),In={name:"adf-content-services",source:"assets/adf-content-services"},An=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:O(Sn(),[{provide:d.TRANSLATION_PROVIDER,multi:!0,useValue:{name:"adf-content-services",source:"assets/adf-content-services"}}])}},e.forChild=function(){return{ngModule:En}},e.decorators=[{type:c.NgModule,args:[{imports:[d.CoreModule.forChild(),M,B,t.CommonModule,H,l.FormsModule,l.ReactiveFormsModule,Mt,ht,Qe,He,v,gt,bt,wt,bn,on,Ut,L,gn,Ct],providers:O(Sn(),[{provide:d.TRANSLATION_PROVIDER,multi:!0,useValue:In}]),exports:[M,B,H,Qe,He,ht,gt,bt,wt,bn,on,Mt,Ut,L,gn,Ct]}]}],e}();e.NodeDownloadDirective=g,e.ContentDirectiveModule=L,e.RatingComponent=k,e.LikeComponent=P,e.RatingService=R,e.SocialModule=M,e.TagActionsComponent=_,e.TagListComponent=U,e.TagNodeListComponent=V,e.TagService=x,e.TagModule=B,e.WebscriptComponent=j,e.WebScriptModule=H,e.PaginationStrategy=ee,e.DocumentListComponent=te,e.NodeEntityEvent=X,e.NodeEntryEvent=K,e.ContentColumnComponent=ie,e.ContentColumnListComponent=ne,e.ContentActionComponent=de,e.ContentActionListComponent=ce,e.EmptyFolderContentDirective=ue,e.NoPermissionContentDirective=pe,e.ShareDataTableAdapter=G,e.ShareDataRow=Q,e.FolderActionsService=le,e.DocumentActionsService=ae,e.DocumentListService=T,e.NodeActionsService=se,e.CustomResourcesService=J,e.ContentActionModel=z,e.ContentActionTarget=Y,e.DocumentActionModel=W,e.FolderActionModel=Z,e.NodePaging=he,e.NodePagingList=me,e.NodeMinimalEntry=ye,e.Pagination=be,e.NodeMinimal=Ee,e.UserInfo=Ae,e.ContentInfo=Oe,e.PathInfoEntity=Fe,e.PathElementEntity=we,e.PermissionModel=oe,e.PermissionStyleModel=Le,e.DocumentListModule=Qe,e.UploadButtonComponent=Ue,e.UploadVersionButtonComponent=Ve,e.FileUploadingDialogComponent=ke,e.UploadDragAreaComponent=Be,e.FileUploadingListComponent=Me,e.FileUploadingListRowComponent=Pe,e.UploadFilesEvent=xe,e.FileDraggableDirective=je,e.UploadBase=_e,e.UploadModule=He,e.SearchQueryBuilderService=Ge,e.SearchComponent=qe,e.SearchControlComponent=$e,e.SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR=Ye,e.SearchTriggerDirective=We,e.EmptySearchResultComponent=ze,e.SearchFilterComponent=Ke,e.SearchFilterService=lt,e.SearchChipListComponent=ct,e.SearchSortingPickerComponent=dt,e.ALFRESCO_SEARCH_DIRECTIVES=pt,e.SearchModule=ht,e.Relations=ft,e.DropdownSitesComponent=mt,e.SitesDropdownModule=gt,e.BreadcrumbComponent=yt,e.DropdownBreadcrumbComponent=vt,e.BreadcrumbModule=bt,e.VersionListComponent=Et,e.VersionManagerComponent=It,e.VersionUploadComponent=At,e.VersionManagerModule=Ct,e.NameLocationCellComponent=Ot,e.ContentNodeSelectorPanelComponent=Dt,e.ContentNodeSelectorComponent=F,e.ContentNodeSelectorService=Tt,e.ContentNodeDialogService=w,e.ContentNodeSelectorModule=wt,e.DownloadZipDialogComponent=m,e.FolderDialogComponent=Pt,e.NodeLockDialogComponent=D,e.ConfirmDialogComponent=St,e.DialogModule=Mt,e.FolderCreateDirective=xt,e.FolderEditDirective=_t,e.FolderDirectiveModule=Ut,e.ContentMetadataCardComponent=Vt,e.BasicPropertiesService=Bt,e.ContentMetadataService=tn,e.PropertyDescriptorsService=en,e.PropertyGroupTranslatorService=zt,e.ContentMetadataConfigFactory=Jt,e.IndifferentConfigService=Xt,e.LayoutOrientedConfigService=Kt,e.AspectOrientedConfigService=Zt,e.ContentMetadataModule=on,e.PermissionListComponent=ln,e.NoPermissionTemplateComponent=cn,e.InheritPermissionDirective=dn,e.PermissionDisplayModel=rn,e.NodePermissionDialogService=pn,e.NodePermissionService=an,e.AddPermissionPanelComponent=fn,e.AddPermissionComponent=mn,e.AddPermissionDialogComponent=un,e.PermissionManagerModule=gn,e.ShareDialogComponent=yn,e.NodeSharedDirective=vn,e.ContentNodeShareModule=bn,e.providers=Sn,e.ContentModuleLazy=En,e.ContentModule=An,e.ɵk=nn,e.ɵc=N,e.ɵb=v,e.ɵa=y,e.ɵl=hn,e.ɵi=ot,e.ɵj=at,e.ɵh=it,e.ɵf=et,e.ɵg=tt,e.ɵe=Je,e.ɵd=ut,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=adf-content-services.umd.min.js.map