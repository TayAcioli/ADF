{"version":3,"file":"adf-content-services.umd.js.map","sources":["ng://@alfresco/adf-content-services/dialogs/download-zip.dialog.ts","ng://@alfresco/adf-content-services/directives/node-download.directive.ts","ng://@alfresco/adf-content-services/material.module.ts",null,"ng://@alfresco/adf-content-services/document-list/services/document-list.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.component.ts","ng://@alfresco/adf-content-services/dialogs/node-lock.dialog.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-dialog.service.ts","ng://@alfresco/adf-content-services/directives/node-lock.directive.ts","ng://@alfresco/adf-content-services/directives/content-directive.module.ts","ng://@alfresco/adf-content-services/social/services/rating.service.ts","ng://@alfresco/adf-content-services/social/rating.component.ts","ng://@alfresco/adf-content-services/social/like.component.ts","ng://@alfresco/adf-content-services/social/social.module.ts","ng://@alfresco/adf-content-services/tag/services/tag.service.ts","ng://@alfresco/adf-content-services/tag/tag-actions.component.ts","ng://@alfresco/adf-content-services/tag/tag-list.component.ts","ng://@alfresco/adf-content-services/tag/tag-node-list.component.ts","ng://@alfresco/adf-content-services/tag/tag.module.ts","ng://@alfresco/adf-content-services/webscript/webscript.component.ts","ng://@alfresco/adf-content-services/webscript/webscript.module.ts","ng://@alfresco/adf-content-services/document-list/data/share-data-row.model.ts","ng://@alfresco/adf-content-services/document-list/data/share-datatable-adapter.ts","ng://@alfresco/adf-content-services/document-list/models/preset.model.ts","ng://@alfresco/adf-content-services/document-list/models/content-action.model.ts","ng://@alfresco/adf-content-services/document-list/components/node.event.ts","ng://@alfresco/adf-content-services/document-list/services/custom-resources.service.ts","ng://@alfresco/adf-content-services/document-list/components/document-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column.component.ts","ng://@alfresco/adf-content-services/document-list/models/permissions.model.ts","ng://@alfresco/adf-content-services/document-list/services/node-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/document-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/folder-actions.service.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action.component.ts","ng://@alfresco/adf-content-services/document-list/components/empty-folder/empty-folder-content.directive.ts","ng://@alfresco/adf-content-services/document-list/components/no-permission/no-permission-content.directive.ts","ng://@alfresco/adf-content-services/document-list/models/document-library.model.ts","ng://@alfresco/adf-content-services/document-list/models/permissions-style.model.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-dialog.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list-row.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-files.event.ts","ng://@alfresco/adf-content-services/upload/components/base-upload/upload-base.ts","ng://@alfresco/adf-content-services/upload/components/upload-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-version-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-drag-area.component.ts","ng://@alfresco/adf-content-services/upload/directives/file-draggable.directive.ts","ng://@alfresco/adf-content-services/upload/upload.module.ts","ng://@alfresco/adf-content-services/document-list/document-list.module.ts","ng://@alfresco/adf-content-services/search/search-query-builder.service.ts","ng://@alfresco/adf-content-services/search/components/search.component.ts","ng://@alfresco/adf-content-services/search/components/empty-search-result.component.ts","ng://@alfresco/adf-content-services/search/components/search-control.component.ts","ng://@alfresco/adf-content-services/search/components/search-trigger.directive.ts","ng://@alfresco/adf-content-services/search/components/search-filter/models/search-filter-list.model.ts","ng://@alfresco/adf-content-services/search/components/search-filter/models/response-facet-query-list.model.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.component.ts","ng://@alfresco/adf-content-services/search/components/search-text/search-text.component.ts","ng://@alfresco/adf-content-services/search/components/search-radio/search-radio.component.ts","ng://@alfresco/adf-content-services/search/components/search-slider/search-slider.component.ts","ng://@alfresco/adf-content-services/search/forms/live-error-state-matcher.ts","ng://@alfresco/adf-content-services/search/components/search-number-range/search-number-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-check-list/search-check-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-date-range/search-date-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.service.ts","ng://@alfresco/adf-content-services/search/components/search-chip-list/search-chip-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-sorting-picker/search-sorting-picker.component.ts","ng://@alfresco/adf-content-services/search/components/search-widget-container/search-widget-container.component.ts","ng://@alfresco/adf-content-services/search/search.module.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.component.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.module.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/dropdown-breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.module.ts","ng://@alfresco/adf-content-services/dialogs/confirm.dialog.ts","ng://@alfresco/adf-content-services/version-manager/version-list.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.component.ts","ng://@alfresco/adf-content-services/version-manager/version-upload.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.module.ts","ng://@alfresco/adf-content-services/content-node-selector/name-location-cell/name-location-cell.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector-panel.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.module.ts","ng://@alfresco/adf-content-services/dialogs/folder-name.validators.ts","ng://@alfresco/adf-content-services/dialogs/folder.dialog.ts","ng://@alfresco/adf-content-services/dialogs/dialog.module.ts","ng://@alfresco/adf-content-services/folder-directive/folder-create.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-edit.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-directive.module.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata-card/content-metadata-card.component.ts","ng://@alfresco/adf-content-services/content-metadata/services/basic-properties.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-groups-translator.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/property-group-reader.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/aspect-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/indifferent-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/layout-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/content-metadata-config.factory.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-descriptors.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/content-metadata.service.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata/content-metadata.component.ts","ng://@alfresco/adf-content-services/content-metadata/content-metadata.module.ts","ng://@alfresco/adf-content-services/permission-manager/models/permission.model.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/permission-list.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/no-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/inherited-button.directive.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-dialog.component.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission-dialog.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/search-config-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-panel.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/permission-manager.module.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.dialog.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.directive.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.module.ts","ng://@alfresco/adf-content-services/content.module.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, MinimalNodeEntity } from 'alfresco-js-api';\nimport { LogService, AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    templateUrl: './download-zip.dialog.html',\n    styleUrls: ['./download-zip.dialog.scss'],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    private cancelled = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) private data: any,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            const promise: any = this.apiService.getInstance().core.downloadsApi.createDownload({ nodeIds });\n\n            promise.on('progress', progress => this.logService.log('Progress', progress));\n            promise.on('error', error => this.logService.error('Error', error));\n            promise.on('abort', data => this.logService.log('Abort', data));\n\n            promise.on('success', (data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.apiService.getInstance().content.getContentUrl(data.entry.id, true);\n\n                    this.apiService.getInstance().core.nodesApi.getNode(data.entry.id).then((downloadNode: MinimalNodeEntity) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.apiService.getInstance().core.downloadsApi.getDownload(downloadId).then((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\n\n@Directive({\n    selector: '[adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: MinimalNodeEntity[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: Array<MinimalNodeEntity>) {\n        if (!selection || selection.length === 0) {\n            return;\n        }\n\n        if (selection.length === 1) {\n            this.downloadNode(selection[0]);\n        } else {\n            this.downloadZip(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private downloadFile(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n            // nodeId for Shared node\n            const id = (<any> node.entry).nodeId || node.entry.id;\n\n            const url = contentApi.getContentUrl(id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<MinimalNodeEntity>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatSliderModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatExpansionModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatSlideToggleModule,\n        MatRadioModule,\n        MatSliderModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService, AuthenticationService, ContentService, LogService,\n    PermissionsEnum, ThumbnailService\n} from '@alfresco/adf-core';\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity,  NodeEntry, NodePaging } from 'alfresco-js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class DocumentListService {\n\n    static ROOT_ID = '-root-';\n\n    constructor(authService: AuthenticationService,\n                private contentService: ContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    private getNodesPromise(folder: string, opts?: any, includeFields: string[] = []): Promise<NodePaging> {\n\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let params: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n        }\n\n        return this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params);\n    }\n\n    /**\n     * Deletes a node.\n     * @param nodeId ID of the node to delete\n     * @returns Empty response when the operation is complete\n     */\n    deleteNode(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder where the node will be copied\n     * @returns NodeEntry for the copied node\n     */\n    copyNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId })).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    /**\n     * Moves a node to destination node.\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder where the node will be moved\n     * @returns NodeEntry for the moved node\n     */\n    moveNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId })).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder in the path.\n     * @param name Folder name\n     * @param parentId Parent folder ID\n     * @returns Details of the created folder node\n     */\n    createFolder(name: string, parentId: string): Observable<MinimalNodeEntity> {\n        return from(this.apiService.getInstance().nodes.createFolder(name, '/', parentId))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolder(folder: string, opts?: any, includeFields: string[] = []): Observable<NodePaging> {\n        return from(this.getNodesPromise(folder, opts, includeFields))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a node via its node ID.\n     * @param nodeId ID of the target node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return this.contentService.getNode(nodeId, opts);\n    }\n\n    /**\n     * Gets a folder node via its node ID.\n     * @deprecated 2.3.0\n     * @param nodeId ID of the folder node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolderNode(nodeId: string, includeFields: string[] = []): Observable<MinimalNodeEntryEntity> {\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return from(this.apiService.getInstance().nodes.getNodeInfo(nodeId, opts));\n    }\n    /**\n     * Get thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns Thumbnail URL string\n     */\n    getDocumentThumbnailUrl(node: MinimalNodeEntity): string {\n        return this.thumbnailService.getDocumentThumbnailUrl(node);\n    }\n\n    /**\n     * Gets the icon that represents a MIME type.\n     * @param mimeType MIME type to get the icon for\n     * @returns Path to the icon file\n     */\n    getMimeTypeIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    /**\n     * Gets a default icon for MIME types with no specific icon.\n     * @returns Path to the icon file\n     */\n    getDefaultMimeTypeIcon(): string {\n        return this.thumbnailService.getDefaultMimeTypeIcon();\n    }\n\n    /**\n     * Checks if a node has the specified permission.\n     * @deprecated 2.3.0 - use the equivalent in the content service\n     * @param node Target node\n     * @param permission Permission level to query\n     * @returns True if the node has the permission, false otherwise\n     */\n    hasPermission(node: any, permission: PermissionsEnum | string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { MinimalNodeEntryEntity, SitePaging } from 'alfresco-js-api';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\n\n@Component({\n    selector: 'adf-content-node-selector',\n    templateUrl: './content-node-selector.component.html',\n    styleUrls: ['./content-node-selector.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent {\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    title: string = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    currentFolderId: string = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    rowFilter: RowFilter = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    pageSize: number;\n\n    buttonActionName: string;\n    chosenNode: MinimalNodeEntryEntity[];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: ContentNodeSelectorComponentData) {\n        this.buttonActionName = data.actionName ? `NODE_SELECTOR.${data.actionName.toUpperCase()}` : 'NODE_SELECTOR.CHOOSE';\n    }\n\n    close() {\n        this.data.select.complete();\n    }\n\n    onSelect(nodeList: MinimalNodeEntryEntity[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onClick(): void {\n        this.data.select.next(this.chosenNode);\n        this.data.select.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\n\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { MinimalNodeEntryEntity, NodeEntry } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-node-lock',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './node-lock.dialog.html'\n})\nexport class NodeLockDialogComponent implements OnInit {\n\n    form: FormGroup;\n    node: MinimalNodeEntryEntity = null;\n    nodeName: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialog: MatDialogRef<NodeLockDialogComponent>,\n        private alfrescoApi: AlfrescoApiService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {}\n\n    ngOnInit() {\n        const { node } = this.data;\n        this.nodeName = node.name;\n\n        this.form = this.formBuilder.group({\n            isLocked: node.isLocked || false,\n            allowOwner: node.properties['cm:lockType'] === 'WRITE_LOCK',\n            isTimeLock: !!node.properties['cm:expiryDate'],\n            time: !!node.properties['cm:expiryDate'] ? moment(node.properties['cm:expiryDate']) : moment()\n        });\n    }\n\n    private get lockTimeInSeconds(): number {\n        if (this.form.value.isTimeLock) {\n            let duration = moment.duration(moment(this.form.value.time).diff(moment()));\n            return duration.asSeconds();\n        }\n\n        return 0;\n    }\n\n    private get nodeBodyLock(): object {\n        return {\n            'timeToExpire': this.lockTimeInSeconds,\n            'type': this.form.value.allowOwner ? 'ALLOW_OWNER_CHANGES' : 'FULL',\n            'lifetime': 'PERSISTENT'\n        };\n    }\n\n    private toggleLock(): Promise<NodeEntry> {\n        const { alfrescoApi: { nodesApi }, data: { node } } = this;\n\n        if (this.form.value.isLocked) {\n            return nodesApi.lockNode(node.id, this.nodeBodyLock);\n        }\n\n        return nodesApi.unlockNode(node.id);\n    }\n\n    submit(): void {\n        this.toggleLock()\n            .then(node => {\n                this.data.node.isLocked = this.form.value.isLocked;\n                this.dialog.close(node.entry);\n            })\n            .catch(error => this.data.onError(error));\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ContentService } from '@alfresco/adf-core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { ShareDataRow } from '../document-list/data/share-data-row.model';\nimport { MinimalNodeEntryEntity, SitePaging } from 'alfresco-js-api';\nimport { DataColumn, SitesService, TranslationService, PermissionsEnum } from '@alfresco/adf-core';\nimport { DocumentListService } from '../document-list/services/document-list.service';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeLockDialogComponent } from '../dialogs/node-lock.dialog';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class ContentNodeDialogService {\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private contentService: ContentService,\n                private documentListService: DocumentListService,\n                private siteService: SitesService,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Opens a file browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogByFolderId(folderNodeId: string): Observable<MinimalNodeEntryEntity[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((node: MinimalNodeEntryEntity) => {\n            return this.openUploadFileDialog('Choose', node);\n        }));\n    }\n\n    /**\n     * Opens a lock node dialog.\n     * @param contentEntry Node to lock\n     * @returns Error/status message (if any)\n     */\n    public openLockNodeDialog(contentEntry: MinimalNodeEntryEntity): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasPermission(contentEntry, PermissionsEnum.LOCK)) {\n            this.dialog.open(NodeLockDialogComponent, {\n                data: {\n                    node: contentEntry,\n                    onError: (error) => {\n                        this.error.emit(error);\n                        observable.error(error);\n                    }\n                },\n                width: '400px'\n            });\n        } else {\n            observable.error('OPERATION.FAIL.NODE.NO_PERMISSION');\n        }\n\n        return observable;\n    }\n\n    /**\n     * Opens a file browser at a chosen site location.\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogBySite(): Observable<MinimalNodeEntryEntity[]> {\n        return this.siteService.getSites().pipe(switchMap((response: SitePaging) => {\n            return this.openFileBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        }));\n    }\n\n    /**\n     * Opens a folder browser at a chosen site location.\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogBySite(): Observable<MinimalNodeEntryEntity[]> {\n        return this.siteService.getSites().pipe(switchMap((response: SitePaging) => {\n            return this.openFolderBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        }));\n    }\n\n    /**\n     * Opens a folder browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogByFolderId(folderNodeId: string): Observable<MinimalNodeEntryEntity[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((node: MinimalNodeEntryEntity) => {\n            return this.openUploadFolderDialog('Choose', node);\n        }));\n    }\n\n    /**\n     * Opens a dialog to copy or move an item to a new location.\n     * @param action Name of the action (eg, \"Copy\" or \"Move\") to show in the title\n     * @param contentEntry Item to be copied or moved\n     * @param permission Permission for the operation\n     * @returns Information about files that were copied/moved\n     */\n    openCopyMoveDialog(action: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Observable<MinimalNodeEntryEntity[]> {\n        if (this.contentService.hasPermission(contentEntry, permission)) {\n\n            const select = new Subject<MinimalNodeEntryEntity[]>();\n            select.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const title = this.getTitleTranslation(action, contentEntry.name);\n\n            const data: ContentNodeSelectorComponentData = {\n                title: title,\n                actionName: action,\n                currentFolderId: contentEntry.parentId,\n                imageResolver: this.imageResolver.bind(this),\n                rowFilter: this.rowFilter.bind(this, contentEntry.id),\n                isSelectionValid: this.isCopyMoveSelectionValid.bind(this),\n                select: select\n            };\n\n            this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n\n            return select;\n        } else {\n            let errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            return throwError(errors);\n        }\n    }\n\n    /**\n     * Gets the translation of the dialog title.\n     * @param action Name of the action to display in the dialog title\n     * @param name Name of the item on which the action is being performed\n     * @returns Translated version of the title\n     */\n    getTitleTranslation(action: string, name: string): string {\n        return this.translation.instant(`NODE_SELECTOR.${action.toUpperCase()}_ITEM`, { name });\n    }\n\n    /**\n     * Opens a dialog to choose folders to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry  Item to upload\n     * @returns Information about the chosed folder(s)\n     */\n    openUploadFolderDialog(action: string, contentEntry: MinimalNodeEntryEntity): Observable<MinimalNodeEntryEntity[]> {\n        const select = new Subject<MinimalNodeEntryEntity[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.hasPermissionOnNodeFolder.bind(this),\n            rowFilter: this.rowFilter.bind(this, contentEntry.id),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @returns Information about the chosen file(s)\n     */\n    openUploadFileDialog(action: string, contentEntry: MinimalNodeEntryEntity): Observable<MinimalNodeEntryEntity[]> {\n        const select = new Subject<MinimalNodeEntryEntity[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.isNodeFile.bind(this),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    private openContentNodeDialog(data: ContentNodeSelectorComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    private imageResolver(row: ShareDataRow, col: DataColumn): string | null {\n        const entry: MinimalNodeEntryEntity = row.node.entry;\n        if (!this.contentService.hasPermission(entry, 'create')) {\n            return this.documentListService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\n\n    private rowFilter(currentNodeId, row: ShareDataRow): boolean {\n        const node: MinimalNodeEntryEntity = row.node.entry;\n\n        if (node.id === currentNodeId || node.isFile) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private isNodeFile(entry: MinimalNodeEntryEntity): boolean {\n        return entry.isFile;\n    }\n\n    private hasPermissionOnNodeFolder(entry: MinimalNodeEntryEntity): boolean {\n        return this.isNodeFolder(entry) && this.contentService.hasPermission(entry, 'create');\n    }\n\n    private isNodeFolder(entry: MinimalNodeEntryEntity): boolean {\n        return entry.isFolder;\n    }\n\n    private isCopyMoveSelectionValid(entry: MinimalNodeEntryEntity): boolean {\n        return this.hasEntityCreatePermission(entry) && !this.isSite(entry);\n    }\n\n    private hasEntityCreatePermission(entry: MinimalNodeEntryEntity): boolean {\n        return this.contentService.hasPermission(entry, 'create');\n    }\n\n    private isSite(entry) {\n        return !!entry.guid || entry.nodeType === 'st:site' || entry.nodeType === 'st:sites';\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { PermissionsEnum, ContentService } from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '../content-node-selector/content-node-dialog.service';\n\n@Directive({\n    selector: '[adf-node-lock]'\n})\nexport class NodeLockDirective implements AfterViewInit {\n\n    /** Node to lock/unlock. */\n    @Input('adf-node-lock')\n    node: MinimalNodeEntryEntity;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.contentNodeDialogService.openLockNodeDialog(this.node);\n    }\n\n    constructor(\n        public element: ElementRef,\n        private renderer: Renderer2,\n        private contentService: ContentService,\n        private contentNodeDialogService: ContentNodeDialogService\n    ) {}\n\n    ngAfterViewInit() {\n        const hasPermission = this.contentService.hasPermission(this.node, PermissionsEnum.LOCK);\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', !hasPermission);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { NodeDownloadDirective } from './node-download.directive';\nimport { NodeLockDirective } from './node-lock.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        NodeDownloadDirective,\n        NodeLockDirective\n    ],\n    exports: [\n        NodeDownloadDirective,\n        NodeLockDirective\n    ]\n})\nexport class ContentDirectiveModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { RatingBody } from 'alfresco-js-api';\nimport { from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the current user's rating for a node.\n     * @param nodeId Node to get the rating from\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @returns The rating value\n     */\n    getRating(nodeId: string, ratingType: any): any {\n        return from(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Adds the current user's rating for a node.\n     * @param nodeId Target node for the rating\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @param vote Rating value (boolean for \"likes\", numeric 0..5 for \"fiveStar\")\n     * @returns Details about the rating, including the new value\n     */\n    postRating(nodeId: string, ratingType: any, vote: any): any {\n        let ratingBody: RatingBody = {\n            'id': ratingType,\n            'myRating': vote\n        };\n        return from(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Removes the current user's rating for a node.\n     * @param nodeId Target node\n     * @param ratingType Type of rating to remove (can be \"likes\" or \"fiveStar\")\n     * @returns Null response indicating that the operation is complete\n     */\n    deleteRating(nodeId: string, ratingType: any): any {\n        return from(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    private handleError(error: Response): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\n\n@Component({\n    selector: 'adf-rating',\n    styleUrls: ['./rating.component.scss'],\n    templateUrl: './rating.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    /** Identifier of the node to apply the rating to. */\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        let ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.average = data.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    calculateStars() {\n        this.stars = [];\n\n        for (let i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({fill: true});\n            } else {\n                this.stars.push({fill: false});\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n\n    updateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    if (this.average !== data.entry.aggregate.average) {\n                        this.average = data.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\n\n@Component({\n    selector: 'adf-like',\n    styleUrls: ['./like.component.scss'],\n    templateUrl: './like.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n    /** Identifier of a node to apply likes to. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    likesCounter: number = 0;\n    ratingType: string = 'likes';\n    isLike: boolean = false;\n\n    constructor(private ratingService: RatingService) {}\n\n    ngOnChanges() {\n        this.clean();\n\n        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    if (data.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (data) => {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        }\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ]\n})\nexport class SocialModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TagPaging } from 'alfresco-js-api';\n\n@Injectable()\nexport class TagService {\n\n    /** Emitted when tag information is updated. */\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of tags added to a node.\n     * @param nodeId ID of the target node\n     * @returns TagPaging object (defined in JSAPI) containing the tags\n     */\n    getTagsByNodeId(nodeId: string): any {\n        return from(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId)).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a list of all the tags already defined in the repository.\n     * @param opts Options supported by JSAPI\n     * @returns TagPaging object (defined in JSAPI) containing the tags\n     */\n    getAllTheTags(opts?: any): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getTags(opts))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Adds a tag to a node.\n     * @param nodeId ID of the target node\n     * @param tagName Name of the tag to add\n     * @returns TagEntry object (defined in JSAPI) with details of the new tag\n     */\n    addTag(nodeId: string, tagName: string): any {\n        const alfrescoApi: any = this.apiService.getInstance();\n        const tagBody = new alfrescoApi.core.TagBody();\n        tagBody.tag = tagName;\n\n        let promiseAdd = from(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        promiseAdd.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseAdd;\n    }\n\n    /**\n     * Removes a tag from a node.\n     * @param nodeId ID of the target node\n     * @param tag Name of the tag to remove\n     * @returns Null object when the operation completes\n     */\n    removeTag(nodeId: string, tag: string): any {\n        const promiseRemove = from(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        promiseRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation, OnDestroy, OnInit } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { Subscription } from 'rxjs';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    templateUrl: './tag-actions.component.html',\n    styleUrls: ['./tag-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a tag is added successfully. */\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an action is chosen. */\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n    tagsEntries: any;\n    errorMsg: string;\n    disableAddTag: boolean = true;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private tagService: TagService, private translateService: TranslationService) {}\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.tagService.refresh.subscribe(() => {\n                this.refreshTag();\n            })\n        );\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n                this.tagsEntries = data.list.entries;\n                this.disableAddTag = false;\n                this.result.emit(this.tagsEntries);\n            }, () => {\n                this.tagsEntries = null;\n                this.disableAddTag = true;\n                this.result.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { PaginationModel } from '@alfresco/adf-core';\n\n/**\n * This component provide a list of all the tag inside the ECM\n */\n@Component({\n    selector: 'adf-tag-list',\n    templateUrl: './tag-list.component.html',\n    styleUrls: ['./tag-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit {\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Array of tags that are displayed\n     */\n    tagsEntries: any = [];\n\n    /**\n     * Number of items per iteration\n     */\n    size: number = 10;\n\n    defaultPagination: PaginationModel;\n    pagination: PaginationModel;\n\n    isLoading = false;\n    isSizeMinimum = true;\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n\n        this.defaultPagination = {\n            skipCount: 0,\n            maxItems: this.size,\n            hasMoreItems: false\n        };\n\n        this.pagination = this.defaultPagination;\n\n        this.tagService.refresh.subscribe(() => {\n            this.tagsEntries = [];\n            this.refreshTag(this.defaultPagination);\n        });\n    }\n\n    ngOnInit() {\n        return this.refreshTag(this.defaultPagination);\n    }\n\n    refreshTag(opts?: any) {\n        this.tagService.getAllTheTags(opts).subscribe((tags: any) => {\n            this.tagsEntries = this.tagsEntries.concat(tags.list.entries);\n            this.pagination = tags.list.pagination;\n            this.result.emit(this.tagsEntries);\n            this.isLoading = false;\n        });\n    }\n\n    loadMoreTags() {\n        if (this.pagination.hasMoreItems) {\n            this.isLoading = true;\n            this.isSizeMinimum = false;\n\n            this.refreshTag({\n                skipCount: this.pagination.skipCount + this.pagination.count,\n                maxItems: this.size\n            });\n        }\n    }\n\n    loadLessTags() {\n        this.isSizeMinimum = false;\n        this.tagsEntries = this.tagsEntries.slice(0, this.tagsEntries.length - this.pagination.count);\n        this.pagination.skipCount = this.pagination.skipCount - this.pagination.count;\n        this.pagination.hasMoreItems = true;\n\n        if (this.tagsEntries.length <= this.size) {\n            this.isSizeMinimum = true;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    templateUrl: './tag-node-list.component.html',\n    styleUrls: ['./tag-node-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges {\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Show delete button */\n    @Input()\n    showDelete = true;\n\n    tagsEntries: any;\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    results = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n                this.tagsEntries = data.list.entries;\n                this.results.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ]\n})\nexport class TagModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are recived\n *\n */\n@Component({\n    selector: 'adf-webscript-get',\n    templateUrl: 'webscript.component.html'\n})\nexport class WebscriptComponent implements OnChanges {\n\n    /** (required) Path to the webscript (as defined by webscript). */\n    @Input()\n    scriptPath: string;\n\n    /** Arguments to pass to the webscript. */\n    @Input()\n    scriptArgs: any;\n\n    /** Toggles whether to show or hide the data. */\n    @Input()\n    showData: boolean = true;\n\n    /** Path where the application is deployed */\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    /** Path that the webscript service is mapped to. */\n    @Input()\n    servicePath: string = 'service';\n\n    /** Content type to interpret the data received from the webscript.\n     * Can be \"JSON\" , \"HTML\" , \"DATATABLE\" or \"TEXT\"\n     */\n    @Input()\n    contentType: string = 'TEXT';\n\n    /** Emitted when the operation succeeds. You can get the plain data from\n     * the webscript through the **success** event parameter and use it as you\n     * need in your application.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptdata) => {\n\n                this.data = webScriptdata;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptdata);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @retutns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        let datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (e) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ]\n})\nexport class WebScriptModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRow, ObjectUtils, ThumbnailService } from '@alfresco/adf-core';\nimport { MinimalNode, MinimalNodeEntity } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n\n    get node(): MinimalNodeEntity {\n        return this.obj;\n    }\n\n    constructor(private obj: MinimalNodeEntity,\n                private documentListService: DocumentListService,\n                private permissionsStyle: PermissionStyleModel[],\n                private thumbnailService?: ThumbnailService) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n\n    getPermissionClass(nodeEntity: MinimalNodeEntity): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.documentListService.hasPermission(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(obj: MinimalNodeEntity): boolean {\n        return this.isFolder(obj) && this.documentListService.hasPermission(obj.entry, 'create');\n    }\n\n    isFolder(obj: MinimalNodeEntity): boolean {\n        return obj.entry && obj.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    imageErrorResolver(event: Event): any {\n        return this.thumbnailService.getMimeTypeIcon(this.obj.entry.content.mimeType);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn, DataRow, DataSorting, DataTableAdapter, ThumbnailService } from '@alfresco/adf-core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { ShareDataRow } from './share-data-row.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private _sortingMode: string;\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n\n    private filter: any;\n    private imageResolver: any;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n\n    set sortingMode(value: string) {\n        let newValue = (value || 'client').toLowerCase();\n        if (newValue !== 'client' && newValue !== 'server') {\n            newValue = 'client';\n        }\n        this._sortingMode = newValue;\n    }\n\n    get sortingMode(): string {\n        return this._sortingMode;\n    }\n\n    constructor(private documentListService: DocumentListService,\n                private thumbnailService: ThumbnailService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting,\n                sortingMode: string = 'client') {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n        this.sortingMode = sortingMode;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        let dataRow: ShareDataRow = <ShareDataRow> row;\n        let value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                if (this.isSmartFolder(node)) {\n                    return this.documentListService.getMimeTypeIcon('smartFolder');\n                } else {\n                    return this.documentListService.getMimeTypeIcon('folder');\n                }\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.documentListService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.documentListService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.documentListService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: any) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: any) {\n        this.imageResolver = resolver;\n    }\n\n    isSmartFolder(node: any) {\n        let nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('smf:customConfigSmartFolder') > -1 ||\n            (nodeAspects.indexOf('smf:systemConfigSmartFolder') > -1);\n    }\n\n    private getNodeAspectNames(node: any): any[] {\n        return node.entry && node.entry.aspectNames ? node.entry.aspectNames : node.aspectNames ? node.aspectNames : [];\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        if (this.sortingMode === 'server') {\n            return;\n        }\n\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(page: NodePaging, merge: boolean = false) {\n        let rows = [];\n\n        if (page && page.list) {\n            let data = page.list.entries;\n            if (data && data.length > 0) {\n                rows = data.map(item => new ShareDataRow(item, this.documentListService, this.permissionsStyle, this.thumbnailService));\n\n                if (this.filter) {\n                    rows = rows.filter(this.filter);\n                }\n\n                if (this.sortingMode !== 'server') {\n                    // Sort by first sortable or just first column\n                    if (this.columns && this.columns.length > 0) {\n                        let sorting = this.getSorting();\n                        if (sorting) {\n                            this.sortRows(rows, sorting);\n                        } else {\n                            let sortable = this.columns.filter(c => c.sortable);\n                            if (sortable.length > 0) {\n                                this.sort(sortable[0].key, 'asc');\n                            } else {\n                                this.sort(this.columns[0].key, 'asc');\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            let listPrunedDuplicate = rows.filter((elemntToFilter) => {\n                let isPresent = this.rows.find((currenRow: any) => {\n                    return currenRow.obj.entry.id === elemntToFilter.obj.entry.id;\n                });\n\n                return !isPresent;\n            });\n\n            this.rows = this.rows.concat(listPrunedDuplicate);\n        } else {\n            this.rows = rows;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean | Function = false;\n    visible: boolean | Function = true;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n\n            if (obj.hasOwnProperty('disabled')) {\n                this.disabled = obj.disabled;\n            }\n\n            if (obj.hasOwnProperty('visible')) {\n                this.visible = obj.visible;\n            }\n        }\n    }\n}\n\nexport enum ContentActionTarget {\n    Document = 'document',\n    Folder = 'folder',\n    All = 'all'\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '@alfresco/adf-core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodeEntityEvent extends BaseEvent<MinimalNodeEntity> {\n\n    value: MinimalNodeEntity;\n\n    defaultPrevented: boolean;\n\n    constructor(entity: MinimalNodeEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<MinimalNodeEntryEntity> {\n\n    value: MinimalNodeEntryEntity;\n\n    defaultPrevented: boolean;\n\n    constructor(entity: MinimalNodeEntryEntity) {\n        super();\n        this.value = entity;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService,\n    LogService,\n    PaginationModel\n} from '@alfresco/adf-core';\n\nimport {\n    NodePaging,\n    PersonEntry,\n    SitePaging,\n    DeletedNodesPaging,\n    SearchRequest\n} from 'alfresco-js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class CustomResourcesService {\n\n    private CREATE_PERMISSION = 'create';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets files recently accessed by a user.\n     * @param personId ID of the user\n     * @param pagination Specifies how to paginate the results\n     * @returns List of nodes for the recently used files\n     */\n    getRecentFiles(personId: string, pagination: PaginationModel): Observable<NodePaging> {\n        return new Observable(observer => {\n            this.apiService.peopleApi.getPerson(personId)\n                .then((person: PersonEntry) => {\n                        const username = person.entry.id;\n                        const query: SearchRequest = {\n                            query: {\n                                query: '*',\n                                language: 'afts'\n                            },\n                            filterQueries: [\n                                { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                                { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                                { query: `TYPE:\"content\" AND -TYPE:\"app:filelink\" AND -TYPE:\"fm:post\"` }\n                            ],\n                            include: ['path', 'properties', 'allowableOperations'],\n                            sort: [{\n                                type: 'FIELD',\n                                field: 'cm:modified',\n                                ascending: false\n                            }],\n                            paging: {\n                                maxItems: pagination.maxItems,\n                                skipCount: pagination.skipCount\n                            }\n                        };\n                        return this.apiService.searchApi.search(query)\n                            .then((searchResult) => {\n                                    observer.next(searchResult);\n                                    observer.complete();\n                                },\n                                (err) => {\n                                    observer.error(err);\n                                    observer.complete();\n                                });\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets favorite files for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of favorite files\n     */\n    loadFavorites(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: includeFieldsRequest\n        };\n\n        return new Observable(observer => {\n            this.apiService.favoritesApi.getFavorites('-me-', options)\n                .then((result: NodePaging) => {\n                        let page: NodePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { target } }: any) => ({\n                                        entry: target.file || target.folder\n                                    }))\n                                    .map(({ entry }: any) => {\n                                        entry.properties = {\n                                            'cm:title': entry.title,\n                                            'cm:description': entry.description\n                                        };\n                                        return { entry };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets sites that the current user is a member of.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadMemberSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable(observer => {\n            this.apiService.peopleApi.getSiteMembership('-me-', options)\n                .then((result: SitePaging) => {\n                        let page: NodePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { site } }: any) => {\n                                        site.allowableOperations = site.allowableOperations ? site.allowableOperations : [this.CREATE_PERMISSION];\n                                        site.name = site.name || site.title;\n                                        return {\n                                            entry: site\n                                        };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets all sites in the respository.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties', 'aspectNames'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable(observer => {\n            this.apiService.sitesApi.getSites(options)\n                .then((page: NodePaging) => {\n                        page.list.entries.map(\n                            ({ entry }: any) => {\n                                entry.name = entry.name || entry.title;\n                                return { entry };\n                            }\n                        );\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets all items currently in the trash.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of deleted items\n     */\n    loadTrashcan(pagination: PaginationModel, includeFields: string[] = []): Observable<DeletedNodesPaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.nodesApi.getDeletedNodes(options))\n            .pipe(catchError(err => this.handleError(err)));\n\n    }\n\n    /**\n     * Gets shared links for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of shared links\n     */\n    loadSharedLinks(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.sharedLinksApi.findSharedLinks(options))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Is the folder ID one of the well-known aliases?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is a well-known name, false otherwise\n     */\n    isCustomSource(folderId: string): boolean {\n        let isCustomSources = false;\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isCustomSources = true;\n        }\n\n        return isCustomSources;\n    }\n\n    /**\n     * Is the folder ID a \"-my\", \"-root-\", or \"-shared-\" alias?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is one of the suppored sources, false otherwise\n     */\n    isSupportedSource(folderId: string): boolean {\n        let isSupportedSources = false;\n        const sources = ['-my-', '-root-', '-shared-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isSupportedSources = true;\n        }\n\n        return isSupportedSources;\n    }\n\n    /**\n     * Gets a folder's contents.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of items contained in the folder\n     */\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[]): Observable<NodePaging> {\n        if (nodeId === '-trashcan-') {\n            return this.loadTrashcan(pagination, includeFields);\n        } else if (nodeId === '-sharedlinks-') {\n            return this.loadSharedLinks(pagination, includeFields);\n        } else if (nodeId === '-sites-') {\n            return this.loadSites(pagination);\n        } else if (nodeId === '-mysites-') {\n            return this.loadMemberSites(pagination);\n        } else if (nodeId === '-favorites-') {\n            return this.loadFavorites(pagination, includeFields);\n        } else if (nodeId === '-recent-') {\n            return this.getRecentFiles('-me-', pagination);\n        }\n    }\n\n    // TODO: remove it from here\n\n    /**\n     * Gets the contents of one of the well-known aliases in the form of node ID strings.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @returns List of node IDs\n     */\n    getCorrespondingNodeIds(nodeId: string, pagination: PaginationModel = {}): Observable<string[]> {\n        if (this.isCustomSource(nodeId)) {\n\n            return this.loadFolderByNodeId(nodeId, pagination, [])\n                .pipe(map(result => result.list.entries.map((node: any) => {\n                    if (nodeId === '-sharedlinks-') {\n                        return node.entry.nodeId;\n\n                    } else if (nodeId === '-sites-' || nodeId === '-mysites-') {\n                        return node.entry.guid;\n\n                    } else if (nodeId === '-favorites-') {\n                        return node.entry.targetGuid;\n                    }\n\n                    return node.entry.id;\n                })));\n\n        } else if (nodeId) {\n            // cases when nodeId is '-my-', '-root-' or '-shared-'\n            return from(this.apiService.nodesApi.getNode(nodeId)\n                .then(node => [node.entry.id]));\n        }\n\n        return of([]);\n    }\n\n    /**\n     * Does the well-known alias have a corresponding node ID?\n     * @param nodeId Node to check\n     * @returns True if the alias has a corresponding node ID, false otherwise\n     */\n    hasCorrespondingNodeIds(nodeId: string): boolean {\n        return this.isCustomSource(nodeId) || this.isSupportedSource(nodeId);\n    }\n\n    private getIncludesFields(includeFields: string[]): string[] {\n        return ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n    }\n\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnDestroy, OnInit, Output, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    ContentService, DataCellEvent, DataColumn, DataRowActionEvent, DataSorting, DataTableComponent,\n    DisplayMode, ObjectDataColumn, PaginatedComponent, AppConfigService, DataColumnListComponent,\n    UserPreferencesService, PaginationModel, ThumbnailService\n} from '@alfresco/adf-core';\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\nimport { Subject, BehaviorSubject, Subscription, of } from 'rxjs';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\nimport { CustomResourcesService } from './../services/custom-resources.service';\nimport { NavigableComponentInterface } from '../../breadcrumb/navigable-component.interface';\n\nexport enum PaginationStrategy {\n    Finite,\n    Infinite\n}\n\n@Component({\n    selector: 'adf-document-list',\n    styleUrls: ['./document-list.component.scss'],\n    templateUrl: './document-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentListComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, PaginatedComponent, NavigableComponentInterface {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n    static DEFAULT_PAGE_SIZE: number = 20;\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Include additional information about the node in the server request.for example: association, isLink, isLocked and others. */\n    @Input()\n    includeFields: string[];\n\n    /** Change the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** Define a set of CSS styles styles to apply depending on the permission\n     * of the user on that node. See the Permission Style model\n     * page for further details and examples.\n     */\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    /** The default route for all the location-based columns (if declared). */\n    @Input()\n    locationFormat: string = '/';\n\n    /** Toggles navigation to folder content or file preview */\n    @Input()\n    navigate: boolean = true;\n\n    /** Toggles the header */\n    @Input()\n    showHeader: boolean = true;\n\n    /** User interaction for folder navigation or file preview.\n     * Valid values are \"click\" and \"dblclick\". Default value: \"dblclick\"\n     */\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    /** Show document thumbnails rather than icons */\n    @Input()\n    thumbnails: boolean = false;\n\n    /** Row selection mode. Can be null, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    /** Toggles multiselect mode */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles content actions for each row */\n    @Input()\n    contentActions: boolean = false;\n\n    /** Position of the content actions dropdown menu. Can be set to \"left\" or \"right\". */\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    /** Toggles context menus for each row */\n    @Input()\n    contextMenuActions: boolean = false;\n\n    /** Custom image for empty folder. Default value: './assets/images/empty_doc_lib.svg' */\n    @Input()\n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    /** Toggle file drop support for rows (see Upload Directive for further details */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** Defines default sorting. The format is an array of 2 strings `[key, direction]`\n     * i.e. `['name', 'desc']` or `['name', 'asc']`. Set this value only if you want to\n     * override the default sorting detected by the component based on columns.\n     */\n    @Input()\n    sorting = ['name', 'asc'];\n\n    /** Defines sorting mode. Can be either `client` or `server`. */\n    @Input()\n    sortingMode = 'client';\n\n    /** The inline style to apply to every row. See\n     * the Angular NgStyle\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row */\n    @Input()\n    rowStyleClass: string;\n\n    /** Toggles the loading state and animated spinners for the component. Used in\n     * combination with `navigate=false` to perform custom navigation and loading\n     * state indication.\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Custom row filter */\n    @Input()\n    rowFilter: any | null = null;\n\n    /** Custom image resolver */\n    @Input()\n    imageResolver: any | null = null;\n\n    /** The ID of the folder node to display or a reserved string alias for special sources */\n    @Input()\n    currentFolderId: string = null;\n\n    /**\n     * Currently displayed folder node\n     * @deprecated 2.3.0 - use currentFolderId or node\n     */\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    /** The Document list will show all the nodes contained in the NodePaging entity */\n    @Input()\n    node: NodePaging = null;\n\n    /** Default value is stored into user preference settings use it only if you are not using the pagination */\n    @Input()\n    maxItems: number;\n\n    /**\n     * Number of elements to skip over for pagination purposes\n     * @deprecated 2.3.0 - define it in pagination\n     */\n    @Input()\n    skipCount: number = 0;\n\n    /**\n     * Set document list to work in infinite scrolling mode\n     * @deprecated 2.3.0\n     */\n    @Input()\n    enableInfiniteScrolling: boolean = false;\n\n    /** Emitted when the user clicks a list node */\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the user double-clicks a list node */\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the current display folder changes */\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    /** Emitted when the user acts upon files with either single or double click\n     * (depends on `navigation-mode`). Useful for integration with the\n     * Viewer component.\n     */\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the Document List has loaded all items and is ready for use */\n    @Output()\n    ready: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when the API fails to get the Document List data */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('dataTable')\n    dataTable: DataTableComponent;\n\n    actions: ContentActionModel[] = [];\n    emptyFolderTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n    noPermission: boolean = false;\n    selection = new Array<MinimalNodeEntity>();\n\n    private _pagination: BehaviorSubject<PaginationModel>;\n    private layoutPresets = {};\n    private subscriptions: Subscription[] = [];\n    private rowMenuCache: { [key: string]: ContentActionModel[] } = {};\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private appConfig: AppConfigService,\n                private preferences: UserPreferencesService,\n                private customResourcesService: CustomResourcesService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    getContextActions(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            let actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map((currentAction: ContentActionModel) => {\n                    return {\n                        model: currentAction,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    /** @deprecated 2.3.0 define it in pagination */\n    get supportedPageSizes(): number[] {\n        return this.preferences.getDefaultPageSizes();\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\n\n    get pagination(): BehaviorSubject<PaginationModel> {\n        let maxItems = this.preferences.paginationSize;\n\n        if (!this._pagination) {\n            if (this.maxItems) {\n                maxItems = this.maxItems;\n            }\n\n            let defaultPagination = <PaginationModel> {\n                maxItems: maxItems,\n                skipCount: 0,\n                totalItems: 0,\n                hasMoreItems: false\n            };\n\n            this._pagination = new BehaviorSubject<PaginationModel>(defaultPagination);\n        }\n\n        return this._pagination;\n    }\n\n    isEmptyTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.emptyFolderTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isNoPermissionTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.noPermissionTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    ngOnInit() {\n        this.rowMenuCache = {};\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.documentListService, this.thumbnailService, null, this.getDefaultSorting(), this.sortingMode);\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this.rowFilter) {\n            this.data.setFilter(this.rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.subscriptions.push(\n            this.contextActionHandler.subscribe(val => this.contextActionCallback(val))\n        );\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.setTableSchema();\n    }\n\n    private setTableSchema() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map(c => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.documentListService, this.thumbnailService, schema, this.getDefaultSorting(), this.sortingMode);\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        let columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.resetSelection();\n        if (this.data) {\n            this.data.thumbnails = this.thumbnails;\n\n        }\n        if (changes.sortingMode && !changes.sortingMode.firstChange && this.data) {\n            this.data.sortingMode = changes.sortingMode.currentValue;\n        }\n\n        if (changes.sorting && !changes.sorting.firstChange && this.data) {\n            const newValue = changes.sorting.currentValue;\n            if (newValue && newValue.length > 0) {\n                const [key, direction] = newValue;\n                this.data.setSorting(new DataSorting(key, direction));\n            }\n        }\n\n        if (changes.folderNode && changes.folderNode.currentValue) {\n            this.currentFolderId = changes.folderNode.currentValue.id;\n            this.resetNewFolderPagination();\n            this.loadFolder();\n        } else if (changes.currentFolderId &&\n            changes.currentFolderId.currentValue &&\n            changes.currentFolderId.currentValue !== changes.currentFolderId.previousValue) {\n            this.resetNewFolderPagination();\n            this.loadFolder();\n        } else if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                this.data.loadPage(changes.node.currentValue);\n                this.onDataReady(changes.node.currentValue);\n            } else if (changes.rowFilter && changes.rowFilter.currentValue !== changes.rowFilter.previousValue) {\n                this.data.setFilter(changes.rowFilter.currentValue);\n                if (this.currentFolderId) {\n                    this.loadFolderNodesByFolderNodeId(this.currentFolderId, this.pagination.getValue()).catch(err => this.error.emit(err));\n                }\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload() {\n        this.ngZone.run(() => {\n            this.resetSelection();\n            if (this.node) {\n                this.data.loadPage(this.node);\n                this.onDataReady(this.node);\n            } else {\n                this.loadFolder();\n            }\n        });\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    getNodeActions(node: MinimalNodeEntity | any): ContentActionModel[] {\n        if (node && node.entry) {\n            let target = null;\n\n            if (node.entry.isFile) {\n                target = 'document';\n            } else if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                const actions = this.rowMenuCache[node.entry.id];\n                if (actions) {\n                    actions.forEach(action => {\n                        this.refreshAction(action, node);\n                    });\n                    return actions;\n                }\n\n                let actionsByTarget = this.actions\n                    .filter(entry => {\n                        const isVisible = (typeof entry.visible === 'function')\n                            ? entry.visible(node)\n                            : entry.visible;\n\n                        return isVisible && entry.target.toLowerCase() === target;\n                    })\n                    .map(action => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.refreshAction(action, node);\n                });\n\n                this.rowMenuCache[node.entry.id] = actionsByTarget;\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    private refreshAction(action: ContentActionModel, node: MinimalNodeEntity) {\n        action.disabled = this.isActionDisabled(action, node);\n        action.visible = this.isActionVisible(action, node);\n    }\n\n    private isActionVisible(action: ContentActionModel, node: MinimalNodeEntity): boolean {\n        if (typeof action.visible === 'function') {\n            return action.visible(node);\n        }\n\n        return action.visible;\n    }\n\n    private isActionDisabled(action: ContentActionModel, node: MinimalNodeEntity): boolean {\n        if (typeof action.disabled === 'function') {\n            return action.disabled(node);\n        }\n\n        if (action.permission && action.disableWithNoPermission && !this.contentService.hasPermission(node.entry, action.permission)) {\n            return true;\n        }\n\n        return action.disabled;\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    performNavigation(node: MinimalNodeEntity): boolean {\n        if (this.canNavigateFolder(node)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n\n    performCustomSourceNavigation(node: MinimalNodeEntity): boolean {\n        if (this.customResourcesService.isCustomSource(this.currentFolderId)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n\n    updateFolderData(node: MinimalNodeEntity): void {\n        this.resetNewFolderPagination();\n        this.currentFolderId = node.entry.id;\n        this.reload();\n        this.folderChange.emit(new NodeEntryEvent(node.entry));\n    }\n\n    updateCustomSourceData(nodeId: string): void {\n        this.folderNode = null;\n        this.currentFolderId = nodeId;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: MinimalNodeEntity, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = of(true);\n            }\n\n            if (typeof action.execute === 'function' && handlerSub) {\n                handlerSub.subscribe(() => {\n                    action.execute(node);\n                });\n            }\n        }\n    }\n\n    loadFolder() {\n        if (!this.pagination.getValue().merge) {\n            this.loading = true;\n        }\n\n        if (!this.hasCustomLayout) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n\n        if (this.folderNode) {\n            return this.loadFolderNodesByFolderNodeId(this.folderNode.id, this.pagination.getValue())\n                .catch(err => this.handleError(err));\n        } else {\n            this.loadFolderByNodeId(this.currentFolderId);\n        }\n    }\n\n    loadFolderByNodeId(nodeId: string) {\n        if (this.customResourcesService.isCustomSource(nodeId)) {\n            this.updateCustomSourceData(nodeId);\n            this.customResourcesService.loadFolderByNodeId(nodeId, this.pagination.getValue(), this.includeFields)\n                .subscribe((page: NodePaging) => {\n                    this.onPageLoaded(page);\n                }, err => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.documentListService\n                .getFolderNode(nodeId, this.includeFields)\n                .subscribe((node: MinimalNodeEntryEntity) => {\n                    this.folderNode = node;\n                    return this.loadFolderNodesByFolderNodeId(node.id, this.pagination.getValue())\n                        .catch(err => this.handleError(err));\n                }, err => {\n                    this.handleError(err);\n                });\n        }\n    }\n\n    loadFolderNodesByFolderNodeId(id: string, pagination: PaginationModel): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            this.documentListService\n                .getFolder(null, {\n                    maxItems: pagination.maxItems,\n                    skipCount: pagination.skipCount,\n                    rootFolderId: id\n                }, this.includeFields)\n                .subscribe(\n                    nodePaging => {\n                        this.data.loadPage(<NodePaging> nodePaging, this.pagination.getValue().merge);\n                        this.loading = false;\n                        this.onDataReady(nodePaging);\n                        resolve(true);\n                    }, err => {\n                        this.handleError(err);\n                    });\n        });\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n        this.noPermission = false;\n    }\n\n    onPageLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            this.data.loadPage(nodePaging, this.pagination.getValue().merge);\n            this.loading = false;\n            this.onDataReady(nodePaging);\n        }\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: MinimalNodeEntity) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeDblClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            let action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    canNavigateFolder(node: MinimalNodeEntity): boolean {\n        let canNavigateFolder: boolean = false;\n\n        if (this.customResourcesService.isCustomSource(this.currentFolderId)) {\n            canNavigateFolder = false;\n        } else if (node && node.entry && node.entry.isFolder) {\n            canNavigateFolder = true;\n        }\n\n        return canNavigateFolder;\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n    }\n\n    private onDataReady(nodePaging: NodePaging) {\n        this.ready.emit(nodePaging);\n\n        this.pagination.next(nodePaging.list.pagination);\n    }\n\n    updatePagination(pagination: PaginationModel) {\n        this.pagination.next(pagination);\n        this.reload();\n    }\n\n    navigateTo(nodeId: string) {\n        this.currentFolderId = nodeId;\n        this.resetNewFolderPagination();\n        this.loadFolder();\n        this.folderChange.emit(new NodeEntryEvent({ id: nodeId }));\n    }\n\n    private resetNewFolderPagination() {\n        this.folderNode = null;\n        this.pagination.value.skipCount = 0;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private handleError(err: any) {\n        if (err.message) {\n            if (JSON.parse(err.message).error.statusCode === 403) {\n                this.loading = false;\n                this.noPermission = true;\n            }\n        }\n        this.error.emit(err);\n\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { Component } from '@angular/core';\n\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-columns',\n    template: ''\n})\nexport class ContentColumnListComponent {\n\n    constructor(private documentList: DocumentListComponent, private logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n\n    /**\n     * Registers column model within the parent document list component.\n     * @param column Column definition model to register.\n     */\n    registerColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            let columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\n\n@Component({\n    selector: 'content-column',\n    template: ''\n})\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = false;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    constructor(private list: ContentColumnListComponent, private logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity, MinimalNodeEntity } from 'alfresco-js-api';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material';\n\nimport { DocumentListService } from './document-list.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\nimport { NodeDownloadDirective } from '../../directives/node-download.directive';\n\n@Injectable()\nexport class NodeActionsService {\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private contentDialogService: ContentNodeDialogService,\n                public dialogRef: MatDialog,\n                public content: ContentService,\n                private documentListService?: DocumentListService,\n                private apiService?: AlfrescoApiService,\n                private dialog?: MatDialog) {}\n\n    downloadNode(node: MinimalNodeEntity) {\n        new NodeDownloadDirective(this.apiService, this.dialog)\n            .downloadNode(node);\n    }\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: string, type: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        this.contentDialogService\n            .openCopyMoveDialog(action, contentEntry, permission)\n            .subscribe((selections: MinimalNodeEntryEntity[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                    observable.next.bind(observable, `OPERATION.SUCCESS.${type.toUpperCase()}.${action.toUpperCase()}`),\n                    observable.error.bind(observable)\n                    );\n            },\n            (error) => {\n                observable.error(error);\n                return observable;\n            });\n        return observable;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\n\n@Injectable()\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private contentNodeDialogService: ContentNodeDialogService,\n                private translation: TranslationService,\n                private documentListService?: DocumentListService,\n                private contentService?: ContentService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler for an action.\n     * @param key Identifier of the action\n     * @returns The handler for the action\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler for an action.\n     * @param key Identifier of the action\n     * @param handler Handler for the action\n     * @returns False if the key was an empty/null string, true otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if actions can be executed for an item.\n     * @param obj Item to receive an action\n     * @returns True if the action can be executed on this item, false otherwise\n     */\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n        this.handlers['lock'] = this.lockNode.bind(this);\n    }\n\n    private lockNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        return this.contentNodeDialogService.openLockNodeDialog(node.entry);\n    }\n\n    private downloadNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: MinimalNodeEntity, target?: any, permission?: string): Observable<any> {\n        let handlerObservable;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasPermission(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({\n                    type: 'content',\n                    action: 'delete',\n                    permission: permission\n                }));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable()\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: ContentService,\n                private translation: TranslationService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler function for an action.\n     * @param key Identifier for the action\n     * @returns The handler function\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler function for an action.\n     * @param key Identifier for the action\n     * @param handler The new handler function\n     * @returns True if the key was a valid action identifier, false otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if an action is available for a particular item.\n     * @param obj Item to check\n     * @returns True if the action is available, false otherwise\n     */\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n    }\n\n    private downloadNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: MinimalNodeEntity, target?: any, permission?: string): Observable<any> {\n        let handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasPermission(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n\n                    let message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n\n    unregisterAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            const idx = this.documentList.actions.indexOf(action);\n            if (idx >= 0) {\n                this.documentList.actions.splice(idx, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel, ContentActionTarget } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** The title of the action as shown in the menu. */\n    @Input()\n    title: string = 'Action';\n\n    /** The name of the icon to display next to the menu command (can be left blank). */\n    @Input()\n    icon: string;\n\n    /** Visibility state (see examples). */\n    @Input()\n    visible: boolean | Function = true;\n\n    /** System actions. Can be \"delete\", \"download\", \"copy\" or \"move\". */\n    @Input()\n    handler: string;\n\n    /** Type of item that the action applies to. Can be \"document\" or \"folder\" */\n    @Input()\n    target: string = ContentActionTarget.All;\n\n    /** The permission type. */\n    @Input()\n    permission: string;\n\n    /** Should this action be disabled in the menu if the user doesn't have permission for it? */\n    @Input()\n    disableWithNoPermission: boolean;\n\n    /** Is the menu item disabled? */\n    @Input()\n    disabled: boolean | Function = false;\n\n    /** Emitted when the user selects the action from the menu. */\n    @Output()\n    execute = new EventEmitter();\n\n    /** Emitted when a permission error occurs */\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    /** Emitted when an error occurs during the action.\n     * Applies to copy and move actions.\n     */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the action succeeds with the success string message.\n     * Applies to copy, move and delete actions.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    documentActionModel: ContentActionModel;\n    folderActionModel: ContentActionModel;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n    }\n\n    ngOnInit() {\n        if (this.target === ContentActionTarget.All) {\n            this.folderActionModel = this.generateAction(ContentActionTarget.Folder);\n            this.documentActionModel = this.generateAction(ContentActionTarget.Document);\n        } else {\n            this.documentActionModel = this.generateAction(this.target);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.visible && !changes.visible.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.visible = changes.visible.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.visible = changes.visible.currentValue;\n            }\n        }\n\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.disabled = changes.disabled.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.disabled = changes.disabled.currentValue;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.documentActionModel) {\n            this.unregister(this.documentActionModel);\n            this.documentActionModel = null;\n        }\n\n        if (this.folderActionModel) {\n            this.unregister(this.folderActionModel);\n            this.folderActionModel = null;\n        }\n    }\n\n    register(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.registerAction(model);\n        }\n        return false;\n    }\n\n    unregister(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.unregisterAction(model);\n        }\n        return false;\n    }\n\n    private generateAction(target: string): ContentActionModel {\n        const model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: target,\n            disabled: this.disabled,\n            visible: this.visible\n        });\n        if (this.handler) {\n            model.handler = this.getSystemHandler(target, this.handler);\n        }\n\n        if (this.execute) {\n            model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register(model);\n        return model;\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            target = target.toLowerCase();\n\n            if (target === ContentActionTarget.Document) {\n                if (this.documentActions) {\n                    this.subscriptions.push(\n                        this.documentActions.permissionEvent.subscribe(permission => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.documentActions.error.subscribe(errors => {\n                            this.error.emit(errors);\n                        }),\n                        this.documentActions.success.subscribe(message => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (target === ContentActionTarget.Folder) {\n                if (this.folderActions) {\n                    this.subscriptions.push(\n                        this.folderActions.permissionEvent.subscribe(permission => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.folderActions.error.subscribe(errors => {\n                            this.error.emit(errors);\n                        }),\n                        this.folderActions.success.subscribe(message => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'empty-folder-content'\n})\nexport class EmptyFolderContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.emptyFolderTemplate = this.template;\n        this.documentList.dataTable.noContentTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'no-permission-content'\n})\nexport class NoPermissionContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.noPermissionTemplate = this.template;\n        this.documentList.dataTable.noPermissionTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements MinimalNodeEntity {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements MinimalNodeEntryEntity {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n    aspectNames: string[];\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsEnum } from '@alfresco/adf-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: PermissionsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: PermissionsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel, FileUploadCompleteEvent, FileUploadDeleteEvent,\n    FileUploadErrorEvent, FileUploadStatus, UploadService\n} from '@alfresco/adf-core';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription, merge } from 'rxjs';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\n\n// @deprecated file-uploading-dialog TODO remove in 3.0.0\n@Component({\n    selector: 'adf-file-uploading-dialog, file-uploading-dialog',\n    templateUrl: './file-uploading-dialog.component.html',\n    styleUrls: ['./file-uploading-dialog.component.scss']\n})\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    @ViewChild('uploadList')\n    uploadList: FileUploadingListComponent;\n\n    /** Dialog position. Can be 'left' or 'right'. */\n    @Input()\n    position: string = 'right';\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\n\n    private listSubscription: Subscription;\n    private counterSubscription: Subscription;\n    private fileUploadSubscription: Subscription;\n    private errorSubscription: Subscription;\n\n    constructor(private uploadService: UploadService,\n                private changeDetecor: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.listSubscription = this.uploadService\n            .queueChanged.subscribe((fileList: FileModel[]) => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length) {\n                    this.isDialogActive = true;\n                }\n            });\n\n        this.counterSubscription = merge(\n                this.uploadService.fileUploadComplete,\n                this.uploadService.fileUploadDeleted\n            )\n            .subscribe((event: (FileUploadDeleteEvent | FileUploadCompleteEvent)) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .subscribe((event: FileUploadErrorEvent) => {\n                this.totalErrors = event.totalError;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService\n            .fileUpload.subscribe(() => {\n                this.changeDetecor.detectChanges();\n            });\n\n        this.uploadService.fileDeleted.subscribe((objId) => {\n            if (this.filesUploadingList) {\n                let file = this.filesUploadingList.find((item) => {\n                    return item.data.entry.id === objId;\n                });\n                if (file) {\n                    file.status = FileUploadStatus.Cancelled;\n                    this.changeDetecor.detectChanges();\n                }\n            }\n        });\n    }\n\n    /**\n     * Toggle confirmation message.\n     */\n    toggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n\n    /**\n     * Cancel uploads and hide confiramtion\n     */\n    cancelAllUploads() {\n        this.toggleConfirmation();\n\n        this.uploadList.cancelAllFiles();\n    }\n\n    /**\n     * Toggle dialog minimized state.\n     */\n    toggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetecor.detectChanges();\n    }\n\n    /**\n     * Dismiss dialog\n     */\n    close(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetecor.detectChanges();\n    }\n\n    ngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'adf-file-uploading-list-row',\n    templateUrl: './file-uploading-list-row.component.html',\n    styleUrls: [ './file-uploading-list-row.component.scss' ]\n})\nexport class FileUploadingListRowComponent {\n    @Input()\n    file: FileModel;\n\n    @Output()\n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    @Output()\n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n\n    onCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n\n    onRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus, NodesApiService, TranslationService, UploadService } from '@alfresco/adf-core';\nimport { Component, ContentChild, Input, Output, TemplateRef, EventEmitter } from '@angular/core';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-file-uploading-list',\n    templateUrl: './file-uploading-list.component.html',\n    styleUrls: ['./file-uploading-list.component.scss']\n})\nexport class FileUploadingListComponent {\n\n    FileUploadStatus = FileUploadStatus;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    files: FileModel[] = [];\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private uploadService: UploadService,\n        private nodesApi: NodesApiService,\n        private translateService: TranslationService) {\n    }\n\n    /**\n     * Cancel file upload\n     *\n     * @param file File model to cancel upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    cancelFile(file: FileModel): void {\n        this.uploadService.cancelUpload(file);\n    }\n\n    removeFile(file: FileModel): void {\n        this.deleteNode(file)\n            .subscribe(() => {\n                if ( file.status === FileUploadStatus.Error) {\n                    this.notifyError(file);\n                }\n\n                this.uploadService.cancelUpload(file);\n            });\n    }\n\n    /**\n     * Call the appropriate method for each file, depending on state\n     */\n    cancelAllFiles(): void {\n        this.getUploadingFiles()\n            .forEach((file) => this.uploadService.cancelUpload(file));\n\n        const deletedFiles = this.files\n            .filter((file) => file.status === FileUploadStatus.Complete)\n            .map((file) => this.deleteNode(file));\n\n        forkJoin(...deletedFiles)\n            .subscribe((files: FileModel[]) => {\n                const errors = files\n                    .filter((file) => file.status === FileUploadStatus.Error);\n\n                if (errors.length) {\n                    this.notifyError(...errors);\n                }\n\n                this.uploadService.cancelUpload(...files);\n            });\n    }\n\n    /**\n     * Checks if all the files are uploaded false if there is at least one file in Progress | Starting | Pending\n     */\n    isUploadCompleted(): boolean {\n         return !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files\n                .some(({status}) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n                );\n    }\n\n    /**\n     * Check if all the files are Cancelled | Aborted | Error. false if there is at least one file in uploading states\n     */\n    isUploadCancelled(): boolean {\n        return !!this.files.length &&\n            this.files\n                .every(({status}) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n                );\n    }\n\n    private deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi\n            .deleteNode(id, { permanent: true })\n            .pipe(\n                map(() => {\n                    file.status = FileUploadStatus.Deleted;\n                    return file;\n                }),\n                catchError(() => {\n                    file.status = FileUploadStatus.Error;\n                    return of(file);\n                })\n            );\n    }\n\n    private notifyError(...files: FileModel[]) {\n        let messageError: string = null;\n\n        if (files.length === 1) {\n            messageError = this.translateService\n                .instant(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                    { fileName: files[0].name}\n                );\n        } else {\n            messageError = this.translateService\n                .instant(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                    { total: files.length }\n                );\n        }\n\n        this.error.emit(messageError);\n    }\n\n    private getUploadingFiles() {\n        return this.files.filter((item) => {\n            if (\n                item.status === FileUploadStatus.Pending ||\n                item.status === FileUploadStatus.Progress ||\n                item.status === FileUploadStatus.Starting\n            ) {\n                return item;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, UploadService } from '@alfresco/adf-core';\nimport { EventEmitter } from '@angular/core';\n\nexport class UploadFilesEvent {\n    private isDefaultPrevented: boolean = false;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n    constructor(\n        public files: Array<FileModel>,\n        private uploadService: UploadService,\n        private callback: EventEmitter<any>\n    ) {}\n\n    pauseUpload() {\n        this.preventDefault();\n    }\n\n    resumeUpload() {\n        if (this.files && this.files.length > 0) {\n            this.uploadService.addToQueue(...this.files);\n            this.uploadService.uploadFilesInTheQueue(this.callback);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileInfo } from '@alfresco/adf-core';\nimport { EventEmitter, Input, Output, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { UploadService, TranslationService } from '@alfresco/adf-core';\nimport { Subscription } from 'rxjs';\nimport { UploadFilesEvent } from '../upload-files.event';\n\nexport abstract class UploadBase implements OnInit, OnDestroy {\n\n    /** Sets a limit on the maximum size (in bytes) of a file to be uploaded.\n     * Has no effect if undefined.\n     */\n    @Input()\n    maxFilesSize: number;\n\n    /** The ID of the root. Use the nodeId for\n     * Content Services or the taskId/processId for Process Services.\n     */\n    @Input()\n    rootFolderId: string = '-root-';\n\n    /** Toggles component disabled state (if there is no node permission checking). */\n    @Input()\n    disabled: boolean = false;\n\n    /** Filter for accepted file types. */\n    @Input()\n    acceptedFilesType: string = '*';\n\n    /** Toggles versioning. */\n    @Input()\n    versioning: boolean = false;\n\n    /** majorVersion boolean field to true to indicate a major version should be created. */\n    @Input()\n    majorVersion: boolean = false;\n\n    /** When you overwrite existing content, you can use the comment field to add a version comment that appears in the version history */\n    @Input()\n    comment: string;\n\n    /** Custom node type for uploaded file */\n    @Input()\n    nodeType: string = 'cm:content';\n\n    /** Emitted when the file is uploaded successfully. */\n    @Output()\n    success = new EventEmitter();\n\n    /**\n     * Emitted when a folder is created.\n     * @deprecated 2.4.0 No longer used by the framework\n     */\n    @Output()\n    createFolder = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the upload begins. */\n    @Output()\n    beginUpload = new EventEmitter<UploadFilesEvent>();\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                protected ngZone: NgZone) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.uploadService.fileUploadError.subscribe((error) => {\n                this.error.emit(error);\n            })\n        );\n\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    /**\n     * Upload a list of file in the specified path\n     * @param files\n     * @param path\n     */\n    uploadFiles(files: File[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((file: File) => {\n                return this.createFileModel(file, this.rootFolderId, (file.webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''));\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    uploadFilesInfo(files: FileInfo[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((fileInfo: FileInfo) => {\n                return this.createFileModel(fileInfo.file, this.rootFolderId, fileInfo.relativeFolder);\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    private uploadQueue(files: FileModel[]) {\n        let filteredFiles = files\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        this.ngZone.run(() => {\n            const event = new UploadFilesEvent(\n                [...filteredFiles],\n                this.uploadService,\n                this.success\n            );\n            this.beginUpload.emit(event);\n\n            if (!event.defaultPrevented) {\n                if (filteredFiles.length > 0) {\n                    this.uploadService.addToQueue(...filteredFiles);\n                    this.uploadService.uploadFilesInTheQueue(this.success);\n                }\n            }\n        });\n    }\n\n    /**\n     * Checks if the given file is allowed by the extension filters\n     *\n     * @param file FileModel\n     */\n    protected isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map(ext => ext.replace(/^\\./, ''));\n\n        if (allowedExtensions.indexOf(file.extension) !== -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Creates FileModel from File\n     *\n     * @param file\n     */\n    protected createFileModel(file: File, parentId: string, path: string, id?: string): FileModel {\n        return new FileModel(file, {\n            comment: this.comment,\n            majorVersion: this.majorVersion,\n            newVersion: this.versioning,\n            parentId: parentId,\n            path: path,\n            nodeType: this.nodeType\n        }, id);\n    }\n\n    protected isFileSizeAllowed(file: FileModel) {\n        let isFileSizeAllowed = true;\n        if (this.isMaxFileSizeDefined()) {\n            isFileSizeAllowed = this.isFileSizeCorrect(file);\n        }\n\n        return isFileSizeAllowed;\n    }\n\n    protected isMaxFileSizeDefined() {\n        return this.maxFilesSize !== undefined && this.maxFilesSize !== null;\n    }\n\n    protected isFileSizeCorrect(file: FileModel) {\n        return this.maxFilesSize >= 0 && file.size <= this.maxFilesSize;\n    }\n\n    /**\n     * Checks if the given file is an acceptable size\n     *\n     * @param file FileModel\n     */\n    private isFileSizeAcceptable(file: FileModel): boolean {\n        let acceptableSize = true;\n\n        if (!this.isFileSizeAllowed(file)) {\n            acceptableSize = false;\n\n            const message = this.translationService.instant(\n                'FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE',\n                { fileName: file.name }\n            );\n\n            this.error.emit(message);\n        }\n\n        return acceptableSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentService, EXTENDIBLE_COMPONENT, FileUtils,\n    LogService, NodePermissionSubject, TranslationService, UploadService, PermissionsEnum\n} from '@alfresco/adf-core';\nimport {\n    Component, EventEmitter, forwardRef, Input,\n    OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation, NgZone\n} from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Subject } from 'rxjs';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadButtonComponent extends UploadBase implements OnInit, OnChanges, NodePermissionSubject {\n\n    /** Allows/disallows upload folders (only for Chrome). */\n    @Input()\n    uploadFolders: boolean = false;\n\n    /** Allows/disallows multiple files */\n    @Input()\n    multipleFiles: boolean = false;\n\n    /** Defines the text of the upload button. */\n    @Input()\n    staticTitle: string;\n\n    /** Custom tooltip text. */\n    @Input()\n    tooltip: string = null;\n\n    /** Emitted when create permission is missing. */\n    @Output()\n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\n\n    private hasPermission: boolean = false;\n\n    protected permissionValue: Subject<boolean> = new Subject<boolean>();\n\n    constructor(protected uploadService: UploadService,\n                private contentService: ContentService,\n                protected translationService: TranslationService,\n                protected logService: LogService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    ngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasPermission = permission;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n\n    isButtonDisabled(): boolean {\n        return this.disabled ? true : undefined;\n    }\n\n    onFilesAdded($event: any): void {\n        let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasPermission) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    onDirectoryAdded($event: any): void {\n        if (this.hasPermission) {\n            let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    checkPermission() {\n        if (this.rootFolderId) {\n            let opts: any = {\n                includeSource: true,\n                include: ['allowableOperations']\n            };\n\n            this.contentService.getNode(this.rootFolderId, opts).subscribe(\n                res => this.permissionValue.next(this.nodeHasPermission(res.entry, PermissionsEnum.CREATE)),\n                error => this.error.emit(error)\n            );\n        }\n    }\n\n    nodeHasPermission(node: MinimalNodeEntryEntity, permission: PermissionsEnum | string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsEnum  } from '@alfresco/adf-core';\nimport { Component, forwardRef, Input, OnChanges, ViewEncapsulation, OnInit } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { UploadButtonComponent } from './upload-button.component';\nimport { FileModel, EXTENDIBLE_COMPONENT } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-upload-version-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadVersionButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadVersionButtonComponent extends UploadButtonComponent implements OnChanges, OnInit {\n\n    /** (**Required**) The node to be versioned. */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    protected createFileModel(file: File): FileModel {\n        const fileModel = super.createFileModel(file, this.rootFolderId, (file.webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''), this.node.id);\n\n        if (!this.isFileAcceptable(fileModel)) {\n            const message = this.translationService.instant('FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION');\n            this.error.emit(message);\n        }\n\n        return fileModel;\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.checkPermission();\n    }\n\n    checkPermission() {\n        this.permissionValue.next(this.nodeHasPermission(this.node, PermissionsEnum.UPDATE));\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    EXTENDIBLE_COMPONENT, FileInfo, FileModel, FileUtils, NodePermissionSubject,\n    NotificationService, TranslationService, UploadService, ContentService, PermissionsEnum\n} from '@alfresco/adf-core';\nimport { Component, forwardRef, Input, ViewEncapsulation, NgZone } from '@angular/core';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-drag-area',\n    templateUrl: './upload-drag-area.component.html',\n    styleUrls: ['./upload-drag-area.component.css'],\n    host: { 'class': 'adf-upload-drag-area' },\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadDragAreaComponent extends UploadBase implements NodePermissionSubject {\n\n    /**\n     * ID of parent folder node\n     * @deprecated 2.4.0 - use rootFolderId ID of parent folder node\n     */\n    @Input()\n    set parentId(nodeId: string) {\n        this.rootFolderId = nodeId;\n    }\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                private notificationService: NotificationService,\n                private contentService: ContentService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    /**\n     * Method called when files are dropped in the drag area.\n     *\n     * @param files - files dropped in the drag area.\n     */\n    onFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            this.uploadFiles(files);\n        }\n    }\n\n    /**\n     * Called when the file are dropped in the drag area.\n     * @deprecated in 2.4.0: use `onFilesDropped` instead\n     * @param item - FileEntity\n     */\n    onFilesEntityDropped(item: any): void {\n        if (!this.disabled) {\n            item.file((file: File) => {\n                // const fileModel = this.createFileModel(file, this.rootFolderId, item.fullPath.replace(item.name, ''));\n\n                this.uploadFiles([file]);\n            });\n        }\n    }\n\n    /**\n     * Called when a folder are dropped in the drag area\n     *\n     * @param folder - name of the dropped folder\n     */\n    onFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flattern(folder).then(filesInfo => {\n                this.uploadFilesInfo(filesInfo);\n            });\n        }\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    showUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translationService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translationService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    /** Returns true or false considering the component options and node permissions */\n    isDroppable(): boolean {\n        return !this.disabled;\n    }\n\n    /**\n     * Handles 'upload-files' events raised by child components.\n     *\n     * @param event DOM event\n     */\n    onUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        let isAllowed: boolean = this.contentService.hasPermission(event.detail.data.obj.entry, PermissionsEnum.CREATE);\n        if (isAllowed) {\n            let fileInfo: FileInfo[] = event.detail.files;\n            if (this.isTargetNodeFolder(event)) {\n                const destinationFolderName = event.detail.data.obj.entry.name;\n                fileInfo.map((file) => file.relativeFolder = destinationFolderName ? destinationFolderName.concat(file.relativeFolder) : file.relativeFolder);\n            }\n            if (fileInfo && fileInfo.length > 0) {\n                this.uploadFilesInfo(fileInfo);\n            }\n        }\n    }\n\n    private isTargetNodeFolder(event: CustomEvent): boolean {\n        return event.detail.data.obj && event.detail.data.obj.entry.isFolder;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { FileUtils } from '@alfresco/adf-core';\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\n@Directive({\n    selector: '[file-draggable]'\n})\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    /** Enables/disables drag-and-drop functionality. */\n    @Input('file-draggable')\n    enabled: boolean = true;\n\n    /** Emitted when one or more files are dragged and dropped onto the draggable element. */\n    @Output()\n    filesDropped: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /**\n     * Emitted when one or more files are dragged and dropped onto the draggable element.\n     * @deprecated in 2.4.0: use `filesDropped` instead\n     */\n    @Output()\n    filesEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when a directory is dragged and dropped onto the draggable element. */\n    @Output()\n    folderEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    private cssClassName: string = 'file-draggable__input-focus';\n    private element: HTMLElement;\n\n    constructor(el: ElementRef, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n\n    /**\n     * Method called when files is dropped in the drag and drop area.\n     * @param event DOM event.\n     */\n    onDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            // Chrome, Edge, Firefox, Opera (Files + Folders)\n            const items = event.dataTransfer.items;\n            if (items) {\n                const files: File[] = [];\n\n                for (let i = 0; i < items.length; i++) {\n                    if (items[i].webkitGetAsEntry) {\n                        const item = items[i].webkitGetAsEntry();\n\n                        if (item) {\n                            if (item.isFile) {\n                                const file = items[i].getAsFile();\n\n                                if (file) {\n                                    files.push(file);\n                                }\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    }\n                }\n                if (files.length > 0) {\n                    this.filesDropped.emit(files);\n                }\n            } else {\n                // IE, Safari, Chrome, Edge, Firefox, Opera (Files only)\n                const files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag in.\n     *\n     * @param event - DOM event.\n     */\n    onDragEnter(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag out.\n     *\n     * @param event - DOM event.\n     */\n    onDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file is over the drag area.\n     *\n     * @param event\n     */\n    onDragOver(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Prevent default and stop propagation of the DOM event.\n     *\n     * @param $event - DOM event.\n     */\n    preventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadVersionButtonComponent } from './components/upload-version-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ]\n})\nexport class UploadModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { UploadModule } from '../upload/upload.module';\n\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { ContentColumnListComponent } from './components/content-column/content-column-list.component';\nimport { ContentColumnComponent } from './components/content-column/content-column.component';\nimport { DocumentListComponent } from './components/document-list.component';\n\nimport { EmptyFolderContentDirective } from './components/empty-folder/empty-folder-content.directive';\nimport { NoPermissionContentDirective } from './components/no-permission/no-permission-content.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ],\n    exports: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ]\n})\nexport class DocumentListModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport { QueryBody, RequestFacetFields, RequestFacetField, RequestSortDefinitionInner } from 'alfresco-js-api';\nimport { SearchCategory } from './search-category.interface';\nimport { FilterQuery } from './filter-query.interface';\nimport { SearchRange } from './search-range.interface';\nimport { SearchConfiguration } from './search-configuration.interface';\nimport { FacetQuery } from './facet-query.interface';\nimport { SearchSortingDefinition } from './search-sorting-definition.interface';\nimport { FacetField } from './facet-field.interface';\nimport { FacetFieldBucket } from './facet-field-bucket.interface';\n\n@Injectable()\nexport class SearchQueryBuilderService {\n\n    private _userQuery = '';\n\n    updated: Subject<QueryBody> = new Subject();\n    executed: Subject<any> = new Subject();\n\n    categories: Array<SearchCategory> = [];\n    queryFragments: { [id: string]: string } = {};\n    filterQueries: FilterQuery[] = [];\n    paging: { maxItems?: number; skipCount?: number } = null;\n    sorting: Array<SearchSortingDefinition> = [];\n\n    protected userFacetQueries: FacetQuery[] = [];\n    protected userFacetBuckets: { [key: string]: Array<FacetFieldBucket> } = {};\n\n    get userQuery(): string {\n        return this._userQuery;\n    }\n\n    set userQuery(value: string) {\n        value = (value || '').trim();\n        this._userQuery = value ? `(${value})` : '';\n    }\n\n    config: SearchConfiguration;\n\n    // TODO: to be supported in future iterations\n    ranges: { [id: string]: SearchRange } = {};\n\n    constructor(private appConfig: AppConfigService, private alfrescoApiService: AlfrescoApiService) {\n        this.resetToDefaults();\n    }\n\n    resetToDefaults() {\n        const template = this.appConfig.get<SearchConfiguration>('search');\n        if (template) {\n            this.config = JSON.parse(JSON.stringify(template));\n            this.categories = (this.config.categories || []).filter(category => category.enabled);\n            this.filterQueries = this.config.filterQueries || [];\n            this.userFacetBuckets = {};\n            this.userFacetQueries = [];\n            if (this.config.sorting) {\n                this.sorting = this.config.sorting.defaults || [];\n            }\n        }\n    }\n\n    addUserFacetQuery(query: FacetQuery) {\n        if (query) {\n            const existing = this.userFacetQueries.find(facetQuery => facetQuery.label === query.label);\n            if (existing) {\n                existing.query = query.query;\n            } else {\n                this.userFacetQueries.push({ ...query });\n            }\n        }\n    }\n\n    removeUserFacetQuery(query: FacetQuery) {\n        if (query) {\n            this.userFacetQueries = this.userFacetQueries\n                .filter(facetQuery => facetQuery.label !== query.label);\n        }\n    }\n\n    addUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            const existing = buckets.find(facetBucket => facetBucket.label === bucket.label);\n            if (!existing) {\n                buckets.push(bucket);\n            }\n            this.userFacetBuckets[field.field] = buckets;\n        }\n    }\n\n    getUserFacetBuckets(field: string) {\n        return this.userFacetBuckets[field] || [];\n    }\n\n    removeUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            this.userFacetBuckets[field.field] = buckets\n                .filter(facetBucket => facetBucket.label !== bucket.label);\n        }\n    }\n\n    addFilterQuery(query: string): void {\n        if (query) {\n            const existing = this.filterQueries.find(filterQuery => filterQuery.query === query);\n            if (!existing) {\n                this.filterQueries.push({ query: query });\n            }\n        }\n    }\n\n    removeFilterQuery(query: string): void {\n        if (query) {\n            this.filterQueries = this.filterQueries\n                .filter(filterQuery => filterQuery.query !== query);\n        }\n    }\n\n    getFacetQuery(label: string): FacetQuery {\n        if (label && this.hasFacetQueries) {\n            const result = this.config.facetQueries.queries.find(query => query.label === label);\n            if (result) {\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    getFacetField(label: string): FacetField {\n        if (label) {\n            const fields = this.config.facetFields.fields || [];\n            const result = fields.find(field => field.label === label);\n            if (result) {\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    update(): void {\n        const query = this.buildQuery();\n        this.updated.next(query);\n    }\n\n    async execute() {\n        const query = this.buildQuery();\n        if (query) {\n            const data = await this.alfrescoApiService.searchApi.search(query);\n            this.executed.next(data);\n        }\n    }\n\n    buildQuery(): QueryBody {\n        let query = this.getFinalQuery();\n\n        const include = this.config.include || [];\n        if (include.length === 0) {\n            include.push('path', 'allowableOperations');\n        }\n\n        if (query) {\n            const result: QueryBody = {\n                query: {\n                    query: query,\n                    language: 'afts'\n                },\n                include: include,\n                paging: this.paging,\n                fields: this.config.fields,\n                filterQueries: this.filterQueries,\n                facetQueries: this.facetQueries,\n                facetFields: this.facetFields,\n                sort: this.sort\n            };\n\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns primary sorting definition.\n     */\n    getPrimarySorting(): SearchSortingDefinition {\n        if (this.sorting && this.sorting.length > 0) {\n            return this.sorting[0];\n        }\n        return null;\n    }\n\n    /**\n     * Returns all pre-configured sorting options that users can choose from.\n     */\n    getSortingOptions(): SearchSortingDefinition[] {\n        if (this.config && this.config.sorting) {\n            return this.config.sorting.options || [];\n        }\n        return [];\n    }\n\n    /**\n     * Check if FacetQueries has been defined\n     */\n    get hasFacetQueries(): boolean {\n        if (this.config\n            && this.config.facetQueries\n            && this.config.facetQueries.queries\n            && this.config.facetQueries.queries.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    protected get sort(): RequestSortDefinitionInner[] {\n        return this.sorting.map(def => {\n            return {\n                type: def.type,\n                field: def.field,\n                ascending: def.ascending\n            };\n        });\n    }\n\n    protected get facetQueries(): FacetQuery[] {\n        if (this.hasFacetQueries) {\n            return this.config.facetQueries.queries.map(query => {\n                return <FacetQuery> { ...query };\n            });\n        }\n\n        return null;\n    }\n\n    protected getFinalQuery(): string {\n        let query = '';\n\n        this.categories.forEach(facet => {\n            const customQuery = this.queryFragments[facet.id];\n            if (customQuery) {\n                if (query.length > 0) {\n                    query += ' AND ';\n                }\n                query += `(${customQuery})`;\n            }\n        });\n\n        let result = [this.userQuery, query]\n            .filter(entry => entry)\n            .join(' AND ');\n\n        if (this.userFacetQueries && this.userFacetQueries.length > 0) {\n            const combined = this.userFacetQueries\n                .map(userQuery => userQuery.query)\n                .join(' OR ');\n            result += ` AND (${combined})`;\n        }\n\n        if (this.userFacetBuckets) {\n            Object.keys(this.userFacetBuckets).forEach(key => {\n                const subQuery = (this.userFacetBuckets[key] || [])\n                    .map(bucket => bucket.filterQuery)\n                    .join(' OR ');\n                if (subQuery) {\n                    if (result.length > 0) {\n                        result += ' AND ';\n                    }\n                    result += `(${subQuery})`;\n                }\n            });\n        }\n\n        return result;\n    }\n\n    protected get facetFields(): RequestFacetFields {\n        const facetFields = this.config.facetFields && this.config.facetFields.fields;\n\n        if (facetFields && facetFields.length > 0) {\n            return {\n                facets: facetFields.map(facet => <RequestFacetField> {\n                    field: facet.field,\n                    mincount: facet.mincount,\n                    label: facet.label,\n                    limit: facet.limit,\n                    offset: facet.offset,\n                    prefix: facet.prefix\n                })\n            };\n        }\n\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodePaging, QueryBody } from 'alfresco-js-api';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    exportAs: 'searchAutocomplete',\n    host: {\n        'class': 'adf-search'\n    }\n})\nexport class SearchComponent implements AfterContentInit, OnChanges {\n\n    @ViewChild('panel')\n    panel: ElementRef;\n\n    @ContentChild(TemplateRef)\n    template: TemplateRef<any>;\n\n    /** Function that maps an option's value to its display value in the trigger. */\n    @Input()\n    displayWith: ((value: any) => string) | null = null;\n\n    /** Maximum number of results to show in the search. */\n    @Input()\n    maxResults: number = 20;\n\n    /** Number of results to skip from the results pagination. */\n    @Input()\n    skipResults: number = 0;\n\n    /** @deprecated in 2.1.0 */\n    @Input()\n    queryBody: QueryBody;\n\n    /** Search term to use when executing the search. Updating this value will\n     * run a new search and update the results.\n     */\n    @Input()\n    searchTerm: string = '';\n\n    /** CSS class for display. */\n    @Input('class')\n    set classList(classList: string) {\n        if (classList && classList.length) {\n            classList.split(' ').forEach(className => this._classList[className.trim()] = true);\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Emitted when search results have fully loaded. */\n    @Output()\n    resultLoaded: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    showPanel: boolean = false;\n    results: NodePaging;\n\n    get isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    _isOpen: boolean = false;\n\n    keyPressedStream: Subject<string> = new Subject();\n\n    _classList: { [key: string]: boolean } = {};\n\n    constructor(private searchService: SearchService,\n                private _elementRef: ElementRef) {\n        this.keyPressedStream.asObservable()\n            .pipe(\n                debounceTime(200)\n            )\n            .subscribe((searchedWord: string) => {\n                this.loadSearchResults(searchedWord);\n            });\n\n        searchService.dataLoaded.subscribe(\n            data => this.onSearchDataLoaded(data),\n            error => this.onSearchDataError(error)\n        );\n    }\n\n    ngAfterContentInit() {\n        this.setVisibility();\n    }\n\n    ngOnChanges(changes) {\n        if (changes.queryBody &&\n            this.hasDifferentQueryBody(changes.queryBody.previousValue, changes.queryBody.currentValue)) {\n            this.loadSearchResults();\n        }\n        if (changes.searchTerm && changes.searchTerm.currentValue) {\n            this.loadSearchResults(changes.searchTerm.currentValue);\n        }\n    }\n\n    resetResults() {\n        this.cleanResults();\n        this.setVisibility();\n    }\n\n    reload() {\n        this.loadSearchResults(this.searchTerm);\n    }\n\n    private hasDifferentQueryBody(previousQueryBody: QueryBody, currentQueryBody: QueryBody) {\n        return JSON.stringify(previousQueryBody) !== JSON.stringify(currentQueryBody);\n    }\n\n    private cleanResults() {\n        if (this.results) {\n            this.results = {};\n        }\n    }\n\n    private loadSearchResults(searchTerm?: string) {\n        this.resetResults();\n        if (searchTerm) {\n            if (this.queryBody) {\n                this.searchService.searchByQueryBody(this.queryBody).subscribe(\n                    result => this.onSearchDataLoaded(result),\n                    err => this.onSearchDataError(err)\n                );\n            } else {\n                this.searchService.search(searchTerm, this.maxResults, this.skipResults).subscribe(\n                    result => this.onSearchDataLoaded(result),\n                    err => this.onSearchDataError(err)\n                );\n            }\n        } else {\n            this.cleanResults();\n        }\n    }\n\n    onSearchDataLoaded(data: NodePaging) {\n        if (data) {\n            this.results = data;\n            this.resultLoaded.emit(this.results);\n            this.isOpen = true;\n            this.setVisibility();\n        }\n    }\n\n    onSearchDataError(error) {\n        if (error && error.status !== 400) {\n            this.results = null;\n            this.error.emit(error);\n        }\n    }\n\n    hidePanel() {\n        if (this.isOpen) {\n            this._classList['adf-search-show'] = false;\n            this._classList['adf-search-hide'] = true;\n            this.isOpen = false;\n        }\n    }\n\n    setVisibility() {\n        this.showPanel = !!this.results && !!this.results.list;\n        this._classList['adf-search-show'] = this.showPanel;\n        this._classList['adf-search-hide'] = !this.showPanel;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-search-result',\n    templateUrl: './empty-search-result.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptySearchResultComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthenticationService, ThumbnailService } from '@alfresco/adf-core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output,\n         QueryList, ViewEncapsulation, ViewChild, ViewChildren, ElementRef, TemplateRef, ContentChild } from '@angular/core';\nimport { MinimalNodeEntity, QueryBody } from 'alfresco-js-api';\nimport { Observable, Subject } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { MatListItem } from '@angular/material';\nimport { EmptySearchResultComponent } from './empty-search-result.component';\nimport { debounceTime, filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search-control',\n    templateUrl: './search-control.component.html',\n    styleUrls: ['./search-control.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('active', style({ transform: 'translateX(0%)', 'margin-left': '13px' })),\n            state('inactive', style({ transform: 'translateX(81%)'})),\n            state('no-animation', style({ transform: 'translateX(0%)', width: '100%' })),\n            transition('inactive => active',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n            transition('active => inactive',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-control' }\n})\nexport class SearchControlComponent implements OnInit, OnDestroy {\n\n    /** Toggles whether to use an expanding search control. If false\n     * then a regular input is used.\n     */\n    @Input()\n    expandable: boolean = true;\n\n    /** Toggles highlighting of the search term in the results. */\n    @Input()\n    highlight: boolean = false;\n\n    /** Type of the input field to render, e.g. \"search\" or \"text\" (default). */\n    @Input()\n    inputType: string = 'text';\n\n    /** Toggles auto-completion of the search input field. */\n    @Input()\n    autocomplete: boolean = false;\n\n    /** Toggles \"find-as-you-type\" suggestions for possible matches. */\n    @Input()\n    liveSearchEnabled: boolean = true;\n\n    /** Maximum number of results to show in the live search. */\n    @Input()\n    liveSearchMaxResults: number = 5;\n\n    /** @deprecated in 2.1.0 */\n    @Input()\n    customQueryBody: QueryBody;\n\n    /** Emitted when the search is submitted pressing ENTER button.\n     * The search term is provided as value of the event.\n     */\n    @Output()\n    submit: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the search term is changed. The search term is provided\n     * in the 'value' property of the returned object.  If the term is less\n     * than three characters in length then the term is truncated to an empty\n     * string.\n     */\n    @Output()\n    searchChange: EventEmitter<string> = new EventEmitter();\n\n    /** Emitted when a file item from the list of \"find-as-you-type\" results is selected. */\n    @Output()\n    optionClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('search')\n    searchAutocomplete: SearchComponent;\n\n    @ViewChild('searchInput')\n    searchInput: ElementRef;\n\n    @ViewChildren(MatListItem)\n    private listResultElement: QueryList<MatListItem>;\n\n    @ContentChild(EmptySearchResultComponent)\n    emptySearchTemplate: EmptySearchResultComponent;\n\n    searchTerm: string = '';\n    subscriptAnimationState: string;\n    noSearchResultTemplate: TemplateRef <any> = null;\n\n    private toggleSearch = new Subject<any>();\n    private focusSubject = new Subject<FocusEvent>();\n\n    constructor(public authService: AuthenticationService,\n                private thumbnailService: ThumbnailService) {\n\n        this.toggleSearch.asObservable().pipe(debounceTime(200)).subscribe(() => {\n            if (this.expandable) {\n                this.subscriptAnimationState = this.subscriptAnimationState === 'inactive' ? 'active' : 'inactive';\n\n                if (this.subscriptAnimationState === 'inactive') {\n                    this.searchTerm = '';\n                    this.searchAutocomplete.resetResults();\n                    if ( document.activeElement.id === this.searchInput.nativeElement.id) {\n                        this.searchInput.nativeElement.blur();\n                    }\n                }\n            }\n        });\n    }\n\n    applySearchFocus(animationDoneEvent) {\n        if (animationDoneEvent.toState === 'active') {\n            this.searchInput.nativeElement.focus();\n        }\n    }\n\n    ngOnInit() {\n        this.subscriptAnimationState = this.expandable ? 'inactive' : 'no-animation';\n        this.setupFocusEventHandlers();\n    }\n\n    isNoSearchTemplatePresent(): boolean {\n        return this.emptySearchTemplate ? true : false;\n    }\n\n    ngOnDestroy(): void {\n        if (this.focusSubject) {\n            this.focusSubject.unsubscribe();\n            this.focusSubject = null;\n        }\n\n        if (this.toggleSearch) {\n            this.toggleSearch.unsubscribe();\n            this.toggleSearch = null;\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isEcmLoggedIn();\n    }\n\n    searchSubmit(event: any) {\n        this.submit.emit(event);\n        this.toggleSearchBar();\n    }\n\n    inputChange(event: any) {\n        this.searchChange.emit(event);\n    }\n\n    getAutoComplete(): string {\n        return this.autocomplete ? 'on' : 'off';\n    }\n\n    getMimeTypeIcon(node: MinimalNodeEntity): string {\n        let mimeType;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    isSearchBarActive() {\n        return this.subscriptAnimationState === 'active' && this.liveSearchEnabled;\n    }\n\n    toggleSearchBar() {\n        if (this.toggleSearch) {\n            this.toggleSearch.next();\n        }\n    }\n\n    elementClicked(item: any) {\n        if (item.entry) {\n            this.optionClicked.next(item);\n            this.toggleSearchBar();\n        }\n    }\n\n    onFocus($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onBlur($event): void {\n        this.focusSubject.next($event);\n    }\n\n    activateToolbar() {\n        if (!this.isSearchBarActive()) {\n            this.toggleSearchBar();\n        }\n    }\n\n    selectFirstResult() {\n        if ( this.listResultElement && this.listResultElement.length > 0) {\n            let firstElement: MatListItem = <MatListItem> this.listResultElement.first;\n            firstElement._getHostElement().focus();\n        }\n    }\n\n    onRowArrowDown($event: KeyboardEvent): void {\n        let nextElement: any = this.getNextElementSibling(<Element> $event.target);\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n\n    onRowArrowUp($event: KeyboardEvent): void {\n        let previousElement: any = this.getPreviousElementSibling(<Element> $event.target);\n        if (previousElement) {\n            previousElement.focus();\n        } else {\n            this.searchInput.nativeElement.focus();\n            this.focusSubject.next(new FocusEvent('focus'));\n        }\n    }\n\n    private setupFocusEventHandlers() {\n        const focusEvents: Observable<FocusEvent> = this.focusSubject\n            .asObservable()\n            .pipe(\n                debounceTime(50),\n                filter(($event: any) => {\n                    return this.isSearchBarActive() && ($event.type === 'blur' || $event.type === 'focusout');\n                })\n            );\n\n        focusEvents.subscribe(() => {\n            this.toggleSearchBar();\n        });\n    }\n\n    private getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n\n    private getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable: no-input-rename no-use-before-declare no-input-rename  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable, Subject, Subscription, merge, of, fromEvent } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\n\nexport const SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SearchTriggerDirective),\n    multi: true\n};\n\n@Directive({\n    selector: `input[searchAutocomplete], textarea[searchAutocomplete]`,\n    host: {\n        'role': 'combobox',\n        '[attr.autocomplete]': 'autocomplete',\n        'aria-autocomplete': 'list',\n        '[attr.aria-expanded]': 'panelOpen.toString()',\n        '(blur)': 'onTouched()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    providers: [SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class SearchTriggerDirective implements ControlValueAccessor, OnDestroy {\n    private onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n    @Input('searchAutocomplete')\n    searchPanel: SearchComponent;\n\n    @Input()\n    autocomplete: string = 'off';\n\n    private _panelOpen: boolean = false;\n    private closingActionsSubscription: Subscription;\n    private escapeEventStream = new Subject<void>();\n\n    onChange: (value: any) => void = () => { };\n\n    onTouched = () => { };\n\n    constructor(private element: ElementRef,\n                private ngZone: NgZone,\n                private changeDetectorRef: ChangeDetectorRef,\n                @Optional() @Inject(DOCUMENT) private document: any) { }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n\n        if (this.escapeEventStream) {\n            this.escapeEventStream.unsubscribe();\n            this.escapeEventStream = null;\n        }\n        if ( this.closingActionsSubscription ) {\n            this.closingActionsSubscription.unsubscribe();\n        }\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen && this.searchPanel.showPanel;\n    }\n\n    openPanel(): void {\n        this.searchPanel.isOpen = this._panelOpen = true;\n        this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n\n    closePanel(): void {\n        if (this._panelOpen) {\n            this.closingActionsSubscription.unsubscribe();\n            this._panelOpen = false;\n            this.searchPanel.resetResults();\n            this.searchPanel.hidePanel();\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    get panelClosingActions(): Observable<any> {\n        return merge(\n            this.escapeEventStream,\n            this.outsideClickStream\n        );\n    }\n\n    private get outsideClickStream(): Observable<any> {\n        if (!this.document) {\n            return of(null);\n        }\n\n        return merge(\n            fromEvent(this.document, 'click'),\n            fromEvent(this.document, 'touchend')\n        ).pipe(\n            filter((event: MouseEvent | TouchEvent) => {\n                const clickTarget = event.target as HTMLElement;\n                return this._panelOpen && clickTarget !== this.element.nativeElement;\n            })\n        );\n    }\n\n    writeValue(value: any): void {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n\n    registerOnChange(fn: (value: any) => {}): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        const keyCode = event.keyCode;\n\n        if (keyCode === ESCAPE && this.panelOpen) {\n            this.escapeEventStream.next();\n            event.stopPropagation();\n        } else if (keyCode === ENTER) {\n            this.escapeEventStream.next();\n            event.preventDefault();\n        }\n\n    }\n\n    handleInput(event: KeyboardEvent): void {\n        if (document.activeElement === event.target) {\n            let inputValue: string = (event.target as HTMLInputElement).value;\n            this.onChange(inputValue);\n            if (inputValue) {\n                this.searchPanel.keyPressedStream.next(inputValue);\n                this.openPanel();\n            } else {\n                this.searchPanel.resetResults();\n                this.closePanel();\n            }\n        }\n    }\n\n    private isPanelOptionClicked(event: MouseEvent) {\n        let isPanelOption: boolean = false;\n        if ( event ) {\n            let clickTarget = event.target as HTMLElement;\n            isPanelOption = !this.isNoResultOption(event) &&\n                            !!this.searchPanel.panel &&\n                            !!this.searchPanel.panel.nativeElement.contains(clickTarget);\n        }\n        return isPanelOption;\n    }\n\n    private isNoResultOption(event: MouseEvent) {\n        return this.searchPanel.results.list ? this.searchPanel.results.list.entries.length === 0 : true;\n    }\n\n    private subscribeToClosingActions(): Subscription {\n        const firstStable = this.ngZone.onStable.asObservable();\n        const optionChanges = this.searchPanel.keyPressedStream.asObservable();\n\n        return merge(firstStable, optionChanges)\n            .pipe(\n                takeUntil(this.onDestroy$),\n                switchMap(() => {\n                    this.searchPanel.setVisibility();\n                    return this.panelClosingActions;\n                })\n            )\n            .subscribe(event => this.setValueAndClose(event));\n    }\n\n    private setTriggerValue(value: any): void {\n        const toDisplay = this.searchPanel && this.searchPanel.displayWith ?\n            this.searchPanel.displayWith(value) : value;\n        const inputValue = toDisplay != null ? toDisplay : '';\n        this.element.nativeElement.value = inputValue;\n    }\n\n    private setValueAndClose(event: any | null): void {\n        if (this.isPanelOptionClicked(event) && !event.defaultPrevented) {\n            this.setTriggerValue(event.target.textContent.trim());\n            this.onChange(event.target.textContent.trim());\n            this.element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport class SearchFilterList<T> implements Iterable<T> {\n\n    private filteredItems: T[] = [];\n    private _filterText: string = '';\n\n    items: T[] = [];\n    pageSize: number = DEFAULT_PAGE_SIZE;\n    currentPageSize: number = DEFAULT_PAGE_SIZE;\n\n    get filterText(): string {\n        return this._filterText;\n    }\n\n    set filterText(value: string) {\n        this._filterText = value;\n        this.applyFilter();\n    }\n\n    private _filter: (item: T) => boolean = () => true;\n\n    get filter(): (item: T) => boolean {\n        return this._filter;\n    }\n\n    set filter(value: (item: T) => boolean ) {\n        this._filter = value;\n        this.applyFilter();\n    }\n\n    private applyFilter() {\n        if (this.filter) {\n            this.filteredItems = this.items.filter(this.filter);\n        } else {\n            this.filteredItems = this.items;\n        }\n        this.currentPageSize = this.pageSize;\n    }\n\n    /** Returns visible portion of the items.  */\n    get visibleItems(): T[] {\n        return this.filteredItems.slice(0, this.currentPageSize);\n    }\n\n    /** Returns entire collection length including items not displayed on the page. */\n    get length(): number {\n        return this.items.length;\n    }\n\n    /** Detects whether more items can be displayed. */\n    get canShowMoreItems(): boolean {\n        return this.filteredItems.length > this.currentPageSize;\n    }\n\n    /** Detects whether less items can be displayed. */\n    get canShowLessItems(): boolean {\n        return this.currentPageSize > this.pageSize;\n    }\n\n    /** Detects whether content fits single page. */\n    get fitsPage(): boolean {\n        return this.pageSize >= this.filteredItems.length;\n    }\n\n    constructor(items: T[] = [], pageSize?: number) {\n        this.items = items;\n        this.filteredItems = items;\n        this.pageSize = pageSize || DEFAULT_PAGE_SIZE;\n        this.currentPageSize = pageSize || DEFAULT_PAGE_SIZE;\n    }\n\n    /** Display more items. */\n    showMoreItems() {\n        if (this.canShowMoreItems) {\n            this.currentPageSize += this.pageSize;\n        }\n    }\n\n    /** Display less items. */\n    showLessItems() {\n        if (this.canShowLessItems) {\n            this.currentPageSize -= this.pageSize;\n        }\n    }\n\n    /** Reset entire collection and page settings. */\n    clear() {\n        this.currentPageSize = this.pageSize;\n        this.items = [];\n        this.filteredItems = [];\n        this.filterText = '';\n    }\n\n    [Symbol.iterator](): Iterator<T> {\n        let pointer = 0;\n        let items = this.visibleItems;\n\n        return {\n            next(): IteratorResult<T> {\n                if (pointer < items.length) {\n                    return {\n                        done: false,\n                        value: items[pointer++]\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: null\n                    };\n                }\n            }\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FacetQuery } from '../../../facet-query.interface';\nimport { SearchFilterList } from './search-filter-list.model';\n\nexport class ResponseFacetQueryList extends SearchFilterList<FacetQuery> {\n    constructor(items: FacetQuery[] = [], pageSize: number = 5) {\n        super(\n            items\n                .filter(item => {\n                    return item.count > 0;\n                }),\n            pageSize\n        );\n\n        this.filter = (query: FacetQuery) => {\n            if (this.filterText && query.label) {\n                const pattern = (this.filterText || '').toLowerCase();\n                const label = query.label.toLowerCase();\n                return label.startsWith(pattern);\n            }\n            return true;\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchService, TranslationService } from '@alfresco/adf-core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { FacetFieldBucket } from '../../facet-field-bucket.interface';\nimport { ResponseFacetQueryList } from './models/response-facet-query-list.model';\nimport { FacetQuery } from '../../facet-query.interface';\nimport { FacetField } from '../../facet-field.interface';\nimport { SearchFilterList } from './models/search-filter-list.model';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search-filter',\n    templateUrl: './search-filter.component.html',\n    styleUrls: ['./search-filter.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-filter' }\n})\nexport class SearchFilterComponent implements OnInit, OnDestroy {\n\n    private DEFAULT_PAGE_SIZE = 5;\n\n    isAlive = true;\n    responseFacetQueries: ResponseFacetQueryList = null;\n    responseFacetFields: FacetField[] = null;\n\n    private facetQueriesPageSize = this.DEFAULT_PAGE_SIZE;\n    facetQueriesLabel: string = 'Facet Queries';\n    facetQueriesExpanded = false;\n    facetFieldsExpanded = false;\n    canResetSelectedQueries = false;\n\n    selectedFacetQueries: Array<FacetQuery> = [];\n    selectedBuckets: Array<{ field: FacetField, bucket: FacetFieldBucket }> = [];\n\n    constructor(public queryBuilder: SearchQueryBuilderService,\n                private searchService: SearchService,\n                private translationService: TranslationService) {\n        if (queryBuilder.config && queryBuilder.config.facetQueries) {\n            this.facetQueriesLabel = queryBuilder.config.facetQueries.label || 'Facet Queries';\n            this.facetQueriesPageSize = queryBuilder.config.facetQueries.pageSize || this.DEFAULT_PAGE_SIZE;\n            this.facetQueriesExpanded = queryBuilder.config.facetQueries.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetFields) {\n            this.facetFieldsExpanded = queryBuilder.config.facetFields.expanded;\n        }\n\n        this.queryBuilder.updated.pipe(\n            takeWhile(() => this.isAlive)\n        ).subscribe(() => {\n            this.queryBuilder.execute();\n        });\n    }\n\n    ngOnInit() {\n        if (this.queryBuilder) {\n            this.queryBuilder.executed.pipe(\n                takeWhile(() => this.isAlive)\n            ).subscribe((data) => {\n                this.onDataLoaded(data);\n                this.searchService.dataLoaded.next(data);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.isAlive = false;\n    }\n\n    onToggleFacetQuery(event: MatCheckboxChange, facetQuery: FacetQuery) {\n        if (event && facetQuery) {\n            if (event.checked) {\n                this.selectFacetQuery(facetQuery);\n            } else {\n                this.unselectFacetQuery(facetQuery);\n            }\n        }\n    }\n\n    selectFacetQuery(query: FacetQuery) {\n        if (query) {\n            query.checked = true;\n            this.queryBuilder.addUserFacetQuery(query);\n            this.updateSelectedFields();\n            this.queryBuilder.update();\n        }\n    }\n\n    unselectFacetQuery(query: FacetQuery) {\n        if (query) {\n            query.checked = false;\n            this.queryBuilder.removeUserFacetQuery(query);\n            this.updateSelectedFields();\n            this.queryBuilder.update();\n        }\n    }\n\n    private updateSelectedBuckets() {\n        if (this.responseFacetFields) {\n            this.selectedBuckets = [];\n            for (let field of this.responseFacetFields) {\n                if (field.buckets) {\n                    this.selectedBuckets.push(\n                        ...this.queryBuilder.getUserFacetBuckets(field.field)\n                            .filter(bucket => bucket.checked)\n                            .map(bucket => {\n                                return { field, bucket };\n                            })\n                    );\n                }\n            }\n        } else {\n            this.selectedBuckets = [];\n        }\n    }\n\n    private updateSelectedFields() {\n        if (this.responseFacetQueries) {\n            this.selectedFacetQueries = this.responseFacetQueries.items.filter(item => item.checked);\n            this.canResetSelectedQueries = this.selectedFacetQueries.length > 0;\n        } else {\n            this.selectedFacetQueries = [];\n            this.canResetSelectedQueries = false;\n        }\n    }\n\n    onToggleBucket(event: MatCheckboxChange, field: FacetField, bucket: FacetFieldBucket) {\n        if (event && bucket) {\n            if (event.checked) {\n                this.selectFacetBucket(field, bucket);\n            } else {\n                this.unselectFacetBucket(field, bucket);\n            }\n        }\n    }\n\n    selectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = true;\n            this.queryBuilder.addUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    unselectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = false;\n            this.queryBuilder.removeUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    resetSelectedQueries() {\n        if (this.canResetSelectedQueries) {\n            for (let query of this.responseFacetQueries.items) {\n                query.checked = false;\n                this.queryBuilder.removeUserFacetQuery(query);\n            }\n            this.selectedFacetQueries = [];\n            this.canResetSelectedQueries = false;\n            this.queryBuilder.update();\n        }\n    }\n\n    canResetSelectedBuckets(field: FacetField): boolean {\n        if (field && field.buckets) {\n            return field.buckets.items.some(bucket => bucket.checked);\n        }\n        return false;\n    }\n\n    resetSelectedBuckets(field: FacetField) {\n        if (field && field.buckets) {\n            for (let bucket of field.buckets.items) {\n                bucket.checked = false;\n                this.queryBuilder.removeUserFacetBucket(field, bucket);\n            }\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    onDataLoaded(data: any) {\n        const context = data.list.context;\n\n        if (context) {\n            this.parseFacetFields(context);\n            this.parseFacetQueries(context);\n        } else {\n            this.responseFacetQueries = null;\n            this.responseFacetFields = null;\n        }\n    }\n\n    private parseFacetFields(context: any) {\n        if (!this.responseFacetFields) {\n            const configFacetFields = this.queryBuilder.config.facetFields && this.queryBuilder.config.facetFields.fields || [];\n\n            this.responseFacetFields = configFacetFields.map(field => {\n                const responseField = (context.facetsFields || []).find(response => response.label === field.label);\n                const buckets: FacetFieldBucket[] = ((responseField && responseField.buckets) || []).map(bucket => {\n                    const selectedBucket = this.selectedBuckets.find(facetBucket =>\n                        facetBucket.bucket.label === bucket.label && facetBucket.field.field === field.field);\n\n                    return <FacetFieldBucket> {\n                        ...bucket,\n                        checked: !!selectedBucket,\n                        display: this.translationService.instant(bucket.display),\n                        label: this.translationService.instant(bucket.label)\n                    };\n                });\n                const bucketList = new SearchFilterList<FacetFieldBucket>(buckets, field.pageSize);\n                bucketList.filter = (bucket: FacetFieldBucket): boolean => {\n                    if (bucket && bucketList.filterText) {\n                        const pattern = (bucketList.filterText || '').toLowerCase();\n                        const label = (bucket.display || bucket.label || '').toLowerCase();\n                        return label.startsWith(pattern);\n                    }\n                    return true;\n                };\n                return {\n                    ...field,\n                    label: this.translationService.instant(field.label),\n                    pageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    currentPageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    buckets: bucketList\n                };\n            });\n\n        } else {\n\n            this.responseFacetFields = this.responseFacetFields\n                .map(field => {\n\n                    let responseField = (context.facetsFields || []).find(response => response.label === field.label);\n\n                    (field && field.buckets && field.buckets.items || [])\n                        .map(bucket => {\n                            const responseBucket = ((responseField && responseField.buckets) || []).find(respBucket => respBucket.label === bucket.label);\n\n                            bucket.count = responseBucket ? responseBucket.count : 0;\n                            return bucket;\n                        });\n\n                    return field;\n                });\n        }\n    }\n\n    private parseFacetQueries(context: any) {\n        const responseQueries = this.getFacetQueryMap(context);\n        if (this.queryBuilder.config.facetQueries) {\n            const bkpResponseFacetQueries =  Object.assign({}, this.responseFacetQueries);\n            const facetQueries = (this.queryBuilder.config.facetQueries.queries || [])\n                .map(query => {\n\n                    const queryResult = responseQueries[query.label];\n                    const bkpQuery = (bkpResponseFacetQueries.items || []).find(item => item.label === query.label);\n\n                    if (bkpQuery) {\n                        bkpQuery.count = queryResult.count;\n                        return bkpQuery;\n                    }\n                    return <FacetQuery> {\n                        ...query,\n                        label: this.translationService.instant(query.label),\n                        count: queryResult.count\n                    };\n                });\n\n            if (facetQueries.length > 0) {\n                if (this.responseFacetQueries) {\n                    this.responseFacetQueries.items = facetQueries;\n\n                } else {\n                    this.responseFacetQueries = new ResponseFacetQueryList(facetQueries, this.facetQueriesPageSize);\n                }\n\n            } else {\n                this.responseFacetQueries = null;\n            }\n        }\n    }\n\n    private getFacetQueryMap(context: any): { [key: string]: any } {\n        const result = {};\n\n        (context.facetQueries || []).forEach(query => {\n            result[query.label] = query;\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-text',\n    templateUrl: './search-text.component.html',\n    styleUrls: ['./search-text.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-text' }\n})\nexport class SearchTextComponent implements SearchWidget, OnInit {\n\n    /** The content of the text box. */\n    @Input()\n    value = '';\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n        if (this.context && this.settings && this.settings.pattern) {\n            const pattern = new RegExp(this.settings.pattern, 'g');\n            const match = pattern.exec(this.context.queryFragments[this.id] || '');\n\n            if (match && match.length > 1) {\n                this.value = match[1];\n            }\n        }\n    }\n\n    reset() {\n        this.value = '';\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event) {\n        this.value = event.target.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: string) {\n        if (this.context && this.settings && this.settings.field) {\n            this.context.queryFragments[this.id] = value ? `${this.settings.field}:'${value}'` : '';\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { MatRadioChange } from '@angular/material';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchRadioOption {\n    name: string;\n    value: string;\n}\n\n@Component({\n    selector: 'adf-search-radio',\n    templateUrl: './search-radio.component.html',\n    styleUrls: ['./search-radio.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-radio' }\n})\nexport class SearchRadioComponent implements SearchWidget, OnInit {\n\n    /** The value of the selected radio button. */\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    options: SearchFilterList<SearchRadioOption>;\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchRadioOption>();\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList<SearchRadioOption>(\n                    this.settings.options, this.pageSize\n                );\n            }\n        }\n\n        this.setValue(\n            this.getSelectedValue()\n        );\n    }\n\n    private getSelectedValue(): string {\n        const options: any[] = this.settings['options'] || [];\n        if (options && options.length > 0) {\n            let selected = options.find(opt => opt.default);\n            if (!selected) {\n                selected = options[0];\n            }\n            return selected.value;\n        }\n        return null;\n    }\n\n    private setValue(newValue: string) {\n        this.value = newValue;\n        this.context.queryFragments[this.id] = newValue;\n        this.context.update();\n    }\n\n    changeHandler(event: MatRadioChange) {\n        this.setValue(event.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { MatSliderChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-search-slider',\n    templateUrl: './search-slider.component.html',\n    styleUrls: ['./search-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-slider' }\n})\nexport class SearchSliderComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    step: number;\n    min: number;\n    max: number;\n    thumbLabel = false;\n\n    /** The numeric value represented by the slider. */\n    @Input()\n    value: number | null;\n\n    ngOnInit() {\n        if (this.settings) {\n            if (this.settings.hasOwnProperty('min')) {\n                this.min = this.settings['min'];\n            }\n\n            if (this.settings.hasOwnProperty('max')) {\n                this.max = this.settings['max'];\n            }\n\n            if (this.settings.hasOwnProperty('step')) {\n                this.step = this.settings['step'];\n            }\n\n            this.thumbLabel = this.settings['thumbLabel'] ? true : false;\n        }\n    }\n\n    reset() {\n        this.value = this.min || 0;\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event: MatSliderChange) {\n        this.value = event.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: number | null) {\n        if (this.id && this.context && this.settings && this.settings.field) {\n            if (value === null) {\n                this.context.queryFragments[this.id] = '';\n            } else {\n                this.context.queryFragments[this.id] = `${this.settings.field}:[0 TO ${value}]`;\n            }\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorStateMatcher } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\nexport class LiveErrorStateMatcher implements ErrorStateMatcher {\n\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || (!control.pristine && isSubmitted)));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\n\n@Component({\n    selector: 'adf-search-number-range',\n    templateUrl: './search-number-range.component.html',\n    styleUrls: ['./search-number-range.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-number-range' }\n})\nexport class SearchNumberRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n\n    field: string;\n    format = '[{FROM} TO {TO}]';\n\n    validators: Validators;\n\n    ngOnInit(): void {\n\n        if (this.settings) {\n            this.field = this.settings.field;\n            this.format = this.settings.format || '[{FROM} TO {TO}]';\n        }\n\n        this.validators = Validators.compose([\n            Validators.required,\n            Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n            Validators.min(0)\n        ]);\n\n        this.from = new FormControl('', this.validators);\n        this.to = new FormControl('', this.validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        }, this.formValidator);\n    }\n\n    formValidator(formGroup: FormGroup) {\n        return parseInt(formGroup.get('from').value, 10) < parseInt(formGroup.get('to').value, 10) ? null : {'mismatch': true};\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.field) {\n            const map = new Map<string, string>();\n            map.set('FROM', model.from);\n            map.set('TO', model.to);\n\n            const value = this.formatString(this.format, map);\n\n            this.context.queryFragments[this.id] = `${this.field}:${value}`;\n            this.context.update();\n        }\n    }\n\n    private formatString(str: string, map: Map<string, string>): string {\n        let result = str;\n\n        map.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchListOption {\n    name: string;\n    value: string;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'adf-search-check-list',\n    templateUrl: './search-check-list.component.html',\n    styleUrls: ['./search-check-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-check-list' }\n})\nexport class SearchCheckListComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    options: SearchFilterList<SearchListOption>;\n    operator: string = 'OR';\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchListOption>();\n    }\n\n    ngOnInit(): void {\n        if (this.settings) {\n            this.operator = this.settings.operator || 'OR';\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList(this.settings.options, this.pageSize);\n            }\n        }\n    }\n\n    reset() {\n        this.options.items.forEach(opt => {\n            opt.checked = false;\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    changeHandler(event: MatCheckboxChange, option: any) {\n        option.checked = event.checked;\n        this.flush();\n    }\n\n    flush() {\n        const checkedValues = this.options.items\n            .filter(option => option.checked)\n            .map(option => option.value);\n\n        const query = checkedValues.join(` ${this.operator} `);\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = query;\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '@alfresco/adf-core';\n\ndeclare let moment: any;\n\nconst DEFAULT_FORMAT_DATE: string = 'DD/MM/YYYY';\n\n@Component({\n    selector: 'adf-search-date-range',\n    templateUrl: './search-date-range.component.html',\n    styleUrls: ['./search-date-range.component.scss'],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-date-range' }\n})\nexport class SearchDateRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    maxDate: any;\n    datePickerDateFormat = DEFAULT_FORMAT_DATE;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    getFromValidationMessage(): string {\n        return this.from.hasError('invalidOnChange') || this.hasParseError(this.from) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.from.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.from.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    getToValidationMessage(): string {\n        return this.to.hasError('invalidOnChange') || this.hasParseError(this.to) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.to.hasError('matDatepickerMin') ? 'SEARCH.FILTER.VALIDATION.NO-DAYS' :\n            this.to.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.to.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.datePickerDateFormat = this.settings.dateFormat || DEFAULT_FORMAT_DATE;\n        }\n        const theCustomDateAdapter = <MomentDateAdapter> <any> this.dateAdapter;\n        theCustomDateAdapter.overrideDisplyaFormat = this.datePickerDateFormat;\n\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.setLocale(locale);\n        });\n\n        const validators = Validators.compose([\n            Validators.required\n        ]);\n\n        this.from = new FormControl('', validators);\n        this.to = new FormControl('', validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        });\n\n        this.maxDate = this.dateAdapter.today().startOf('day');\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.settings && this.settings.field) {\n            const start = moment(model.from).startOf('day').format();\n            const end = moment(model.to).endOf('day').format();\n\n            this.context.queryFragments[this.id] = `${this.settings.field}:['${start}' TO '${end}']`;\n            this.context.update();\n        }\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    onChangedHandler(event: any, formControl: FormControl) {\n        const inputValue = event.srcElement.value;\n\n        const formatDate = this.dateAdapter.parse(inputValue, this.datePickerDateFormat);\n        if (formatDate && formatDate.isValid()) {\n            formControl.setValue(formatDate);\n        } else if (formatDate) {\n            formControl.setErrors({\n                'invalidOnChange': true\n            });\n        } else {\n            formControl.setErrors({\n                'required': true\n            });\n        }\n    }\n\n    setLocale(locale) {\n        this.dateAdapter.setLocale(locale);\n        moment.locale(locale);\n    }\n\n    hasParseError(formControl) {\n        return formControl.hasError('matDatepickerParse') && formControl.getError('matDatepickerParse').text;\n    }\n\n    forcePlaceholder(event: any) {\n        event.srcElement.click();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { SearchTextComponent } from '../search-text/search-text.component';\nimport { SearchRadioComponent } from '../search-radio/search-radio.component';\nimport { SearchSliderComponent } from '../search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from '../search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from '../search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from '../search-date-range/search-date-range.component';\n\n@Injectable()\nexport class SearchFilterService {\n\n    /**\n     * Contains string-to-type mappings for registered widgets.\n     */\n    widgets: { [id: string]: Type<{}> } = {\n        'text': SearchTextComponent,\n        'radio': SearchRadioComponent,\n        'slider': SearchSliderComponent,\n        'number-range': SearchNumberRangeComponent,\n        'check-list': SearchCheckListComponent,\n        'date-range': SearchDateRangeComponent\n    };\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { SearchFilterComponent } from '../../components/search-filter/search-filter.component';\n\n@Component({\n    selector: 'adf-search-chip-list',\n    templateUrl: './search-chip-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-chip-list' }\n})\nexport class SearchChipListComponent {\n\n    /** Search filter to supply the data for the chips. */\n    @Input()\n    searchFilter: SearchFilterComponent;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchSortingDefinition } from '../../search-sorting-definition.interface';\n\n@Component({\n    selector: 'adf-search-sorting-picker',\n    templateUrl: './search-sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-sorting-picker' }\n})\nexport class SearchSortingPickerComponent implements OnInit {\n\n    options: SearchSortingDefinition[] = [];\n    value: string;\n    ascending: boolean;\n\n    constructor(private queryBuilder: SearchQueryBuilderService) {}\n\n    ngOnInit() {\n        this.options = this.queryBuilder.getSortingOptions();\n\n        const primary = this.queryBuilder.getPrimarySorting();\n        if (primary) {\n            this.value = primary.key;\n            this.ascending = primary.ascending;\n        }\n    }\n\n    onChanged(sorting: { key: string, ascending: boolean }) {\n        this.value = sorting.key;\n        this.ascending = sorting.ascending;\n        this.applySorting();\n    }\n\n    private findOptionByKey(key: string): SearchSortingDefinition {\n        if (key) {\n            return this.options.find(opt => opt.key === key);\n        }\n        return null;\n    }\n\n    private applySorting() {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            this.queryBuilder.sorting = [{\n                ...option,\n                ascending: this.ascending\n            }];\n            this.queryBuilder.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, ViewContainerRef, OnInit, OnDestroy, ComponentRef, ComponentFactoryResolver } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterService } from '../search-filter/search-filter.service';\n\n@Component({\n    selector: 'adf-search-widget-container',\n    template: '<div #content></div>'\n})\nexport class SearchWidgetContainerComponent implements OnInit, OnDestroy {\n\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    @Input()\n    id: string;\n\n    @Input()\n    selector: string;\n\n    @Input()\n    settings: any;\n\n    @Input()\n    config: any;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private searchFilterService: SearchFilterService,\n        private queryBuilder: SearchQueryBuilderService,\n        private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        const componentType = this.searchFilterService.widgets[this.selector];\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.setupWidget(this.componentRef);\n            }\n        }\n    }\n\n    private setupWidget(ref: ComponentRef<any>) {\n        if (ref && ref.instance) {\n            ref.instance.id = this.id;\n            ref.instance.settings = { ...this.settings };\n            ref.instance.context = this.queryBuilder;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { SearchTriggerDirective } from './components/search-trigger.directive';\n\nimport { SearchControlComponent } from './components/search-control.component';\nimport { SearchComponent } from './components/search.component';\nimport { EmptySearchResultComponent } from './components/empty-search-result.component';\nimport { SearchWidgetContainerComponent } from './components/search-widget-container/search-widget-container.component';\nimport { SearchFilterComponent } from './components/search-filter/search-filter.component';\nimport { SearchChipListComponent } from './components/search-chip-list/search-chip-list.component';\nimport { SearchTextComponent } from './components/search-text/search-text.component';\nimport { SearchRadioComponent } from './components/search-radio/search-radio.component';\nimport { SearchSliderComponent } from './components/search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from './components/search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from './components/search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from './components/search-date-range/search-date-range.component';\nimport { SearchSortingPickerComponent } from './components/search-sorting-picker/search-sorting-picker.component';\n\nexport const ALFRESCO_SEARCH_DIRECTIVES: any[] = [\n    SearchComponent,\n    SearchControlComponent,\n    SearchTriggerDirective,\n    EmptySearchResultComponent,\n    SearchFilterComponent,\n    SearchChipListComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    exports: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    entryComponents: [\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent\n    ]\n})\nexport class SearchModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { SitesService, LogService } from '@alfresco/adf-core';\nimport { SitePaging, SiteEntry } from 'alfresco-js-api';\n\nexport enum Relations {\n    Members = 'members',\n    Containers = 'containers'\n}\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styleUrls: ['./sites-dropdown.component.scss'],\n    templateUrl: './sites-dropdown.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sites-dropdown' }\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    /** Hide the \"My Files\" option. */\n    @Input()\n    hideMyFiles: boolean = false;\n\n    /** A custom list of sites to be displayed by the dropdown. If no value\n     * is given, the sites of the current user are displayed by default. A\n     * list of objects only with properties 'title' and 'guid' is enough to\n     * be able to display the dropdown.\n     */\n    @Input()\n    siteList: SitePaging = null;\n\n    /** Id of the selected site */\n    @Input()\n    value: string = null;\n\n    /** Text or a translation key to act as a placeholder. Default value is the\n     * key \"DROPDOWN.PLACEHOLDER_LABEL\".\n     */\n    @Input()\n    placeholder: string = 'DROPDOWN.PLACEHOLDER_LABEL';\n\n    /** Filter for the results of the sites query. Possible values are\n     * \"members\" and \"containers\". When \"members\" is used, the site list\n     * will be restricted to the sites that the user is a member of.\n     */\n    @Input()\n    relations: string;\n\n    /** Emitted when the user selects a site. When the default option is selected,\n     * an empty model is emitted.\n     */\n    @Output()\n    change: EventEmitter<SiteEntry> = new EventEmitter();\n\n    selected: SiteEntry = null;\n\n    public MY_FILES_VALUE = '-my-';\n\n    constructor(private sitesService: SitesService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (!this.siteList) {\n            this.setDefaultSiteList();\n        }\n    }\n\n    selectedSite(event: any) {\n        this.change.emit(event.value);\n    }\n\n    private setDefaultSiteList() {\n        let extendedOptions = null;\n        if (this.relations) {\n            extendedOptions = { relations: [this.relations] };\n        }\n        this.sitesService.getSites(extendedOptions).subscribe((result) => {\n\n            this.siteList = this.relations === Relations.Members ? this.filteredResultsByMember(result) : result;\n\n            if (!this.hideMyFiles) {\n                let myItem = { entry: { id: '-my-', guid: '-my-', title: 'DROPDOWN.MY_FILES_OPTION' } };\n\n                this.siteList.list.entries.unshift(myItem);\n\n                if (!this.value) {\n                    this.value = '-my-';\n                }\n            }\n\n            this.selected = this.siteList.list.entries.find(site => site.entry.id === this.value);\n        },\n        (error) => {\n            this.logService.error(error);\n        });\n    }\n\n    private filteredResultsByMember(sites: SitePaging): SitePaging {\n        const loggedUserName = this.sitesService.getEcmCurrentLoggedUserName();\n        sites.list.entries = sites.list.entries.filter( (site) => this.isCurrentUserMember(site, loggedUserName));\n        return sites;\n    }\n\n    private isCurrentUserMember(site, loggedUserName): boolean {\n        return site.entry.visibility === 'PUBLIC' ||\n            !!site.relations.members.list.entries.find((member) => {\n                return member.entry.id.toLowerCase() === loggedUserName.toLowerCase();\n            });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DropdownSitesComponent } from './sites-dropdown.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        DropdownSitesComponent\n    ],\n    declarations: [\n        DropdownSitesComponent\n    ]\n})\nexport class SitesDropdownModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { MinimalNodeEntryEntity, PathElementEntity } from 'alfresco-js-api';\nimport { DocumentListComponent } from '../document-list';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n\n    /** Active node, builds UI based on folderNode.path.elements collection. */\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    /** (optional) Name of the root element of the breadcrumb. You can use\n     * this property to rename \"Company Home\" to \"Personal Files\" for\n     * example. You can use an i18n resource key for the property value.\n     */\n    @Input()\n    root: string = null;\n\n    /** (optional) The id of the root element. You can use this property\n     * to set a custom element the breadcrumb should start with.\n     */\n    @Input()\n    rootId: string = null;\n\n    /** (optional) Document List component to operate with. The list will\n     * update when the breadcrumb is clicked.\n     */\n    @Input()\n    target: DocumentListComponent;\n\n    /** Transformation to be performed on the chosen/folder node before building\n     * the breadcrumb UI. Can be useful when custom formatting is needed for the\n     * breadcrumb. You can change the path elements from the node that are used to\n     * build the breadcrumb using this function.\n     */\n    @Input()\n    transform: (node) => any;\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    /** Maximum number of nodes to display before wrapping them with a dropdown element.  */\n    @Input()\n    maxItems: number;\n\n    previousNodes: PathElementEntity[];\n    lastNodes: PathElementEntity[];\n\n    route: PathElementEntity[] = [];\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    /** Emitted when the user clicks on a breadcrumb. */\n    @Output()\n    navigate = new EventEmitter<PathElementEntity>();\n\n    ngOnInit() {\n        this.transform = this.transform ? this.transform : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            let node: MinimalNodeEntryEntity = null;\n            node = this.transform ? this.transform(changes.folderNode.currentValue) : changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n\n        if (changes.transform) {\n            let node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n            this.route = this.parseRoute(node);\n        }\n        this.recalculateNodes();\n    }\n\n    protected recalculateNodes(): void {\n        if (this.maxItems && this.route.length > this.maxItems) {\n            this.lastNodes = this.route.slice(this.route.length - this.maxItems);\n            this.previousNodes = this.route.slice(0, this.route.length - this.maxItems);\n            this.previousNodes.reverse();\n        } else {\n            this.lastNodes = this.route;\n            this.previousNodes = null;\n        }\n    }\n\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    hasPreviousNodes(): boolean {\n        return this.previousNodes ? true : false;\n    }\n\n    parseRoute(node: MinimalNodeEntryEntity): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let result: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            result = route.findIndex(el => el.id === nodeId);\n        }\n\n        return result;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.navigateTo(route.id);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnChanges, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { PathElementEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@Component({\n    selector: 'adf-dropdown-breadcrumb',\n    templateUrl: './dropdown-breadcrumb.component.html',\n    styleUrls: ['./dropdown-breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n})\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            let node: MinimalNodeEntryEntity = null;\n            node = this.transform ? this.transform(changes.folderNode.currentValue) : changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n\n        if (changes.transform) {\n            let node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n            this.route = this.parseRoute(node);\n        }\n        this.recalculateNodes();\n    }\n\n    /**\n     * Calculate the current and previous nodes from the route array\n     */\n    protected recalculateNodes(): void {\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n\n    /**\n     * Opens the node picker menu\n     */\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    /**\n     * Return if route has more than one element (means: we are not in the root directory)\n     */\n    hasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './dropdown-breadcrumb.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ],\n    declarations: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ]\n})\nexport class BreadcrumbModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'adf-confirm-dialog',\n    template: `\n        <h1 mat-dialog-title>{{ title | translate }}</h1>\n        <mat-dialog-content>\n            <p>{{ message | translate }}</p>\n        </mat-dialog-content>\n        <mat-dialog-actions>\n            <span class=\"spacer\"></span>\n            <button id=\"adf-confirm-accept\" mat-button color=\"primary\" [mat-dialog-close]=\"true\">{{ yesLabel | translate }}</button>\n            <button id=\"adf-confirm-cancel\" mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>{{ noLabel | translate }}</button>\n        </mat-dialog-actions>\n    `,\n    styles: [`\n        .spacer { flex: 1 1 auto; }\n\n        .adf-confirm-dialog .mat-dialog-actions .mat-button-wrapper {\n            text-transform: uppercase;\n        }\n    `],\n    host: { 'class': 'adf-confirm-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmDialogComponent {\n\n    title: string;\n    message: string;\n    yesLabel: string;\n    noLabel: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) data) {\n        data = data || {};\n        this.title = data.title || 'ADF_CONFIRM_DIALOG.CONFIRM';\n        this.message = data.message || 'ADF_CONFIRM_DIALOG.MESSAGE';\n        this.yesLabel = data.yesLabel || 'ADF_CONFIRM_DIALOG.YES_LABEL';\n        this.noLabel = data.noLabel || 'ADF_CONFIRM_DIALOG.NO_LABEL';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, ViewEncapsulation, EventEmitter, Output } from '@angular/core';\nimport { VersionsApi, MinimalNodeEntryEntity, VersionEntry } from 'alfresco-js-api';\nimport { MatDialog } from '@angular/material';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\n\n@Component({\n    selector: 'adf-version-list',\n    templateUrl: './version-list.component.html',\n    styleUrls: ['./version-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n})\nexport class VersionListComponent implements OnChanges {\n\n    private versionsApi: VersionsApi;\n    versions: VersionEntry[] = [];\n    isLoading = true;\n\n    /** @deprecated in 2.3.0 */\n    @Input()\n    id: string;\n\n    /** The target node. */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** Toggles showing/hiding of comments */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles showing/hiding of version actions */\n    @Input()\n    showActions = true;\n\n    /** Emitted when a version is restored */\n    @Output()\n    restored: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    /** Emitted when a version is deleted */\n    @Output()\n    deleted: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    constructor(private alfrescoApi: AlfrescoApiService,\n                private contentService: ContentService,\n                private dialog: MatDialog) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n\n    ngOnChanges() {\n        this.loadVersionHistory();\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasPermission(this.node, 'update') && this.versions.length > 1;\n    }\n\n    canDelete(): boolean {\n        return this.contentService.hasPermission(this.node, 'delete') && this.versions.length > 1;\n    }\n\n    restore(versionId) {\n        if (this.canUpdate()) {\n            this.versionsApi\n                .revertVersion(this.node.id, versionId, { majorVersion: true, comment: '' })\n                .then(() => this.onVersionRestored(this.node));\n        }\n    }\n\n    loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.node.id).then((data) => {\n            this.versions = data.list.entries;\n            this.isLoading = false;\n        });\n    }\n\n    downloadVersion(versionId: string) {\n        if (this.allowDownload) {\n            const versionDownloadUrl = this.getVersionContentUrl(this.node.id, versionId, true);\n            this.downloadContent(versionDownloadUrl);\n        }\n    }\n\n    deleteVersion(versionId: string) {\n        if (this.canUpdate()) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    title: 'ADF_VERSION_LIST.CONFIRM_DELETE.TITLE',\n                    message: 'ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE',\n                    yesLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL',\n                    noLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL'\n                },\n                minWidth: '250px'\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result === true) {\n                    this.alfrescoApi.versionsApi\n                        .deleteVersion(this.node.id, versionId)\n                        .then(() => this.onVersionDeleted(this.node));\n                }\n            });\n        }\n    }\n\n    onVersionDeleted(node: any) {\n        this.loadVersionHistory();\n        this.deleted.emit(node);\n    }\n\n    onVersionRestored(node: any) {\n        this.loadVersionHistory();\n        this.restored.emit(node);\n    }\n\n    private getVersionContentUrl(nodeId: string, versionId: string, attachment?: boolean) {\n        const nodeDownloadUrl = this.alfrescoApi.contentApi.getContentUrl(nodeId, attachment);\n        return nodeDownloadUrl.replace('/content', '/versions/' + versionId + '/content');\n    }\n\n    downloadContent(url: string) {\n        if (url) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { VersionListComponent } from './version-list.component';\nimport { AppConfigService, ContentService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n    selector: 'adf-version-manager',\n    templateUrl: './version-manager.component.html',\n    styleUrls: ['./version-manager.component.scss'],\n    animations: [\n        trigger('uploadToggle', [\n            state('open', style({ height: '175px', opacity: 1, visibility: 'visible' })),\n            state('close', style({ height: '0%', opacity: 0, visibility: 'hidden' })),\n            transition('open => close', [\n                style({ visibility: 'hidden' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ]),\n            transition('close => open', [\n                style({ visibility: 'visible' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VersionManagerComponent {\n\n    /** Target node to manage version history. */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** Toggles showing/hiding of comments. */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Emitted when a file is uploaded successfully. */\n    @Output()\n    uploadSuccess: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    /** Emitted when an error occurs during upload. */\n    @Output()\n    uploadError: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    @ViewChild('versionList')\n    versionListComponent: VersionListComponent;\n\n    uploadState: string = 'close';\n\n    constructor(config: AppConfigService,\n                private contentService: ContentService,\n                private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    refresh(node: MinimalNodeEntryEntity) {\n        this.alfrescoApiService.nodeUpdated.next(node);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(node);\n        this.uploadState = 'close';\n    }\n\n    onUploadSuccess(event: any) {\n        this.alfrescoApiService.nodeUpdated.next(event.value.entry);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(event.value.entry);\n        this.uploadState = 'close';\n    }\n\n    onUploadError(event: any) {\n        this.uploadError.emit(event);\n    }\n\n    onUploadCancel() {\n        this.uploadState = 'close';\n    }\n\n    toggleNewVersion() {\n        this.uploadState = this.uploadState === 'open' ? 'close' : 'open';\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasPermission(this.node, 'update');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-version-upload',\n    templateUrl: './version-upload.component.html',\n    styleUrls: ['./version-upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-version-upload' }\n})\nexport class VersionUploadComponent {\n\n    semanticVersion: string = 'minor';\n    comment: string;\n    uploadVersion: boolean = false;\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    @Output()\n    success = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    @Output()\n    cancel = new EventEmitter();\n\n    constructor(private contentService: ContentService) {\n    }\n\n    canUpload(): boolean {\n        return this.contentService.hasPermission(this.node, 'update');\n    }\n\n    isMajorVersion(): boolean {\n        return this.semanticVersion === 'minor' ? false : true;\n    }\n\n    cancelUpload() {\n        this.cancel.emit();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { VersionUploadComponent } from './version-upload.component';\nimport { VersionManagerComponent } from './version-manager.component';\nimport { VersionListComponent } from './version-list.component';\nimport { UploadModule } from '../upload/upload.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        UploadModule,\n        FormsModule\n    ],\n    exports: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent,\n        FormsModule\n    ],\n    declarations: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ]\n})\nexport class VersionManagerModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataRow } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-name-location-cell',\n    template: `\n        <div class=\"adf-name-location-cell-name\">{{ name }}</div>\n        <div class=\"adf-name-location-cell-location\" [title]=\"path\">{{ path }}</div>\n    `,\n    styleUrls: ['./name-location-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-name-location-cell' }\n})\nexport class NameLocationCellComponent implements OnInit {\n\n    name: string = '';\n    path: string = '';\n\n    @Input()\n    row: DataRow;\n\n    ngOnInit() {\n        if (this.row) {\n            this.name = this.row.getValue('name');\n\n            const fullPath = this.row.getValue('path');\n            if (fullPath) {\n                this.path = fullPath.name || '';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs';\n\n/**\n * Internal service used by ContentNodeSelector component.\n */\n@Injectable()\nexport class ContentNodeSelectorService {\n\n    constructor(private searchService: SearchService) {\n    }\n\n    /**\n     * Performs a search for content node selection\n     *\n     * @param searchTerm    The term to search for\n     * @param rootNodeId    The root is to start the search from\n     * @param skipCount     From where to start the loading\n     * @param maxItems      How many items to load\n     * @param [extraNodeIds]  List of extra node ids to search from. This last parameter is necessary when\n     * the rootNodeId is one of the supported aliases (e.g. '-my-', '-root-', '-mysites-', etc.)\n     * and search is not supported for that alias, but can be performed on its corresponding nodes.\n     */\n    public search(searchTerm: string, rootNodeId: string = null, skipCount: number = 0, maxItems: number = 25, extraNodeIds?: string[]): Observable<NodePaging> {\n\n        let extraParentFiltering = '';\n\n        if (extraNodeIds && extraNodeIds.length) {\n            extraNodeIds\n                .filter(id => id !== rootNodeId)\n                .forEach(extraId => {\n                    extraParentFiltering += ` OR ANCESTOR:'workspace://SpacesStore/${extraId}'`;\n                });\n        }\n\n        const parentFiltering = rootNodeId ? [{ query: `ANCESTOR:'workspace://SpacesStore/${rootNodeId}'${extraParentFiltering}` }] : [];\n\n        let defaultSearchNode: any = {\n            query: {\n                query: `${searchTerm}* OR name:${searchTerm}*`\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxItems,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder'\" },\n                { query: 'NOT cm:creator:System' },\n                ...parentFiltering\n            ],\n            scope: {\n                locations: ['nodes']\n            }\n        };\n\n        return this.searchService.searchByQueryBody(defaultSearchNode);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    AlfrescoApiService, HighlightDirective, UserPreferencesService,\n    PaginatedComponent, PaginationModel\n} from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { MinimalNodeEntryEntity, NodePaging, Pagination, SiteEntry, SitePaging } from 'alfresco-js-api';\nimport { DocumentListComponent, PaginationStrategy } from '../document-list/components/document-list.component';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { CustomResourcesService } from '../document-list/services/custom-resources.service';\n\nexport type ValidationFunction = (entry: MinimalNodeEntryEntity) => boolean;\n\nconst defaultValidation = () => true;\n\n@Component({\n    selector: 'adf-content-node-selector-panel',\n    styleUrls: ['./content-node-selector-panel.component.scss'],\n    templateUrl: './content-node-selector-panel.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-node-selector-panel' }\n})\nexport class ContentNodeSelectorPanelComponent implements OnInit, PaginatedComponent {\n\n    /** Node ID of the folder currently listed. */\n    @Input()\n    currentFolderId: string = null;\n\n    /** Hide the \"My Files\" option added to the site list by default.\n     * See the [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /** Custom site for site dropdown same as siteList. See the\n     * [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    /** Custom row filter function. See the\n     * [Document List component](document-list.component.md#custom-row-filter)\n     * for more information.\n     */\n    @Input()\n    rowFilter: RowFilter = null;\n\n    /** Custom image resolver function. See the\n     * [Document List component](document-list.component.md#custom-row-filter)\n     * for more information.\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /** Number of items shown per page in the list. */\n    @Input()\n    pageSize: number;\n\n    /** Function used to decide if the selected node has permission to be selected.\n     * Default value is a function that always returns true.\n     */\n    @Input()\n    isSelectionValid: ValidationFunction = defaultValidation;\n\n    /** Transformation to be performed on the chosen/folder node before building the\n     * breadcrumb UI. Can be useful when custom formatting is needed for the breadcrumb.\n     * You can change the path elements from the node that are used to build the\n     * breadcrumb using this function.\n     */\n    @Input()\n    breadcrumbTransform: (node) => any;\n\n    /** Emitted when the user has chosen an item. */\n    @Output()\n    select: EventEmitter<MinimalNodeEntryEntity[]> = new EventEmitter<MinimalNodeEntryEntity[]>();\n\n    @ViewChild('documentList')\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective)\n    highlighter: HighlightDirective;\n\n    nodes: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    _chosenNode: MinimalNodeEntryEntity = null;\n    folderIdToShow: string | null = null;\n    paginationStrategy: PaginationStrategy = PaginationStrategy.Infinite;\n    pagination: BehaviorSubject<PaginationModel>;\n\n    skipCount: number = 0;\n    infiniteScroll: boolean = false;\n    debounceSearch: number = 200;\n    searchInput: FormControl = new FormControl();\n\n    constructor(private contentNodeSelectorService: ContentNodeSelectorService,\n                private apiService: AlfrescoApiService,\n                private customResourcesService: CustomResourcesService,\n                private preferences: UserPreferencesService) {\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(this.debounceSearch)\n            )\n            .subscribe((searchValue) => {\n                this.search(searchValue);\n            });\n        this.pageSize = this.preferences.paginationSize;\n\n        let defaultPagination = <PaginationModel> {\n            maxItems: this.pageSize,\n            skipCount: 0,\n            totalItems: 0,\n            hasMoreItems: false\n        };\n        this.pagination = new BehaviorSubject<PaginationModel>(defaultPagination);\n    }\n\n    set chosenNode(value: MinimalNodeEntryEntity) {\n        this._chosenNode = value;\n        let valuesArray = null;\n        if (value) {\n            valuesArray = [value];\n        }\n        this.select.next(valuesArray);\n    }\n\n    get chosenNode() {\n        return this._chosenNode;\n    }\n\n    ngOnInit() {\n        this.folderIdToShow = this.currentFolderId;\n\n        this.breadcrumbTransform = this.breadcrumbTransform ? this.breadcrumbTransform : null;\n        this.isSelectionValid = this.isSelectionValid ? this.isSelectionValid : defaultValidation;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite SiteEntry to search within\n     */\n    siteChanged(chosenSite: SiteEntry): void {\n        this.siteId = chosenSite.entry.guid;\n        this.updateResults();\n    }\n\n    /**\n     * Updates the searchTerm attribute and starts a new search\n     *\n     * @param searchTerm string value to search against\n     */\n    search(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): MinimalNodeEntryEntity | null {\n        let folderNode: MinimalNodeEntryEntity;\n\n        if (this.showingSearchResults && this.chosenNode) {\n            folderNode = this.chosenNode;\n        } else {\n            folderNode = this.documentList.folderNode;\n        }\n\n        return folderNode;\n    }\n\n    /**\n     * Clear the search input and reset to last folder node in which search was performed\n     */\n    clear(): void {\n        this.clearSearch();\n        this.folderIdToShow = this.siteId || this.currentFolderId;\n    }\n\n    /**\n     * Clear the search input and search related data\n     */\n    clearSearch() {\n        this.searchTerm = '';\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n    }\n\n    /**\n     * Update the result list depending on the criterias\n     */\n    private updateResults(): void {\n        if (this.searchTerm.length === 0) {\n            this.clear();\n        } else {\n            this.startNewSearch();\n        }\n    }\n\n    /**\n     * Load the first page of a new search result\n     */\n    private startNewSearch(): void {\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    updatePagination(pagination: Pagination): void {\n        this.infiniteScroll = true;\n        this.skipCount = pagination.skipCount;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Perform the call to searchService with the proper parameters\n     */\n    private querySearch(): void {\n        this.loadingSearchResults = true;\n\n        if (this.customResourcesService.hasCorrespondingNodeIds(this.siteId)) {\n            this.customResourcesService.getCorrespondingNodeIds(this.siteId)\n                .subscribe(nodeIds => {\n                        this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize, nodeIds)\n                            .subscribe(this.showSearchResults.bind(this));\n                    },\n                    () => {\n                        this.showSearchResults({ list: { entries: [] } });\n                    });\n        } else {\n            this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize)\n                .subscribe(this.showSearchResults.bind(this));\n        }\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(nodePaging: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        // Documentlist hack, since data displaying for preloaded nodes is a little bit messy there\n        if (!this.nodes) {\n            this.nodes = nodePaging;\n        } else {\n            this.documentList.data.loadPage(nodePaging, true);\n        }\n\n        this.pagination.next(nodePaging.list.pagination);\n        this.highlight();\n    }\n\n    /**\n     * Hightlight the actual searchterm in the next frame\n     */\n    highlight(): void {\n        setTimeout(() => {\n            this.highlighter.highlight(this.searchTerm);\n        }, 0);\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange(): void {\n        this.showingSearchResults = false;\n        this.infiniteScroll = false;\n        this.clearSearch();\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(nodePaging: NodePaging): void {\n        if (!this.showingSearchResults) {\n            this.attemptNodeSelection(this.documentList.folderNode);\n        }\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    showBreadcrumbs() {\n        return !this.showingSearchResults || this.chosenNode;\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    getNextPageOfSearch(event: Pagination): void {\n        this.infiniteScroll = true;\n        this.skipCount = event.skipCount;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: MinimalNodeEntryEntity): void {\n        if (this.isSelectionValid(entry)) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * Invoked when user selects a node\n     *\n     * @param event CustomEvent for node-select\n     */\n    onNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n\n    onNodeDoubleClick(e: CustomEvent) {\n        const node: any = e.detail.node.entry;\n\n        if (node && node.guid) {\n            const options = {\n                maxItems: this.pageSize,\n                skipCount: this.skipCount,\n                include: ['path', 'properties', 'allowableOperations']\n            };\n\n            this.apiService.nodesApi.getNode(node.guid, options)\n                .then(documentLibrary => {\n                    this.documentList.performCustomSourceNavigation(documentLibrary);\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { ContentNodeSelectorPanelComponent } from './content-node-selector-panel.component';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { SitesDropdownModule } from '../site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { DocumentListModule } from '../document-list/document-list.module';\nimport { NameLocationCellComponent } from './name-location-cell/name-location-cell.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        DocumentListModule\n    ],\n    exports: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    entryComponents: [\n        ContentNodeSelectorPanelComponent,\n        ContentNodeSelectorComponent\n    ],\n    declarations: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ]\n})\nexport class ContentNodeSelectorModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nconst I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n\nexport function forbidEndingDot({ value }: FormControl) {\n    const isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\n\nimport { Component, Inject, OnInit, Optional, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { NodesApiService, TranslationService } from '@alfresco/adf-core';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\n\n@Component({\n    selector: 'adf-folder-dialog',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './folder.dialog.html'\n})\nexport class FolderDialogComponent implements OnInit {\n\n    form: FormGroup;\n\n    folder: MinimalNodeEntryEntity = null;\n\n    /** Emitted when the edit/create folder give error for example a folder with same name already exist\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the edit/create folder is successfully created/mmodified\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    editTitle = 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE';\n    createTitle = 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE';\n    nodeType = 'cm:folder';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialog: MatDialogRef<FolderDialogComponent>,\n        private nodesApi: NodesApiService,\n        private translation: TranslationService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n        if (data) {\n            this.editTitle = data.editTitle || this.editTitle;\n            this.createTitle = data.createTitle || this.createTitle;\n            this.nodeType = data.nodeType || this.nodeType;\n        }\n    }\n\n    get editing(): boolean {\n        return !!this.data.folder;\n    }\n\n    ngOnInit() {\n        const { folder } = this.data;\n        let name = '';\n        let description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            description = properties ? properties['cm:description'] : '';\n        }\n\n        const validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            description: [ description ]\n        });\n    }\n\n    get name(): string {\n        let { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n\n    get description(): string {\n        let { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n\n    private get properties(): any {\n        const { name: title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n\n    private create(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodeType, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties, nodeType });\n    }\n\n    private edit(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n\n    submit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: MinimalNodeEntryEntity) => {\n                    this.success.emit(folder);\n                    dialog.close(folder);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    handleError(error: any): any {\n        let errorMessage = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                errorMessage = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch (err) { /* Do nothing, keep the original message */ }\n\n        this.error.emit(this.translation.instant(errorMessage));\n\n        return error;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { FolderDialogComponent } from './folder.dialog';\nimport { NodeLockDialogComponent } from './node-lock.dialog';\nimport { ConfirmDialogComponent } from './confirm.dialog';\nimport { MatDatetimepickerModule } from '@mat-datetimepicker/core';\nimport { MatMomentDatetimeModule } from '@mat-datetimepicker/moment';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        MatMomentDatetimeModule,\n        MatDatetimepickerModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\nconst DEFAULT_FOLDER_PARENT_ID = '-my-';\n\n@Directive({\n    selector: '[adf-create-folder]'\n})\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Parent folder where the new folder will be located after creation. */\n    @Input('adf-create-folder')\n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n\n    /** Title of folder creation dialog. */\n    @Input()\n    title: string = null;\n\n    /** Type of node to create. */\n    @Input()\n    nodeType = 'cm:folder';\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the folder is created successfully. */\n    @Output()\n    success: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId, title: createTitle, nodeType } = this;\n\n        return {\n            data: { parentNodeId, createTitle, nodeType },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: MinimalNodeEntryEntity) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Directive({\n    selector: '[adf-edit-folder]'\n})\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Folder node to edit. */\n    @Input('adf-edit-folder')\n    folder: MinimalNodeEntryEntity;\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Title of folder edit dialog. */\n    @Input()\n    title: string = null;\n\n    /** Emitted when the folder has been edited successfully. */\n    @Output()\n    success: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public elementRef: ElementRef,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: {\n                folder,\n                editTitle: this.title\n            },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: MinimalNodeEntryEntity) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { FolderCreateDirective } from './folder-create.directive';\nimport { FolderEditDirective } from './folder-edit.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ],\n    exports: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ]\n})\nexport class FolderDirectiveModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { ContentService, PermissionsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-content-metadata-card',\n    templateUrl: './content-metadata-card.component.html',\n    styleUrls: ['./content-metadata-card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-metadata-card' }\n})\nexport class ContentMetadataCardComponent {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** (optional) This flag displays/hides empty metadata\n     * fields.\n     */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** (required) Name of the metadata preset, which defines aspects\n     * and their properties.\n     */\n    @Input()\n    preset: string;\n\n    /** (optional) This flag sets the metadata in read only mode\n     * preventing changes.\n     */\n    @Input()\n    readOnly = false;\n\n    /** (optional) This flag allows the component to display more\n     * than one accordion at a time.\n     */\n    @Input()\n    multi = false;\n\n    private _displayDefaultProperties: boolean = true;\n\n    /** (optional) This flag displays/hides the metadata\n     * properties.\n     */\n    @Input()\n    set displayDefaultProperties(value: boolean) {\n        this._displayDefaultProperties = value;\n        this.onDisplayDefaultPropertiesChange();\n    }\n\n    get displayDefaultProperties(): boolean {\n        return this._displayDefaultProperties;\n    }\n\n    editable: boolean = false;\n\n    expanded: boolean;\n\n    constructor(private contentService: ContentService) {\n    }\n\n    onDisplayDefaultPropertiesChange(): void {\n        this.expanded = !this._displayDefaultProperties;\n    }\n\n    toggleEdit(): void {\n        this.editable = !this.editable;\n    }\n\n    toggleExpanded(): void {\n        this.expanded = !this.expanded;\n    }\n\n    hasPermission() {\n        return this.contentService.hasPermission(this.node, PermissionsEnum.UPDATE);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { CardViewDateItemModel, CardViewTextItemModel, FileSizePipe } from '@alfresco/adf-core';\n\n@Injectable()\nexport class BasicPropertiesService {\n\n    constructor(private fileSizePipe: FileSizePipe) {\n    }\n\n    getProperties(node: MinimalNodeEntryEntity) {\n\n        const sizeInBytes = node.content ? node.content.sizeInBytes : '',\n            mimeTypeName = node.content ? node.content.mimeTypeName : '',\n            author = node.properties ? node.properties['cm:author'] : '',\n            description = node.properties ? node.properties['cm:description'] : '',\n            title = node.properties ? node.properties['cm:title'] : '';\n\n        return [\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.NAME',\n                value: node.name,\n                key: 'name',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.TITLE',\n                value: title,\n                key: 'properties.cm:title',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.CREATOR',\n                value: node.createdByUser.displayName,\n                key: 'createdByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.CREATED_DATE',\n                value: node.createdAt,\n                key: 'createdAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.SIZE',\n                value: sizeInBytes,\n                key: 'content.sizeInBytes',\n                pipes: [{ pipe: this.fileSizePipe }],\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIER',\n                value: node.modifiedByUser.displayName,\n                key: 'modifiedByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIED_DATE',\n                value: node.modifiedAt,\n                key: 'modifiedAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MIMETYPE',\n                value: mimeTypeName,\n                key: 'content.mimeTypeName',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.AUTHOR',\n                value: author,\n                key: 'properties.cm:author',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.DESCRIPTION',\n                value: description,\n                key: 'properties.cm:description',\n                multiline: true,\n                editable: true\n            })\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    CardViewItemProperties,\n    CardViewItem,\n    CardViewTextItemModel,\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewDatetimeItemModel,\n    CardViewIntItemModel,\n    CardViewFloatItemModel,\n    LogService\n} from '@alfresco/adf-core';\nimport { Property, CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\n\nconst D_TEXT = 'd:text';\nconst D_MLTEXT = 'd:mltext';\nconst D_DATE = 'd:date';\nconst D_DATETIME = 'd:datetime';\nconst D_INT = 'd:int';\nconst D_LONG = 'd:long';\nconst D_FLOAT = 'd:float';\nconst D_DOUBLE = 'd:double';\nconst D_BOOLEAN = 'd:boolean';\n\n@Injectable()\nexport class PropertyGroupTranslatorService {\n\n    static readonly RECOGNISED_ECM_TYPES = [ D_TEXT, D_MLTEXT, D_DATE, D_DATETIME, D_INT, D_LONG , D_FLOAT, D_DOUBLE, D_BOOLEAN ];\n\n    constructor(private logService: LogService) {}\n\n    public translateToCardViewGroups(propertyGroups: OrganisedPropertyGroup[], propertyValues): CardViewGroup[] {\n        return propertyGroups.map(propertyGroup => {\n            const translatedPropertyGroup: any = Object.assign({}, propertyGroup);\n            translatedPropertyGroup.properties = this.translateArray(propertyGroup.properties, propertyValues);\n            return translatedPropertyGroup;\n        });\n    }\n\n    private translateArray(properties: Property[], propertyValues: any): CardViewItem[] {\n        return properties.map(property => {\n            return this.translate(property, propertyValues[property.name]);\n        });\n    }\n\n    private translate(property: Property, propertyValue: any): CardViewItem {\n        this.checkECMTypeValidity(property.dataType);\n\n        const prefix = 'properties.';\n\n        let propertyDefinition: CardViewItemProperties = {\n            label: property.title,\n            value: propertyValue,\n            key: `${prefix}${property.name}`,\n            default: property.defaultValue,\n            editable: true\n        };\n        let cardViewItemProperty;\n\n        switch (property.dataType) {\n\n            case D_MLTEXT:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: true\n                }));\n                break;\n\n            case D_INT:\n            case D_LONG:\n                cardViewItemProperty = new CardViewIntItemModel(propertyDefinition);\n                break;\n\n            case D_FLOAT:\n            case D_DOUBLE:\n                cardViewItemProperty = new CardViewFloatItemModel(propertyDefinition);\n                break;\n\n            case D_DATE:\n                cardViewItemProperty = new CardViewDateItemModel(propertyDefinition);\n                break;\n\n            case D_DATETIME:\n                cardViewItemProperty = new CardViewDatetimeItemModel(propertyDefinition);\n                break;\n\n            case D_BOOLEAN:\n                cardViewItemProperty = new CardViewBoolItemModel(propertyDefinition);\n                break;\n\n            case D_TEXT:\n            default:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: false\n                }));\n        }\n\n        return cardViewItemProperty;\n    }\n\n    private checkECMTypeValidity(ecmPropertyType) {\n        if (PropertyGroupTranslatorService.RECOGNISED_ECM_TYPES.indexOf(ecmPropertyType) === -1) {\n            this.logService.error(`Unknown type for mapping: ${ecmPropertyType}`);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyGroup, Property, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\n\nconst emptyGroup = {\n    properties: {}\n};\n\nfunction convertObjectToArray(object: any): Property[] {\n    return Object.keys(object).map(key => object[key]);\n}\n\nexport function getGroup(propertyGroups: PropertyGroupContainer, groupName: string): PropertyGroup | undefined {\n    return propertyGroups[groupName];\n}\n\nexport function getProperty(propertyGroups: PropertyGroupContainer, groupName: string, propertyName: string): Property | Property[] | undefined {\n    const groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;\n    let propertyDefinitions;\n\n    if (propertyName === '*') {\n        propertyDefinitions = convertObjectToArray(groupDefinition.properties);\n    } else {\n        propertyDefinitions = groupDefinition.properties[propertyName];\n    }\n\n    return propertyDefinitions;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\nimport { getGroup, getProperty } from './property-group-reader';\n\nexport class AspectOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        const groupNames = Object.keys(this.config);\n        return groupNames.indexOf(groupName) !== -1;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const aspects = this.config,\n            aspectNames = Object.keys(aspects);\n\n        return aspectNames\n            .reduce((groupAccumulator, aspectName) => {\n                const newGroup = this.getOrganisedPropertyGroup(propertyGroups, aspectName);\n                return groupAccumulator.concat(newGroup);\n            }, [])\n            .filter(organisedPropertyGroup => organisedPropertyGroup.properties.length > 0);\n    }\n\n    private getOrganisedPropertyGroup(propertyGroups, aspectName) {\n        const group = getGroup(propertyGroups, aspectName);\n        let newGroup = [];\n\n        if (group) {\n            const aspectProperties = this.config[aspectName];\n            let properties;\n\n            if (aspectProperties === '*') {\n                properties = getProperty(propertyGroups, aspectName, aspectProperties);\n            } else {\n                properties = (<string[]> aspectProperties)\n                    .map((propertyName) => getProperty(propertyGroups, aspectName, propertyName))\n                    .filter(props => props !== undefined);\n            }\n\n            newGroup = [ { title: group.title, properties } ];\n        }\n\n        return newGroup;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\n\nexport class IndifferentConfigService implements ContentMetadataConfig {\n\n    constructor(config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return true;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map(propertyName => properties[propertyName])\n                });\n            });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentMetadataConfig,\n    LayoutOrientedConfigItem,\n    OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\nimport { getProperty } from './property-group-reader';\n\nexport class LayoutOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return this.getMatchingGroups(groupName).length > 0;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const layoutBlocks = this.config;\n\n        return layoutBlocks.map((layoutBlock) => {\n            const flattenedItems = this.flattenItems(layoutBlock.items),\n                properties = flattenedItems.reduce((props, explodedItem) => {\n                    const property = getProperty(propertyGroups, explodedItem.groupName, explodedItem.propertyName) || [];\n                    return props.concat(property);\n                }, []);\n\n            return {\n                title: layoutBlock.title,\n                properties\n            };\n        });\n    }\n\n    private flattenItems(items) {\n        return items.reduce((accumulator, item) => {\n            const properties = Array.isArray(item.properties) ? item.properties : [item.properties];\n            const flattenedProperties = properties.map(propertyName => {\n                return {\n                    groupName: item.aspect || item.type,\n                    propertyName\n                };\n            });\n\n            return accumulator.concat(flattenedProperties);\n        }, []);\n    }\n\n    private getMatchingGroups(groupName: string): LayoutOrientedConfigItem[] {\n        return this.config\n            .map(layoutBlock => layoutBlock.items)\n            .reduce((accumulator, items) => accumulator.concat(items), [])\n            .filter((item) => item.aspect === groupName || item.type === groupName);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, LogService } from '@alfresco/adf-core';\nimport { AspectOrientedConfigService } from './aspect-oriented-config.service';\nimport { IndifferentConfigService } from './indifferent-config.service';\nimport { LayoutOrientedConfigService } from './layout-oriented-config.service';\nimport {\n    PresetConfig,\n    ContentMetadataConfig,\n    AspectOrientedConfig,\n    InDifferentConfig,\n    LayoutOrientedConfig\n} from '../../interfaces/content-metadata.interfaces';\n\n@Injectable()\nexport class ContentMetadataConfigFactory {\n\n    static readonly INDIFFERENT_PRESET = '*';\n    static readonly DEFAULT_PRESET_NAME = 'default';\n\n    constructor(private appConfigService: AppConfigService, private logService: LogService) {}\n\n    public get(presetName: string = 'default'): ContentMetadataConfig {\n        let presetConfig;\n        try {\n            presetConfig = this.appConfigService.config['content-metadata'].presets[presetName];\n        } catch {\n            if (presetName !== ContentMetadataConfigFactory.DEFAULT_PRESET_NAME) {\n                this.logService.error(`No content-metadata preset for: ${presetName}`);\n            }\n            presetConfig = ContentMetadataConfigFactory.INDIFFERENT_PRESET;\n        }\n\n        return this.createConfig(presetConfig);\n    }\n\n    private createConfig(presetConfig: PresetConfig): ContentMetadataConfig {\n        let config: ContentMetadataConfig;\n\n        if (this.isLayoutOrientedPreset(presetConfig)) {\n            config = new LayoutOrientedConfigService(<LayoutOrientedConfig> presetConfig);\n        } else if (this.isAspectOrientedPreset(presetConfig)) {\n            config = new AspectOrientedConfigService(<AspectOrientedConfig> presetConfig);\n        } else {\n            config = new IndifferentConfigService(<InDifferentConfig> presetConfig);\n        }\n\n        Object.freeze(config);\n        return config;\n    }\n\n    private isAspectOrientedPreset(presetConfig: PresetConfig): boolean {\n        return this.isObject(presetConfig);\n    }\n\n    private isLayoutOrientedPreset(presetConfig: PresetConfig): boolean {\n        return Array.isArray(presetConfig);\n    }\n\n    private isObject(x) {\n        return x != null && typeof x === 'object';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Observable, defer, forkJoin } from 'rxjs';\nimport { PropertyGroup, PropertyGroupContainer } from '../interfaces/content-metadata.interfaces';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PropertyDescriptorsService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {}\n\n    load(groupNames: string[]): Observable<PropertyGroupContainer> {\n        const groupFetchStreams = groupNames\n            .map(groupName => groupName.replace(':', '_'))\n            .map(groupName => defer( () => this.alfrescoApiService.classesApi.getClass(groupName)) );\n\n        return forkJoin(groupFetchStreams).pipe(\n            map(this.convertToObject)\n        );\n    }\n\n    private convertToObject(propertyGroupsArray: PropertyGroup[]): PropertyGroupContainer {\n        return propertyGroupsArray.reduce((propertyGroups, propertyGroup) => {\n            return Object.assign({}, propertyGroups, {\n                [propertyGroup.name]: propertyGroup\n            });\n        }, {});\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { BasicPropertiesService } from './basic-properties.service';\nimport { Observable, of } from 'rxjs';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\nimport { CardViewItem } from '@alfresco/adf-core';\nimport { CardViewGroup } from '../interfaces/content-metadata.interfaces';\nimport { ContentMetadataConfigFactory } from './config/content-metadata-config.factory';\nimport { PropertyDescriptorsService } from './property-descriptors.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ContentMetadataService {\n\n    constructor(private basicPropertiesService: BasicPropertiesService,\n                private contentMetadataConfigFactory: ContentMetadataConfigFactory,\n                private propertyGroupTranslatorService: PropertyGroupTranslatorService,\n                private propertyDescriptorsService: PropertyDescriptorsService) {\n    }\n\n    getBasicProperties(node: MinimalNodeEntryEntity): Observable<CardViewItem[]> {\n        return of(this.basicPropertiesService.getProperties(node));\n    }\n\n    getGroupedProperties(node: MinimalNodeEntryEntity, presetName: string = 'default'): Observable<CardViewGroup[]> {\n        let groupedProperties = of([]);\n\n        if (node.aspectNames) {\n            const config = this.contentMetadataConfigFactory.get(presetName),\n                groupNames = node.aspectNames\n                    .concat(node.nodeType)\n                    .filter(groupName => config.isGroupAllowed(groupName));\n\n            if (groupNames.length > 0) {\n                groupedProperties = this.propertyDescriptorsService.load(groupNames).pipe(\n                    map(groups => config.reorganiseByConfig(groups)),\n                    map(groups => this.propertyGroupTranslatorService.translateToCardViewGroups(groups, node.properties))\n                );\n            }\n        }\n\n        return groupedProperties;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Observable, Subscription } from 'rxjs';\nimport { CardViewItem, NodesApiService, LogService, CardViewUpdateService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { ContentMetadataService } from '../../services/content-metadata.service';\nimport { CardViewGroup } from '../../interfaces/content-metadata.interfaces';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-content-metadata',\n    templateUrl: './content-metadata.component.html',\n    styleUrls: ['./content-metadata.component.scss'],\n    host: { 'class': 'adf-content-metadata' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentMetadataComponent implements OnChanges, OnInit, OnDestroy {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** Toggles whether the edit button should be shown */\n    @Input()\n    editable: boolean = false;\n\n    /** Toggles whether to display empty values in the card view */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** Toggles between expanded (ie, full information) and collapsed\n     * (ie, reduced information) in the display\n     */\n    @Input()\n    expanded: boolean = false;\n\n    /** The multi parameter of the underlying material expansion panel, set to true to allow multi accordion to be expanded at the same time */\n    @Input()\n    multi = false;\n\n    /** Name of the metadata preset, which defines aspects and their properties */\n    @Input()\n    preset: string;\n\n    /** Toggles whether the metadata properties should be shown */\n    @Input()\n    displayDefaultProperties: boolean = true;\n\n    basicProperties$: Observable<CardViewItem[]>;\n    groupedProperties$: Observable<CardViewGroup[]>;\n    disposableNodeUpdate: Subscription;\n\n    constructor(\n        private contentMetadataService: ContentMetadataService,\n        private cardViewUpdateService: CardViewUpdateService,\n        private nodesApiService: NodesApiService,\n        private logService: LogService,\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    ngOnInit() {\n        this.disposableNodeUpdate =  this.cardViewUpdateService.itemUpdated$\n            .pipe(\n                switchMap(this.saveNode.bind(this))\n            )\n            .subscribe(\n                updatedNode => {\n                    Object.assign(this.node, updatedNode);\n                    this.alfrescoApiService.nodeUpdated.next(this.node);\n                },\n                error => this.logService.error(error)\n            );\n\n        this.loadProperties(this.node);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node && !changes.node.firstChange) {\n            this.loadProperties(changes.node.currentValue);\n        }\n    }\n\n    private loadProperties(node: MinimalNodeEntryEntity) {\n        if (node) {\n            this.basicProperties$ = this.contentMetadataService.getBasicProperties(node);\n            this.groupedProperties$ = this.contentMetadataService.getGroupedProperties(node, this.preset);\n        }\n    }\n\n    private saveNode({ changed: nodeBody }): Observable<MinimalNodeEntryEntity> {\n        return this.nodesApiService.updateNode(this.node.id, nodeBody);\n    }\n\n    ngOnDestroy() {\n        this.disposableNodeUpdate.unsubscribe();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentMetadataComponent } from './components/content-metadata/content-metadata.component';\nimport { ContentMetadataCardComponent } from './components/content-metadata-card/content-metadata-card.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ],\n    declarations: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ]\n})\nexport class ContentMetadataModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionElement } from 'alfresco-js-api';\n\nexport class PermissionDisplayModel implements PermissionElement {\n\n    authorityId?: string;\n    name?: string;\n    accessStatus?: PermissionElement.AccessStatusEnum;\n    isInherited: boolean = false;\n    icon: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.authorityId = obj.authorityId;\n            this.name = obj.name;\n            this.accessStatus = obj.accessStatus;\n            this.isInherited = obj.isInherited !== null && obj.isInherited !== undefined ? obj.isInherited : false;\n            this.icon = obj.icon ? obj.icon : 'vpn_key';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of, from, throwError } from 'rxjs';\nimport { AlfrescoApiService, SearchService, NodesApiService, TranslationService } from '@alfresco/adf-core';\nimport { QueryBody, MinimalNodeEntryEntity, MinimalNodeEntity, PathElement, GroupMemberEntry, GroupsPaging, GroupMemberPaging, PermissionElement } from 'alfresco-js-api';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Injectable()\nexport class NodePermissionService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchApiService: SearchService,\n                private nodeService: NodesApiService,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Gets a list of roles for the current node.\n     * @param node The target node\n     * @returns Array of strings representing the roles\n     */\n    getNodeRoles(node: MinimalNodeEntryEntity): Observable<string[]> {\n        const retrieveSiteQueryBody: QueryBody = this.buildRetrieveSiteQueryBody(node.path.elements);\n        return this.searchApiService.searchByQueryBody(retrieveSiteQueryBody)\n            .pipe(\n                switchMap((siteNodeList: any) => {\n                    if ( siteNodeList.list.entries.length > 0 ) {\n                        let siteName = siteNodeList.list.entries[0].entry.name;\n                        return this.getGroupMembersBySiteName(siteName);\n                    } else {\n                        return of(node.permissions.settable);\n                    }\n                })\n            );\n    }\n\n    /**\n     * Updates the permission role for a node.\n     * @param node Target node\n     * @param updatedPermissionRole Permission role to update or add\n     * @returns Node with updated permission\n     */\n    updatePermissionRole(node: MinimalNodeEntryEntity, updatedPermissionRole: PermissionElement): Observable<MinimalNodeEntryEntity> {\n        let permissionBody = { permissions: { locallySet: []} };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(updatedPermissionRole.authorityId);\n        permissionBody.permissions.locallySet = permissionBody.permissions.locallySet.concat(node.permissions.locallySet);\n        if (index !== -1) {\n            permissionBody.permissions.locallySet[index] = updatedPermissionRole;\n        } else {\n            permissionBody.permissions.locallySet.push(updatedPermissionRole);\n        }\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    /**\n     * Update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param permissionList New permission settings\n     * @returns Node with updated permissions\n     */\n    updateNodePermissions(nodeId: string, permissionList: MinimalNodeEntity[]): Observable<MinimalNodeEntryEntity> {\n       return this.nodeService.getNode(nodeId).pipe(\n           switchMap(node => {\n                return this.getNodeRoles(node).pipe(\n                    switchMap((nodeRoles) => of({node, nodeRoles}) )\n                );\n            }),\n            switchMap(({node, nodeRoles}) => this.updateLocallySetPermissions(node, permissionList, nodeRoles))\n        );\n    }\n\n    /**\n     * Updates the locally set permissions for a node.\n     * @param node ID of the target node\n     * @param nodes Permission settings\n     * @param nodeRole Permission role\n     * @returns Node with updated permissions\n     */\n    updateLocallySetPermissions(node: MinimalNodeEntryEntity, nodes: MinimalNodeEntity[], nodeRole: string[]): Observable<MinimalNodeEntryEntity> {\n        let permissionBody = { permissions: { locallySet: []} };\n        const permissionList = this.transformNodeToPermissionElement(nodes, nodeRole[0]);\n        const duplicatedPermissions = this.getDuplicatedPermissions(node.permissions.locallySet, permissionList);\n        if (duplicatedPermissions.length > 0) {\n            const list = duplicatedPermissions.map((permission) => 'authority -> ' + permission.authorityId + ' / role -> ' + permission.name).join(', ');\n            const duplicatePermissionMessage: string = this.translation.instant('PERMISSION_MANAGER.ERROR.DUPLICATE-PERMISSION',  {list});\n            return throwError(duplicatePermissionMessage);\n        }\n        permissionBody.permissions.locallySet = node.permissions.locallySet ? node.permissions.locallySet.concat(permissionList) : permissionList;\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    private getDuplicatedPermissions(nodeLocallySet: PermissionElement[], permissionListAdded: PermissionElement[]): PermissionElement[] {\n        let duplicatePermissions: PermissionElement[] = [];\n        if (nodeLocallySet) {\n            permissionListAdded.forEach((permission: PermissionElement) => {\n                const duplicate = nodeLocallySet.find((localPermission) => this.isEqualPermission(localPermission, permission));\n                if (duplicate) {\n                    duplicatePermissions.push(duplicate);\n                }\n            });\n        }\n        return duplicatePermissions;\n    }\n\n    private isEqualPermission(oldPermission: PermissionElement, newPermission: PermissionElement): boolean {\n        return oldPermission.accessStatus === newPermission.accessStatus &&\n               oldPermission.authorityId === newPermission.authorityId &&\n               oldPermission.name === newPermission.name;\n    }\n\n    private transformNodeToPermissionElement(nodes: MinimalNodeEntity[], nodeRole: any): PermissionElement[] {\n        return nodes.map((node) => {\n            let newPermissionElement: PermissionElement = <PermissionElement> {\n                'authorityId': node.entry.properties['cm:authorityName'] ?\n                    node.entry.properties['cm:authorityName'] :\n                    node.entry.properties['cm:userName'],\n                'name': nodeRole,\n                'accessStatus': 'ALLOWED'\n            };\n            return newPermissionElement;\n        });\n    }\n\n    /**\n     * Removes a permission setting from a node.\n     * @param node ID of the target node\n     * @param permissionToRemove Permission setting to remove\n     * @returns Node with modified permissions\n     */\n    removePermission(node: MinimalNodeEntryEntity, permissionToRemove: PermissionElement): Observable<MinimalNodeEntryEntity> {\n        let permissionBody = { permissions: { locallySet: [] } };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(permissionToRemove.authorityId);\n        if (index !== -1) {\n            node.permissions.locallySet.splice(index, 1);\n            permissionBody.permissions.locallySet = node.permissions.locallySet;\n            return this.nodeService.updateNode(node.id, permissionBody);\n        }\n    }\n\n    private getGroupMembersBySiteName(siteName: string): Observable<string[]> {\n        const groupName = 'GROUP_site_' + siteName;\n        return this.getGroupMemeberByGroupName(groupName)\n            .pipe(\n                map((res: GroupsPaging) => {\n                    let displayResult: string[] = [];\n                    res.list.entries.forEach((member: GroupMemberEntry) => {\n                        displayResult.push(this.formattedRoleName(member.entry.displayName, 'site_' + siteName));\n                    });\n                    return displayResult;\n                })\n            );\n    }\n\n    /**\n     * Gets all members related to a group name.\n     * @param groupName Name of group to look for members\n     * @param opts Extra options supported by JSAPI\n     * @returns List of members\n     */\n    getGroupMemeberByGroupName(groupName: string, opts?: any): Observable<GroupMemberPaging> {\n        return from<GroupMemberPaging>(this.apiService.groupsApi.getGroupMembers(groupName, opts));\n    }\n\n    private formattedRoleName(displayName, siteName): string {\n        return displayName.replace(siteName + '_', '');\n    }\n\n    private buildRetrieveSiteQueryBody(nodePath: PathElement[]): QueryBody {\n        const pathNames = nodePath.map((node: PathElement) => 'name: \"' + node.name + '\"');\n        const buildedPathNames = pathNames.join(' OR ');\n        return {\n            'query': {\n                'query': buildedPathNames\n            },\n            'paging': {\n                'maxItems': 100,\n                'skipCount': 0\n            },\n            'include': ['aspectNames', 'properties'],\n            'filterQueries': [\n                {\n                    'query':\n                        \"TYPE:'st:site'\"\n                }\n            ]\n        };\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { MinimalNodeEntryEntity, PermissionElement } from 'alfresco-js-api';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { NodePermissionService } from '../../services/node-permission.service';\n\n@Component({\n    selector: 'adf-permission-list',\n    templateUrl: './permission-list.component.html',\n    styleUrls: ['./permission-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PermissionListComponent implements OnInit {\n\n    /** ID of the node whose permissions you want to show. */\n    @Input()\n    nodeId: string = '';\n\n    /** Emitted when the permission is updated. */\n    @Output()\n    update: EventEmitter<PermissionElement> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    permissionList: PermissionDisplayModel[];\n    settableRoles: any[];\n    actualNode: MinimalNodeEntryEntity;\n\n    constructor(private nodeService: NodesApiService,\n                private nodePermissionService: NodePermissionService) {\n\n    }\n\n    ngOnInit() {\n        this.fetchNodePermissions();\n    }\n\n    reload() {\n        this.fetchNodePermissions();\n    }\n\n    private fetchNodePermissions() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: MinimalNodeEntryEntity) => {\n            this.actualNode = node;\n            this.permissionList = this.getPermissionList(node);\n            this.nodePermissionService.getNodeRoles(node).subscribe((settableList: string[]) => {\n                this.settableRoles =  settableList;\n            });\n        });\n    }\n\n    private getPermissionList(node: MinimalNodeEntryEntity): PermissionDisplayModel[] {\n        let allPermissions: PermissionDisplayModel[] = [];\n        if (node.permissions.locallySet) {\n            node.permissions.locallySet.map((element) => {\n                let permission = new PermissionDisplayModel(element);\n                allPermissions.push(permission);\n            });\n        }\n        if (node.permissions.inherited) {\n            node.permissions.inherited.map((element) => {\n                let permissionInherited = new PermissionDisplayModel(element);\n                permissionInherited.isInherited = true;\n                allPermissions.push(permissionInherited);\n            });\n        }\n        return allPermissions;\n    }\n\n    saveNewRole(event: any, permissionRow: PermissionDisplayModel) {\n        let updatedPermissionRole: PermissionElement = this.buildUpdatedPermission(event.value, permissionRow);\n        this.nodePermissionService.updatePermissionRole(this.actualNode, updatedPermissionRole)\n            .subscribe((node: MinimalNodeEntryEntity) => {\n                this.update.emit(updatedPermissionRole);\n            });\n    }\n\n    private buildUpdatedPermission(newRole: string, permissionRow: PermissionDisplayModel): PermissionElement {\n        let permissionRole: PermissionElement = {};\n        permissionRole.accessStatus = permissionRow.accessStatus;\n        permissionRole.name = newRole;\n        permissionRole.authorityId = permissionRow.authorityId;\n        return permissionRole;\n    }\n\n    removePermission(permissionRow: PermissionDisplayModel) {\n        this.nodePermissionService.removePermission(this.actualNode, permissionRow).subscribe((node) => {\n            this.update.emit(node);\n        }, (error) => this.error.emit(error));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-no-permission-template',\n    template: '<ng-content></ng-content>'\n})\nexport class NoPermissionTemplateComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { NodesApiService, ContentService, PermissionsEnum } from '@alfresco/adf-core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\n@Directive({\n    selector: 'button[adf-inherit-permission], mat-button-toggle[adf-inherit-permission]',\n    host: {\n        'role': 'button',\n        '(click)': 'onInheritPermissionClicked()'\n    }\n})\nexport class InheritPermissionDirective {\n\n    /** ID of the node to add/remove inherited permissions. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated. */\n    @Output()\n    updated: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private nodeService: NodesApiService,\n                private contentService: ContentService) {\n    }\n\n    onInheritPermissionClicked() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: MinimalNodeEntryEntity) => {\n            if (this.contentService.hasPermission(node, PermissionsEnum.UPDATEPERMISSIONS)) {\n                const nodeBody = { permissions: { isInheritanceEnabled: !node.permissions.isInheritanceEnabled } };\n                this.nodeService.updateNode(this.nodeId, nodeBody, { include: ['permissions'] }).subscribe((nodeUpdated: MinimalNodeEntryEntity) => {\n                    this.updated.emit(nodeUpdated);\n                }, (error) => this.error.emit(error));\n            } else {\n                this.error.emit('PERMISSION_MANAGER.ERROR.NOT-ALLOWED');\n            }\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AddPermissionDialogData } from './add-permission-dialog-data.interface';\nimport { AddPermissionComponent } from '../add-permission/add-permission.component';\n\n@Component({\n    selector: 'adf-add-permission-dialog',\n    templateUrl: './add-permission-dialog.component.html',\n    styleUrls: ['./add-permission-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionDialogComponent {\n\n    @ViewChild('addPermission')\n    addPermissionComponent: AddPermissionComponent;\n\n    currentSelection: MinimalNodeEntity[] = [];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: AddPermissionDialogData) {\n    }\n\n    onSelect(items: MinimalNodeEntity[]) {\n        this.currentSelection = items;\n    }\n\n    onAddClicked() {\n        this.data.confirm.next(this.currentSelection);\n        this.data.confirm.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { AddPermissionDialogComponent } from '../components/add-permission/add-permission-dialog.component';\nimport { AddPermissionDialogData } from '../components/add-permission/add-permission-dialog-data.interface';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, Node } from 'alfresco-js-api';\nimport { NodePermissionService } from './node-permission.service';\nimport { ContentService, PermissionsEnum } from '@alfresco/adf-core';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class NodePermissionDialogService {\n\n    constructor(private dialog: MatDialog,\n                private nodePermissionService: NodePermissionService,\n                private contentService: ContentService) {\n    }\n\n    /**\n     * Opens a dialog to add permissions to a node.\n     * @param node ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    openAddPermissionDialog(node: Node, title?: string): Observable<MinimalNodeEntity[]> {\n        if (this.contentService.hasPermission(node, PermissionsEnum.UPDATEPERMISSIONS)) {\n            const confirm = new Subject<MinimalNodeEntity[]>();\n\n            confirm.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const data: AddPermissionDialogData = {\n                nodeId: node.id,\n                title: title,\n                confirm: confirm\n            };\n\n            this.openDialog(data, 'adf-add-permission-dialog', '630px');\n            return confirm;\n        } else {\n            let errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            errors.message = 'PERMISSION_MANAGER.ERROR.NOT-ALLOWED';\n            return throwError(errors);\n        }\n    }\n\n    private openDialog(data: any, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AddPermissionDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /**\n     * Closes the currently-open dialog.\n     */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    /**\n     * Opens a dialog to update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    updateNodePermissionByDialog(nodeId?: string, title?: string): Observable<MinimalNodeEntryEntity> {\n        return this.contentService.getNode(nodeId, { include: ['allowableOperations'] })\n            .pipe(\n                switchMap(node => {\n                    return this.openAddPermissionDialog(node.entry, title)\n                        .pipe(\n                            switchMap(selection => {\n                                return this.nodePermissionService.updateNodePermissions(nodeId, selection);\n                            })\n                        );\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryBody } from 'alfresco-js-api';\nimport { SearchConfigurationInterface } from '@alfresco/adf-core';\n\nexport class SearchPermissionConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `authorityName:*${searchTerm}* OR userName:*${searchTerm}*` : searchTerm\n            },\n            include: ['properties', 'aspectNames'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                /*tslint:disable-next-line */\n                { query: \"TYPE:'cm:authority'\" }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { SearchPermissionConfigurationService } from './search-config-permission.service';\nimport { SearchService, SearchConfigurationService } from '@alfresco/adf-core';\nimport { SearchComponent } from '../../../search/components/search.component';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\n\n@Component({\n    selector: 'adf-add-permission-panel',\n    templateUrl: './add-permission-panel.component.html',\n    styleUrls: ['./add-permission-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        { provide: SearchConfigurationService, useClass: SearchPermissionConfigurationService },\n        SearchService\n    ]\n})\nexport class AddPermissionPanelComponent {\n\n    @ViewChild('search')\n    search: SearchComponent;\n\n    /** Emitted when a permission list item is selected. */\n    @Output()\n    select: EventEmitter<any> = new EventEmitter();\n\n    searchInput: FormControl = new FormControl();\n    searchedWord = '';\n    debounceSearch: number = 200;\n\n    selectedItems: MinimalNodeEntity[] = [];\n\n    EVERYONE: MinimalNodeEntity = { entry: { properties: {'cm:authorityName': 'GROUP_EVERYONE'}}};\n\n    constructor() {\n        this.searchInput.valueChanges\n        .pipe(\n            debounceTime(this.debounceSearch)\n        )\n        .subscribe((searchValue) => {\n            this.searchedWord = searchValue;\n            if (!searchValue) {\n                this.search.resetResults();\n            }\n        });\n    }\n\n    elementClicked(item: MinimalNodeEntity) {\n        if (this.isAlreadySelected(item)) {\n            this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n        } else {\n            this.selectedItems.push(item);\n        }\n        this.select.emit(this.selectedItems);\n    }\n\n    private isAlreadySelected(item: MinimalNodeEntity): boolean {\n        return this.selectedItems.indexOf(item) >= 0;\n    }\n\n    clearSearch() {\n        this.searchedWord = '';\n        this.selectedItems.splice(0, this.selectedItems.length);\n        this.search.resetResults();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { NodesApiService, ContentService, PermissionsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-add-permission',\n    templateUrl: './add-permission.component.html',\n    styleUrls: ['./add-permission.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionComponent {\n\n    /** ID of the target node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated successfully. */\n    @Output()\n    success: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter();\n\n    /** Emitted when an error occurs during the update. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    selectedItems: MinimalNodeEntity[] = [];\n    currentNode: MinimalNodeEntryEntity;\n    currentNodeRoles: string[];\n\n    constructor(private nodePermissionService: NodePermissionService,\n                private nodeApiService: NodesApiService,\n                private contentService: ContentService) {\n        this.nodeApiService.getNode(this.nodeId).subscribe((node) => this.currentNode = node);\n    }\n\n    onSelect(selection: MinimalNodeEntity[]) {\n        this.selectedItems = selection;\n    }\n\n    isAddEnabled(): boolean {\n        return this.contentService.hasPermission(this.currentNode, PermissionsEnum.UPDATEPERMISSIONS) &&\n                this.selectedItems.length !== 0;\n    }\n\n    applySelection() {\n        if (this.contentService.hasPermission(this.currentNode, PermissionsEnum.UPDATEPERMISSIONS)) {\n            this.nodePermissionService.updateNodePermissions(this.nodeId, this.selectedItems)\n                .subscribe(\n                    (node) => {\n                        this.success.emit(node);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n                    });\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { PermissionListComponent } from './components/permission-list/permission-list.component';\nimport { AddPermissionComponent } from './components/add-permission/add-permission.component';\nimport { AddPermissionDialogComponent } from './components/add-permission/add-permission-dialog.component';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { InheritPermissionDirective } from './components/inherited-button.directive';\nimport { NoPermissionTemplateComponent } from './components/permission-list/no-permission.component';\nimport { AddPermissionPanelComponent } from './components/add-permission/add-permission-panel.component';\nimport { SearchModule } from '../search/search.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        SearchModule\n    ],\n    declarations: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    entryComponents: [\n        AddPermissionPanelComponent,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    exports: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ]\n})\nexport class PermissionManagerModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Inject,\n    OnInit,\n    ViewEncapsulation,\n    ViewChild,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef,  MatDialog } from '@angular/material';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { tap, skip } from 'rxjs/operators';\nimport {\n    SharedLinksApiService,\n    NodesApiService,\n    ContentService\n} from '@alfresco/adf-core';\nimport { SharedLinkEntry, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-share-dialog',\n    templateUrl: './content-node-share.dialog.html',\n    styleUrls: ['./content-node-share.dialog.scss'],\n    host: { 'class': 'adf-share-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ShareDialogComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n\n    minDate = moment().add(1, 'd');\n    sharedId: string;\n    fileName: string;\n    baseShareUrl: string;\n    isFileShared: boolean = false;\n    isDisabled: boolean = false;\n    form: FormGroup = new FormGroup({\n        'sharedUrl': new FormControl(''),\n        'time': new FormControl({value: '', disabled: false})\n    });\n\n    @ViewChild('sharedLinkInput') sharedLinkInput: ElementRef;\n\n    constructor(\n        private sharedLinksApiService: SharedLinksApiService,\n        private dialogRef: MatDialogRef<ShareDialogComponent>,\n        private dialog: MatDialog,\n        private nodesApiService: NodesApiService,\n        private contentService: ContentService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n\n        if (!this.canUpdate) {\n            this.form.controls['time'].disable();\n        }\n\n        this.subscriptions.push(\n            this.form.valueChanges\n                .pipe(\n                    skip(1),\n                    tap((updates) => {\n                        this.updateNode(updates);\n                    })\n                )\n                .subscribe((updates) => this.updateEntryExpiryDate(updates))\n        );\n\n        if (this.data.node && this.data.node.entry) {\n            this.fileName = this.data.node.entry.name;\n            this.baseShareUrl = this.data.baseShareUrl;\n            const properties = this.data.node.entry.properties;\n\n            if (properties && !properties['qshare:sharedId']) {\n\n                this.createSharedLinks(this.data.node.entry.id);\n            } else {\n                this.sharedId = properties['qshare:sharedId'];\n                this.isFileShared = true;\n\n                this.updateForm();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe);\n    }\n\n    removeShare() {\n        this.deleteSharedLink(this.sharedId);\n    }\n\n    onSlideShareChange(event: any) {\n        if (event.checked) {\n            this.createSharedLinks(this.data.node.entry.id);\n        } else {\n            this.openConfirmationDialog();\n        }\n    }\n\n    get canUpdate() {\n        return this.contentService.hasPermission(this.data.node.entry, 'update');\n    }\n\n    private openConfirmationDialog() {\n        this.isFileShared = false;\n\n        this.dialog\n            .open(ConfirmDialogComponent, {\n                data: {\n                    title: 'SHARE.CONFIRMATION.DIALOG-TITLE',\n                    message: 'SHARE.CONFIRMATION.MESSAGE',\n                    yesLabel: 'SHARE.CONFIRMATION.REMOVE',\n                    noLabel: 'SHARE.CONFIRMATION.CANCEL'\n                },\n                minWidth: '250px',\n                closeOnNavigation: true\n            })\n            .beforeClose().subscribe(deleteSharedLink => {\n                if (deleteSharedLink) {\n                    this.deleteSharedLink(this.sharedId);\n                } else {\n                    this.isFileShared = true;\n                }\n            });\n    }\n\n    private createSharedLinks(nodeId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.createSharedLinks(nodeId)\n            .subscribe((sharedLink: SharedLinkEntry) => {\n\n                if (sharedLink.entry) {\n                    this.sharedId = sharedLink.entry.id;\n                    this.data.node.entry.properties['qshare:sharedId'] = this.sharedId;\n                    this.isDisabled = false;\n                    this.isFileShared = true;\n\n                    this.updateForm();\n                }\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private deleteSharedLink(sharedId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.deleteSharedLink(sharedId).subscribe(() => {\n                this.data.node.entry.properties['qshare:sharedId'] = null;\n                this.data.node.entry.properties['qshare:expiryDate'] = null;\n                this.dialogRef.close(false);\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private updateForm() {\n        const { entry } = this.data.node;\n        const expiryDate = entry.properties['qshare:expiryDate'];\n\n        this.form.setValue({\n            'sharedUrl': `${this.baseShareUrl}${this.sharedId}`,\n            'time': expiryDate ? expiryDate : null\n        });\n    }\n\n    private updateNode(updates): Observable<MinimalNodeEntryEntity> {\n        return this.nodesApiService.updateNode(\n            this.data.node.entry.id,\n            {\n                properties: {\n                    'qshare:expiryDate': updates.time ? updates.time.utc().format() : null\n                }\n            }\n        );\n    }\n\n    private updateEntryExpiryDate(updates) {\n        const { properties } = this.data.node.entry;\n\n        properties['qshare:expiryDate'] = updates.time\n            ? updates.time.local()\n            : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, OnChanges, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\n\nimport { ShareDialogComponent } from './content-node-share.dialog';\n\n@Directive({\n    selector: '[adf-share]',\n    exportAs: 'adfShare'\n})\nexport class NodeSharedDirective implements OnChanges {\n\n    isFile: boolean = false;\n    isShared: boolean = false;\n\n    /** Node to share. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-share')\n    node: MinimalNodeEntity;\n\n    @Input()\n    baseShareUrl: string;\n\n    @HostListener('click')\n    onClick() {\n        if (this.node) {\n            this.shareNode(this.node);\n        }\n    }\n\n    constructor(private dialog: MatDialog, private zone: NgZone) {}\n\n    shareNode(node: MinimalNodeEntity) {\n        if (node && node.entry && node.entry.isFile) {\n            this.dialog.open(ShareDialogComponent, {\n                width: '600px',\n                panelClass: 'adf-share-link-dialog',\n                data: {\n                    node: node,\n                    baseShareUrl: this.baseShareUrl\n                }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        this.zone.onStable.subscribe(() => {\n            if (this.node) {\n                this.isFile = this.node.entry.isFile;\n                this.isShared = this.node.entry.properties['qshare:sharedId'];\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ShareDialogComponent } from './content-node-share.dialog';\nimport { NodeSharedDirective } from './content-node-share.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    exports: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    entryComponents: [\n        ShareDialogComponent\n    ]\n})\nexport class ContentNodeShareModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { SocialModule } from './social/social.module';\nimport { TagModule } from './tag/tag.module';\nimport { WebScriptModule } from './webscript/webscript.module';\nimport { DocumentListModule } from './document-list/document-list.module';\nimport { UploadModule } from './upload/upload.module';\nimport { SearchModule } from './search/search.module';\nimport { SitesDropdownModule } from './site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { VersionManagerModule } from './version-manager/version-manager.module';\nimport { ContentNodeSelectorModule } from './content-node-selector/content-node-selector.module';\nimport { ContentNodeShareModule } from './content-node-share/content-node-share.module';\nimport { ContentDirectiveModule } from './directives/content-directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { FolderDirectiveModule } from './folder-directive/folder-directive.module';\nimport { ContentMetadataModule } from './content-metadata/content-metadata.module';\nimport { PermissionManagerModule } from './permission-manager/permission-manager.module';\nimport { RatingService } from './social/services/rating.service';\nimport { ContentMetadataService } from './content-metadata/services/content-metadata.service';\nimport { PropertyDescriptorsService } from './content-metadata/services/property-descriptors.service';\nimport { ContentMetadataConfigFactory } from './content-metadata/services/config/content-metadata-config.factory';\nimport { BasicPropertiesService } from './content-metadata/services/basic-properties.service';\nimport { PropertyGroupTranslatorService } from './content-metadata/services/property-groups-translator.service';\nimport { SearchQueryBuilderService } from './search/search-query-builder.service';\nimport { SearchFilterService } from './search/components/search-filter/search-filter.service';\nimport { ContentNodeSelectorService } from './content-node-selector/content-node-selector.service';\nimport { ContentNodeDialogService } from './content-node-selector/content-node-dialog.service';\nimport { DocumentListService } from './document-list/services/document-list.service';\nimport { FolderActionsService } from './document-list/services/folder-actions.service';\nimport { DocumentActionsService } from './document-list/services/document-actions.service';\nimport { NodeActionsService } from './document-list/services/node-actions.service';\nimport { CustomResourcesService } from './document-list/services/custom-resources.service';\nimport { NodePermissionDialogService } from './permission-manager/services/node-permission-dialog.service';\nimport { NodePermissionService } from './permission-manager/services/node-permission.service';\nimport { TagService } from './tag/services/tag.service';\n\nexport function providers() {\n    return [\n        RatingService,\n        ContentMetadataService,\n        PropertyDescriptorsService,\n        ContentMetadataConfigFactory,\n        BasicPropertiesService,\n        PropertyGroupTranslatorService,\n        SearchQueryBuilderService,\n        SearchFilterService,\n        ContentNodeSelectorService,\n        ContentNodeDialogService,\n        DocumentListService,\n        FolderActionsService,\n        DocumentActionsService,\n        NodeActionsService,\n        CustomResourcesService,\n        NodePermissionDialogService,\n        NodePermissionService,\n        TagService\n    ];\n}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ]\n})\nexport class ContentModuleLazy {}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ],\n    providers: [\n        ...providers(),\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-content-services',\n                source: 'assets/adf-content-services'\n            }\n        }\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ]\n})\nexport class ContentModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentModule,\n            providers: [\n                ...providers(),\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-content-services',\n                        source: 'assets/adf-content-services'\n                    }\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentModuleLazy\n        };\n    }\n}\n"],"names":["Component","ViewEncapsulation","AlfrescoApiService","MatDialogRef","Inject","MAT_DIALOG_DATA","LogService","Directive","MatDialog","Input","HostListener","MatButtonModule","MatChipsModule","MatDialogModule","MatIconModule","MatCardModule","MatInputModule","MatListModule","MatProgressSpinnerModule","MatProgressBarModule","MatRippleModule","MatMenuModule","MatOptionModule","MatExpansionModule","MatSelectModule","MatCheckboxModule","MatDatepickerModule","MatSlideToggleModule","MatRadioModule","MatSliderModule","NgModule","tslib_1.__spread","from","catchError","throwError","Injectable","AuthenticationService","ContentService","ThumbnailService","moment","FormBuilder","Optional","EventEmitter","switchMap","Subject","PermissionsEnum","SitesService","TranslationService","Output","ElementRef","Renderer2","CommonModule","FormsModule","ReactiveFormsModule","CoreModule","ObjectDataTableAdapter","ObjectUtils","DataSorting","tslib_1.__extends","BaseEvent","Observable","map","of","DisplayMode","ObjectDataColumn","BehaviorSubject","NgZone","AppConfigService","UserPreferencesService","ContentChild","DataColumnListComponent","ViewChild","TemplateRef","merge","FileUploadStatus","UploadService","ChangeDetectorRef","forkJoin","NodesApiService","FileModel","FileUtils","EXTENDIBLE_COMPONENT","forwardRef","NotificationService","FlexLayoutModule","tslib_1.__assign","debounceTime","SearchService","filter","trigger","state","style","transition","animate","ViewChildren","MatListItem","NG_VALUE_ACCESSOR","fromEvent","ESCAPE","ENTER","takeUntil","DOCUMENT","takeWhile","tslib_1.__values","Validators","FormControl","FormGroup","MOMENT_DATE_FORMATS","UserPreferenceValues","DateAdapter","MomentDateAdapter","MAT_DATE_LOCALE","MAT_DATE_FORMATS","ComponentFactoryResolver","ViewContainerRef","ChangeDetectionStrategy","HighlightDirective","MatMomentDatetimeModule","MatDatetimepickerModule","CardViewTextItemModel","CardViewDateItemModel","FileSizePipe","CardViewIntItemModel","CardViewFloatItemModel","CardViewDatetimeItemModel","CardViewBoolItemModel","defer","CardViewUpdateService","SearchConfigurationService","skip","tap","SharedLinksApiService","TRANSLATION_PROVIDER"],"mappings":"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"}
