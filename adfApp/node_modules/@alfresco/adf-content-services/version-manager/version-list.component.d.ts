/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AlfrescoApiService, ContentService } from '@alfresco/adf-core';
import { OnChanges, EventEmitter } from '@angular/core';
import { MinimalNodeEntryEntity, VersionEntry } from 'alfresco-js-api';
import { MatDialog } from '@angular/material';
export declare class VersionListComponent implements OnChanges {
    private alfrescoApi;
    private contentService;
    private dialog;
    private versionsApi;
    versions: VersionEntry[];
    isLoading: boolean;
    /** @deprecated in 2.3.0 */
    id: string;
    /** The target node. */
    node: MinimalNodeEntryEntity;
    /** Toggles showing/hiding of comments */
    showComments: boolean;
    /** Enable/disable downloading a version of the current node. */
    allowDownload: boolean;
    /** Toggles showing/hiding of version actions */
    showActions: boolean;
    /** Emitted when a version is restored */
    restored: EventEmitter<MinimalNodeEntryEntity>;
    /** Emitted when a version is deleted */
    deleted: EventEmitter<MinimalNodeEntryEntity>;
    constructor(alfrescoApi: AlfrescoApiService, contentService: ContentService, dialog: MatDialog);
    ngOnChanges(): void;
    canUpdate(): boolean;
    canDelete(): boolean;
    restore(versionId: any): void;
    loadVersionHistory(): void;
    downloadVersion(versionId: string): void;
    deleteVersion(versionId: string): void;
    onVersionDeleted(node: any): void;
    onVersionRestored(node: any): void;
    private getVersionContentUrl;
    downloadContent(url: string): void;
}
