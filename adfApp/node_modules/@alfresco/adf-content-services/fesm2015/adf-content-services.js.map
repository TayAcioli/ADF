{"version":3,"file":"adf-content-services.js.map","sources":["ng://@alfresco/adf-content-services/dialogs/download-zip.dialog.ts","ng://@alfresco/adf-content-services/directives/node-download.directive.ts","ng://@alfresco/adf-content-services/material.module.ts","ng://@alfresco/adf-content-services/document-list/services/document-list.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.component.ts","ng://@alfresco/adf-content-services/dialogs/node-lock.dialog.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-dialog.service.ts","ng://@alfresco/adf-content-services/directives/node-lock.directive.ts","ng://@alfresco/adf-content-services/directives/content-directive.module.ts","ng://@alfresco/adf-content-services/social/services/rating.service.ts","ng://@alfresco/adf-content-services/social/rating.component.ts","ng://@alfresco/adf-content-services/social/like.component.ts","ng://@alfresco/adf-content-services/social/social.module.ts","ng://@alfresco/adf-content-services/tag/services/tag.service.ts","ng://@alfresco/adf-content-services/tag/tag-actions.component.ts","ng://@alfresco/adf-content-services/tag/tag-list.component.ts","ng://@alfresco/adf-content-services/tag/tag-node-list.component.ts","ng://@alfresco/adf-content-services/tag/tag.module.ts","ng://@alfresco/adf-content-services/webscript/webscript.component.ts","ng://@alfresco/adf-content-services/webscript/webscript.module.ts","ng://@alfresco/adf-content-services/document-list/data/share-data-row.model.ts","ng://@alfresco/adf-content-services/document-list/data/share-datatable-adapter.ts","ng://@alfresco/adf-content-services/document-list/models/preset.model.ts","ng://@alfresco/adf-content-services/document-list/models/content-action.model.ts","ng://@alfresco/adf-content-services/document-list/components/node.event.ts","ng://@alfresco/adf-content-services/document-list/services/custom-resources.service.ts","ng://@alfresco/adf-content-services/document-list/components/document-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column.component.ts","ng://@alfresco/adf-content-services/document-list/models/permissions.model.ts","ng://@alfresco/adf-content-services/document-list/services/node-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/document-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/folder-actions.service.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action.component.ts","ng://@alfresco/adf-content-services/document-list/components/empty-folder/empty-folder-content.directive.ts","ng://@alfresco/adf-content-services/document-list/components/no-permission/no-permission-content.directive.ts","ng://@alfresco/adf-content-services/document-list/models/document-library.model.ts","ng://@alfresco/adf-content-services/document-list/models/permissions-style.model.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-dialog.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list-row.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-files.event.ts","ng://@alfresco/adf-content-services/upload/components/base-upload/upload-base.ts","ng://@alfresco/adf-content-services/upload/components/upload-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-version-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-drag-area.component.ts","ng://@alfresco/adf-content-services/upload/directives/file-draggable.directive.ts","ng://@alfresco/adf-content-services/upload/upload.module.ts","ng://@alfresco/adf-content-services/document-list/document-list.module.ts","ng://@alfresco/adf-content-services/search/search-query-builder.service.ts","ng://@alfresco/adf-content-services/search/components/search.component.ts","ng://@alfresco/adf-content-services/search/components/empty-search-result.component.ts","ng://@alfresco/adf-content-services/search/components/search-control.component.ts","ng://@alfresco/adf-content-services/search/components/search-trigger.directive.ts","ng://@alfresco/adf-content-services/search/components/search-filter/models/search-filter-list.model.ts","ng://@alfresco/adf-content-services/search/components/search-filter/models/response-facet-query-list.model.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.component.ts","ng://@alfresco/adf-content-services/search/components/search-text/search-text.component.ts","ng://@alfresco/adf-content-services/search/components/search-radio/search-radio.component.ts","ng://@alfresco/adf-content-services/search/components/search-slider/search-slider.component.ts","ng://@alfresco/adf-content-services/search/forms/live-error-state-matcher.ts","ng://@alfresco/adf-content-services/search/components/search-number-range/search-number-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-check-list/search-check-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-date-range/search-date-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.service.ts","ng://@alfresco/adf-content-services/search/components/search-chip-list/search-chip-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-sorting-picker/search-sorting-picker.component.ts","ng://@alfresco/adf-content-services/search/components/search-widget-container/search-widget-container.component.ts","ng://@alfresco/adf-content-services/search/search.module.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.component.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.module.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/dropdown-breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.module.ts","ng://@alfresco/adf-content-services/dialogs/confirm.dialog.ts","ng://@alfresco/adf-content-services/version-manager/version-list.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.component.ts","ng://@alfresco/adf-content-services/version-manager/version-upload.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.module.ts","ng://@alfresco/adf-content-services/content-node-selector/name-location-cell/name-location-cell.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector-panel.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.module.ts","ng://@alfresco/adf-content-services/dialogs/folder-name.validators.ts","ng://@alfresco/adf-content-services/dialogs/folder.dialog.ts","ng://@alfresco/adf-content-services/dialogs/dialog.module.ts","ng://@alfresco/adf-content-services/folder-directive/folder-create.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-edit.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-directive.module.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata-card/content-metadata-card.component.ts","ng://@alfresco/adf-content-services/content-metadata/services/basic-properties.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-groups-translator.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/property-group-reader.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/aspect-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/indifferent-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/layout-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/content-metadata-config.factory.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-descriptors.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/content-metadata.service.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata/content-metadata.component.ts","ng://@alfresco/adf-content-services/content-metadata/content-metadata.module.ts","ng://@alfresco/adf-content-services/permission-manager/models/permission.model.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/permission-list.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/no-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/inherited-button.directive.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-dialog.component.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission-dialog.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/search-config-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-panel.component.ts","ng://@alfresco/adf-content-services/permission-manager/permission-manager.module.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.dialog.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.directive.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.module.ts","ng://@alfresco/adf-content-services/content.module.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, MinimalNodeEntity } from 'alfresco-js-api';\nimport { LogService, AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    templateUrl: './download-zip.dialog.html',\n    styleUrls: ['./download-zip.dialog.scss'],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    private cancelled = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) private data: any,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            const promise: any = this.apiService.getInstance().core.downloadsApi.createDownload({ nodeIds });\n\n            promise.on('progress', progress => this.logService.log('Progress', progress));\n            promise.on('error', error => this.logService.error('Error', error));\n            promise.on('abort', data => this.logService.log('Abort', data));\n\n            promise.on('success', (data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.apiService.getInstance().content.getContentUrl(data.entry.id, true);\n\n                    this.apiService.getInstance().core.nodesApi.getNode(data.entry.id).then((downloadNode: MinimalNodeEntity) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.apiService.getInstance().core.downloadsApi.getDownload(downloadId).then((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\n\n@Directive({\n    selector: '[adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: MinimalNodeEntity[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: Array<MinimalNodeEntity>) {\n        if (!selection || selection.length === 0) {\n            return;\n        }\n\n        if (selection.length === 1) {\n            this.downloadNode(selection[0]);\n        } else {\n            this.downloadZip(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private downloadFile(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n            // nodeId for Shared node\n            const id = (<any> node.entry).nodeId || node.entry.id;\n\n            const url = contentApi.getContentUrl(id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<MinimalNodeEntity>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatSliderModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatExpansionModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatSlideToggleModule,\n        MatRadioModule,\n        MatSliderModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService, AuthenticationService, ContentService, LogService,\n    PermissionsEnum, ThumbnailService\n} from '@alfresco/adf-core';\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity,  NodeEntry, NodePaging } from 'alfresco-js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class DocumentListService {\n\n    static ROOT_ID = '-root-';\n\n    constructor(authService: AuthenticationService,\n                private contentService: ContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    private getNodesPromise(folder: string, opts?: any, includeFields: string[] = []): Promise<NodePaging> {\n\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let params: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n        }\n\n        return this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params);\n    }\n\n    /**\n     * Deletes a node.\n     * @param nodeId ID of the node to delete\n     * @returns Empty response when the operation is complete\n     */\n    deleteNode(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder where the node will be copied\n     * @returns NodeEntry for the copied node\n     */\n    copyNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId })).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    /**\n     * Moves a node to destination node.\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder where the node will be moved\n     * @returns NodeEntry for the moved node\n     */\n    moveNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId })).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder in the path.\n     * @param name Folder name\n     * @param parentId Parent folder ID\n     * @returns Details of the created folder node\n     */\n    createFolder(name: string, parentId: string): Observable<MinimalNodeEntity> {\n        return from(this.apiService.getInstance().nodes.createFolder(name, '/', parentId))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolder(folder: string, opts?: any, includeFields: string[] = []): Observable<NodePaging> {\n        return from(this.getNodesPromise(folder, opts, includeFields))\n            .pipe(\n                catchError(err => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a node via its node ID.\n     * @param nodeId ID of the target node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return this.contentService.getNode(nodeId, opts);\n    }\n\n    /**\n     * Gets a folder node via its node ID.\n     * @deprecated 2.3.0\n     * @param nodeId ID of the folder node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolderNode(nodeId: string, includeFields: string[] = []): Observable<MinimalNodeEntryEntity> {\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return from(this.apiService.getInstance().nodes.getNodeInfo(nodeId, opts));\n    }\n    /**\n     * Get thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns Thumbnail URL string\n     */\n    getDocumentThumbnailUrl(node: MinimalNodeEntity): string {\n        return this.thumbnailService.getDocumentThumbnailUrl(node);\n    }\n\n    /**\n     * Gets the icon that represents a MIME type.\n     * @param mimeType MIME type to get the icon for\n     * @returns Path to the icon file\n     */\n    getMimeTypeIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    /**\n     * Gets a default icon for MIME types with no specific icon.\n     * @returns Path to the icon file\n     */\n    getDefaultMimeTypeIcon(): string {\n        return this.thumbnailService.getDefaultMimeTypeIcon();\n    }\n\n    /**\n     * Checks if a node has the specified permission.\n     * @deprecated 2.3.0 - use the equivalent in the content service\n     * @param node Target node\n     * @param permission Permission level to query\n     * @returns True if the node has the permission, false otherwise\n     */\n    hasPermission(node: any, permission: PermissionsEnum | string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { MinimalNodeEntryEntity, SitePaging } from 'alfresco-js-api';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\n\n@Component({\n    selector: 'adf-content-node-selector',\n    templateUrl: './content-node-selector.component.html',\n    styleUrls: ['./content-node-selector.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent {\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    title: string = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    currentFolderId: string = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    rowFilter: RowFilter = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    pageSize: number;\n\n    buttonActionName: string;\n    chosenNode: MinimalNodeEntryEntity[];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: ContentNodeSelectorComponentData) {\n        this.buttonActionName = data.actionName ? `NODE_SELECTOR.${data.actionName.toUpperCase()}` : 'NODE_SELECTOR.CHOOSE';\n    }\n\n    close() {\n        this.data.select.complete();\n    }\n\n    onSelect(nodeList: MinimalNodeEntryEntity[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onClick(): void {\n        this.data.select.next(this.chosenNode);\n        this.data.select.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\n\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { MinimalNodeEntryEntity, NodeEntry } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-node-lock',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './node-lock.dialog.html'\n})\nexport class NodeLockDialogComponent implements OnInit {\n\n    form: FormGroup;\n    node: MinimalNodeEntryEntity = null;\n    nodeName: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialog: MatDialogRef<NodeLockDialogComponent>,\n        private alfrescoApi: AlfrescoApiService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {}\n\n    ngOnInit() {\n        const { node } = this.data;\n        this.nodeName = node.name;\n\n        this.form = this.formBuilder.group({\n            isLocked: node.isLocked || false,\n            allowOwner: node.properties['cm:lockType'] === 'WRITE_LOCK',\n            isTimeLock: !!node.properties['cm:expiryDate'],\n            time: !!node.properties['cm:expiryDate'] ? moment(node.properties['cm:expiryDate']) : moment()\n        });\n    }\n\n    private get lockTimeInSeconds(): number {\n        if (this.form.value.isTimeLock) {\n            let duration = moment.duration(moment(this.form.value.time).diff(moment()));\n            return duration.asSeconds();\n        }\n\n        return 0;\n    }\n\n    private get nodeBodyLock(): object {\n        return {\n            'timeToExpire': this.lockTimeInSeconds,\n            'type': this.form.value.allowOwner ? 'ALLOW_OWNER_CHANGES' : 'FULL',\n            'lifetime': 'PERSISTENT'\n        };\n    }\n\n    private toggleLock(): Promise<NodeEntry> {\n        const { alfrescoApi: { nodesApi }, data: { node } } = this;\n\n        if (this.form.value.isLocked) {\n            return nodesApi.lockNode(node.id, this.nodeBodyLock);\n        }\n\n        return nodesApi.unlockNode(node.id);\n    }\n\n    submit(): void {\n        this.toggleLock()\n            .then(node => {\n                this.data.node.isLocked = this.form.value.isLocked;\n                this.dialog.close(node.entry);\n            })\n            .catch(error => this.data.onError(error));\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ContentService } from '@alfresco/adf-core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { ShareDataRow } from '../document-list/data/share-data-row.model';\nimport { MinimalNodeEntryEntity, SitePaging } from 'alfresco-js-api';\nimport { DataColumn, SitesService, TranslationService, PermissionsEnum } from '@alfresco/adf-core';\nimport { DocumentListService } from '../document-list/services/document-list.service';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeLockDialogComponent } from '../dialogs/node-lock.dialog';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class ContentNodeDialogService {\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private contentService: ContentService,\n                private documentListService: DocumentListService,\n                private siteService: SitesService,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Opens a file browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogByFolderId(folderNodeId: string): Observable<MinimalNodeEntryEntity[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((node: MinimalNodeEntryEntity) => {\n            return this.openUploadFileDialog('Choose', node);\n        }));\n    }\n\n    /**\n     * Opens a lock node dialog.\n     * @param contentEntry Node to lock\n     * @returns Error/status message (if any)\n     */\n    public openLockNodeDialog(contentEntry: MinimalNodeEntryEntity): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasPermission(contentEntry, PermissionsEnum.LOCK)) {\n            this.dialog.open(NodeLockDialogComponent, {\n                data: {\n                    node: contentEntry,\n                    onError: (error) => {\n                        this.error.emit(error);\n                        observable.error(error);\n                    }\n                },\n                width: '400px'\n            });\n        } else {\n            observable.error('OPERATION.FAIL.NODE.NO_PERMISSION');\n        }\n\n        return observable;\n    }\n\n    /**\n     * Opens a file browser at a chosen site location.\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogBySite(): Observable<MinimalNodeEntryEntity[]> {\n        return this.siteService.getSites().pipe(switchMap((response: SitePaging) => {\n            return this.openFileBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        }));\n    }\n\n    /**\n     * Opens a folder browser at a chosen site location.\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogBySite(): Observable<MinimalNodeEntryEntity[]> {\n        return this.siteService.getSites().pipe(switchMap((response: SitePaging) => {\n            return this.openFolderBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        }));\n    }\n\n    /**\n     * Opens a folder browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogByFolderId(folderNodeId: string): Observable<MinimalNodeEntryEntity[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((node: MinimalNodeEntryEntity) => {\n            return this.openUploadFolderDialog('Choose', node);\n        }));\n    }\n\n    /**\n     * Opens a dialog to copy or move an item to a new location.\n     * @param action Name of the action (eg, \"Copy\" or \"Move\") to show in the title\n     * @param contentEntry Item to be copied or moved\n     * @param permission Permission for the operation\n     * @returns Information about files that were copied/moved\n     */\n    openCopyMoveDialog(action: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Observable<MinimalNodeEntryEntity[]> {\n        if (this.contentService.hasPermission(contentEntry, permission)) {\n\n            const select = new Subject<MinimalNodeEntryEntity[]>();\n            select.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const title = this.getTitleTranslation(action, contentEntry.name);\n\n            const data: ContentNodeSelectorComponentData = {\n                title: title,\n                actionName: action,\n                currentFolderId: contentEntry.parentId,\n                imageResolver: this.imageResolver.bind(this),\n                rowFilter: this.rowFilter.bind(this, contentEntry.id),\n                isSelectionValid: this.isCopyMoveSelectionValid.bind(this),\n                select: select\n            };\n\n            this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n\n            return select;\n        } else {\n            let errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            return throwError(errors);\n        }\n    }\n\n    /**\n     * Gets the translation of the dialog title.\n     * @param action Name of the action to display in the dialog title\n     * @param name Name of the item on which the action is being performed\n     * @returns Translated version of the title\n     */\n    getTitleTranslation(action: string, name: string): string {\n        return this.translation.instant(`NODE_SELECTOR.${action.toUpperCase()}_ITEM`, { name });\n    }\n\n    /**\n     * Opens a dialog to choose folders to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry  Item to upload\n     * @returns Information about the chosed folder(s)\n     */\n    openUploadFolderDialog(action: string, contentEntry: MinimalNodeEntryEntity): Observable<MinimalNodeEntryEntity[]> {\n        const select = new Subject<MinimalNodeEntryEntity[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.hasPermissionOnNodeFolder.bind(this),\n            rowFilter: this.rowFilter.bind(this, contentEntry.id),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @returns Information about the chosen file(s)\n     */\n    openUploadFileDialog(action: string, contentEntry: MinimalNodeEntryEntity): Observable<MinimalNodeEntryEntity[]> {\n        const select = new Subject<MinimalNodeEntryEntity[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.isNodeFile.bind(this),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    private openContentNodeDialog(data: ContentNodeSelectorComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    private imageResolver(row: ShareDataRow, col: DataColumn): string | null {\n        const entry: MinimalNodeEntryEntity = row.node.entry;\n        if (!this.contentService.hasPermission(entry, 'create')) {\n            return this.documentListService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\n\n    private rowFilter(currentNodeId, row: ShareDataRow): boolean {\n        const node: MinimalNodeEntryEntity = row.node.entry;\n\n        if (node.id === currentNodeId || node.isFile) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private isNodeFile(entry: MinimalNodeEntryEntity): boolean {\n        return entry.isFile;\n    }\n\n    private hasPermissionOnNodeFolder(entry: MinimalNodeEntryEntity): boolean {\n        return this.isNodeFolder(entry) && this.contentService.hasPermission(entry, 'create');\n    }\n\n    private isNodeFolder(entry: MinimalNodeEntryEntity): boolean {\n        return entry.isFolder;\n    }\n\n    private isCopyMoveSelectionValid(entry: MinimalNodeEntryEntity): boolean {\n        return this.hasEntityCreatePermission(entry) && !this.isSite(entry);\n    }\n\n    private hasEntityCreatePermission(entry: MinimalNodeEntryEntity): boolean {\n        return this.contentService.hasPermission(entry, 'create');\n    }\n\n    private isSite(entry) {\n        return !!entry.guid || entry.nodeType === 'st:site' || entry.nodeType === 'st:sites';\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { PermissionsEnum, ContentService } from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '../content-node-selector/content-node-dialog.service';\n\n@Directive({\n    selector: '[adf-node-lock]'\n})\nexport class NodeLockDirective implements AfterViewInit {\n\n    /** Node to lock/unlock. */\n    @Input('adf-node-lock')\n    node: MinimalNodeEntryEntity;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.contentNodeDialogService.openLockNodeDialog(this.node);\n    }\n\n    constructor(\n        public element: ElementRef,\n        private renderer: Renderer2,\n        private contentService: ContentService,\n        private contentNodeDialogService: ContentNodeDialogService\n    ) {}\n\n    ngAfterViewInit() {\n        const hasPermission = this.contentService.hasPermission(this.node, PermissionsEnum.LOCK);\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', !hasPermission);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { NodeDownloadDirective } from './node-download.directive';\nimport { NodeLockDirective } from './node-lock.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        NodeDownloadDirective,\n        NodeLockDirective\n    ],\n    exports: [\n        NodeDownloadDirective,\n        NodeLockDirective\n    ]\n})\nexport class ContentDirectiveModule {\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { RatingBody } from 'alfresco-js-api';\nimport { from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the current user's rating for a node.\n     * @param nodeId Node to get the rating from\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @returns The rating value\n     */\n    getRating(nodeId: string, ratingType: any): any {\n        return from(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Adds the current user's rating for a node.\n     * @param nodeId Target node for the rating\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @param vote Rating value (boolean for \"likes\", numeric 0..5 for \"fiveStar\")\n     * @returns Details about the rating, including the new value\n     */\n    postRating(nodeId: string, ratingType: any, vote: any): any {\n        let ratingBody: RatingBody = {\n            'id': ratingType,\n            'myRating': vote\n        };\n        return from(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Removes the current user's rating for a node.\n     * @param nodeId Target node\n     * @param ratingType Type of rating to remove (can be \"likes\" or \"fiveStar\")\n     * @returns Null response indicating that the operation is complete\n     */\n    deleteRating(nodeId: string, ratingType: any): any {\n        return from(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    private handleError(error: Response): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\n\n@Component({\n    selector: 'adf-rating',\n    styleUrls: ['./rating.component.scss'],\n    templateUrl: './rating.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    /** Identifier of the node to apply the rating to. */\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        let ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.average = data.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    calculateStars() {\n        this.stars = [];\n\n        for (let i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({fill: true});\n            } else {\n                this.stars.push({fill: false});\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n\n    updateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    if (this.average !== data.entry.aggregate.average) {\n                        this.average = data.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\n\n@Component({\n    selector: 'adf-like',\n    styleUrls: ['./like.component.scss'],\n    templateUrl: './like.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n    /** Identifier of a node to apply likes to. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    likesCounter: number = 0;\n    ratingType: string = 'likes';\n    isLike: boolean = false;\n\n    constructor(private ratingService: RatingService) {}\n\n    ngOnChanges() {\n        this.clean();\n\n        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    if (data.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (data) => {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        }\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ]\n})\nexport class SocialModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TagPaging } from 'alfresco-js-api';\n\n@Injectable()\nexport class TagService {\n\n    /** Emitted when tag information is updated. */\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of tags added to a node.\n     * @param nodeId ID of the target node\n     * @returns TagPaging object (defined in JSAPI) containing the tags\n     */\n    getTagsByNodeId(nodeId: string): any {\n        return from(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId)).pipe(\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a list of all the tags already defined in the repository.\n     * @param opts Options supported by JSAPI\n     * @returns TagPaging object (defined in JSAPI) containing the tags\n     */\n    getAllTheTags(opts?: any): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getTags(opts))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Adds a tag to a node.\n     * @param nodeId ID of the target node\n     * @param tagName Name of the tag to add\n     * @returns TagEntry object (defined in JSAPI) with details of the new tag\n     */\n    addTag(nodeId: string, tagName: string): any {\n        const alfrescoApi: any = this.apiService.getInstance();\n        const tagBody = new alfrescoApi.core.TagBody();\n        tagBody.tag = tagName;\n\n        let promiseAdd = from(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        promiseAdd.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseAdd;\n    }\n\n    /**\n     * Removes a tag from a node.\n     * @param nodeId ID of the target node\n     * @param tag Name of the tag to remove\n     * @returns Null object when the operation completes\n     */\n    removeTag(nodeId: string, tag: string): any {\n        const promiseRemove = from(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        promiseRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation, OnDestroy, OnInit } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { Subscription } from 'rxjs';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    templateUrl: './tag-actions.component.html',\n    styleUrls: ['./tag-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a tag is added successfully. */\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an action is chosen. */\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n    tagsEntries: any;\n    errorMsg: string;\n    disableAddTag: boolean = true;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private tagService: TagService, private translateService: TranslationService) {}\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.tagService.refresh.subscribe(() => {\n                this.refreshTag();\n            })\n        );\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n                this.tagsEntries = data.list.entries;\n                this.disableAddTag = false;\n                this.result.emit(this.tagsEntries);\n            }, () => {\n                this.tagsEntries = null;\n                this.disableAddTag = true;\n                this.result.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { PaginationModel } from '@alfresco/adf-core';\n\n/**\n * This component provide a list of all the tag inside the ECM\n */\n@Component({\n    selector: 'adf-tag-list',\n    templateUrl: './tag-list.component.html',\n    styleUrls: ['./tag-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit {\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Array of tags that are displayed\n     */\n    tagsEntries: any = [];\n\n    /**\n     * Number of items per iteration\n     */\n    size: number = 10;\n\n    defaultPagination: PaginationModel;\n    pagination: PaginationModel;\n\n    isLoading = false;\n    isSizeMinimum = true;\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n\n        this.defaultPagination = {\n            skipCount: 0,\n            maxItems: this.size,\n            hasMoreItems: false\n        };\n\n        this.pagination = this.defaultPagination;\n\n        this.tagService.refresh.subscribe(() => {\n            this.tagsEntries = [];\n            this.refreshTag(this.defaultPagination);\n        });\n    }\n\n    ngOnInit() {\n        return this.refreshTag(this.defaultPagination);\n    }\n\n    refreshTag(opts?: any) {\n        this.tagService.getAllTheTags(opts).subscribe((tags: any) => {\n            this.tagsEntries = this.tagsEntries.concat(tags.list.entries);\n            this.pagination = tags.list.pagination;\n            this.result.emit(this.tagsEntries);\n            this.isLoading = false;\n        });\n    }\n\n    loadMoreTags() {\n        if (this.pagination.hasMoreItems) {\n            this.isLoading = true;\n            this.isSizeMinimum = false;\n\n            this.refreshTag({\n                skipCount: this.pagination.skipCount + this.pagination.count,\n                maxItems: this.size\n            });\n        }\n    }\n\n    loadLessTags() {\n        this.isSizeMinimum = false;\n        this.tagsEntries = this.tagsEntries.slice(0, this.tagsEntries.length - this.pagination.count);\n        this.pagination.skipCount = this.pagination.skipCount - this.pagination.count;\n        this.pagination.hasMoreItems = true;\n\n        if (this.tagsEntries.length <= this.size) {\n            this.isSizeMinimum = true;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    templateUrl: './tag-node-list.component.html',\n    styleUrls: ['./tag-node-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges {\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Show delete button */\n    @Input()\n    showDelete = true;\n\n    tagsEntries: any;\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    results = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n                this.tagsEntries = data.list.entries;\n                this.results.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ]\n})\nexport class TagModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are recived\n *\n */\n@Component({\n    selector: 'adf-webscript-get',\n    templateUrl: 'webscript.component.html'\n})\nexport class WebscriptComponent implements OnChanges {\n\n    /** (required) Path to the webscript (as defined by webscript). */\n    @Input()\n    scriptPath: string;\n\n    /** Arguments to pass to the webscript. */\n    @Input()\n    scriptArgs: any;\n\n    /** Toggles whether to show or hide the data. */\n    @Input()\n    showData: boolean = true;\n\n    /** Path where the application is deployed */\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    /** Path that the webscript service is mapped to. */\n    @Input()\n    servicePath: string = 'service';\n\n    /** Content type to interpret the data received from the webscript.\n     * Can be \"JSON\" , \"HTML\" , \"DATATABLE\" or \"TEXT\"\n     */\n    @Input()\n    contentType: string = 'TEXT';\n\n    /** Emitted when the operation succeeds. You can get the plain data from\n     * the webscript through the **success** event parameter and use it as you\n     * need in your application.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptdata) => {\n\n                this.data = webScriptdata;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptdata);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @retutns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        let datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (e) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ]\n})\nexport class WebScriptModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRow, ObjectUtils, ThumbnailService } from '@alfresco/adf-core';\nimport { MinimalNode, MinimalNodeEntity } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n\n    get node(): MinimalNodeEntity {\n        return this.obj;\n    }\n\n    constructor(private obj: MinimalNodeEntity,\n                private documentListService: DocumentListService,\n                private permissionsStyle: PermissionStyleModel[],\n                private thumbnailService?: ThumbnailService) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n\n    getPermissionClass(nodeEntity: MinimalNodeEntity): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.documentListService.hasPermission(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(obj: MinimalNodeEntity): boolean {\n        return this.isFolder(obj) && this.documentListService.hasPermission(obj.entry, 'create');\n    }\n\n    isFolder(obj: MinimalNodeEntity): boolean {\n        return obj.entry && obj.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    imageErrorResolver(event: Event): any {\n        return this.thumbnailService.getMimeTypeIcon(this.obj.entry.content.mimeType);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn, DataRow, DataSorting, DataTableAdapter, ThumbnailService } from '@alfresco/adf-core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { ShareDataRow } from './share-data-row.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private _sortingMode: string;\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n\n    private filter: any;\n    private imageResolver: any;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n\n    set sortingMode(value: string) {\n        let newValue = (value || 'client').toLowerCase();\n        if (newValue !== 'client' && newValue !== 'server') {\n            newValue = 'client';\n        }\n        this._sortingMode = newValue;\n    }\n\n    get sortingMode(): string {\n        return this._sortingMode;\n    }\n\n    constructor(private documentListService: DocumentListService,\n                private thumbnailService: ThumbnailService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting,\n                sortingMode: string = 'client') {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n        this.sortingMode = sortingMode;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        let dataRow: ShareDataRow = <ShareDataRow> row;\n        let value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                if (this.isSmartFolder(node)) {\n                    return this.documentListService.getMimeTypeIcon('smartFolder');\n                } else {\n                    return this.documentListService.getMimeTypeIcon('folder');\n                }\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.documentListService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.documentListService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.documentListService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: any) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: any) {\n        this.imageResolver = resolver;\n    }\n\n    isSmartFolder(node: any) {\n        let nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('smf:customConfigSmartFolder') > -1 ||\n            (nodeAspects.indexOf('smf:systemConfigSmartFolder') > -1);\n    }\n\n    private getNodeAspectNames(node: any): any[] {\n        return node.entry && node.entry.aspectNames ? node.entry.aspectNames : node.aspectNames ? node.aspectNames : [];\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        if (this.sortingMode === 'server') {\n            return;\n        }\n\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(page: NodePaging, merge: boolean = false) {\n        let rows = [];\n\n        if (page && page.list) {\n            let data = page.list.entries;\n            if (data && data.length > 0) {\n                rows = data.map(item => new ShareDataRow(item, this.documentListService, this.permissionsStyle, this.thumbnailService));\n\n                if (this.filter) {\n                    rows = rows.filter(this.filter);\n                }\n\n                if (this.sortingMode !== 'server') {\n                    // Sort by first sortable or just first column\n                    if (this.columns && this.columns.length > 0) {\n                        let sorting = this.getSorting();\n                        if (sorting) {\n                            this.sortRows(rows, sorting);\n                        } else {\n                            let sortable = this.columns.filter(c => c.sortable);\n                            if (sortable.length > 0) {\n                                this.sort(sortable[0].key, 'asc');\n                            } else {\n                                this.sort(this.columns[0].key, 'asc');\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            let listPrunedDuplicate = rows.filter((elemntToFilter) => {\n                let isPresent = this.rows.find((currenRow: any) => {\n                    return currenRow.obj.entry.id === elemntToFilter.obj.entry.id;\n                });\n\n                return !isPresent;\n            });\n\n            this.rows = this.rows.concat(listPrunedDuplicate);\n        } else {\n            this.rows = rows;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean | Function = false;\n    visible: boolean | Function = true;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n\n            if (obj.hasOwnProperty('disabled')) {\n                this.disabled = obj.disabled;\n            }\n\n            if (obj.hasOwnProperty('visible')) {\n                this.visible = obj.visible;\n            }\n        }\n    }\n}\n\nexport enum ContentActionTarget {\n    Document = 'document',\n    Folder = 'folder',\n    All = 'all'\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '@alfresco/adf-core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodeEntityEvent extends BaseEvent<MinimalNodeEntity> {\n\n    value: MinimalNodeEntity;\n\n    defaultPrevented: boolean;\n\n    constructor(entity: MinimalNodeEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<MinimalNodeEntryEntity> {\n\n    value: MinimalNodeEntryEntity;\n\n    defaultPrevented: boolean;\n\n    constructor(entity: MinimalNodeEntryEntity) {\n        super();\n        this.value = entity;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService,\n    LogService,\n    PaginationModel\n} from '@alfresco/adf-core';\n\nimport {\n    NodePaging,\n    PersonEntry,\n    SitePaging,\n    DeletedNodesPaging,\n    SearchRequest\n} from 'alfresco-js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class CustomResourcesService {\n\n    private CREATE_PERMISSION = 'create';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets files recently accessed by a user.\n     * @param personId ID of the user\n     * @param pagination Specifies how to paginate the results\n     * @returns List of nodes for the recently used files\n     */\n    getRecentFiles(personId: string, pagination: PaginationModel): Observable<NodePaging> {\n        return new Observable(observer => {\n            this.apiService.peopleApi.getPerson(personId)\n                .then((person: PersonEntry) => {\n                        const username = person.entry.id;\n                        const query: SearchRequest = {\n                            query: {\n                                query: '*',\n                                language: 'afts'\n                            },\n                            filterQueries: [\n                                { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                                { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                                { query: `TYPE:\"content\" AND -TYPE:\"app:filelink\" AND -TYPE:\"fm:post\"` }\n                            ],\n                            include: ['path', 'properties', 'allowableOperations'],\n                            sort: [{\n                                type: 'FIELD',\n                                field: 'cm:modified',\n                                ascending: false\n                            }],\n                            paging: {\n                                maxItems: pagination.maxItems,\n                                skipCount: pagination.skipCount\n                            }\n                        };\n                        return this.apiService.searchApi.search(query)\n                            .then((searchResult) => {\n                                    observer.next(searchResult);\n                                    observer.complete();\n                                },\n                                (err) => {\n                                    observer.error(err);\n                                    observer.complete();\n                                });\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets favorite files for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of favorite files\n     */\n    loadFavorites(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: includeFieldsRequest\n        };\n\n        return new Observable(observer => {\n            this.apiService.favoritesApi.getFavorites('-me-', options)\n                .then((result: NodePaging) => {\n                        let page: NodePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { target } }: any) => ({\n                                        entry: target.file || target.folder\n                                    }))\n                                    .map(({ entry }: any) => {\n                                        entry.properties = {\n                                            'cm:title': entry.title,\n                                            'cm:description': entry.description\n                                        };\n                                        return { entry };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets sites that the current user is a member of.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadMemberSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable(observer => {\n            this.apiService.peopleApi.getSiteMembership('-me-', options)\n                .then((result: SitePaging) => {\n                        let page: NodePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { site } }: any) => {\n                                        site.allowableOperations = site.allowableOperations ? site.allowableOperations : [this.CREATE_PERMISSION];\n                                        site.name = site.name || site.title;\n                                        return {\n                                            entry: site\n                                        };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets all sites in the respository.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties', 'aspectNames'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable(observer => {\n            this.apiService.sitesApi.getSites(options)\n                .then((page: NodePaging) => {\n                        page.list.entries.map(\n                            ({ entry }: any) => {\n                                entry.name = entry.name || entry.title;\n                                return { entry };\n                            }\n                        );\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Gets all items currently in the trash.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of deleted items\n     */\n    loadTrashcan(pagination: PaginationModel, includeFields: string[] = []): Observable<DeletedNodesPaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.nodesApi.getDeletedNodes(options))\n            .pipe(catchError(err => this.handleError(err)));\n\n    }\n\n    /**\n     * Gets shared links for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of shared links\n     */\n    loadSharedLinks(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.sharedLinksApi.findSharedLinks(options))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    /**\n     * Is the folder ID one of the well-known aliases?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is a well-known name, false otherwise\n     */\n    isCustomSource(folderId: string): boolean {\n        let isCustomSources = false;\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isCustomSources = true;\n        }\n\n        return isCustomSources;\n    }\n\n    /**\n     * Is the folder ID a \"-my\", \"-root-\", or \"-shared-\" alias?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is one of the suppored sources, false otherwise\n     */\n    isSupportedSource(folderId: string): boolean {\n        let isSupportedSources = false;\n        const sources = ['-my-', '-root-', '-shared-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isSupportedSources = true;\n        }\n\n        return isSupportedSources;\n    }\n\n    /**\n     * Gets a folder's contents.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of items contained in the folder\n     */\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[]): Observable<NodePaging> {\n        if (nodeId === '-trashcan-') {\n            return this.loadTrashcan(pagination, includeFields);\n        } else if (nodeId === '-sharedlinks-') {\n            return this.loadSharedLinks(pagination, includeFields);\n        } else if (nodeId === '-sites-') {\n            return this.loadSites(pagination);\n        } else if (nodeId === '-mysites-') {\n            return this.loadMemberSites(pagination);\n        } else if (nodeId === '-favorites-') {\n            return this.loadFavorites(pagination, includeFields);\n        } else if (nodeId === '-recent-') {\n            return this.getRecentFiles('-me-', pagination);\n        }\n    }\n\n    // TODO: remove it from here\n\n    /**\n     * Gets the contents of one of the well-known aliases in the form of node ID strings.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @returns List of node IDs\n     */\n    getCorrespondingNodeIds(nodeId: string, pagination: PaginationModel = {}): Observable<string[]> {\n        if (this.isCustomSource(nodeId)) {\n\n            return this.loadFolderByNodeId(nodeId, pagination, [])\n                .pipe(map(result => result.list.entries.map((node: any) => {\n                    if (nodeId === '-sharedlinks-') {\n                        return node.entry.nodeId;\n\n                    } else if (nodeId === '-sites-' || nodeId === '-mysites-') {\n                        return node.entry.guid;\n\n                    } else if (nodeId === '-favorites-') {\n                        return node.entry.targetGuid;\n                    }\n\n                    return node.entry.id;\n                })));\n\n        } else if (nodeId) {\n            // cases when nodeId is '-my-', '-root-' or '-shared-'\n            return from(this.apiService.nodesApi.getNode(nodeId)\n                .then(node => [node.entry.id]));\n        }\n\n        return of([]);\n    }\n\n    /**\n     * Does the well-known alias have a corresponding node ID?\n     * @param nodeId Node to check\n     * @returns True if the alias has a corresponding node ID, false otherwise\n     */\n    hasCorrespondingNodeIds(nodeId: string): boolean {\n        return this.isCustomSource(nodeId) || this.isSupportedSource(nodeId);\n    }\n\n    private getIncludesFields(includeFields: string[]): string[] {\n        return ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n    }\n\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnDestroy, OnInit, Output, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    ContentService, DataCellEvent, DataColumn, DataRowActionEvent, DataSorting, DataTableComponent,\n    DisplayMode, ObjectDataColumn, PaginatedComponent, AppConfigService, DataColumnListComponent,\n    UserPreferencesService, PaginationModel, ThumbnailService\n} from '@alfresco/adf-core';\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\nimport { Subject, BehaviorSubject, Subscription, of } from 'rxjs';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\nimport { CustomResourcesService } from './../services/custom-resources.service';\nimport { NavigableComponentInterface } from '../../breadcrumb/navigable-component.interface';\n\nexport enum PaginationStrategy {\n    Finite,\n    Infinite\n}\n\n@Component({\n    selector: 'adf-document-list',\n    styleUrls: ['./document-list.component.scss'],\n    templateUrl: './document-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentListComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, PaginatedComponent, NavigableComponentInterface {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n    static DEFAULT_PAGE_SIZE: number = 20;\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Include additional information about the node in the server request.for example: association, isLink, isLocked and others. */\n    @Input()\n    includeFields: string[];\n\n    /** Change the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** Define a set of CSS styles styles to apply depending on the permission\n     * of the user on that node. See the Permission Style model\n     * page for further details and examples.\n     */\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    /** The default route for all the location-based columns (if declared). */\n    @Input()\n    locationFormat: string = '/';\n\n    /** Toggles navigation to folder content or file preview */\n    @Input()\n    navigate: boolean = true;\n\n    /** Toggles the header */\n    @Input()\n    showHeader: boolean = true;\n\n    /** User interaction for folder navigation or file preview.\n     * Valid values are \"click\" and \"dblclick\". Default value: \"dblclick\"\n     */\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    /** Show document thumbnails rather than icons */\n    @Input()\n    thumbnails: boolean = false;\n\n    /** Row selection mode. Can be null, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    /** Toggles multiselect mode */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles content actions for each row */\n    @Input()\n    contentActions: boolean = false;\n\n    /** Position of the content actions dropdown menu. Can be set to \"left\" or \"right\". */\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    /** Toggles context menus for each row */\n    @Input()\n    contextMenuActions: boolean = false;\n\n    /** Custom image for empty folder. Default value: './assets/images/empty_doc_lib.svg' */\n    @Input()\n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    /** Toggle file drop support for rows (see Upload Directive for further details */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** Defines default sorting. The format is an array of 2 strings `[key, direction]`\n     * i.e. `['name', 'desc']` or `['name', 'asc']`. Set this value only if you want to\n     * override the default sorting detected by the component based on columns.\n     */\n    @Input()\n    sorting = ['name', 'asc'];\n\n    /** Defines sorting mode. Can be either `client` or `server`. */\n    @Input()\n    sortingMode = 'client';\n\n    /** The inline style to apply to every row. See\n     * the Angular NgStyle\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row */\n    @Input()\n    rowStyleClass: string;\n\n    /** Toggles the loading state and animated spinners for the component. Used in\n     * combination with `navigate=false` to perform custom navigation and loading\n     * state indication.\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Custom row filter */\n    @Input()\n    rowFilter: any | null = null;\n\n    /** Custom image resolver */\n    @Input()\n    imageResolver: any | null = null;\n\n    /** The ID of the folder node to display or a reserved string alias for special sources */\n    @Input()\n    currentFolderId: string = null;\n\n    /**\n     * Currently displayed folder node\n     * @deprecated 2.3.0 - use currentFolderId or node\n     */\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    /** The Document list will show all the nodes contained in the NodePaging entity */\n    @Input()\n    node: NodePaging = null;\n\n    /** Default value is stored into user preference settings use it only if you are not using the pagination */\n    @Input()\n    maxItems: number;\n\n    /**\n     * Number of elements to skip over for pagination purposes\n     * @deprecated 2.3.0 - define it in pagination\n     */\n    @Input()\n    skipCount: number = 0;\n\n    /**\n     * Set document list to work in infinite scrolling mode\n     * @deprecated 2.3.0\n     */\n    @Input()\n    enableInfiniteScrolling: boolean = false;\n\n    /** Emitted when the user clicks a list node */\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the user double-clicks a list node */\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the current display folder changes */\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    /** Emitted when the user acts upon files with either single or double click\n     * (depends on `navigation-mode`). Useful for integration with the\n     * Viewer component.\n     */\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the Document List has loaded all items and is ready for use */\n    @Output()\n    ready: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when the API fails to get the Document List data */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('dataTable')\n    dataTable: DataTableComponent;\n\n    actions: ContentActionModel[] = [];\n    emptyFolderTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n    noPermission: boolean = false;\n    selection = new Array<MinimalNodeEntity>();\n\n    private _pagination: BehaviorSubject<PaginationModel>;\n    private layoutPresets = {};\n    private subscriptions: Subscription[] = [];\n    private rowMenuCache: { [key: string]: ContentActionModel[] } = {};\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private appConfig: AppConfigService,\n                private preferences: UserPreferencesService,\n                private customResourcesService: CustomResourcesService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    getContextActions(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            let actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map((currentAction: ContentActionModel) => {\n                    return {\n                        model: currentAction,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    /** @deprecated 2.3.0 define it in pagination */\n    get supportedPageSizes(): number[] {\n        return this.preferences.getDefaultPageSizes();\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\n\n    get pagination(): BehaviorSubject<PaginationModel> {\n        let maxItems = this.preferences.paginationSize;\n\n        if (!this._pagination) {\n            if (this.maxItems) {\n                maxItems = this.maxItems;\n            }\n\n            let defaultPagination = <PaginationModel> {\n                maxItems: maxItems,\n                skipCount: 0,\n                totalItems: 0,\n                hasMoreItems: false\n            };\n\n            this._pagination = new BehaviorSubject<PaginationModel>(defaultPagination);\n        }\n\n        return this._pagination;\n    }\n\n    isEmptyTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.emptyFolderTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isNoPermissionTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.noPermissionTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    ngOnInit() {\n        this.rowMenuCache = {};\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.documentListService, this.thumbnailService, null, this.getDefaultSorting(), this.sortingMode);\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this.rowFilter) {\n            this.data.setFilter(this.rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.subscriptions.push(\n            this.contextActionHandler.subscribe(val => this.contextActionCallback(val))\n        );\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.setTableSchema();\n    }\n\n    private setTableSchema() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map(c => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.documentListService, this.thumbnailService, schema, this.getDefaultSorting(), this.sortingMode);\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        let columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.resetSelection();\n        if (this.data) {\n            this.data.thumbnails = this.thumbnails;\n\n        }\n        if (changes.sortingMode && !changes.sortingMode.firstChange && this.data) {\n            this.data.sortingMode = changes.sortingMode.currentValue;\n        }\n\n        if (changes.sorting && !changes.sorting.firstChange && this.data) {\n            const newValue = changes.sorting.currentValue;\n            if (newValue && newValue.length > 0) {\n                const [key, direction] = newValue;\n                this.data.setSorting(new DataSorting(key, direction));\n            }\n        }\n\n        if (changes.folderNode && changes.folderNode.currentValue) {\n            this.currentFolderId = changes.folderNode.currentValue.id;\n            this.resetNewFolderPagination();\n            this.loadFolder();\n        } else if (changes.currentFolderId &&\n            changes.currentFolderId.currentValue &&\n            changes.currentFolderId.currentValue !== changes.currentFolderId.previousValue) {\n            this.resetNewFolderPagination();\n            this.loadFolder();\n        } else if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                this.data.loadPage(changes.node.currentValue);\n                this.onDataReady(changes.node.currentValue);\n            } else if (changes.rowFilter && changes.rowFilter.currentValue !== changes.rowFilter.previousValue) {\n                this.data.setFilter(changes.rowFilter.currentValue);\n                if (this.currentFolderId) {\n                    this.loadFolderNodesByFolderNodeId(this.currentFolderId, this.pagination.getValue()).catch(err => this.error.emit(err));\n                }\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload() {\n        this.ngZone.run(() => {\n            this.resetSelection();\n            if (this.node) {\n                this.data.loadPage(this.node);\n                this.onDataReady(this.node);\n            } else {\n                this.loadFolder();\n            }\n        });\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    getNodeActions(node: MinimalNodeEntity | any): ContentActionModel[] {\n        if (node && node.entry) {\n            let target = null;\n\n            if (node.entry.isFile) {\n                target = 'document';\n            } else if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                const actions = this.rowMenuCache[node.entry.id];\n                if (actions) {\n                    actions.forEach(action => {\n                        this.refreshAction(action, node);\n                    });\n                    return actions;\n                }\n\n                let actionsByTarget = this.actions\n                    .filter(entry => {\n                        const isVisible = (typeof entry.visible === 'function')\n                            ? entry.visible(node)\n                            : entry.visible;\n\n                        return isVisible && entry.target.toLowerCase() === target;\n                    })\n                    .map(action => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.refreshAction(action, node);\n                });\n\n                this.rowMenuCache[node.entry.id] = actionsByTarget;\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    private refreshAction(action: ContentActionModel, node: MinimalNodeEntity) {\n        action.disabled = this.isActionDisabled(action, node);\n        action.visible = this.isActionVisible(action, node);\n    }\n\n    private isActionVisible(action: ContentActionModel, node: MinimalNodeEntity): boolean {\n        if (typeof action.visible === 'function') {\n            return action.visible(node);\n        }\n\n        return action.visible;\n    }\n\n    private isActionDisabled(action: ContentActionModel, node: MinimalNodeEntity): boolean {\n        if (typeof action.disabled === 'function') {\n            return action.disabled(node);\n        }\n\n        if (action.permission && action.disableWithNoPermission && !this.contentService.hasPermission(node.entry, action.permission)) {\n            return true;\n        }\n\n        return action.disabled;\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    performNavigation(node: MinimalNodeEntity): boolean {\n        if (this.canNavigateFolder(node)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n\n    performCustomSourceNavigation(node: MinimalNodeEntity): boolean {\n        if (this.customResourcesService.isCustomSource(this.currentFolderId)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n\n    updateFolderData(node: MinimalNodeEntity): void {\n        this.resetNewFolderPagination();\n        this.currentFolderId = node.entry.id;\n        this.reload();\n        this.folderChange.emit(new NodeEntryEvent(node.entry));\n    }\n\n    updateCustomSourceData(nodeId: string): void {\n        this.folderNode = null;\n        this.currentFolderId = nodeId;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: MinimalNodeEntity, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = of(true);\n            }\n\n            if (typeof action.execute === 'function' && handlerSub) {\n                handlerSub.subscribe(() => {\n                    action.execute(node);\n                });\n            }\n        }\n    }\n\n    loadFolder() {\n        if (!this.pagination.getValue().merge) {\n            this.loading = true;\n        }\n\n        if (!this.hasCustomLayout) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n\n        if (this.folderNode) {\n            return this.loadFolderNodesByFolderNodeId(this.folderNode.id, this.pagination.getValue())\n                .catch(err => this.handleError(err));\n        } else {\n            this.loadFolderByNodeId(this.currentFolderId);\n        }\n    }\n\n    loadFolderByNodeId(nodeId: string) {\n        if (this.customResourcesService.isCustomSource(nodeId)) {\n            this.updateCustomSourceData(nodeId);\n            this.customResourcesService.loadFolderByNodeId(nodeId, this.pagination.getValue(), this.includeFields)\n                .subscribe((page: NodePaging) => {\n                    this.onPageLoaded(page);\n                }, err => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.documentListService\n                .getFolderNode(nodeId, this.includeFields)\n                .subscribe((node: MinimalNodeEntryEntity) => {\n                    this.folderNode = node;\n                    return this.loadFolderNodesByFolderNodeId(node.id, this.pagination.getValue())\n                        .catch(err => this.handleError(err));\n                }, err => {\n                    this.handleError(err);\n                });\n        }\n    }\n\n    loadFolderNodesByFolderNodeId(id: string, pagination: PaginationModel): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            this.documentListService\n                .getFolder(null, {\n                    maxItems: pagination.maxItems,\n                    skipCount: pagination.skipCount,\n                    rootFolderId: id\n                }, this.includeFields)\n                .subscribe(\n                    nodePaging => {\n                        this.data.loadPage(<NodePaging> nodePaging, this.pagination.getValue().merge);\n                        this.loading = false;\n                        this.onDataReady(nodePaging);\n                        resolve(true);\n                    }, err => {\n                        this.handleError(err);\n                    });\n        });\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n        this.noPermission = false;\n    }\n\n    onPageLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            this.data.loadPage(nodePaging, this.pagination.getValue().merge);\n            this.loading = false;\n            this.onDataReady(nodePaging);\n        }\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: MinimalNodeEntity) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeDblClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            let action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    canNavigateFolder(node: MinimalNodeEntity): boolean {\n        let canNavigateFolder: boolean = false;\n\n        if (this.customResourcesService.isCustomSource(this.currentFolderId)) {\n            canNavigateFolder = false;\n        } else if (node && node.entry && node.entry.isFolder) {\n            canNavigateFolder = true;\n        }\n\n        return canNavigateFolder;\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n    }\n\n    private onDataReady(nodePaging: NodePaging) {\n        this.ready.emit(nodePaging);\n\n        this.pagination.next(nodePaging.list.pagination);\n    }\n\n    updatePagination(pagination: PaginationModel) {\n        this.pagination.next(pagination);\n        this.reload();\n    }\n\n    navigateTo(nodeId: string) {\n        this.currentFolderId = nodeId;\n        this.resetNewFolderPagination();\n        this.loadFolder();\n        this.folderChange.emit(new NodeEntryEvent({ id: nodeId }));\n    }\n\n    private resetNewFolderPagination() {\n        this.folderNode = null;\n        this.pagination.value.skipCount = 0;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private handleError(err: any) {\n        if (err.message) {\n            if (JSON.parse(err.message).error.statusCode === 403) {\n                this.loading = false;\n                this.noPermission = true;\n            }\n        }\n        this.error.emit(err);\n\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { Component } from '@angular/core';\n\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-columns',\n    template: ''\n})\nexport class ContentColumnListComponent {\n\n    constructor(private documentList: DocumentListComponent, private logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n\n    /**\n     * Registers column model within the parent document list component.\n     * @param column Column definition model to register.\n     */\n    registerColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            let columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\n\n@Component({\n    selector: 'content-column',\n    template: ''\n})\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = false;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    constructor(private list: ContentColumnListComponent, private logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity, MinimalNodeEntity } from 'alfresco-js-api';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material';\n\nimport { DocumentListService } from './document-list.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\nimport { NodeDownloadDirective } from '../../directives/node-download.directive';\n\n@Injectable()\nexport class NodeActionsService {\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private contentDialogService: ContentNodeDialogService,\n                public dialogRef: MatDialog,\n                public content: ContentService,\n                private documentListService?: DocumentListService,\n                private apiService?: AlfrescoApiService,\n                private dialog?: MatDialog) {}\n\n    downloadNode(node: MinimalNodeEntity) {\n        new NodeDownloadDirective(this.apiService, this.dialog)\n            .downloadNode(node);\n    }\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: string, type: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        this.contentDialogService\n            .openCopyMoveDialog(action, contentEntry, permission)\n            .subscribe((selections: MinimalNodeEntryEntity[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                    observable.next.bind(observable, `OPERATION.SUCCESS.${type.toUpperCase()}.${action.toUpperCase()}`),\n                    observable.error.bind(observable)\n                    );\n            },\n            (error) => {\n                observable.error(error);\n                return observable;\n            });\n        return observable;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\n\n@Injectable()\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private contentNodeDialogService: ContentNodeDialogService,\n                private translation: TranslationService,\n                private documentListService?: DocumentListService,\n                private contentService?: ContentService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler for an action.\n     * @param key Identifier of the action\n     * @returns The handler for the action\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler for an action.\n     * @param key Identifier of the action\n     * @param handler Handler for the action\n     * @returns False if the key was an empty/null string, true otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if actions can be executed for an item.\n     * @param obj Item to receive an action\n     * @returns True if the action can be executed on this item, false otherwise\n     */\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n        this.handlers['lock'] = this.lockNode.bind(this);\n    }\n\n    private lockNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        return this.contentNodeDialogService.openLockNodeDialog(node.entry);\n    }\n\n    private downloadNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: MinimalNodeEntity, target?: any, permission?: string): Observable<any> {\n        let handlerObservable;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasPermission(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({\n                    type: 'content',\n                    action: 'delete',\n                    permission: permission\n                }));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable()\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: ContentService,\n                private translation: TranslationService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler function for an action.\n     * @param key Identifier for the action\n     * @returns The handler function\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler function for an action.\n     * @param key Identifier for the action\n     * @param handler The new handler function\n     * @returns True if the key was a valid action identifier, false otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if an action is available for a particular item.\n     * @param obj Item to check\n     * @returns True if the action is available, false otherwise\n     */\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n    }\n\n    private downloadNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: MinimalNodeEntity, target?: any, permission?: string): Observable<any> {\n        let handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasPermission(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n\n                    let message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n\n    unregisterAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            const idx = this.documentList.actions.indexOf(action);\n            if (idx >= 0) {\n                this.documentList.actions.splice(idx, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel, ContentActionTarget } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** The title of the action as shown in the menu. */\n    @Input()\n    title: string = 'Action';\n\n    /** The name of the icon to display next to the menu command (can be left blank). */\n    @Input()\n    icon: string;\n\n    /** Visibility state (see examples). */\n    @Input()\n    visible: boolean | Function = true;\n\n    /** System actions. Can be \"delete\", \"download\", \"copy\" or \"move\". */\n    @Input()\n    handler: string;\n\n    /** Type of item that the action applies to. Can be \"document\" or \"folder\" */\n    @Input()\n    target: string = ContentActionTarget.All;\n\n    /** The permission type. */\n    @Input()\n    permission: string;\n\n    /** Should this action be disabled in the menu if the user doesn't have permission for it? */\n    @Input()\n    disableWithNoPermission: boolean;\n\n    /** Is the menu item disabled? */\n    @Input()\n    disabled: boolean | Function = false;\n\n    /** Emitted when the user selects the action from the menu. */\n    @Output()\n    execute = new EventEmitter();\n\n    /** Emitted when a permission error occurs */\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    /** Emitted when an error occurs during the action.\n     * Applies to copy and move actions.\n     */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the action succeeds with the success string message.\n     * Applies to copy, move and delete actions.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    documentActionModel: ContentActionModel;\n    folderActionModel: ContentActionModel;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n    }\n\n    ngOnInit() {\n        if (this.target === ContentActionTarget.All) {\n            this.folderActionModel = this.generateAction(ContentActionTarget.Folder);\n            this.documentActionModel = this.generateAction(ContentActionTarget.Document);\n        } else {\n            this.documentActionModel = this.generateAction(this.target);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.visible && !changes.visible.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.visible = changes.visible.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.visible = changes.visible.currentValue;\n            }\n        }\n\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.disabled = changes.disabled.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.disabled = changes.disabled.currentValue;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.documentActionModel) {\n            this.unregister(this.documentActionModel);\n            this.documentActionModel = null;\n        }\n\n        if (this.folderActionModel) {\n            this.unregister(this.folderActionModel);\n            this.folderActionModel = null;\n        }\n    }\n\n    register(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.registerAction(model);\n        }\n        return false;\n    }\n\n    unregister(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.unregisterAction(model);\n        }\n        return false;\n    }\n\n    private generateAction(target: string): ContentActionModel {\n        const model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: target,\n            disabled: this.disabled,\n            visible: this.visible\n        });\n        if (this.handler) {\n            model.handler = this.getSystemHandler(target, this.handler);\n        }\n\n        if (this.execute) {\n            model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register(model);\n        return model;\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            target = target.toLowerCase();\n\n            if (target === ContentActionTarget.Document) {\n                if (this.documentActions) {\n                    this.subscriptions.push(\n                        this.documentActions.permissionEvent.subscribe(permission => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.documentActions.error.subscribe(errors => {\n                            this.error.emit(errors);\n                        }),\n                        this.documentActions.success.subscribe(message => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (target === ContentActionTarget.Folder) {\n                if (this.folderActions) {\n                    this.subscriptions.push(\n                        this.folderActions.permissionEvent.subscribe(permission => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.folderActions.error.subscribe(errors => {\n                            this.error.emit(errors);\n                        }),\n                        this.folderActions.success.subscribe(message => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'empty-folder-content'\n})\nexport class EmptyFolderContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.emptyFolderTemplate = this.template;\n        this.documentList.dataTable.noContentTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'no-permission-content'\n})\nexport class NoPermissionContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.noPermissionTemplate = this.template;\n        this.documentList.dataTable.noPermissionTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements MinimalNodeEntity {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements MinimalNodeEntryEntity {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n    aspectNames: string[];\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsEnum } from '@alfresco/adf-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: PermissionsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: PermissionsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus, NodesApiService, TranslationService, UploadService } from '@alfresco/adf-core';\nimport { Component, ContentChild, Input, Output, TemplateRef, EventEmitter } from '@angular/core';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-file-uploading-list',\n    templateUrl: './file-uploading-list.component.html',\n    styleUrls: ['./file-uploading-list.component.scss']\n})\nexport class FileUploadingListComponent {\n\n    FileUploadStatus = FileUploadStatus;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    files: FileModel[] = [];\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private uploadService: UploadService,\n        private nodesApi: NodesApiService,\n        private translateService: TranslationService) {\n    }\n\n    /**\n     * Cancel file upload\n     *\n     * @param file File model to cancel upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    cancelFile(file: FileModel): void {\n        this.uploadService.cancelUpload(file);\n    }\n\n    removeFile(file: FileModel): void {\n        this.deleteNode(file)\n            .subscribe(() => {\n                if ( file.status === FileUploadStatus.Error) {\n                    this.notifyError(file);\n                }\n\n                this.uploadService.cancelUpload(file);\n            });\n    }\n\n    /**\n     * Call the appropriate method for each file, depending on state\n     */\n    cancelAllFiles(): void {\n        this.getUploadingFiles()\n            .forEach((file) => this.uploadService.cancelUpload(file));\n\n        const deletedFiles = this.files\n            .filter((file) => file.status === FileUploadStatus.Complete)\n            .map((file) => this.deleteNode(file));\n\n        forkJoin(...deletedFiles)\n            .subscribe((files: FileModel[]) => {\n                const errors = files\n                    .filter((file) => file.status === FileUploadStatus.Error);\n\n                if (errors.length) {\n                    this.notifyError(...errors);\n                }\n\n                this.uploadService.cancelUpload(...files);\n            });\n    }\n\n    /**\n     * Checks if all the files are uploaded false if there is at least one file in Progress | Starting | Pending\n     */\n    isUploadCompleted(): boolean {\n         return !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files\n                .some(({status}) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n                );\n    }\n\n    /**\n     * Check if all the files are Cancelled | Aborted | Error. false if there is at least one file in uploading states\n     */\n    isUploadCancelled(): boolean {\n        return !!this.files.length &&\n            this.files\n                .every(({status}) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n                );\n    }\n\n    private deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi\n            .deleteNode(id, { permanent: true })\n            .pipe(\n                map(() => {\n                    file.status = FileUploadStatus.Deleted;\n                    return file;\n                }),\n                catchError(() => {\n                    file.status = FileUploadStatus.Error;\n                    return of(file);\n                })\n            );\n    }\n\n    private notifyError(...files: FileModel[]) {\n        let messageError: string = null;\n\n        if (files.length === 1) {\n            messageError = this.translateService\n                .instant(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                    { fileName: files[0].name}\n                );\n        } else {\n            messageError = this.translateService\n                .instant(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                    { total: files.length }\n                );\n        }\n\n        this.error.emit(messageError);\n    }\n\n    private getUploadingFiles() {\n        return this.files.filter((item) => {\n            if (\n                item.status === FileUploadStatus.Pending ||\n                item.status === FileUploadStatus.Progress ||\n                item.status === FileUploadStatus.Starting\n            ) {\n                return item;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel, FileUploadCompleteEvent, FileUploadDeleteEvent,\n    FileUploadErrorEvent, FileUploadStatus, UploadService\n} from '@alfresco/adf-core';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription, merge } from 'rxjs';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\n\n// @deprecated file-uploading-dialog TODO remove in 3.0.0\n@Component({\n    selector: 'adf-file-uploading-dialog, file-uploading-dialog',\n    templateUrl: './file-uploading-dialog.component.html',\n    styleUrls: ['./file-uploading-dialog.component.scss']\n})\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    @ViewChild('uploadList')\n    uploadList: FileUploadingListComponent;\n\n    /** Dialog position. Can be 'left' or 'right'. */\n    @Input()\n    position: string = 'right';\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\n\n    private listSubscription: Subscription;\n    private counterSubscription: Subscription;\n    private fileUploadSubscription: Subscription;\n    private errorSubscription: Subscription;\n\n    constructor(private uploadService: UploadService,\n                private changeDetecor: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.listSubscription = this.uploadService\n            .queueChanged.subscribe((fileList: FileModel[]) => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length) {\n                    this.isDialogActive = true;\n                }\n            });\n\n        this.counterSubscription = merge(\n                this.uploadService.fileUploadComplete,\n                this.uploadService.fileUploadDeleted\n            )\n            .subscribe((event: (FileUploadDeleteEvent | FileUploadCompleteEvent)) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .subscribe((event: FileUploadErrorEvent) => {\n                this.totalErrors = event.totalError;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService\n            .fileUpload.subscribe(() => {\n                this.changeDetecor.detectChanges();\n            });\n\n        this.uploadService.fileDeleted.subscribe((objId) => {\n            if (this.filesUploadingList) {\n                let file = this.filesUploadingList.find((item) => {\n                    return item.data.entry.id === objId;\n                });\n                if (file) {\n                    file.status = FileUploadStatus.Cancelled;\n                    this.changeDetecor.detectChanges();\n                }\n            }\n        });\n    }\n\n    /**\n     * Toggle confirmation message.\n     */\n    toggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n\n    /**\n     * Cancel uploads and hide confiramtion\n     */\n    cancelAllUploads() {\n        this.toggleConfirmation();\n\n        this.uploadList.cancelAllFiles();\n    }\n\n    /**\n     * Toggle dialog minimized state.\n     */\n    toggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetecor.detectChanges();\n    }\n\n    /**\n     * Dismiss dialog\n     */\n    close(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetecor.detectChanges();\n    }\n\n    ngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'adf-file-uploading-list-row',\n    templateUrl: './file-uploading-list-row.component.html',\n    styleUrls: [ './file-uploading-list-row.component.scss' ]\n})\nexport class FileUploadingListRowComponent {\n    @Input()\n    file: FileModel;\n\n    @Output()\n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    @Output()\n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n\n    onCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n\n    onRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, UploadService } from '@alfresco/adf-core';\nimport { EventEmitter } from '@angular/core';\n\nexport class UploadFilesEvent {\n    private isDefaultPrevented: boolean = false;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n    constructor(\n        public files: Array<FileModel>,\n        private uploadService: UploadService,\n        private callback: EventEmitter<any>\n    ) {}\n\n    pauseUpload() {\n        this.preventDefault();\n    }\n\n    resumeUpload() {\n        if (this.files && this.files.length > 0) {\n            this.uploadService.addToQueue(...this.files);\n            this.uploadService.uploadFilesInTheQueue(this.callback);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileInfo } from '@alfresco/adf-core';\nimport { EventEmitter, Input, Output, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { UploadService, TranslationService } from '@alfresco/adf-core';\nimport { Subscription } from 'rxjs';\nimport { UploadFilesEvent } from '../upload-files.event';\n\nexport abstract class UploadBase implements OnInit, OnDestroy {\n\n    /** Sets a limit on the maximum size (in bytes) of a file to be uploaded.\n     * Has no effect if undefined.\n     */\n    @Input()\n    maxFilesSize: number;\n\n    /** The ID of the root. Use the nodeId for\n     * Content Services or the taskId/processId for Process Services.\n     */\n    @Input()\n    rootFolderId: string = '-root-';\n\n    /** Toggles component disabled state (if there is no node permission checking). */\n    @Input()\n    disabled: boolean = false;\n\n    /** Filter for accepted file types. */\n    @Input()\n    acceptedFilesType: string = '*';\n\n    /** Toggles versioning. */\n    @Input()\n    versioning: boolean = false;\n\n    /** majorVersion boolean field to true to indicate a major version should be created. */\n    @Input()\n    majorVersion: boolean = false;\n\n    /** When you overwrite existing content, you can use the comment field to add a version comment that appears in the version history */\n    @Input()\n    comment: string;\n\n    /** Custom node type for uploaded file */\n    @Input()\n    nodeType: string = 'cm:content';\n\n    /** Emitted when the file is uploaded successfully. */\n    @Output()\n    success = new EventEmitter();\n\n    /**\n     * Emitted when a folder is created.\n     * @deprecated 2.4.0 No longer used by the framework\n     */\n    @Output()\n    createFolder = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the upload begins. */\n    @Output()\n    beginUpload = new EventEmitter<UploadFilesEvent>();\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                protected ngZone: NgZone) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.uploadService.fileUploadError.subscribe((error) => {\n                this.error.emit(error);\n            })\n        );\n\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    /**\n     * Upload a list of file in the specified path\n     * @param files\n     * @param path\n     */\n    uploadFiles(files: File[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((file: File) => {\n                return this.createFileModel(file, this.rootFolderId, (file.webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''));\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    uploadFilesInfo(files: FileInfo[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((fileInfo: FileInfo) => {\n                return this.createFileModel(fileInfo.file, this.rootFolderId, fileInfo.relativeFolder);\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    private uploadQueue(files: FileModel[]) {\n        let filteredFiles = files\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        this.ngZone.run(() => {\n            const event = new UploadFilesEvent(\n                [...filteredFiles],\n                this.uploadService,\n                this.success\n            );\n            this.beginUpload.emit(event);\n\n            if (!event.defaultPrevented) {\n                if (filteredFiles.length > 0) {\n                    this.uploadService.addToQueue(...filteredFiles);\n                    this.uploadService.uploadFilesInTheQueue(this.success);\n                }\n            }\n        });\n    }\n\n    /**\n     * Checks if the given file is allowed by the extension filters\n     *\n     * @param file FileModel\n     */\n    protected isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map(ext => ext.replace(/^\\./, ''));\n\n        if (allowedExtensions.indexOf(file.extension) !== -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Creates FileModel from File\n     *\n     * @param file\n     */\n    protected createFileModel(file: File, parentId: string, path: string, id?: string): FileModel {\n        return new FileModel(file, {\n            comment: this.comment,\n            majorVersion: this.majorVersion,\n            newVersion: this.versioning,\n            parentId: parentId,\n            path: path,\n            nodeType: this.nodeType\n        }, id);\n    }\n\n    protected isFileSizeAllowed(file: FileModel) {\n        let isFileSizeAllowed = true;\n        if (this.isMaxFileSizeDefined()) {\n            isFileSizeAllowed = this.isFileSizeCorrect(file);\n        }\n\n        return isFileSizeAllowed;\n    }\n\n    protected isMaxFileSizeDefined() {\n        return this.maxFilesSize !== undefined && this.maxFilesSize !== null;\n    }\n\n    protected isFileSizeCorrect(file: FileModel) {\n        return this.maxFilesSize >= 0 && file.size <= this.maxFilesSize;\n    }\n\n    /**\n     * Checks if the given file is an acceptable size\n     *\n     * @param file FileModel\n     */\n    private isFileSizeAcceptable(file: FileModel): boolean {\n        let acceptableSize = true;\n\n        if (!this.isFileSizeAllowed(file)) {\n            acceptableSize = false;\n\n            const message = this.translationService.instant(\n                'FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE',\n                { fileName: file.name }\n            );\n\n            this.error.emit(message);\n        }\n\n        return acceptableSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentService, EXTENDIBLE_COMPONENT, FileUtils,\n    LogService, NodePermissionSubject, TranslationService, UploadService, PermissionsEnum\n} from '@alfresco/adf-core';\nimport {\n    Component, EventEmitter, forwardRef, Input,\n    OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation, NgZone\n} from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Subject } from 'rxjs';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadButtonComponent extends UploadBase implements OnInit, OnChanges, NodePermissionSubject {\n\n    /** Allows/disallows upload folders (only for Chrome). */\n    @Input()\n    uploadFolders: boolean = false;\n\n    /** Allows/disallows multiple files */\n    @Input()\n    multipleFiles: boolean = false;\n\n    /** Defines the text of the upload button. */\n    @Input()\n    staticTitle: string;\n\n    /** Custom tooltip text. */\n    @Input()\n    tooltip: string = null;\n\n    /** Emitted when create permission is missing. */\n    @Output()\n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\n\n    private hasPermission: boolean = false;\n\n    protected permissionValue: Subject<boolean> = new Subject<boolean>();\n\n    constructor(protected uploadService: UploadService,\n                private contentService: ContentService,\n                protected translationService: TranslationService,\n                protected logService: LogService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    ngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasPermission = permission;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n\n    isButtonDisabled(): boolean {\n        return this.disabled ? true : undefined;\n    }\n\n    onFilesAdded($event: any): void {\n        let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasPermission) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    onDirectoryAdded($event: any): void {\n        if (this.hasPermission) {\n            let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    checkPermission() {\n        if (this.rootFolderId) {\n            let opts: any = {\n                includeSource: true,\n                include: ['allowableOperations']\n            };\n\n            this.contentService.getNode(this.rootFolderId, opts).subscribe(\n                res => this.permissionValue.next(this.nodeHasPermission(res.entry, PermissionsEnum.CREATE)),\n                error => this.error.emit(error)\n            );\n        }\n    }\n\n    nodeHasPermission(node: MinimalNodeEntryEntity, permission: PermissionsEnum | string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsEnum  } from '@alfresco/adf-core';\nimport { Component, forwardRef, Input, OnChanges, ViewEncapsulation, OnInit } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { UploadButtonComponent } from './upload-button.component';\nimport { FileModel, EXTENDIBLE_COMPONENT } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-upload-version-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadVersionButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadVersionButtonComponent extends UploadButtonComponent implements OnChanges, OnInit {\n\n    /** (**Required**) The node to be versioned. */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    protected createFileModel(file: File): FileModel {\n        const fileModel = super.createFileModel(file, this.rootFolderId, (file.webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''), this.node.id);\n\n        if (!this.isFileAcceptable(fileModel)) {\n            const message = this.translationService.instant('FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION');\n            this.error.emit(message);\n        }\n\n        return fileModel;\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.checkPermission();\n    }\n\n    checkPermission() {\n        this.permissionValue.next(this.nodeHasPermission(this.node, PermissionsEnum.UPDATE));\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    EXTENDIBLE_COMPONENT, FileInfo, FileModel, FileUtils, NodePermissionSubject,\n    NotificationService, TranslationService, UploadService, ContentService, PermissionsEnum\n} from '@alfresco/adf-core';\nimport { Component, forwardRef, Input, ViewEncapsulation, NgZone } from '@angular/core';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-drag-area',\n    templateUrl: './upload-drag-area.component.html',\n    styleUrls: ['./upload-drag-area.component.css'],\n    host: { 'class': 'adf-upload-drag-area' },\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadDragAreaComponent extends UploadBase implements NodePermissionSubject {\n\n    /**\n     * ID of parent folder node\n     * @deprecated 2.4.0 - use rootFolderId ID of parent folder node\n     */\n    @Input()\n    set parentId(nodeId: string) {\n        this.rootFolderId = nodeId;\n    }\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                private notificationService: NotificationService,\n                private contentService: ContentService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    /**\n     * Method called when files are dropped in the drag area.\n     *\n     * @param files - files dropped in the drag area.\n     */\n    onFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            this.uploadFiles(files);\n        }\n    }\n\n    /**\n     * Called when the file are dropped in the drag area.\n     * @deprecated in 2.4.0: use `onFilesDropped` instead\n     * @param item - FileEntity\n     */\n    onFilesEntityDropped(item: any): void {\n        if (!this.disabled) {\n            item.file((file: File) => {\n                // const fileModel = this.createFileModel(file, this.rootFolderId, item.fullPath.replace(item.name, ''));\n\n                this.uploadFiles([file]);\n            });\n        }\n    }\n\n    /**\n     * Called when a folder are dropped in the drag area\n     *\n     * @param folder - name of the dropped folder\n     */\n    onFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flattern(folder).then(filesInfo => {\n                this.uploadFilesInfo(filesInfo);\n            });\n        }\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    showUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translationService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translationService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    /** Returns true or false considering the component options and node permissions */\n    isDroppable(): boolean {\n        return !this.disabled;\n    }\n\n    /**\n     * Handles 'upload-files' events raised by child components.\n     *\n     * @param event DOM event\n     */\n    onUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        let isAllowed: boolean = this.contentService.hasPermission(event.detail.data.obj.entry, PermissionsEnum.CREATE);\n        if (isAllowed) {\n            let fileInfo: FileInfo[] = event.detail.files;\n            if (this.isTargetNodeFolder(event)) {\n                const destinationFolderName = event.detail.data.obj.entry.name;\n                fileInfo.map((file) => file.relativeFolder = destinationFolderName ? destinationFolderName.concat(file.relativeFolder) : file.relativeFolder);\n            }\n            if (fileInfo && fileInfo.length > 0) {\n                this.uploadFilesInfo(fileInfo);\n            }\n        }\n    }\n\n    private isTargetNodeFolder(event: CustomEvent): boolean {\n        return event.detail.data.obj && event.detail.data.obj.entry.isFolder;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { FileUtils } from '@alfresco/adf-core';\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\n@Directive({\n    selector: '[file-draggable]'\n})\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    /** Enables/disables drag-and-drop functionality. */\n    @Input('file-draggable')\n    enabled: boolean = true;\n\n    /** Emitted when one or more files are dragged and dropped onto the draggable element. */\n    @Output()\n    filesDropped: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /**\n     * Emitted when one or more files are dragged and dropped onto the draggable element.\n     * @deprecated in 2.4.0: use `filesDropped` instead\n     */\n    @Output()\n    filesEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when a directory is dragged and dropped onto the draggable element. */\n    @Output()\n    folderEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    private cssClassName: string = 'file-draggable__input-focus';\n    private element: HTMLElement;\n\n    constructor(el: ElementRef, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n\n    /**\n     * Method called when files is dropped in the drag and drop area.\n     * @param event DOM event.\n     */\n    onDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            // Chrome, Edge, Firefox, Opera (Files + Folders)\n            const items = event.dataTransfer.items;\n            if (items) {\n                const files: File[] = [];\n\n                for (let i = 0; i < items.length; i++) {\n                    if (items[i].webkitGetAsEntry) {\n                        const item = items[i].webkitGetAsEntry();\n\n                        if (item) {\n                            if (item.isFile) {\n                                const file = items[i].getAsFile();\n\n                                if (file) {\n                                    files.push(file);\n                                }\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    }\n                }\n                if (files.length > 0) {\n                    this.filesDropped.emit(files);\n                }\n            } else {\n                // IE, Safari, Chrome, Edge, Firefox, Opera (Files only)\n                const files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag in.\n     *\n     * @param event - DOM event.\n     */\n    onDragEnter(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag out.\n     *\n     * @param event - DOM event.\n     */\n    onDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file is over the drag area.\n     *\n     * @param event\n     */\n    onDragOver(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Prevent default and stop propagation of the DOM event.\n     *\n     * @param $event - DOM event.\n     */\n    preventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadVersionButtonComponent } from './components/upload-version-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ]\n})\nexport class UploadModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { UploadModule } from '../upload/upload.module';\n\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { ContentColumnListComponent } from './components/content-column/content-column-list.component';\nimport { ContentColumnComponent } from './components/content-column/content-column.component';\nimport { DocumentListComponent } from './components/document-list.component';\n\nimport { EmptyFolderContentDirective } from './components/empty-folder/empty-folder-content.directive';\nimport { NoPermissionContentDirective } from './components/no-permission/no-permission-content.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ],\n    exports: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ]\n})\nexport class DocumentListModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport { QueryBody, RequestFacetFields, RequestFacetField, RequestSortDefinitionInner } from 'alfresco-js-api';\nimport { SearchCategory } from './search-category.interface';\nimport { FilterQuery } from './filter-query.interface';\nimport { SearchRange } from './search-range.interface';\nimport { SearchConfiguration } from './search-configuration.interface';\nimport { FacetQuery } from './facet-query.interface';\nimport { SearchSortingDefinition } from './search-sorting-definition.interface';\nimport { FacetField } from './facet-field.interface';\nimport { FacetFieldBucket } from './facet-field-bucket.interface';\n\n@Injectable()\nexport class SearchQueryBuilderService {\n\n    private _userQuery = '';\n\n    updated: Subject<QueryBody> = new Subject();\n    executed: Subject<any> = new Subject();\n\n    categories: Array<SearchCategory> = [];\n    queryFragments: { [id: string]: string } = {};\n    filterQueries: FilterQuery[] = [];\n    paging: { maxItems?: number; skipCount?: number } = null;\n    sorting: Array<SearchSortingDefinition> = [];\n\n    protected userFacetQueries: FacetQuery[] = [];\n    protected userFacetBuckets: { [key: string]: Array<FacetFieldBucket> } = {};\n\n    get userQuery(): string {\n        return this._userQuery;\n    }\n\n    set userQuery(value: string) {\n        value = (value || '').trim();\n        this._userQuery = value ? `(${value})` : '';\n    }\n\n    config: SearchConfiguration;\n\n    // TODO: to be supported in future iterations\n    ranges: { [id: string]: SearchRange } = {};\n\n    constructor(private appConfig: AppConfigService, private alfrescoApiService: AlfrescoApiService) {\n        this.resetToDefaults();\n    }\n\n    resetToDefaults() {\n        const template = this.appConfig.get<SearchConfiguration>('search');\n        if (template) {\n            this.config = JSON.parse(JSON.stringify(template));\n            this.categories = (this.config.categories || []).filter(category => category.enabled);\n            this.filterQueries = this.config.filterQueries || [];\n            this.userFacetBuckets = {};\n            this.userFacetQueries = [];\n            if (this.config.sorting) {\n                this.sorting = this.config.sorting.defaults || [];\n            }\n        }\n    }\n\n    addUserFacetQuery(query: FacetQuery) {\n        if (query) {\n            const existing = this.userFacetQueries.find(facetQuery => facetQuery.label === query.label);\n            if (existing) {\n                existing.query = query.query;\n            } else {\n                this.userFacetQueries.push({ ...query });\n            }\n        }\n    }\n\n    removeUserFacetQuery(query: FacetQuery) {\n        if (query) {\n            this.userFacetQueries = this.userFacetQueries\n                .filter(facetQuery => facetQuery.label !== query.label);\n        }\n    }\n\n    addUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            const existing = buckets.find(facetBucket => facetBucket.label === bucket.label);\n            if (!existing) {\n                buckets.push(bucket);\n            }\n            this.userFacetBuckets[field.field] = buckets;\n        }\n    }\n\n    getUserFacetBuckets(field: string) {\n        return this.userFacetBuckets[field] || [];\n    }\n\n    removeUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            this.userFacetBuckets[field.field] = buckets\n                .filter(facetBucket => facetBucket.label !== bucket.label);\n        }\n    }\n\n    addFilterQuery(query: string): void {\n        if (query) {\n            const existing = this.filterQueries.find(filterQuery => filterQuery.query === query);\n            if (!existing) {\n                this.filterQueries.push({ query: query });\n            }\n        }\n    }\n\n    removeFilterQuery(query: string): void {\n        if (query) {\n            this.filterQueries = this.filterQueries\n                .filter(filterQuery => filterQuery.query !== query);\n        }\n    }\n\n    getFacetQuery(label: string): FacetQuery {\n        if (label && this.hasFacetQueries) {\n            const result = this.config.facetQueries.queries.find(query => query.label === label);\n            if (result) {\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    getFacetField(label: string): FacetField {\n        if (label) {\n            const fields = this.config.facetFields.fields || [];\n            const result = fields.find(field => field.label === label);\n            if (result) {\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    update(): void {\n        const query = this.buildQuery();\n        this.updated.next(query);\n    }\n\n    async execute() {\n        const query = this.buildQuery();\n        if (query) {\n            const data = await this.alfrescoApiService.searchApi.search(query);\n            this.executed.next(data);\n        }\n    }\n\n    buildQuery(): QueryBody {\n        let query = this.getFinalQuery();\n\n        const include = this.config.include || [];\n        if (include.length === 0) {\n            include.push('path', 'allowableOperations');\n        }\n\n        if (query) {\n            const result: QueryBody = {\n                query: {\n                    query: query,\n                    language: 'afts'\n                },\n                include: include,\n                paging: this.paging,\n                fields: this.config.fields,\n                filterQueries: this.filterQueries,\n                facetQueries: this.facetQueries,\n                facetFields: this.facetFields,\n                sort: this.sort\n            };\n\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns primary sorting definition.\n     */\n    getPrimarySorting(): SearchSortingDefinition {\n        if (this.sorting && this.sorting.length > 0) {\n            return this.sorting[0];\n        }\n        return null;\n    }\n\n    /**\n     * Returns all pre-configured sorting options that users can choose from.\n     */\n    getSortingOptions(): SearchSortingDefinition[] {\n        if (this.config && this.config.sorting) {\n            return this.config.sorting.options || [];\n        }\n        return [];\n    }\n\n    /**\n     * Check if FacetQueries has been defined\n     */\n    get hasFacetQueries(): boolean {\n        if (this.config\n            && this.config.facetQueries\n            && this.config.facetQueries.queries\n            && this.config.facetQueries.queries.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    protected get sort(): RequestSortDefinitionInner[] {\n        return this.sorting.map(def => {\n            return {\n                type: def.type,\n                field: def.field,\n                ascending: def.ascending\n            };\n        });\n    }\n\n    protected get facetQueries(): FacetQuery[] {\n        if (this.hasFacetQueries) {\n            return this.config.facetQueries.queries.map(query => {\n                return <FacetQuery> { ...query };\n            });\n        }\n\n        return null;\n    }\n\n    protected getFinalQuery(): string {\n        let query = '';\n\n        this.categories.forEach(facet => {\n            const customQuery = this.queryFragments[facet.id];\n            if (customQuery) {\n                if (query.length > 0) {\n                    query += ' AND ';\n                }\n                query += `(${customQuery})`;\n            }\n        });\n\n        let result = [this.userQuery, query]\n            .filter(entry => entry)\n            .join(' AND ');\n\n        if (this.userFacetQueries && this.userFacetQueries.length > 0) {\n            const combined = this.userFacetQueries\n                .map(userQuery => userQuery.query)\n                .join(' OR ');\n            result += ` AND (${combined})`;\n        }\n\n        if (this.userFacetBuckets) {\n            Object.keys(this.userFacetBuckets).forEach(key => {\n                const subQuery = (this.userFacetBuckets[key] || [])\n                    .map(bucket => bucket.filterQuery)\n                    .join(' OR ');\n                if (subQuery) {\n                    if (result.length > 0) {\n                        result += ' AND ';\n                    }\n                    result += `(${subQuery})`;\n                }\n            });\n        }\n\n        return result;\n    }\n\n    protected get facetFields(): RequestFacetFields {\n        const facetFields = this.config.facetFields && this.config.facetFields.fields;\n\n        if (facetFields && facetFields.length > 0) {\n            return {\n                facets: facetFields.map(facet => <RequestFacetField> {\n                    field: facet.field,\n                    mincount: facet.mincount,\n                    label: facet.label,\n                    limit: facet.limit,\n                    offset: facet.offset,\n                    prefix: facet.prefix\n                })\n            };\n        }\n\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodePaging, QueryBody } from 'alfresco-js-api';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    exportAs: 'searchAutocomplete',\n    host: {\n        'class': 'adf-search'\n    }\n})\nexport class SearchComponent implements AfterContentInit, OnChanges {\n\n    @ViewChild('panel')\n    panel: ElementRef;\n\n    @ContentChild(TemplateRef)\n    template: TemplateRef<any>;\n\n    /** Function that maps an option's value to its display value in the trigger. */\n    @Input()\n    displayWith: ((value: any) => string) | null = null;\n\n    /** Maximum number of results to show in the search. */\n    @Input()\n    maxResults: number = 20;\n\n    /** Number of results to skip from the results pagination. */\n    @Input()\n    skipResults: number = 0;\n\n    /** @deprecated in 2.1.0 */\n    @Input()\n    queryBody: QueryBody;\n\n    /** Search term to use when executing the search. Updating this value will\n     * run a new search and update the results.\n     */\n    @Input()\n    searchTerm: string = '';\n\n    /** CSS class for display. */\n    @Input('class')\n    set classList(classList: string) {\n        if (classList && classList.length) {\n            classList.split(' ').forEach(className => this._classList[className.trim()] = true);\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Emitted when search results have fully loaded. */\n    @Output()\n    resultLoaded: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    showPanel: boolean = false;\n    results: NodePaging;\n\n    get isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    _isOpen: boolean = false;\n\n    keyPressedStream: Subject<string> = new Subject();\n\n    _classList: { [key: string]: boolean } = {};\n\n    constructor(private searchService: SearchService,\n                private _elementRef: ElementRef) {\n        this.keyPressedStream.asObservable()\n            .pipe(\n                debounceTime(200)\n            )\n            .subscribe((searchedWord: string) => {\n                this.loadSearchResults(searchedWord);\n            });\n\n        searchService.dataLoaded.subscribe(\n            data => this.onSearchDataLoaded(data),\n            error => this.onSearchDataError(error)\n        );\n    }\n\n    ngAfterContentInit() {\n        this.setVisibility();\n    }\n\n    ngOnChanges(changes) {\n        if (changes.queryBody &&\n            this.hasDifferentQueryBody(changes.queryBody.previousValue, changes.queryBody.currentValue)) {\n            this.loadSearchResults();\n        }\n        if (changes.searchTerm && changes.searchTerm.currentValue) {\n            this.loadSearchResults(changes.searchTerm.currentValue);\n        }\n    }\n\n    resetResults() {\n        this.cleanResults();\n        this.setVisibility();\n    }\n\n    reload() {\n        this.loadSearchResults(this.searchTerm);\n    }\n\n    private hasDifferentQueryBody(previousQueryBody: QueryBody, currentQueryBody: QueryBody) {\n        return JSON.stringify(previousQueryBody) !== JSON.stringify(currentQueryBody);\n    }\n\n    private cleanResults() {\n        if (this.results) {\n            this.results = {};\n        }\n    }\n\n    private loadSearchResults(searchTerm?: string) {\n        this.resetResults();\n        if (searchTerm) {\n            if (this.queryBody) {\n                this.searchService.searchByQueryBody(this.queryBody).subscribe(\n                    result => this.onSearchDataLoaded(result),\n                    err => this.onSearchDataError(err)\n                );\n            } else {\n                this.searchService.search(searchTerm, this.maxResults, this.skipResults).subscribe(\n                    result => this.onSearchDataLoaded(result),\n                    err => this.onSearchDataError(err)\n                );\n            }\n        } else {\n            this.cleanResults();\n        }\n    }\n\n    onSearchDataLoaded(data: NodePaging) {\n        if (data) {\n            this.results = data;\n            this.resultLoaded.emit(this.results);\n            this.isOpen = true;\n            this.setVisibility();\n        }\n    }\n\n    onSearchDataError(error) {\n        if (error && error.status !== 400) {\n            this.results = null;\n            this.error.emit(error);\n        }\n    }\n\n    hidePanel() {\n        if (this.isOpen) {\n            this._classList['adf-search-show'] = false;\n            this._classList['adf-search-hide'] = true;\n            this.isOpen = false;\n        }\n    }\n\n    setVisibility() {\n        this.showPanel = !!this.results && !!this.results.list;\n        this._classList['adf-search-show'] = this.showPanel;\n        this._classList['adf-search-hide'] = !this.showPanel;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-search-result',\n    templateUrl: './empty-search-result.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptySearchResultComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthenticationService, ThumbnailService } from '@alfresco/adf-core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output,\n         QueryList, ViewEncapsulation, ViewChild, ViewChildren, ElementRef, TemplateRef, ContentChild } from '@angular/core';\nimport { MinimalNodeEntity, QueryBody } from 'alfresco-js-api';\nimport { Observable, Subject } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { MatListItem } from '@angular/material';\nimport { EmptySearchResultComponent } from './empty-search-result.component';\nimport { debounceTime, filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search-control',\n    templateUrl: './search-control.component.html',\n    styleUrls: ['./search-control.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('active', style({ transform: 'translateX(0%)', 'margin-left': '13px' })),\n            state('inactive', style({ transform: 'translateX(81%)'})),\n            state('no-animation', style({ transform: 'translateX(0%)', width: '100%' })),\n            transition('inactive => active',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n            transition('active => inactive',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-control' }\n})\nexport class SearchControlComponent implements OnInit, OnDestroy {\n\n    /** Toggles whether to use an expanding search control. If false\n     * then a regular input is used.\n     */\n    @Input()\n    expandable: boolean = true;\n\n    /** Toggles highlighting of the search term in the results. */\n    @Input()\n    highlight: boolean = false;\n\n    /** Type of the input field to render, e.g. \"search\" or \"text\" (default). */\n    @Input()\n    inputType: string = 'text';\n\n    /** Toggles auto-completion of the search input field. */\n    @Input()\n    autocomplete: boolean = false;\n\n    /** Toggles \"find-as-you-type\" suggestions for possible matches. */\n    @Input()\n    liveSearchEnabled: boolean = true;\n\n    /** Maximum number of results to show in the live search. */\n    @Input()\n    liveSearchMaxResults: number = 5;\n\n    /** @deprecated in 2.1.0 */\n    @Input()\n    customQueryBody: QueryBody;\n\n    /** Emitted when the search is submitted pressing ENTER button.\n     * The search term is provided as value of the event.\n     */\n    @Output()\n    submit: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the search term is changed. The search term is provided\n     * in the 'value' property of the returned object.  If the term is less\n     * than three characters in length then the term is truncated to an empty\n     * string.\n     */\n    @Output()\n    searchChange: EventEmitter<string> = new EventEmitter();\n\n    /** Emitted when a file item from the list of \"find-as-you-type\" results is selected. */\n    @Output()\n    optionClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('search')\n    searchAutocomplete: SearchComponent;\n\n    @ViewChild('searchInput')\n    searchInput: ElementRef;\n\n    @ViewChildren(MatListItem)\n    private listResultElement: QueryList<MatListItem>;\n\n    @ContentChild(EmptySearchResultComponent)\n    emptySearchTemplate: EmptySearchResultComponent;\n\n    searchTerm: string = '';\n    subscriptAnimationState: string;\n    noSearchResultTemplate: TemplateRef <any> = null;\n\n    private toggleSearch = new Subject<any>();\n    private focusSubject = new Subject<FocusEvent>();\n\n    constructor(public authService: AuthenticationService,\n                private thumbnailService: ThumbnailService) {\n\n        this.toggleSearch.asObservable().pipe(debounceTime(200)).subscribe(() => {\n            if (this.expandable) {\n                this.subscriptAnimationState = this.subscriptAnimationState === 'inactive' ? 'active' : 'inactive';\n\n                if (this.subscriptAnimationState === 'inactive') {\n                    this.searchTerm = '';\n                    this.searchAutocomplete.resetResults();\n                    if ( document.activeElement.id === this.searchInput.nativeElement.id) {\n                        this.searchInput.nativeElement.blur();\n                    }\n                }\n            }\n        });\n    }\n\n    applySearchFocus(animationDoneEvent) {\n        if (animationDoneEvent.toState === 'active') {\n            this.searchInput.nativeElement.focus();\n        }\n    }\n\n    ngOnInit() {\n        this.subscriptAnimationState = this.expandable ? 'inactive' : 'no-animation';\n        this.setupFocusEventHandlers();\n    }\n\n    isNoSearchTemplatePresent(): boolean {\n        return this.emptySearchTemplate ? true : false;\n    }\n\n    ngOnDestroy(): void {\n        if (this.focusSubject) {\n            this.focusSubject.unsubscribe();\n            this.focusSubject = null;\n        }\n\n        if (this.toggleSearch) {\n            this.toggleSearch.unsubscribe();\n            this.toggleSearch = null;\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isEcmLoggedIn();\n    }\n\n    searchSubmit(event: any) {\n        this.submit.emit(event);\n        this.toggleSearchBar();\n    }\n\n    inputChange(event: any) {\n        this.searchChange.emit(event);\n    }\n\n    getAutoComplete(): string {\n        return this.autocomplete ? 'on' : 'off';\n    }\n\n    getMimeTypeIcon(node: MinimalNodeEntity): string {\n        let mimeType;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    isSearchBarActive() {\n        return this.subscriptAnimationState === 'active' && this.liveSearchEnabled;\n    }\n\n    toggleSearchBar() {\n        if (this.toggleSearch) {\n            this.toggleSearch.next();\n        }\n    }\n\n    elementClicked(item: any) {\n        if (item.entry) {\n            this.optionClicked.next(item);\n            this.toggleSearchBar();\n        }\n    }\n\n    onFocus($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onBlur($event): void {\n        this.focusSubject.next($event);\n    }\n\n    activateToolbar() {\n        if (!this.isSearchBarActive()) {\n            this.toggleSearchBar();\n        }\n    }\n\n    selectFirstResult() {\n        if ( this.listResultElement && this.listResultElement.length > 0) {\n            let firstElement: MatListItem = <MatListItem> this.listResultElement.first;\n            firstElement._getHostElement().focus();\n        }\n    }\n\n    onRowArrowDown($event: KeyboardEvent): void {\n        let nextElement: any = this.getNextElementSibling(<Element> $event.target);\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n\n    onRowArrowUp($event: KeyboardEvent): void {\n        let previousElement: any = this.getPreviousElementSibling(<Element> $event.target);\n        if (previousElement) {\n            previousElement.focus();\n        } else {\n            this.searchInput.nativeElement.focus();\n            this.focusSubject.next(new FocusEvent('focus'));\n        }\n    }\n\n    private setupFocusEventHandlers() {\n        const focusEvents: Observable<FocusEvent> = this.focusSubject\n            .asObservable()\n            .pipe(\n                debounceTime(50),\n                filter(($event: any) => {\n                    return this.isSearchBarActive() && ($event.type === 'blur' || $event.type === 'focusout');\n                })\n            );\n\n        focusEvents.subscribe(() => {\n            this.toggleSearchBar();\n        });\n    }\n\n    private getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n\n    private getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable: no-input-rename no-use-before-declare no-input-rename  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable, Subject, Subscription, merge, of, fromEvent } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\n\nexport const SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SearchTriggerDirective),\n    multi: true\n};\n\n@Directive({\n    selector: `input[searchAutocomplete], textarea[searchAutocomplete]`,\n    host: {\n        'role': 'combobox',\n        '[attr.autocomplete]': 'autocomplete',\n        'aria-autocomplete': 'list',\n        '[attr.aria-expanded]': 'panelOpen.toString()',\n        '(blur)': 'onTouched()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    providers: [SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class SearchTriggerDirective implements ControlValueAccessor, OnDestroy {\n    private onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n    @Input('searchAutocomplete')\n    searchPanel: SearchComponent;\n\n    @Input()\n    autocomplete: string = 'off';\n\n    private _panelOpen: boolean = false;\n    private closingActionsSubscription: Subscription;\n    private escapeEventStream = new Subject<void>();\n\n    onChange: (value: any) => void = () => { };\n\n    onTouched = () => { };\n\n    constructor(private element: ElementRef,\n                private ngZone: NgZone,\n                private changeDetectorRef: ChangeDetectorRef,\n                @Optional() @Inject(DOCUMENT) private document: any) { }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n\n        if (this.escapeEventStream) {\n            this.escapeEventStream.unsubscribe();\n            this.escapeEventStream = null;\n        }\n        if ( this.closingActionsSubscription ) {\n            this.closingActionsSubscription.unsubscribe();\n        }\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen && this.searchPanel.showPanel;\n    }\n\n    openPanel(): void {\n        this.searchPanel.isOpen = this._panelOpen = true;\n        this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n\n    closePanel(): void {\n        if (this._panelOpen) {\n            this.closingActionsSubscription.unsubscribe();\n            this._panelOpen = false;\n            this.searchPanel.resetResults();\n            this.searchPanel.hidePanel();\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    get panelClosingActions(): Observable<any> {\n        return merge(\n            this.escapeEventStream,\n            this.outsideClickStream\n        );\n    }\n\n    private get outsideClickStream(): Observable<any> {\n        if (!this.document) {\n            return of(null);\n        }\n\n        return merge(\n            fromEvent(this.document, 'click'),\n            fromEvent(this.document, 'touchend')\n        ).pipe(\n            filter((event: MouseEvent | TouchEvent) => {\n                const clickTarget = event.target as HTMLElement;\n                return this._panelOpen && clickTarget !== this.element.nativeElement;\n            })\n        );\n    }\n\n    writeValue(value: any): void {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n\n    registerOnChange(fn: (value: any) => {}): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        const keyCode = event.keyCode;\n\n        if (keyCode === ESCAPE && this.panelOpen) {\n            this.escapeEventStream.next();\n            event.stopPropagation();\n        } else if (keyCode === ENTER) {\n            this.escapeEventStream.next();\n            event.preventDefault();\n        }\n\n    }\n\n    handleInput(event: KeyboardEvent): void {\n        if (document.activeElement === event.target) {\n            let inputValue: string = (event.target as HTMLInputElement).value;\n            this.onChange(inputValue);\n            if (inputValue) {\n                this.searchPanel.keyPressedStream.next(inputValue);\n                this.openPanel();\n            } else {\n                this.searchPanel.resetResults();\n                this.closePanel();\n            }\n        }\n    }\n\n    private isPanelOptionClicked(event: MouseEvent) {\n        let isPanelOption: boolean = false;\n        if ( event ) {\n            let clickTarget = event.target as HTMLElement;\n            isPanelOption = !this.isNoResultOption(event) &&\n                            !!this.searchPanel.panel &&\n                            !!this.searchPanel.panel.nativeElement.contains(clickTarget);\n        }\n        return isPanelOption;\n    }\n\n    private isNoResultOption(event: MouseEvent) {\n        return this.searchPanel.results.list ? this.searchPanel.results.list.entries.length === 0 : true;\n    }\n\n    private subscribeToClosingActions(): Subscription {\n        const firstStable = this.ngZone.onStable.asObservable();\n        const optionChanges = this.searchPanel.keyPressedStream.asObservable();\n\n        return merge(firstStable, optionChanges)\n            .pipe(\n                takeUntil(this.onDestroy$),\n                switchMap(() => {\n                    this.searchPanel.setVisibility();\n                    return this.panelClosingActions;\n                })\n            )\n            .subscribe(event => this.setValueAndClose(event));\n    }\n\n    private setTriggerValue(value: any): void {\n        const toDisplay = this.searchPanel && this.searchPanel.displayWith ?\n            this.searchPanel.displayWith(value) : value;\n        const inputValue = toDisplay != null ? toDisplay : '';\n        this.element.nativeElement.value = inputValue;\n    }\n\n    private setValueAndClose(event: any | null): void {\n        if (this.isPanelOptionClicked(event) && !event.defaultPrevented) {\n            this.setTriggerValue(event.target.textContent.trim());\n            this.onChange(event.target.textContent.trim());\n            this.element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport class SearchFilterList<T> implements Iterable<T> {\n\n    private filteredItems: T[] = [];\n    private _filterText: string = '';\n\n    items: T[] = [];\n    pageSize: number = DEFAULT_PAGE_SIZE;\n    currentPageSize: number = DEFAULT_PAGE_SIZE;\n\n    get filterText(): string {\n        return this._filterText;\n    }\n\n    set filterText(value: string) {\n        this._filterText = value;\n        this.applyFilter();\n    }\n\n    private _filter: (item: T) => boolean = () => true;\n\n    get filter(): (item: T) => boolean {\n        return this._filter;\n    }\n\n    set filter(value: (item: T) => boolean ) {\n        this._filter = value;\n        this.applyFilter();\n    }\n\n    private applyFilter() {\n        if (this.filter) {\n            this.filteredItems = this.items.filter(this.filter);\n        } else {\n            this.filteredItems = this.items;\n        }\n        this.currentPageSize = this.pageSize;\n    }\n\n    /** Returns visible portion of the items.  */\n    get visibleItems(): T[] {\n        return this.filteredItems.slice(0, this.currentPageSize);\n    }\n\n    /** Returns entire collection length including items not displayed on the page. */\n    get length(): number {\n        return this.items.length;\n    }\n\n    /** Detects whether more items can be displayed. */\n    get canShowMoreItems(): boolean {\n        return this.filteredItems.length > this.currentPageSize;\n    }\n\n    /** Detects whether less items can be displayed. */\n    get canShowLessItems(): boolean {\n        return this.currentPageSize > this.pageSize;\n    }\n\n    /** Detects whether content fits single page. */\n    get fitsPage(): boolean {\n        return this.pageSize >= this.filteredItems.length;\n    }\n\n    constructor(items: T[] = [], pageSize?: number) {\n        this.items = items;\n        this.filteredItems = items;\n        this.pageSize = pageSize || DEFAULT_PAGE_SIZE;\n        this.currentPageSize = pageSize || DEFAULT_PAGE_SIZE;\n    }\n\n    /** Display more items. */\n    showMoreItems() {\n        if (this.canShowMoreItems) {\n            this.currentPageSize += this.pageSize;\n        }\n    }\n\n    /** Display less items. */\n    showLessItems() {\n        if (this.canShowLessItems) {\n            this.currentPageSize -= this.pageSize;\n        }\n    }\n\n    /** Reset entire collection and page settings. */\n    clear() {\n        this.currentPageSize = this.pageSize;\n        this.items = [];\n        this.filteredItems = [];\n        this.filterText = '';\n    }\n\n    [Symbol.iterator](): Iterator<T> {\n        let pointer = 0;\n        let items = this.visibleItems;\n\n        return {\n            next(): IteratorResult<T> {\n                if (pointer < items.length) {\n                    return {\n                        done: false,\n                        value: items[pointer++]\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: null\n                    };\n                }\n            }\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FacetQuery } from '../../../facet-query.interface';\nimport { SearchFilterList } from './search-filter-list.model';\n\nexport class ResponseFacetQueryList extends SearchFilterList<FacetQuery> {\n    constructor(items: FacetQuery[] = [], pageSize: number = 5) {\n        super(\n            items\n                .filter(item => {\n                    return item.count > 0;\n                }),\n            pageSize\n        );\n\n        this.filter = (query: FacetQuery) => {\n            if (this.filterText && query.label) {\n                const pattern = (this.filterText || '').toLowerCase();\n                const label = query.label.toLowerCase();\n                return label.startsWith(pattern);\n            }\n            return true;\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchService, TranslationService } from '@alfresco/adf-core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { FacetFieldBucket } from '../../facet-field-bucket.interface';\nimport { ResponseFacetQueryList } from './models/response-facet-query-list.model';\nimport { FacetQuery } from '../../facet-query.interface';\nimport { FacetField } from '../../facet-field.interface';\nimport { SearchFilterList } from './models/search-filter-list.model';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search-filter',\n    templateUrl: './search-filter.component.html',\n    styleUrls: ['./search-filter.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-filter' }\n})\nexport class SearchFilterComponent implements OnInit, OnDestroy {\n\n    private DEFAULT_PAGE_SIZE = 5;\n\n    isAlive = true;\n    responseFacetQueries: ResponseFacetQueryList = null;\n    responseFacetFields: FacetField[] = null;\n\n    private facetQueriesPageSize = this.DEFAULT_PAGE_SIZE;\n    facetQueriesLabel: string = 'Facet Queries';\n    facetQueriesExpanded = false;\n    facetFieldsExpanded = false;\n    canResetSelectedQueries = false;\n\n    selectedFacetQueries: Array<FacetQuery> = [];\n    selectedBuckets: Array<{ field: FacetField, bucket: FacetFieldBucket }> = [];\n\n    constructor(public queryBuilder: SearchQueryBuilderService,\n                private searchService: SearchService,\n                private translationService: TranslationService) {\n        if (queryBuilder.config && queryBuilder.config.facetQueries) {\n            this.facetQueriesLabel = queryBuilder.config.facetQueries.label || 'Facet Queries';\n            this.facetQueriesPageSize = queryBuilder.config.facetQueries.pageSize || this.DEFAULT_PAGE_SIZE;\n            this.facetQueriesExpanded = queryBuilder.config.facetQueries.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetFields) {\n            this.facetFieldsExpanded = queryBuilder.config.facetFields.expanded;\n        }\n\n        this.queryBuilder.updated.pipe(\n            takeWhile(() => this.isAlive)\n        ).subscribe(() => {\n            this.queryBuilder.execute();\n        });\n    }\n\n    ngOnInit() {\n        if (this.queryBuilder) {\n            this.queryBuilder.executed.pipe(\n                takeWhile(() => this.isAlive)\n            ).subscribe((data) => {\n                this.onDataLoaded(data);\n                this.searchService.dataLoaded.next(data);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.isAlive = false;\n    }\n\n    onToggleFacetQuery(event: MatCheckboxChange, facetQuery: FacetQuery) {\n        if (event && facetQuery) {\n            if (event.checked) {\n                this.selectFacetQuery(facetQuery);\n            } else {\n                this.unselectFacetQuery(facetQuery);\n            }\n        }\n    }\n\n    selectFacetQuery(query: FacetQuery) {\n        if (query) {\n            query.checked = true;\n            this.queryBuilder.addUserFacetQuery(query);\n            this.updateSelectedFields();\n            this.queryBuilder.update();\n        }\n    }\n\n    unselectFacetQuery(query: FacetQuery) {\n        if (query) {\n            query.checked = false;\n            this.queryBuilder.removeUserFacetQuery(query);\n            this.updateSelectedFields();\n            this.queryBuilder.update();\n        }\n    }\n\n    private updateSelectedBuckets() {\n        if (this.responseFacetFields) {\n            this.selectedBuckets = [];\n            for (let field of this.responseFacetFields) {\n                if (field.buckets) {\n                    this.selectedBuckets.push(\n                        ...this.queryBuilder.getUserFacetBuckets(field.field)\n                            .filter(bucket => bucket.checked)\n                            .map(bucket => {\n                                return { field, bucket };\n                            })\n                    );\n                }\n            }\n        } else {\n            this.selectedBuckets = [];\n        }\n    }\n\n    private updateSelectedFields() {\n        if (this.responseFacetQueries) {\n            this.selectedFacetQueries = this.responseFacetQueries.items.filter(item => item.checked);\n            this.canResetSelectedQueries = this.selectedFacetQueries.length > 0;\n        } else {\n            this.selectedFacetQueries = [];\n            this.canResetSelectedQueries = false;\n        }\n    }\n\n    onToggleBucket(event: MatCheckboxChange, field: FacetField, bucket: FacetFieldBucket) {\n        if (event && bucket) {\n            if (event.checked) {\n                this.selectFacetBucket(field, bucket);\n            } else {\n                this.unselectFacetBucket(field, bucket);\n            }\n        }\n    }\n\n    selectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = true;\n            this.queryBuilder.addUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    unselectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = false;\n            this.queryBuilder.removeUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    resetSelectedQueries() {\n        if (this.canResetSelectedQueries) {\n            for (let query of this.responseFacetQueries.items) {\n                query.checked = false;\n                this.queryBuilder.removeUserFacetQuery(query);\n            }\n            this.selectedFacetQueries = [];\n            this.canResetSelectedQueries = false;\n            this.queryBuilder.update();\n        }\n    }\n\n    canResetSelectedBuckets(field: FacetField): boolean {\n        if (field && field.buckets) {\n            return field.buckets.items.some(bucket => bucket.checked);\n        }\n        return false;\n    }\n\n    resetSelectedBuckets(field: FacetField) {\n        if (field && field.buckets) {\n            for (let bucket of field.buckets.items) {\n                bucket.checked = false;\n                this.queryBuilder.removeUserFacetBucket(field, bucket);\n            }\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    onDataLoaded(data: any) {\n        const context = data.list.context;\n\n        if (context) {\n            this.parseFacetFields(context);\n            this.parseFacetQueries(context);\n        } else {\n            this.responseFacetQueries = null;\n            this.responseFacetFields = null;\n        }\n    }\n\n    private parseFacetFields(context: any) {\n        if (!this.responseFacetFields) {\n            const configFacetFields = this.queryBuilder.config.facetFields && this.queryBuilder.config.facetFields.fields || [];\n\n            this.responseFacetFields = configFacetFields.map(field => {\n                const responseField = (context.facetsFields || []).find(response => response.label === field.label);\n                const buckets: FacetFieldBucket[] = ((responseField && responseField.buckets) || []).map(bucket => {\n                    const selectedBucket = this.selectedBuckets.find(facetBucket =>\n                        facetBucket.bucket.label === bucket.label && facetBucket.field.field === field.field);\n\n                    return <FacetFieldBucket> {\n                        ...bucket,\n                        checked: !!selectedBucket,\n                        display: this.translationService.instant(bucket.display),\n                        label: this.translationService.instant(bucket.label)\n                    };\n                });\n                const bucketList = new SearchFilterList<FacetFieldBucket>(buckets, field.pageSize);\n                bucketList.filter = (bucket: FacetFieldBucket): boolean => {\n                    if (bucket && bucketList.filterText) {\n                        const pattern = (bucketList.filterText || '').toLowerCase();\n                        const label = (bucket.display || bucket.label || '').toLowerCase();\n                        return label.startsWith(pattern);\n                    }\n                    return true;\n                };\n                return {\n                    ...field,\n                    label: this.translationService.instant(field.label),\n                    pageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    currentPageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    buckets: bucketList\n                };\n            });\n\n        } else {\n\n            this.responseFacetFields = this.responseFacetFields\n                .map(field => {\n\n                    let responseField = (context.facetsFields || []).find(response => response.label === field.label);\n\n                    (field && field.buckets && field.buckets.items || [])\n                        .map(bucket => {\n                            const responseBucket = ((responseField && responseField.buckets) || []).find(respBucket => respBucket.label === bucket.label);\n\n                            bucket.count = responseBucket ? responseBucket.count : 0;\n                            return bucket;\n                        });\n\n                    return field;\n                });\n        }\n    }\n\n    private parseFacetQueries(context: any) {\n        const responseQueries = this.getFacetQueryMap(context);\n        if (this.queryBuilder.config.facetQueries) {\n            const bkpResponseFacetQueries =  Object.assign({}, this.responseFacetQueries);\n            const facetQueries = (this.queryBuilder.config.facetQueries.queries || [])\n                .map(query => {\n\n                    const queryResult = responseQueries[query.label];\n                    const bkpQuery = (bkpResponseFacetQueries.items || []).find(item => item.label === query.label);\n\n                    if (bkpQuery) {\n                        bkpQuery.count = queryResult.count;\n                        return bkpQuery;\n                    }\n                    return <FacetQuery> {\n                        ...query,\n                        label: this.translationService.instant(query.label),\n                        count: queryResult.count\n                    };\n                });\n\n            if (facetQueries.length > 0) {\n                if (this.responseFacetQueries) {\n                    this.responseFacetQueries.items = facetQueries;\n\n                } else {\n                    this.responseFacetQueries = new ResponseFacetQueryList(facetQueries, this.facetQueriesPageSize);\n                }\n\n            } else {\n                this.responseFacetQueries = null;\n            }\n        }\n    }\n\n    private getFacetQueryMap(context: any): { [key: string]: any } {\n        const result = {};\n\n        (context.facetQueries || []).forEach(query => {\n            result[query.label] = query;\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-text',\n    templateUrl: './search-text.component.html',\n    styleUrls: ['./search-text.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-text' }\n})\nexport class SearchTextComponent implements SearchWidget, OnInit {\n\n    /** The content of the text box. */\n    @Input()\n    value = '';\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n        if (this.context && this.settings && this.settings.pattern) {\n            const pattern = new RegExp(this.settings.pattern, 'g');\n            const match = pattern.exec(this.context.queryFragments[this.id] || '');\n\n            if (match && match.length > 1) {\n                this.value = match[1];\n            }\n        }\n    }\n\n    reset() {\n        this.value = '';\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event) {\n        this.value = event.target.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: string) {\n        if (this.context && this.settings && this.settings.field) {\n            this.context.queryFragments[this.id] = value ? `${this.settings.field}:'${value}'` : '';\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { MatRadioChange } from '@angular/material';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchRadioOption {\n    name: string;\n    value: string;\n}\n\n@Component({\n    selector: 'adf-search-radio',\n    templateUrl: './search-radio.component.html',\n    styleUrls: ['./search-radio.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-radio' }\n})\nexport class SearchRadioComponent implements SearchWidget, OnInit {\n\n    /** The value of the selected radio button. */\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    options: SearchFilterList<SearchRadioOption>;\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchRadioOption>();\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList<SearchRadioOption>(\n                    this.settings.options, this.pageSize\n                );\n            }\n        }\n\n        this.setValue(\n            this.getSelectedValue()\n        );\n    }\n\n    private getSelectedValue(): string {\n        const options: any[] = this.settings['options'] || [];\n        if (options && options.length > 0) {\n            let selected = options.find(opt => opt.default);\n            if (!selected) {\n                selected = options[0];\n            }\n            return selected.value;\n        }\n        return null;\n    }\n\n    private setValue(newValue: string) {\n        this.value = newValue;\n        this.context.queryFragments[this.id] = newValue;\n        this.context.update();\n    }\n\n    changeHandler(event: MatRadioChange) {\n        this.setValue(event.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { MatSliderChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-search-slider',\n    templateUrl: './search-slider.component.html',\n    styleUrls: ['./search-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-slider' }\n})\nexport class SearchSliderComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    step: number;\n    min: number;\n    max: number;\n    thumbLabel = false;\n\n    /** The numeric value represented by the slider. */\n    @Input()\n    value: number | null;\n\n    ngOnInit() {\n        if (this.settings) {\n            if (this.settings.hasOwnProperty('min')) {\n                this.min = this.settings['min'];\n            }\n\n            if (this.settings.hasOwnProperty('max')) {\n                this.max = this.settings['max'];\n            }\n\n            if (this.settings.hasOwnProperty('step')) {\n                this.step = this.settings['step'];\n            }\n\n            this.thumbLabel = this.settings['thumbLabel'] ? true : false;\n        }\n    }\n\n    reset() {\n        this.value = this.min || 0;\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event: MatSliderChange) {\n        this.value = event.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: number | null) {\n        if (this.id && this.context && this.settings && this.settings.field) {\n            if (value === null) {\n                this.context.queryFragments[this.id] = '';\n            } else {\n                this.context.queryFragments[this.id] = `${this.settings.field}:[0 TO ${value}]`;\n            }\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorStateMatcher } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\nexport class LiveErrorStateMatcher implements ErrorStateMatcher {\n\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || (!control.pristine && isSubmitted)));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\n\n@Component({\n    selector: 'adf-search-number-range',\n    templateUrl: './search-number-range.component.html',\n    styleUrls: ['./search-number-range.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-number-range' }\n})\nexport class SearchNumberRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n\n    field: string;\n    format = '[{FROM} TO {TO}]';\n\n    validators: Validators;\n\n    ngOnInit(): void {\n\n        if (this.settings) {\n            this.field = this.settings.field;\n            this.format = this.settings.format || '[{FROM} TO {TO}]';\n        }\n\n        this.validators = Validators.compose([\n            Validators.required,\n            Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n            Validators.min(0)\n        ]);\n\n        this.from = new FormControl('', this.validators);\n        this.to = new FormControl('', this.validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        }, this.formValidator);\n    }\n\n    formValidator(formGroup: FormGroup) {\n        return parseInt(formGroup.get('from').value, 10) < parseInt(formGroup.get('to').value, 10) ? null : {'mismatch': true};\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.field) {\n            const map = new Map<string, string>();\n            map.set('FROM', model.from);\n            map.set('TO', model.to);\n\n            const value = this.formatString(this.format, map);\n\n            this.context.queryFragments[this.id] = `${this.field}:${value}`;\n            this.context.update();\n        }\n    }\n\n    private formatString(str: string, map: Map<string, string>): string {\n        let result = str;\n\n        map.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchListOption {\n    name: string;\n    value: string;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'adf-search-check-list',\n    templateUrl: './search-check-list.component.html',\n    styleUrls: ['./search-check-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-check-list' }\n})\nexport class SearchCheckListComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    options: SearchFilterList<SearchListOption>;\n    operator: string = 'OR';\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchListOption>();\n    }\n\n    ngOnInit(): void {\n        if (this.settings) {\n            this.operator = this.settings.operator || 'OR';\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList(this.settings.options, this.pageSize);\n            }\n        }\n    }\n\n    reset() {\n        this.options.items.forEach(opt => {\n            opt.checked = false;\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    changeHandler(event: MatCheckboxChange, option: any) {\n        option.checked = event.checked;\n        this.flush();\n    }\n\n    flush() {\n        const checkedValues = this.options.items\n            .filter(option => option.checked)\n            .map(option => option.value);\n\n        const query = checkedValues.join(` ${this.operator} `);\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = query;\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '@alfresco/adf-core';\n\ndeclare let moment: any;\n\nconst DEFAULT_FORMAT_DATE: string = 'DD/MM/YYYY';\n\n@Component({\n    selector: 'adf-search-date-range',\n    templateUrl: './search-date-range.component.html',\n    styleUrls: ['./search-date-range.component.scss'],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-date-range' }\n})\nexport class SearchDateRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    maxDate: any;\n    datePickerDateFormat = DEFAULT_FORMAT_DATE;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    getFromValidationMessage(): string {\n        return this.from.hasError('invalidOnChange') || this.hasParseError(this.from) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.from.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.from.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    getToValidationMessage(): string {\n        return this.to.hasError('invalidOnChange') || this.hasParseError(this.to) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.to.hasError('matDatepickerMin') ? 'SEARCH.FILTER.VALIDATION.NO-DAYS' :\n            this.to.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.to.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.datePickerDateFormat = this.settings.dateFormat || DEFAULT_FORMAT_DATE;\n        }\n        const theCustomDateAdapter = <MomentDateAdapter> <any> this.dateAdapter;\n        theCustomDateAdapter.overrideDisplyaFormat = this.datePickerDateFormat;\n\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.setLocale(locale);\n        });\n\n        const validators = Validators.compose([\n            Validators.required\n        ]);\n\n        this.from = new FormControl('', validators);\n        this.to = new FormControl('', validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        });\n\n        this.maxDate = this.dateAdapter.today().startOf('day');\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.settings && this.settings.field) {\n            const start = moment(model.from).startOf('day').format();\n            const end = moment(model.to).endOf('day').format();\n\n            this.context.queryFragments[this.id] = `${this.settings.field}:['${start}' TO '${end}']`;\n            this.context.update();\n        }\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    onChangedHandler(event: any, formControl: FormControl) {\n        const inputValue = event.srcElement.value;\n\n        const formatDate = this.dateAdapter.parse(inputValue, this.datePickerDateFormat);\n        if (formatDate && formatDate.isValid()) {\n            formControl.setValue(formatDate);\n        } else if (formatDate) {\n            formControl.setErrors({\n                'invalidOnChange': true\n            });\n        } else {\n            formControl.setErrors({\n                'required': true\n            });\n        }\n    }\n\n    setLocale(locale) {\n        this.dateAdapter.setLocale(locale);\n        moment.locale(locale);\n    }\n\n    hasParseError(formControl) {\n        return formControl.hasError('matDatepickerParse') && formControl.getError('matDatepickerParse').text;\n    }\n\n    forcePlaceholder(event: any) {\n        event.srcElement.click();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { SearchTextComponent } from '../search-text/search-text.component';\nimport { SearchRadioComponent } from '../search-radio/search-radio.component';\nimport { SearchSliderComponent } from '../search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from '../search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from '../search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from '../search-date-range/search-date-range.component';\n\n@Injectable()\nexport class SearchFilterService {\n\n    /**\n     * Contains string-to-type mappings for registered widgets.\n     */\n    widgets: { [id: string]: Type<{}> } = {\n        'text': SearchTextComponent,\n        'radio': SearchRadioComponent,\n        'slider': SearchSliderComponent,\n        'number-range': SearchNumberRangeComponent,\n        'check-list': SearchCheckListComponent,\n        'date-range': SearchDateRangeComponent\n    };\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { SearchFilterComponent } from '../../components/search-filter/search-filter.component';\n\n@Component({\n    selector: 'adf-search-chip-list',\n    templateUrl: './search-chip-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-chip-list' }\n})\nexport class SearchChipListComponent {\n\n    /** Search filter to supply the data for the chips. */\n    @Input()\n    searchFilter: SearchFilterComponent;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchSortingDefinition } from '../../search-sorting-definition.interface';\n\n@Component({\n    selector: 'adf-search-sorting-picker',\n    templateUrl: './search-sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-sorting-picker' }\n})\nexport class SearchSortingPickerComponent implements OnInit {\n\n    options: SearchSortingDefinition[] = [];\n    value: string;\n    ascending: boolean;\n\n    constructor(private queryBuilder: SearchQueryBuilderService) {}\n\n    ngOnInit() {\n        this.options = this.queryBuilder.getSortingOptions();\n\n        const primary = this.queryBuilder.getPrimarySorting();\n        if (primary) {\n            this.value = primary.key;\n            this.ascending = primary.ascending;\n        }\n    }\n\n    onChanged(sorting: { key: string, ascending: boolean }) {\n        this.value = sorting.key;\n        this.ascending = sorting.ascending;\n        this.applySorting();\n    }\n\n    private findOptionByKey(key: string): SearchSortingDefinition {\n        if (key) {\n            return this.options.find(opt => opt.key === key);\n        }\n        return null;\n    }\n\n    private applySorting() {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            this.queryBuilder.sorting = [{\n                ...option,\n                ascending: this.ascending\n            }];\n            this.queryBuilder.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, ViewContainerRef, OnInit, OnDestroy, ComponentRef, ComponentFactoryResolver } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterService } from '../search-filter/search-filter.service';\n\n@Component({\n    selector: 'adf-search-widget-container',\n    template: '<div #content></div>'\n})\nexport class SearchWidgetContainerComponent implements OnInit, OnDestroy {\n\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    @Input()\n    id: string;\n\n    @Input()\n    selector: string;\n\n    @Input()\n    settings: any;\n\n    @Input()\n    config: any;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private searchFilterService: SearchFilterService,\n        private queryBuilder: SearchQueryBuilderService,\n        private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        const componentType = this.searchFilterService.widgets[this.selector];\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.setupWidget(this.componentRef);\n            }\n        }\n    }\n\n    private setupWidget(ref: ComponentRef<any>) {\n        if (ref && ref.instance) {\n            ref.instance.id = this.id;\n            ref.instance.settings = { ...this.settings };\n            ref.instance.context = this.queryBuilder;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { SearchTriggerDirective } from './components/search-trigger.directive';\n\nimport { SearchControlComponent } from './components/search-control.component';\nimport { SearchComponent } from './components/search.component';\nimport { EmptySearchResultComponent } from './components/empty-search-result.component';\nimport { SearchWidgetContainerComponent } from './components/search-widget-container/search-widget-container.component';\nimport { SearchFilterComponent } from './components/search-filter/search-filter.component';\nimport { SearchChipListComponent } from './components/search-chip-list/search-chip-list.component';\nimport { SearchTextComponent } from './components/search-text/search-text.component';\nimport { SearchRadioComponent } from './components/search-radio/search-radio.component';\nimport { SearchSliderComponent } from './components/search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from './components/search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from './components/search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from './components/search-date-range/search-date-range.component';\nimport { SearchSortingPickerComponent } from './components/search-sorting-picker/search-sorting-picker.component';\n\nexport const ALFRESCO_SEARCH_DIRECTIVES: any[] = [\n    SearchComponent,\n    SearchControlComponent,\n    SearchTriggerDirective,\n    EmptySearchResultComponent,\n    SearchFilterComponent,\n    SearchChipListComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    exports: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    entryComponents: [\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent\n    ]\n})\nexport class SearchModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { SitesService, LogService } from '@alfresco/adf-core';\nimport { SitePaging, SiteEntry } from 'alfresco-js-api';\n\nexport enum Relations {\n    Members = 'members',\n    Containers = 'containers'\n}\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styleUrls: ['./sites-dropdown.component.scss'],\n    templateUrl: './sites-dropdown.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sites-dropdown' }\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    /** Hide the \"My Files\" option. */\n    @Input()\n    hideMyFiles: boolean = false;\n\n    /** A custom list of sites to be displayed by the dropdown. If no value\n     * is given, the sites of the current user are displayed by default. A\n     * list of objects only with properties 'title' and 'guid' is enough to\n     * be able to display the dropdown.\n     */\n    @Input()\n    siteList: SitePaging = null;\n\n    /** Id of the selected site */\n    @Input()\n    value: string = null;\n\n    /** Text or a translation key to act as a placeholder. Default value is the\n     * key \"DROPDOWN.PLACEHOLDER_LABEL\".\n     */\n    @Input()\n    placeholder: string = 'DROPDOWN.PLACEHOLDER_LABEL';\n\n    /** Filter for the results of the sites query. Possible values are\n     * \"members\" and \"containers\". When \"members\" is used, the site list\n     * will be restricted to the sites that the user is a member of.\n     */\n    @Input()\n    relations: string;\n\n    /** Emitted when the user selects a site. When the default option is selected,\n     * an empty model is emitted.\n     */\n    @Output()\n    change: EventEmitter<SiteEntry> = new EventEmitter();\n\n    selected: SiteEntry = null;\n\n    public MY_FILES_VALUE = '-my-';\n\n    constructor(private sitesService: SitesService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (!this.siteList) {\n            this.setDefaultSiteList();\n        }\n    }\n\n    selectedSite(event: any) {\n        this.change.emit(event.value);\n    }\n\n    private setDefaultSiteList() {\n        let extendedOptions = null;\n        if (this.relations) {\n            extendedOptions = { relations: [this.relations] };\n        }\n        this.sitesService.getSites(extendedOptions).subscribe((result) => {\n\n            this.siteList = this.relations === Relations.Members ? this.filteredResultsByMember(result) : result;\n\n            if (!this.hideMyFiles) {\n                let myItem = { entry: { id: '-my-', guid: '-my-', title: 'DROPDOWN.MY_FILES_OPTION' } };\n\n                this.siteList.list.entries.unshift(myItem);\n\n                if (!this.value) {\n                    this.value = '-my-';\n                }\n            }\n\n            this.selected = this.siteList.list.entries.find(site => site.entry.id === this.value);\n        },\n        (error) => {\n            this.logService.error(error);\n        });\n    }\n\n    private filteredResultsByMember(sites: SitePaging): SitePaging {\n        const loggedUserName = this.sitesService.getEcmCurrentLoggedUserName();\n        sites.list.entries = sites.list.entries.filter( (site) => this.isCurrentUserMember(site, loggedUserName));\n        return sites;\n    }\n\n    private isCurrentUserMember(site, loggedUserName): boolean {\n        return site.entry.visibility === 'PUBLIC' ||\n            !!site.relations.members.list.entries.find((member) => {\n                return member.entry.id.toLowerCase() === loggedUserName.toLowerCase();\n            });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DropdownSitesComponent } from './sites-dropdown.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        DropdownSitesComponent\n    ],\n    declarations: [\n        DropdownSitesComponent\n    ]\n})\nexport class SitesDropdownModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { MinimalNodeEntryEntity, PathElementEntity } from 'alfresco-js-api';\nimport { DocumentListComponent } from '../document-list';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n\n    /** Active node, builds UI based on folderNode.path.elements collection. */\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    /** (optional) Name of the root element of the breadcrumb. You can use\n     * this property to rename \"Company Home\" to \"Personal Files\" for\n     * example. You can use an i18n resource key for the property value.\n     */\n    @Input()\n    root: string = null;\n\n    /** (optional) The id of the root element. You can use this property\n     * to set a custom element the breadcrumb should start with.\n     */\n    @Input()\n    rootId: string = null;\n\n    /** (optional) Document List component to operate with. The list will\n     * update when the breadcrumb is clicked.\n     */\n    @Input()\n    target: DocumentListComponent;\n\n    /** Transformation to be performed on the chosen/folder node before building\n     * the breadcrumb UI. Can be useful when custom formatting is needed for the\n     * breadcrumb. You can change the path elements from the node that are used to\n     * build the breadcrumb using this function.\n     */\n    @Input()\n    transform: (node) => any;\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    /** Maximum number of nodes to display before wrapping them with a dropdown element.  */\n    @Input()\n    maxItems: number;\n\n    previousNodes: PathElementEntity[];\n    lastNodes: PathElementEntity[];\n\n    route: PathElementEntity[] = [];\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    /** Emitted when the user clicks on a breadcrumb. */\n    @Output()\n    navigate = new EventEmitter<PathElementEntity>();\n\n    ngOnInit() {\n        this.transform = this.transform ? this.transform : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            let node: MinimalNodeEntryEntity = null;\n            node = this.transform ? this.transform(changes.folderNode.currentValue) : changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n\n        if (changes.transform) {\n            let node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n            this.route = this.parseRoute(node);\n        }\n        this.recalculateNodes();\n    }\n\n    protected recalculateNodes(): void {\n        if (this.maxItems && this.route.length > this.maxItems) {\n            this.lastNodes = this.route.slice(this.route.length - this.maxItems);\n            this.previousNodes = this.route.slice(0, this.route.length - this.maxItems);\n            this.previousNodes.reverse();\n        } else {\n            this.lastNodes = this.route;\n            this.previousNodes = null;\n        }\n    }\n\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    hasPreviousNodes(): boolean {\n        return this.previousNodes ? true : false;\n    }\n\n    parseRoute(node: MinimalNodeEntryEntity): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let result: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            result = route.findIndex(el => el.id === nodeId);\n        }\n\n        return result;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.navigateTo(route.id);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnChanges, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { PathElementEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@Component({\n    selector: 'adf-dropdown-breadcrumb',\n    templateUrl: './dropdown-breadcrumb.component.html',\n    styleUrls: ['./dropdown-breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n})\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            let node: MinimalNodeEntryEntity = null;\n            node = this.transform ? this.transform(changes.folderNode.currentValue) : changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n\n        if (changes.transform) {\n            let node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n            this.route = this.parseRoute(node);\n        }\n        this.recalculateNodes();\n    }\n\n    /**\n     * Calculate the current and previous nodes from the route array\n     */\n    protected recalculateNodes(): void {\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n\n    /**\n     * Opens the node picker menu\n     */\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    /**\n     * Return if route has more than one element (means: we are not in the root directory)\n     */\n    hasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './dropdown-breadcrumb.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ],\n    declarations: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ]\n})\nexport class BreadcrumbModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'adf-confirm-dialog',\n    template: `\n        <h1 mat-dialog-title>{{ title | translate }}</h1>\n        <mat-dialog-content>\n            <p>{{ message | translate }}</p>\n        </mat-dialog-content>\n        <mat-dialog-actions>\n            <span class=\"spacer\"></span>\n            <button id=\"adf-confirm-accept\" mat-button color=\"primary\" [mat-dialog-close]=\"true\">{{ yesLabel | translate }}</button>\n            <button id=\"adf-confirm-cancel\" mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>{{ noLabel | translate }}</button>\n        </mat-dialog-actions>\n    `,\n    styles: [`\n        .spacer { flex: 1 1 auto; }\n\n        .adf-confirm-dialog .mat-dialog-actions .mat-button-wrapper {\n            text-transform: uppercase;\n        }\n    `],\n    host: { 'class': 'adf-confirm-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmDialogComponent {\n\n    title: string;\n    message: string;\n    yesLabel: string;\n    noLabel: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) data) {\n        data = data || {};\n        this.title = data.title || 'ADF_CONFIRM_DIALOG.CONFIRM';\n        this.message = data.message || 'ADF_CONFIRM_DIALOG.MESSAGE';\n        this.yesLabel = data.yesLabel || 'ADF_CONFIRM_DIALOG.YES_LABEL';\n        this.noLabel = data.noLabel || 'ADF_CONFIRM_DIALOG.NO_LABEL';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, ViewEncapsulation, EventEmitter, Output } from '@angular/core';\nimport { VersionsApi, MinimalNodeEntryEntity, VersionEntry } from 'alfresco-js-api';\nimport { MatDialog } from '@angular/material';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\n\n@Component({\n    selector: 'adf-version-list',\n    templateUrl: './version-list.component.html',\n    styleUrls: ['./version-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n})\nexport class VersionListComponent implements OnChanges {\n\n    private versionsApi: VersionsApi;\n    versions: VersionEntry[] = [];\n    isLoading = true;\n\n    /** @deprecated in 2.3.0 */\n    @Input()\n    id: string;\n\n    /** The target node. */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** Toggles showing/hiding of comments */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles showing/hiding of version actions */\n    @Input()\n    showActions = true;\n\n    /** Emitted when a version is restored */\n    @Output()\n    restored: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    /** Emitted when a version is deleted */\n    @Output()\n    deleted: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    constructor(private alfrescoApi: AlfrescoApiService,\n                private contentService: ContentService,\n                private dialog: MatDialog) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n\n    ngOnChanges() {\n        this.loadVersionHistory();\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasPermission(this.node, 'update') && this.versions.length > 1;\n    }\n\n    canDelete(): boolean {\n        return this.contentService.hasPermission(this.node, 'delete') && this.versions.length > 1;\n    }\n\n    restore(versionId) {\n        if (this.canUpdate()) {\n            this.versionsApi\n                .revertVersion(this.node.id, versionId, { majorVersion: true, comment: '' })\n                .then(() => this.onVersionRestored(this.node));\n        }\n    }\n\n    loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.node.id).then((data) => {\n            this.versions = data.list.entries;\n            this.isLoading = false;\n        });\n    }\n\n    downloadVersion(versionId: string) {\n        if (this.allowDownload) {\n            const versionDownloadUrl = this.getVersionContentUrl(this.node.id, versionId, true);\n            this.downloadContent(versionDownloadUrl);\n        }\n    }\n\n    deleteVersion(versionId: string) {\n        if (this.canUpdate()) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    title: 'ADF_VERSION_LIST.CONFIRM_DELETE.TITLE',\n                    message: 'ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE',\n                    yesLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL',\n                    noLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL'\n                },\n                minWidth: '250px'\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result === true) {\n                    this.alfrescoApi.versionsApi\n                        .deleteVersion(this.node.id, versionId)\n                        .then(() => this.onVersionDeleted(this.node));\n                }\n            });\n        }\n    }\n\n    onVersionDeleted(node: any) {\n        this.loadVersionHistory();\n        this.deleted.emit(node);\n    }\n\n    onVersionRestored(node: any) {\n        this.loadVersionHistory();\n        this.restored.emit(node);\n    }\n\n    private getVersionContentUrl(nodeId: string, versionId: string, attachment?: boolean) {\n        const nodeDownloadUrl = this.alfrescoApi.contentApi.getContentUrl(nodeId, attachment);\n        return nodeDownloadUrl.replace('/content', '/versions/' + versionId + '/content');\n    }\n\n    downloadContent(url: string) {\n        if (url) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { VersionListComponent } from './version-list.component';\nimport { AppConfigService, ContentService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n    selector: 'adf-version-manager',\n    templateUrl: './version-manager.component.html',\n    styleUrls: ['./version-manager.component.scss'],\n    animations: [\n        trigger('uploadToggle', [\n            state('open', style({ height: '175px', opacity: 1, visibility: 'visible' })),\n            state('close', style({ height: '0%', opacity: 0, visibility: 'hidden' })),\n            transition('open => close', [\n                style({ visibility: 'hidden' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ]),\n            transition('close => open', [\n                style({ visibility: 'visible' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VersionManagerComponent {\n\n    /** Target node to manage version history. */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** Toggles showing/hiding of comments. */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Emitted when a file is uploaded successfully. */\n    @Output()\n    uploadSuccess: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    /** Emitted when an error occurs during upload. */\n    @Output()\n    uploadError: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    @ViewChild('versionList')\n    versionListComponent: VersionListComponent;\n\n    uploadState: string = 'close';\n\n    constructor(config: AppConfigService,\n                private contentService: ContentService,\n                private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    refresh(node: MinimalNodeEntryEntity) {\n        this.alfrescoApiService.nodeUpdated.next(node);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(node);\n        this.uploadState = 'close';\n    }\n\n    onUploadSuccess(event: any) {\n        this.alfrescoApiService.nodeUpdated.next(event.value.entry);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(event.value.entry);\n        this.uploadState = 'close';\n    }\n\n    onUploadError(event: any) {\n        this.uploadError.emit(event);\n    }\n\n    onUploadCancel() {\n        this.uploadState = 'close';\n    }\n\n    toggleNewVersion() {\n        this.uploadState = this.uploadState === 'open' ? 'close' : 'open';\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasPermission(this.node, 'update');\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-version-upload',\n    templateUrl: './version-upload.component.html',\n    styleUrls: ['./version-upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-version-upload' }\n})\nexport class VersionUploadComponent {\n\n    semanticVersion: string = 'minor';\n    comment: string;\n    uploadVersion: boolean = false;\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    @Output()\n    success = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    @Output()\n    cancel = new EventEmitter();\n\n    constructor(private contentService: ContentService) {\n    }\n\n    canUpload(): boolean {\n        return this.contentService.hasPermission(this.node, 'update');\n    }\n\n    isMajorVersion(): boolean {\n        return this.semanticVersion === 'minor' ? false : true;\n    }\n\n    cancelUpload() {\n        this.cancel.emit();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { VersionUploadComponent } from './version-upload.component';\nimport { VersionManagerComponent } from './version-manager.component';\nimport { VersionListComponent } from './version-list.component';\nimport { UploadModule } from '../upload/upload.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        UploadModule,\n        FormsModule\n    ],\n    exports: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent,\n        FormsModule\n    ],\n    declarations: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ]\n})\nexport class VersionManagerModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataRow } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-name-location-cell',\n    template: `\n        <div class=\"adf-name-location-cell-name\">{{ name }}</div>\n        <div class=\"adf-name-location-cell-location\" [title]=\"path\">{{ path }}</div>\n    `,\n    styleUrls: ['./name-location-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-name-location-cell' }\n})\nexport class NameLocationCellComponent implements OnInit {\n\n    name: string = '';\n    path: string = '';\n\n    @Input()\n    row: DataRow;\n\n    ngOnInit() {\n        if (this.row) {\n            this.name = this.row.getValue('name');\n\n            const fullPath = this.row.getValue('path');\n            if (fullPath) {\n                this.path = fullPath.name || '';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs';\n\n/**\n * Internal service used by ContentNodeSelector component.\n */\n@Injectable()\nexport class ContentNodeSelectorService {\n\n    constructor(private searchService: SearchService) {\n    }\n\n    /**\n     * Performs a search for content node selection\n     *\n     * @param searchTerm    The term to search for\n     * @param rootNodeId    The root is to start the search from\n     * @param skipCount     From where to start the loading\n     * @param maxItems      How many items to load\n     * @param [extraNodeIds]  List of extra node ids to search from. This last parameter is necessary when\n     * the rootNodeId is one of the supported aliases (e.g. '-my-', '-root-', '-mysites-', etc.)\n     * and search is not supported for that alias, but can be performed on its corresponding nodes.\n     */\n    public search(searchTerm: string, rootNodeId: string = null, skipCount: number = 0, maxItems: number = 25, extraNodeIds?: string[]): Observable<NodePaging> {\n\n        let extraParentFiltering = '';\n\n        if (extraNodeIds && extraNodeIds.length) {\n            extraNodeIds\n                .filter(id => id !== rootNodeId)\n                .forEach(extraId => {\n                    extraParentFiltering += ` OR ANCESTOR:'workspace://SpacesStore/${extraId}'`;\n                });\n        }\n\n        const parentFiltering = rootNodeId ? [{ query: `ANCESTOR:'workspace://SpacesStore/${rootNodeId}'${extraParentFiltering}` }] : [];\n\n        let defaultSearchNode: any = {\n            query: {\n                query: `${searchTerm}* OR name:${searchTerm}*`\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxItems,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder'\" },\n                { query: 'NOT cm:creator:System' },\n                ...parentFiltering\n            ],\n            scope: {\n                locations: ['nodes']\n            }\n        };\n\n        return this.searchService.searchByQueryBody(defaultSearchNode);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    AlfrescoApiService, HighlightDirective, UserPreferencesService,\n    PaginatedComponent, PaginationModel\n} from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { MinimalNodeEntryEntity, NodePaging, Pagination, SiteEntry, SitePaging } from 'alfresco-js-api';\nimport { DocumentListComponent, PaginationStrategy } from '../document-list/components/document-list.component';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { CustomResourcesService } from '../document-list/services/custom-resources.service';\n\nexport type ValidationFunction = (entry: MinimalNodeEntryEntity) => boolean;\n\nconst defaultValidation = () => true;\n\n@Component({\n    selector: 'adf-content-node-selector-panel',\n    styleUrls: ['./content-node-selector-panel.component.scss'],\n    templateUrl: './content-node-selector-panel.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-node-selector-panel' }\n})\nexport class ContentNodeSelectorPanelComponent implements OnInit, PaginatedComponent {\n\n    /** Node ID of the folder currently listed. */\n    @Input()\n    currentFolderId: string = null;\n\n    /** Hide the \"My Files\" option added to the site list by default.\n     * See the [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /** Custom site for site dropdown same as siteList. See the\n     * [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    /** Custom row filter function. See the\n     * [Document List component](document-list.component.md#custom-row-filter)\n     * for more information.\n     */\n    @Input()\n    rowFilter: RowFilter = null;\n\n    /** Custom image resolver function. See the\n     * [Document List component](document-list.component.md#custom-row-filter)\n     * for more information.\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /** Number of items shown per page in the list. */\n    @Input()\n    pageSize: number;\n\n    /** Function used to decide if the selected node has permission to be selected.\n     * Default value is a function that always returns true.\n     */\n    @Input()\n    isSelectionValid: ValidationFunction = defaultValidation;\n\n    /** Transformation to be performed on the chosen/folder node before building the\n     * breadcrumb UI. Can be useful when custom formatting is needed for the breadcrumb.\n     * You can change the path elements from the node that are used to build the\n     * breadcrumb using this function.\n     */\n    @Input()\n    breadcrumbTransform: (node) => any;\n\n    /** Emitted when the user has chosen an item. */\n    @Output()\n    select: EventEmitter<MinimalNodeEntryEntity[]> = new EventEmitter<MinimalNodeEntryEntity[]>();\n\n    @ViewChild('documentList')\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective)\n    highlighter: HighlightDirective;\n\n    nodes: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    _chosenNode: MinimalNodeEntryEntity = null;\n    folderIdToShow: string | null = null;\n    paginationStrategy: PaginationStrategy = PaginationStrategy.Infinite;\n    pagination: BehaviorSubject<PaginationModel>;\n\n    skipCount: number = 0;\n    infiniteScroll: boolean = false;\n    debounceSearch: number = 200;\n    searchInput: FormControl = new FormControl();\n\n    constructor(private contentNodeSelectorService: ContentNodeSelectorService,\n                private apiService: AlfrescoApiService,\n                private customResourcesService: CustomResourcesService,\n                private preferences: UserPreferencesService) {\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(this.debounceSearch)\n            )\n            .subscribe((searchValue) => {\n                this.search(searchValue);\n            });\n        this.pageSize = this.preferences.paginationSize;\n\n        let defaultPagination = <PaginationModel> {\n            maxItems: this.pageSize,\n            skipCount: 0,\n            totalItems: 0,\n            hasMoreItems: false\n        };\n        this.pagination = new BehaviorSubject<PaginationModel>(defaultPagination);\n    }\n\n    set chosenNode(value: MinimalNodeEntryEntity) {\n        this._chosenNode = value;\n        let valuesArray = null;\n        if (value) {\n            valuesArray = [value];\n        }\n        this.select.next(valuesArray);\n    }\n\n    get chosenNode() {\n        return this._chosenNode;\n    }\n\n    ngOnInit() {\n        this.folderIdToShow = this.currentFolderId;\n\n        this.breadcrumbTransform = this.breadcrumbTransform ? this.breadcrumbTransform : null;\n        this.isSelectionValid = this.isSelectionValid ? this.isSelectionValid : defaultValidation;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite SiteEntry to search within\n     */\n    siteChanged(chosenSite: SiteEntry): void {\n        this.siteId = chosenSite.entry.guid;\n        this.updateResults();\n    }\n\n    /**\n     * Updates the searchTerm attribute and starts a new search\n     *\n     * @param searchTerm string value to search against\n     */\n    search(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): MinimalNodeEntryEntity | null {\n        let folderNode: MinimalNodeEntryEntity;\n\n        if (this.showingSearchResults && this.chosenNode) {\n            folderNode = this.chosenNode;\n        } else {\n            folderNode = this.documentList.folderNode;\n        }\n\n        return folderNode;\n    }\n\n    /**\n     * Clear the search input and reset to last folder node in which search was performed\n     */\n    clear(): void {\n        this.clearSearch();\n        this.folderIdToShow = this.siteId || this.currentFolderId;\n    }\n\n    /**\n     * Clear the search input and search related data\n     */\n    clearSearch() {\n        this.searchTerm = '';\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n    }\n\n    /**\n     * Update the result list depending on the criterias\n     */\n    private updateResults(): void {\n        if (this.searchTerm.length === 0) {\n            this.clear();\n        } else {\n            this.startNewSearch();\n        }\n    }\n\n    /**\n     * Load the first page of a new search result\n     */\n    private startNewSearch(): void {\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    updatePagination(pagination: Pagination): void {\n        this.infiniteScroll = true;\n        this.skipCount = pagination.skipCount;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Perform the call to searchService with the proper parameters\n     */\n    private querySearch(): void {\n        this.loadingSearchResults = true;\n\n        if (this.customResourcesService.hasCorrespondingNodeIds(this.siteId)) {\n            this.customResourcesService.getCorrespondingNodeIds(this.siteId)\n                .subscribe(nodeIds => {\n                        this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize, nodeIds)\n                            .subscribe(this.showSearchResults.bind(this));\n                    },\n                    () => {\n                        this.showSearchResults({ list: { entries: [] } });\n                    });\n        } else {\n            this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize)\n                .subscribe(this.showSearchResults.bind(this));\n        }\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(nodePaging: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        // Documentlist hack, since data displaying for preloaded nodes is a little bit messy there\n        if (!this.nodes) {\n            this.nodes = nodePaging;\n        } else {\n            this.documentList.data.loadPage(nodePaging, true);\n        }\n\n        this.pagination.next(nodePaging.list.pagination);\n        this.highlight();\n    }\n\n    /**\n     * Hightlight the actual searchterm in the next frame\n     */\n    highlight(): void {\n        setTimeout(() => {\n            this.highlighter.highlight(this.searchTerm);\n        }, 0);\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange(): void {\n        this.showingSearchResults = false;\n        this.infiniteScroll = false;\n        this.clearSearch();\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(nodePaging: NodePaging): void {\n        if (!this.showingSearchResults) {\n            this.attemptNodeSelection(this.documentList.folderNode);\n        }\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    showBreadcrumbs() {\n        return !this.showingSearchResults || this.chosenNode;\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    getNextPageOfSearch(event: Pagination): void {\n        this.infiniteScroll = true;\n        this.skipCount = event.skipCount;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: MinimalNodeEntryEntity): void {\n        if (this.isSelectionValid(entry)) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * Invoked when user selects a node\n     *\n     * @param event CustomEvent for node-select\n     */\n    onNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n\n    onNodeDoubleClick(e: CustomEvent) {\n        const node: any = e.detail.node.entry;\n\n        if (node && node.guid) {\n            const options = {\n                maxItems: this.pageSize,\n                skipCount: this.skipCount,\n                include: ['path', 'properties', 'allowableOperations']\n            };\n\n            this.apiService.nodesApi.getNode(node.guid, options)\n                .then(documentLibrary => {\n                    this.documentList.performCustomSourceNavigation(documentLibrary);\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { ContentNodeSelectorPanelComponent } from './content-node-selector-panel.component';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { SitesDropdownModule } from '../site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { DocumentListModule } from '../document-list/document-list.module';\nimport { NameLocationCellComponent } from './name-location-cell/name-location-cell.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        DocumentListModule\n    ],\n    exports: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    entryComponents: [\n        ContentNodeSelectorPanelComponent,\n        ContentNodeSelectorComponent\n    ],\n    declarations: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ]\n})\nexport class ContentNodeSelectorModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nconst I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n\nexport function forbidEndingDot({ value }: FormControl) {\n    const isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\n\nimport { Component, Inject, OnInit, Optional, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { NodesApiService, TranslationService } from '@alfresco/adf-core';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\n\n@Component({\n    selector: 'adf-folder-dialog',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './folder.dialog.html'\n})\nexport class FolderDialogComponent implements OnInit {\n\n    form: FormGroup;\n\n    folder: MinimalNodeEntryEntity = null;\n\n    /** Emitted when the edit/create folder give error for example a folder with same name already exist\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the edit/create folder is successfully created/mmodified\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    editTitle = 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE';\n    createTitle = 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE';\n    nodeType = 'cm:folder';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialog: MatDialogRef<FolderDialogComponent>,\n        private nodesApi: NodesApiService,\n        private translation: TranslationService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n        if (data) {\n            this.editTitle = data.editTitle || this.editTitle;\n            this.createTitle = data.createTitle || this.createTitle;\n            this.nodeType = data.nodeType || this.nodeType;\n        }\n    }\n\n    get editing(): boolean {\n        return !!this.data.folder;\n    }\n\n    ngOnInit() {\n        const { folder } = this.data;\n        let name = '';\n        let description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            description = properties ? properties['cm:description'] : '';\n        }\n\n        const validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            description: [ description ]\n        });\n    }\n\n    get name(): string {\n        let { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n\n    get description(): string {\n        let { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n\n    private get properties(): any {\n        const { name: title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n\n    private create(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodeType, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties, nodeType });\n    }\n\n    private edit(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n\n    submit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: MinimalNodeEntryEntity) => {\n                    this.success.emit(folder);\n                    dialog.close(folder);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    handleError(error: any): any {\n        let errorMessage = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                errorMessage = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch (err) { /* Do nothing, keep the original message */ }\n\n        this.error.emit(this.translation.instant(errorMessage));\n\n        return error;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { FolderDialogComponent } from './folder.dialog';\nimport { NodeLockDialogComponent } from './node-lock.dialog';\nimport { ConfirmDialogComponent } from './confirm.dialog';\nimport { MatDatetimepickerModule } from '@mat-datetimepicker/core';\nimport { MatMomentDatetimeModule } from '@mat-datetimepicker/moment';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        MatMomentDatetimeModule,\n        MatDatetimepickerModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\nconst DEFAULT_FOLDER_PARENT_ID = '-my-';\n\n@Directive({\n    selector: '[adf-create-folder]'\n})\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Parent folder where the new folder will be located after creation. */\n    @Input('adf-create-folder')\n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n\n    /** Title of folder creation dialog. */\n    @Input()\n    title: string = null;\n\n    /** Type of node to create. */\n    @Input()\n    nodeType = 'cm:folder';\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the folder is created successfully. */\n    @Output()\n    success: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId, title: createTitle, nodeType } = this;\n\n        return {\n            data: { parentNodeId, createTitle, nodeType },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: MinimalNodeEntryEntity) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Directive({\n    selector: '[adf-edit-folder]'\n})\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Folder node to edit. */\n    @Input('adf-edit-folder')\n    folder: MinimalNodeEntryEntity;\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Title of folder edit dialog. */\n    @Input()\n    title: string = null;\n\n    /** Emitted when the folder has been edited successfully. */\n    @Output()\n    success: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public elementRef: ElementRef,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: {\n                folder,\n                editTitle: this.title\n            },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: MinimalNodeEntryEntity) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { FolderCreateDirective } from './folder-create.directive';\nimport { FolderEditDirective } from './folder-edit.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ],\n    exports: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ]\n})\nexport class FolderDirectiveModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { ContentService, PermissionsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-content-metadata-card',\n    templateUrl: './content-metadata-card.component.html',\n    styleUrls: ['./content-metadata-card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-metadata-card' }\n})\nexport class ContentMetadataCardComponent {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** (optional) This flag displays/hides empty metadata\n     * fields.\n     */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** (required) Name of the metadata preset, which defines aspects\n     * and their properties.\n     */\n    @Input()\n    preset: string;\n\n    /** (optional) This flag sets the metadata in read only mode\n     * preventing changes.\n     */\n    @Input()\n    readOnly = false;\n\n    /** (optional) This flag allows the component to display more\n     * than one accordion at a time.\n     */\n    @Input()\n    multi = false;\n\n    private _displayDefaultProperties: boolean = true;\n\n    /** (optional) This flag displays/hides the metadata\n     * properties.\n     */\n    @Input()\n    set displayDefaultProperties(value: boolean) {\n        this._displayDefaultProperties = value;\n        this.onDisplayDefaultPropertiesChange();\n    }\n\n    get displayDefaultProperties(): boolean {\n        return this._displayDefaultProperties;\n    }\n\n    editable: boolean = false;\n\n    expanded: boolean;\n\n    constructor(private contentService: ContentService) {\n    }\n\n    onDisplayDefaultPropertiesChange(): void {\n        this.expanded = !this._displayDefaultProperties;\n    }\n\n    toggleEdit(): void {\n        this.editable = !this.editable;\n    }\n\n    toggleExpanded(): void {\n        this.expanded = !this.expanded;\n    }\n\n    hasPermission() {\n        return this.contentService.hasPermission(this.node, PermissionsEnum.UPDATE);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { CardViewDateItemModel, CardViewTextItemModel, FileSizePipe } from '@alfresco/adf-core';\n\n@Injectable()\nexport class BasicPropertiesService {\n\n    constructor(private fileSizePipe: FileSizePipe) {\n    }\n\n    getProperties(node: MinimalNodeEntryEntity) {\n\n        const sizeInBytes = node.content ? node.content.sizeInBytes : '',\n            mimeTypeName = node.content ? node.content.mimeTypeName : '',\n            author = node.properties ? node.properties['cm:author'] : '',\n            description = node.properties ? node.properties['cm:description'] : '',\n            title = node.properties ? node.properties['cm:title'] : '';\n\n        return [\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.NAME',\n                value: node.name,\n                key: 'name',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.TITLE',\n                value: title,\n                key: 'properties.cm:title',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.CREATOR',\n                value: node.createdByUser.displayName,\n                key: 'createdByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.CREATED_DATE',\n                value: node.createdAt,\n                key: 'createdAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.SIZE',\n                value: sizeInBytes,\n                key: 'content.sizeInBytes',\n                pipes: [{ pipe: this.fileSizePipe }],\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIER',\n                value: node.modifiedByUser.displayName,\n                key: 'modifiedByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIED_DATE',\n                value: node.modifiedAt,\n                key: 'modifiedAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MIMETYPE',\n                value: mimeTypeName,\n                key: 'content.mimeTypeName',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.AUTHOR',\n                value: author,\n                key: 'properties.cm:author',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.DESCRIPTION',\n                value: description,\n                key: 'properties.cm:description',\n                multiline: true,\n                editable: true\n            })\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    CardViewItemProperties,\n    CardViewItem,\n    CardViewTextItemModel,\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewDatetimeItemModel,\n    CardViewIntItemModel,\n    CardViewFloatItemModel,\n    LogService\n} from '@alfresco/adf-core';\nimport { Property, CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\n\nconst D_TEXT = 'd:text';\nconst D_MLTEXT = 'd:mltext';\nconst D_DATE = 'd:date';\nconst D_DATETIME = 'd:datetime';\nconst D_INT = 'd:int';\nconst D_LONG = 'd:long';\nconst D_FLOAT = 'd:float';\nconst D_DOUBLE = 'd:double';\nconst D_BOOLEAN = 'd:boolean';\n\n@Injectable()\nexport class PropertyGroupTranslatorService {\n\n    static readonly RECOGNISED_ECM_TYPES = [ D_TEXT, D_MLTEXT, D_DATE, D_DATETIME, D_INT, D_LONG , D_FLOAT, D_DOUBLE, D_BOOLEAN ];\n\n    constructor(private logService: LogService) {}\n\n    public translateToCardViewGroups(propertyGroups: OrganisedPropertyGroup[], propertyValues): CardViewGroup[] {\n        return propertyGroups.map(propertyGroup => {\n            const translatedPropertyGroup: any = Object.assign({}, propertyGroup);\n            translatedPropertyGroup.properties = this.translateArray(propertyGroup.properties, propertyValues);\n            return translatedPropertyGroup;\n        });\n    }\n\n    private translateArray(properties: Property[], propertyValues: any): CardViewItem[] {\n        return properties.map(property => {\n            return this.translate(property, propertyValues[property.name]);\n        });\n    }\n\n    private translate(property: Property, propertyValue: any): CardViewItem {\n        this.checkECMTypeValidity(property.dataType);\n\n        const prefix = 'properties.';\n\n        let propertyDefinition: CardViewItemProperties = {\n            label: property.title,\n            value: propertyValue,\n            key: `${prefix}${property.name}`,\n            default: property.defaultValue,\n            editable: true\n        };\n        let cardViewItemProperty;\n\n        switch (property.dataType) {\n\n            case D_MLTEXT:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: true\n                }));\n                break;\n\n            case D_INT:\n            case D_LONG:\n                cardViewItemProperty = new CardViewIntItemModel(propertyDefinition);\n                break;\n\n            case D_FLOAT:\n            case D_DOUBLE:\n                cardViewItemProperty = new CardViewFloatItemModel(propertyDefinition);\n                break;\n\n            case D_DATE:\n                cardViewItemProperty = new CardViewDateItemModel(propertyDefinition);\n                break;\n\n            case D_DATETIME:\n                cardViewItemProperty = new CardViewDatetimeItemModel(propertyDefinition);\n                break;\n\n            case D_BOOLEAN:\n                cardViewItemProperty = new CardViewBoolItemModel(propertyDefinition);\n                break;\n\n            case D_TEXT:\n            default:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: false\n                }));\n        }\n\n        return cardViewItemProperty;\n    }\n\n    private checkECMTypeValidity(ecmPropertyType) {\n        if (PropertyGroupTranslatorService.RECOGNISED_ECM_TYPES.indexOf(ecmPropertyType) === -1) {\n            this.logService.error(`Unknown type for mapping: ${ecmPropertyType}`);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyGroup, Property, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\n\nconst emptyGroup = {\n    properties: {}\n};\n\nfunction convertObjectToArray(object: any): Property[] {\n    return Object.keys(object).map(key => object[key]);\n}\n\nexport function getGroup(propertyGroups: PropertyGroupContainer, groupName: string): PropertyGroup | undefined {\n    return propertyGroups[groupName];\n}\n\nexport function getProperty(propertyGroups: PropertyGroupContainer, groupName: string, propertyName: string): Property | Property[] | undefined {\n    const groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;\n    let propertyDefinitions;\n\n    if (propertyName === '*') {\n        propertyDefinitions = convertObjectToArray(groupDefinition.properties);\n    } else {\n        propertyDefinitions = groupDefinition.properties[propertyName];\n    }\n\n    return propertyDefinitions;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\nimport { getGroup, getProperty } from './property-group-reader';\n\nexport class AspectOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        const groupNames = Object.keys(this.config);\n        return groupNames.indexOf(groupName) !== -1;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const aspects = this.config,\n            aspectNames = Object.keys(aspects);\n\n        return aspectNames\n            .reduce((groupAccumulator, aspectName) => {\n                const newGroup = this.getOrganisedPropertyGroup(propertyGroups, aspectName);\n                return groupAccumulator.concat(newGroup);\n            }, [])\n            .filter(organisedPropertyGroup => organisedPropertyGroup.properties.length > 0);\n    }\n\n    private getOrganisedPropertyGroup(propertyGroups, aspectName) {\n        const group = getGroup(propertyGroups, aspectName);\n        let newGroup = [];\n\n        if (group) {\n            const aspectProperties = this.config[aspectName];\n            let properties;\n\n            if (aspectProperties === '*') {\n                properties = getProperty(propertyGroups, aspectName, aspectProperties);\n            } else {\n                properties = (<string[]> aspectProperties)\n                    .map((propertyName) => getProperty(propertyGroups, aspectName, propertyName))\n                    .filter(props => props !== undefined);\n            }\n\n            newGroup = [ { title: group.title, properties } ];\n        }\n\n        return newGroup;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\n\nexport class IndifferentConfigService implements ContentMetadataConfig {\n\n    constructor(config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return true;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map(propertyName => properties[propertyName])\n                });\n            });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentMetadataConfig,\n    LayoutOrientedConfigItem,\n    OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\nimport { getProperty } from './property-group-reader';\n\nexport class LayoutOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return this.getMatchingGroups(groupName).length > 0;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const layoutBlocks = this.config;\n\n        return layoutBlocks.map((layoutBlock) => {\n            const flattenedItems = this.flattenItems(layoutBlock.items),\n                properties = flattenedItems.reduce((props, explodedItem) => {\n                    const property = getProperty(propertyGroups, explodedItem.groupName, explodedItem.propertyName) || [];\n                    return props.concat(property);\n                }, []);\n\n            return {\n                title: layoutBlock.title,\n                properties\n            };\n        });\n    }\n\n    private flattenItems(items) {\n        return items.reduce((accumulator, item) => {\n            const properties = Array.isArray(item.properties) ? item.properties : [item.properties];\n            const flattenedProperties = properties.map(propertyName => {\n                return {\n                    groupName: item.aspect || item.type,\n                    propertyName\n                };\n            });\n\n            return accumulator.concat(flattenedProperties);\n        }, []);\n    }\n\n    private getMatchingGroups(groupName: string): LayoutOrientedConfigItem[] {\n        return this.config\n            .map(layoutBlock => layoutBlock.items)\n            .reduce((accumulator, items) => accumulator.concat(items), [])\n            .filter((item) => item.aspect === groupName || item.type === groupName);\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, LogService } from '@alfresco/adf-core';\nimport { AspectOrientedConfigService } from './aspect-oriented-config.service';\nimport { IndifferentConfigService } from './indifferent-config.service';\nimport { LayoutOrientedConfigService } from './layout-oriented-config.service';\nimport {\n    PresetConfig,\n    ContentMetadataConfig,\n    AspectOrientedConfig,\n    InDifferentConfig,\n    LayoutOrientedConfig\n} from '../../interfaces/content-metadata.interfaces';\n\n@Injectable()\nexport class ContentMetadataConfigFactory {\n\n    static readonly INDIFFERENT_PRESET = '*';\n    static readonly DEFAULT_PRESET_NAME = 'default';\n\n    constructor(private appConfigService: AppConfigService, private logService: LogService) {}\n\n    public get(presetName: string = 'default'): ContentMetadataConfig {\n        let presetConfig;\n        try {\n            presetConfig = this.appConfigService.config['content-metadata'].presets[presetName];\n        } catch {\n            if (presetName !== ContentMetadataConfigFactory.DEFAULT_PRESET_NAME) {\n                this.logService.error(`No content-metadata preset for: ${presetName}`);\n            }\n            presetConfig = ContentMetadataConfigFactory.INDIFFERENT_PRESET;\n        }\n\n        return this.createConfig(presetConfig);\n    }\n\n    private createConfig(presetConfig: PresetConfig): ContentMetadataConfig {\n        let config: ContentMetadataConfig;\n\n        if (this.isLayoutOrientedPreset(presetConfig)) {\n            config = new LayoutOrientedConfigService(<LayoutOrientedConfig> presetConfig);\n        } else if (this.isAspectOrientedPreset(presetConfig)) {\n            config = new AspectOrientedConfigService(<AspectOrientedConfig> presetConfig);\n        } else {\n            config = new IndifferentConfigService(<InDifferentConfig> presetConfig);\n        }\n\n        Object.freeze(config);\n        return config;\n    }\n\n    private isAspectOrientedPreset(presetConfig: PresetConfig): boolean {\n        return this.isObject(presetConfig);\n    }\n\n    private isLayoutOrientedPreset(presetConfig: PresetConfig): boolean {\n        return Array.isArray(presetConfig);\n    }\n\n    private isObject(x) {\n        return x != null && typeof x === 'object';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Observable, defer, forkJoin } from 'rxjs';\nimport { PropertyGroup, PropertyGroupContainer } from '../interfaces/content-metadata.interfaces';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PropertyDescriptorsService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {}\n\n    load(groupNames: string[]): Observable<PropertyGroupContainer> {\n        const groupFetchStreams = groupNames\n            .map(groupName => groupName.replace(':', '_'))\n            .map(groupName => defer( () => this.alfrescoApiService.classesApi.getClass(groupName)) );\n\n        return forkJoin(groupFetchStreams).pipe(\n            map(this.convertToObject)\n        );\n    }\n\n    private convertToObject(propertyGroupsArray: PropertyGroup[]): PropertyGroupContainer {\n        return propertyGroupsArray.reduce((propertyGroups, propertyGroup) => {\n            return Object.assign({}, propertyGroups, {\n                [propertyGroup.name]: propertyGroup\n            });\n        }, {});\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { BasicPropertiesService } from './basic-properties.service';\nimport { Observable, of } from 'rxjs';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\nimport { CardViewItem } from '@alfresco/adf-core';\nimport { CardViewGroup } from '../interfaces/content-metadata.interfaces';\nimport { ContentMetadataConfigFactory } from './config/content-metadata-config.factory';\nimport { PropertyDescriptorsService } from './property-descriptors.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ContentMetadataService {\n\n    constructor(private basicPropertiesService: BasicPropertiesService,\n                private contentMetadataConfigFactory: ContentMetadataConfigFactory,\n                private propertyGroupTranslatorService: PropertyGroupTranslatorService,\n                private propertyDescriptorsService: PropertyDescriptorsService) {\n    }\n\n    getBasicProperties(node: MinimalNodeEntryEntity): Observable<CardViewItem[]> {\n        return of(this.basicPropertiesService.getProperties(node));\n    }\n\n    getGroupedProperties(node: MinimalNodeEntryEntity, presetName: string = 'default'): Observable<CardViewGroup[]> {\n        let groupedProperties = of([]);\n\n        if (node.aspectNames) {\n            const config = this.contentMetadataConfigFactory.get(presetName),\n                groupNames = node.aspectNames\n                    .concat(node.nodeType)\n                    .filter(groupName => config.isGroupAllowed(groupName));\n\n            if (groupNames.length > 0) {\n                groupedProperties = this.propertyDescriptorsService.load(groupNames).pipe(\n                    map(groups => config.reorganiseByConfig(groups)),\n                    map(groups => this.propertyGroupTranslatorService.translateToCardViewGroups(groups, node.properties))\n                );\n            }\n        }\n\n        return groupedProperties;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Observable, Subscription } from 'rxjs';\nimport { CardViewItem, NodesApiService, LogService, CardViewUpdateService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { ContentMetadataService } from '../../services/content-metadata.service';\nimport { CardViewGroup } from '../../interfaces/content-metadata.interfaces';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-content-metadata',\n    templateUrl: './content-metadata.component.html',\n    styleUrls: ['./content-metadata.component.scss'],\n    host: { 'class': 'adf-content-metadata' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentMetadataComponent implements OnChanges, OnInit, OnDestroy {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    /** Toggles whether the edit button should be shown */\n    @Input()\n    editable: boolean = false;\n\n    /** Toggles whether to display empty values in the card view */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** Toggles between expanded (ie, full information) and collapsed\n     * (ie, reduced information) in the display\n     */\n    @Input()\n    expanded: boolean = false;\n\n    /** The multi parameter of the underlying material expansion panel, set to true to allow multi accordion to be expanded at the same time */\n    @Input()\n    multi = false;\n\n    /** Name of the metadata preset, which defines aspects and their properties */\n    @Input()\n    preset: string;\n\n    /** Toggles whether the metadata properties should be shown */\n    @Input()\n    displayDefaultProperties: boolean = true;\n\n    basicProperties$: Observable<CardViewItem[]>;\n    groupedProperties$: Observable<CardViewGroup[]>;\n    disposableNodeUpdate: Subscription;\n\n    constructor(\n        private contentMetadataService: ContentMetadataService,\n        private cardViewUpdateService: CardViewUpdateService,\n        private nodesApiService: NodesApiService,\n        private logService: LogService,\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    ngOnInit() {\n        this.disposableNodeUpdate =  this.cardViewUpdateService.itemUpdated$\n            .pipe(\n                switchMap(this.saveNode.bind(this))\n            )\n            .subscribe(\n                updatedNode => {\n                    Object.assign(this.node, updatedNode);\n                    this.alfrescoApiService.nodeUpdated.next(this.node);\n                },\n                error => this.logService.error(error)\n            );\n\n        this.loadProperties(this.node);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node && !changes.node.firstChange) {\n            this.loadProperties(changes.node.currentValue);\n        }\n    }\n\n    private loadProperties(node: MinimalNodeEntryEntity) {\n        if (node) {\n            this.basicProperties$ = this.contentMetadataService.getBasicProperties(node);\n            this.groupedProperties$ = this.contentMetadataService.getGroupedProperties(node, this.preset);\n        }\n    }\n\n    private saveNode({ changed: nodeBody }): Observable<MinimalNodeEntryEntity> {\n        return this.nodesApiService.updateNode(this.node.id, nodeBody);\n    }\n\n    ngOnDestroy() {\n        this.disposableNodeUpdate.unsubscribe();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentMetadataComponent } from './components/content-metadata/content-metadata.component';\nimport { ContentMetadataCardComponent } from './components/content-metadata-card/content-metadata-card.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ],\n    declarations: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ]\n})\nexport class ContentMetadataModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionElement } from 'alfresco-js-api';\n\nexport class PermissionDisplayModel implements PermissionElement {\n\n    authorityId?: string;\n    name?: string;\n    accessStatus?: PermissionElement.AccessStatusEnum;\n    isInherited: boolean = false;\n    icon: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.authorityId = obj.authorityId;\n            this.name = obj.name;\n            this.accessStatus = obj.accessStatus;\n            this.isInherited = obj.isInherited !== null && obj.isInherited !== undefined ? obj.isInherited : false;\n            this.icon = obj.icon ? obj.icon : 'vpn_key';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of, from, throwError } from 'rxjs';\nimport { AlfrescoApiService, SearchService, NodesApiService, TranslationService } from '@alfresco/adf-core';\nimport { QueryBody, MinimalNodeEntryEntity, MinimalNodeEntity, PathElement, GroupMemberEntry, GroupsPaging, GroupMemberPaging, PermissionElement } from 'alfresco-js-api';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Injectable()\nexport class NodePermissionService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchApiService: SearchService,\n                private nodeService: NodesApiService,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Gets a list of roles for the current node.\n     * @param node The target node\n     * @returns Array of strings representing the roles\n     */\n    getNodeRoles(node: MinimalNodeEntryEntity): Observable<string[]> {\n        const retrieveSiteQueryBody: QueryBody = this.buildRetrieveSiteQueryBody(node.path.elements);\n        return this.searchApiService.searchByQueryBody(retrieveSiteQueryBody)\n            .pipe(\n                switchMap((siteNodeList: any) => {\n                    if ( siteNodeList.list.entries.length > 0 ) {\n                        let siteName = siteNodeList.list.entries[0].entry.name;\n                        return this.getGroupMembersBySiteName(siteName);\n                    } else {\n                        return of(node.permissions.settable);\n                    }\n                })\n            );\n    }\n\n    /**\n     * Updates the permission role for a node.\n     * @param node Target node\n     * @param updatedPermissionRole Permission role to update or add\n     * @returns Node with updated permission\n     */\n    updatePermissionRole(node: MinimalNodeEntryEntity, updatedPermissionRole: PermissionElement): Observable<MinimalNodeEntryEntity> {\n        let permissionBody = { permissions: { locallySet: []} };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(updatedPermissionRole.authorityId);\n        permissionBody.permissions.locallySet = permissionBody.permissions.locallySet.concat(node.permissions.locallySet);\n        if (index !== -1) {\n            permissionBody.permissions.locallySet[index] = updatedPermissionRole;\n        } else {\n            permissionBody.permissions.locallySet.push(updatedPermissionRole);\n        }\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    /**\n     * Update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param permissionList New permission settings\n     * @returns Node with updated permissions\n     */\n    updateNodePermissions(nodeId: string, permissionList: MinimalNodeEntity[]): Observable<MinimalNodeEntryEntity> {\n       return this.nodeService.getNode(nodeId).pipe(\n           switchMap(node => {\n                return this.getNodeRoles(node).pipe(\n                    switchMap((nodeRoles) => of({node, nodeRoles}) )\n                );\n            }),\n            switchMap(({node, nodeRoles}) => this.updateLocallySetPermissions(node, permissionList, nodeRoles))\n        );\n    }\n\n    /**\n     * Updates the locally set permissions for a node.\n     * @param node ID of the target node\n     * @param nodes Permission settings\n     * @param nodeRole Permission role\n     * @returns Node with updated permissions\n     */\n    updateLocallySetPermissions(node: MinimalNodeEntryEntity, nodes: MinimalNodeEntity[], nodeRole: string[]): Observable<MinimalNodeEntryEntity> {\n        let permissionBody = { permissions: { locallySet: []} };\n        const permissionList = this.transformNodeToPermissionElement(nodes, nodeRole[0]);\n        const duplicatedPermissions = this.getDuplicatedPermissions(node.permissions.locallySet, permissionList);\n        if (duplicatedPermissions.length > 0) {\n            const list = duplicatedPermissions.map((permission) => 'authority -> ' + permission.authorityId + ' / role -> ' + permission.name).join(', ');\n            const duplicatePermissionMessage: string = this.translation.instant('PERMISSION_MANAGER.ERROR.DUPLICATE-PERMISSION',  {list});\n            return throwError(duplicatePermissionMessage);\n        }\n        permissionBody.permissions.locallySet = node.permissions.locallySet ? node.permissions.locallySet.concat(permissionList) : permissionList;\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    private getDuplicatedPermissions(nodeLocallySet: PermissionElement[], permissionListAdded: PermissionElement[]): PermissionElement[] {\n        let duplicatePermissions: PermissionElement[] = [];\n        if (nodeLocallySet) {\n            permissionListAdded.forEach((permission: PermissionElement) => {\n                const duplicate = nodeLocallySet.find((localPermission) => this.isEqualPermission(localPermission, permission));\n                if (duplicate) {\n                    duplicatePermissions.push(duplicate);\n                }\n            });\n        }\n        return duplicatePermissions;\n    }\n\n    private isEqualPermission(oldPermission: PermissionElement, newPermission: PermissionElement): boolean {\n        return oldPermission.accessStatus === newPermission.accessStatus &&\n               oldPermission.authorityId === newPermission.authorityId &&\n               oldPermission.name === newPermission.name;\n    }\n\n    private transformNodeToPermissionElement(nodes: MinimalNodeEntity[], nodeRole: any): PermissionElement[] {\n        return nodes.map((node) => {\n            let newPermissionElement: PermissionElement = <PermissionElement> {\n                'authorityId': node.entry.properties['cm:authorityName'] ?\n                    node.entry.properties['cm:authorityName'] :\n                    node.entry.properties['cm:userName'],\n                'name': nodeRole,\n                'accessStatus': 'ALLOWED'\n            };\n            return newPermissionElement;\n        });\n    }\n\n    /**\n     * Removes a permission setting from a node.\n     * @param node ID of the target node\n     * @param permissionToRemove Permission setting to remove\n     * @returns Node with modified permissions\n     */\n    removePermission(node: MinimalNodeEntryEntity, permissionToRemove: PermissionElement): Observable<MinimalNodeEntryEntity> {\n        let permissionBody = { permissions: { locallySet: [] } };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(permissionToRemove.authorityId);\n        if (index !== -1) {\n            node.permissions.locallySet.splice(index, 1);\n            permissionBody.permissions.locallySet = node.permissions.locallySet;\n            return this.nodeService.updateNode(node.id, permissionBody);\n        }\n    }\n\n    private getGroupMembersBySiteName(siteName: string): Observable<string[]> {\n        const groupName = 'GROUP_site_' + siteName;\n        return this.getGroupMemeberByGroupName(groupName)\n            .pipe(\n                map((res: GroupsPaging) => {\n                    let displayResult: string[] = [];\n                    res.list.entries.forEach((member: GroupMemberEntry) => {\n                        displayResult.push(this.formattedRoleName(member.entry.displayName, 'site_' + siteName));\n                    });\n                    return displayResult;\n                })\n            );\n    }\n\n    /**\n     * Gets all members related to a group name.\n     * @param groupName Name of group to look for members\n     * @param opts Extra options supported by JSAPI\n     * @returns List of members\n     */\n    getGroupMemeberByGroupName(groupName: string, opts?: any): Observable<GroupMemberPaging> {\n        return from<GroupMemberPaging>(this.apiService.groupsApi.getGroupMembers(groupName, opts));\n    }\n\n    private formattedRoleName(displayName, siteName): string {\n        return displayName.replace(siteName + '_', '');\n    }\n\n    private buildRetrieveSiteQueryBody(nodePath: PathElement[]): QueryBody {\n        const pathNames = nodePath.map((node: PathElement) => 'name: \"' + node.name + '\"');\n        const buildedPathNames = pathNames.join(' OR ');\n        return {\n            'query': {\n                'query': buildedPathNames\n            },\n            'paging': {\n                'maxItems': 100,\n                'skipCount': 0\n            },\n            'include': ['aspectNames', 'properties'],\n            'filterQueries': [\n                {\n                    'query':\n                        \"TYPE:'st:site'\"\n                }\n            ]\n        };\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { MinimalNodeEntryEntity, PermissionElement } from 'alfresco-js-api';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { NodePermissionService } from '../../services/node-permission.service';\n\n@Component({\n    selector: 'adf-permission-list',\n    templateUrl: './permission-list.component.html',\n    styleUrls: ['./permission-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PermissionListComponent implements OnInit {\n\n    /** ID of the node whose permissions you want to show. */\n    @Input()\n    nodeId: string = '';\n\n    /** Emitted when the permission is updated. */\n    @Output()\n    update: EventEmitter<PermissionElement> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    permissionList: PermissionDisplayModel[];\n    settableRoles: any[];\n    actualNode: MinimalNodeEntryEntity;\n\n    constructor(private nodeService: NodesApiService,\n                private nodePermissionService: NodePermissionService) {\n\n    }\n\n    ngOnInit() {\n        this.fetchNodePermissions();\n    }\n\n    reload() {\n        this.fetchNodePermissions();\n    }\n\n    private fetchNodePermissions() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: MinimalNodeEntryEntity) => {\n            this.actualNode = node;\n            this.permissionList = this.getPermissionList(node);\n            this.nodePermissionService.getNodeRoles(node).subscribe((settableList: string[]) => {\n                this.settableRoles =  settableList;\n            });\n        });\n    }\n\n    private getPermissionList(node: MinimalNodeEntryEntity): PermissionDisplayModel[] {\n        let allPermissions: PermissionDisplayModel[] = [];\n        if (node.permissions.locallySet) {\n            node.permissions.locallySet.map((element) => {\n                let permission = new PermissionDisplayModel(element);\n                allPermissions.push(permission);\n            });\n        }\n        if (node.permissions.inherited) {\n            node.permissions.inherited.map((element) => {\n                let permissionInherited = new PermissionDisplayModel(element);\n                permissionInherited.isInherited = true;\n                allPermissions.push(permissionInherited);\n            });\n        }\n        return allPermissions;\n    }\n\n    saveNewRole(event: any, permissionRow: PermissionDisplayModel) {\n        let updatedPermissionRole: PermissionElement = this.buildUpdatedPermission(event.value, permissionRow);\n        this.nodePermissionService.updatePermissionRole(this.actualNode, updatedPermissionRole)\n            .subscribe((node: MinimalNodeEntryEntity) => {\n                this.update.emit(updatedPermissionRole);\n            });\n    }\n\n    private buildUpdatedPermission(newRole: string, permissionRow: PermissionDisplayModel): PermissionElement {\n        let permissionRole: PermissionElement = {};\n        permissionRole.accessStatus = permissionRow.accessStatus;\n        permissionRole.name = newRole;\n        permissionRole.authorityId = permissionRow.authorityId;\n        return permissionRole;\n    }\n\n    removePermission(permissionRow: PermissionDisplayModel) {\n        this.nodePermissionService.removePermission(this.actualNode, permissionRow).subscribe((node) => {\n            this.update.emit(node);\n        }, (error) => this.error.emit(error));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-no-permission-template',\n    template: '<ng-content></ng-content>'\n})\nexport class NoPermissionTemplateComponent {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { NodesApiService, ContentService, PermissionsEnum } from '@alfresco/adf-core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\n@Directive({\n    selector: 'button[adf-inherit-permission], mat-button-toggle[adf-inherit-permission]',\n    host: {\n        'role': 'button',\n        '(click)': 'onInheritPermissionClicked()'\n    }\n})\nexport class InheritPermissionDirective {\n\n    /** ID of the node to add/remove inherited permissions. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated. */\n    @Output()\n    updated: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private nodeService: NodesApiService,\n                private contentService: ContentService) {\n    }\n\n    onInheritPermissionClicked() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: MinimalNodeEntryEntity) => {\n            if (this.contentService.hasPermission(node, PermissionsEnum.UPDATEPERMISSIONS)) {\n                const nodeBody = { permissions: { isInheritanceEnabled: !node.permissions.isInheritanceEnabled } };\n                this.nodeService.updateNode(this.nodeId, nodeBody, { include: ['permissions'] }).subscribe((nodeUpdated: MinimalNodeEntryEntity) => {\n                    this.updated.emit(nodeUpdated);\n                }, (error) => this.error.emit(error));\n            } else {\n                this.error.emit('PERMISSION_MANAGER.ERROR.NOT-ALLOWED');\n            }\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { NodesApiService, ContentService, PermissionsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-add-permission',\n    templateUrl: './add-permission.component.html',\n    styleUrls: ['./add-permission.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionComponent {\n\n    /** ID of the target node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated successfully. */\n    @Output()\n    success: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter();\n\n    /** Emitted when an error occurs during the update. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    selectedItems: MinimalNodeEntity[] = [];\n    currentNode: MinimalNodeEntryEntity;\n    currentNodeRoles: string[];\n\n    constructor(private nodePermissionService: NodePermissionService,\n                private nodeApiService: NodesApiService,\n                private contentService: ContentService) {\n        this.nodeApiService.getNode(this.nodeId).subscribe((node) => this.currentNode = node);\n    }\n\n    onSelect(selection: MinimalNodeEntity[]) {\n        this.selectedItems = selection;\n    }\n\n    isAddEnabled(): boolean {\n        return this.contentService.hasPermission(this.currentNode, PermissionsEnum.UPDATEPERMISSIONS) &&\n                this.selectedItems.length !== 0;\n    }\n\n    applySelection() {\n        if (this.contentService.hasPermission(this.currentNode, PermissionsEnum.UPDATEPERMISSIONS)) {\n            this.nodePermissionService.updateNodePermissions(this.nodeId, this.selectedItems)\n                .subscribe(\n                    (node) => {\n                        this.success.emit(node);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n                    });\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AddPermissionDialogData } from './add-permission-dialog-data.interface';\nimport { AddPermissionComponent } from '../add-permission/add-permission.component';\n\n@Component({\n    selector: 'adf-add-permission-dialog',\n    templateUrl: './add-permission-dialog.component.html',\n    styleUrls: ['./add-permission-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionDialogComponent {\n\n    @ViewChild('addPermission')\n    addPermissionComponent: AddPermissionComponent;\n\n    currentSelection: MinimalNodeEntity[] = [];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: AddPermissionDialogData) {\n    }\n\n    onSelect(items: MinimalNodeEntity[]) {\n        this.currentSelection = items;\n    }\n\n    onAddClicked() {\n        this.data.confirm.next(this.currentSelection);\n        this.data.confirm.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { AddPermissionDialogComponent } from '../components/add-permission/add-permission-dialog.component';\nimport { AddPermissionDialogData } from '../components/add-permission/add-permission-dialog-data.interface';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, Node } from 'alfresco-js-api';\nimport { NodePermissionService } from './node-permission.service';\nimport { ContentService, PermissionsEnum } from '@alfresco/adf-core';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class NodePermissionDialogService {\n\n    constructor(private dialog: MatDialog,\n                private nodePermissionService: NodePermissionService,\n                private contentService: ContentService) {\n    }\n\n    /**\n     * Opens a dialog to add permissions to a node.\n     * @param node ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    openAddPermissionDialog(node: Node, title?: string): Observable<MinimalNodeEntity[]> {\n        if (this.contentService.hasPermission(node, PermissionsEnum.UPDATEPERMISSIONS)) {\n            const confirm = new Subject<MinimalNodeEntity[]>();\n\n            confirm.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const data: AddPermissionDialogData = {\n                nodeId: node.id,\n                title: title,\n                confirm: confirm\n            };\n\n            this.openDialog(data, 'adf-add-permission-dialog', '630px');\n            return confirm;\n        } else {\n            let errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            errors.message = 'PERMISSION_MANAGER.ERROR.NOT-ALLOWED';\n            return throwError(errors);\n        }\n    }\n\n    private openDialog(data: any, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AddPermissionDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /**\n     * Closes the currently-open dialog.\n     */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    /**\n     * Opens a dialog to update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    updateNodePermissionByDialog(nodeId?: string, title?: string): Observable<MinimalNodeEntryEntity> {\n        return this.contentService.getNode(nodeId, { include: ['allowableOperations'] })\n            .pipe(\n                switchMap(node => {\n                    return this.openAddPermissionDialog(node.entry, title)\n                        .pipe(\n                            switchMap(selection => {\n                                return this.nodePermissionService.updateNodePermissions(nodeId, selection);\n                            })\n                        );\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryBody } from 'alfresco-js-api';\nimport { SearchConfigurationInterface } from '@alfresco/adf-core';\n\nexport class SearchPermissionConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `authorityName:*${searchTerm}* OR userName:*${searchTerm}*` : searchTerm\n            },\n            include: ['properties', 'aspectNames'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                /*tslint:disable-next-line */\n                { query: \"TYPE:'cm:authority'\" }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { SearchPermissionConfigurationService } from './search-config-permission.service';\nimport { SearchService, SearchConfigurationService } from '@alfresco/adf-core';\nimport { SearchComponent } from '../../../search/components/search.component';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\n\n@Component({\n    selector: 'adf-add-permission-panel',\n    templateUrl: './add-permission-panel.component.html',\n    styleUrls: ['./add-permission-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        { provide: SearchConfigurationService, useClass: SearchPermissionConfigurationService },\n        SearchService\n    ]\n})\nexport class AddPermissionPanelComponent {\n\n    @ViewChild('search')\n    search: SearchComponent;\n\n    /** Emitted when a permission list item is selected. */\n    @Output()\n    select: EventEmitter<any> = new EventEmitter();\n\n    searchInput: FormControl = new FormControl();\n    searchedWord = '';\n    debounceSearch: number = 200;\n\n    selectedItems: MinimalNodeEntity[] = [];\n\n    EVERYONE: MinimalNodeEntity = { entry: { properties: {'cm:authorityName': 'GROUP_EVERYONE'}}};\n\n    constructor() {\n        this.searchInput.valueChanges\n        .pipe(\n            debounceTime(this.debounceSearch)\n        )\n        .subscribe((searchValue) => {\n            this.searchedWord = searchValue;\n            if (!searchValue) {\n                this.search.resetResults();\n            }\n        });\n    }\n\n    elementClicked(item: MinimalNodeEntity) {\n        if (this.isAlreadySelected(item)) {\n            this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n        } else {\n            this.selectedItems.push(item);\n        }\n        this.select.emit(this.selectedItems);\n    }\n\n    private isAlreadySelected(item: MinimalNodeEntity): boolean {\n        return this.selectedItems.indexOf(item) >= 0;\n    }\n\n    clearSearch() {\n        this.searchedWord = '';\n        this.selectedItems.splice(0, this.selectedItems.length);\n        this.search.resetResults();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { PermissionListComponent } from './components/permission-list/permission-list.component';\nimport { AddPermissionComponent } from './components/add-permission/add-permission.component';\nimport { AddPermissionDialogComponent } from './components/add-permission/add-permission-dialog.component';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { InheritPermissionDirective } from './components/inherited-button.directive';\nimport { NoPermissionTemplateComponent } from './components/permission-list/no-permission.component';\nimport { AddPermissionPanelComponent } from './components/add-permission/add-permission-panel.component';\nimport { SearchModule } from '../search/search.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        SearchModule\n    ],\n    declarations: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    entryComponents: [\n        AddPermissionPanelComponent,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    exports: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ]\n})\nexport class PermissionManagerModule {}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Inject,\n    OnInit,\n    ViewEncapsulation,\n    ViewChild,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef,  MatDialog } from '@angular/material';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { tap, skip } from 'rxjs/operators';\nimport {\n    SharedLinksApiService,\n    NodesApiService,\n    ContentService\n} from '@alfresco/adf-core';\nimport { SharedLinkEntry, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-share-dialog',\n    templateUrl: './content-node-share.dialog.html',\n    styleUrls: ['./content-node-share.dialog.scss'],\n    host: { 'class': 'adf-share-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ShareDialogComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n\n    minDate = moment().add(1, 'd');\n    sharedId: string;\n    fileName: string;\n    baseShareUrl: string;\n    isFileShared: boolean = false;\n    isDisabled: boolean = false;\n    form: FormGroup = new FormGroup({\n        'sharedUrl': new FormControl(''),\n        'time': new FormControl({value: '', disabled: false})\n    });\n\n    @ViewChild('sharedLinkInput') sharedLinkInput: ElementRef;\n\n    constructor(\n        private sharedLinksApiService: SharedLinksApiService,\n        private dialogRef: MatDialogRef<ShareDialogComponent>,\n        private dialog: MatDialog,\n        private nodesApiService: NodesApiService,\n        private contentService: ContentService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n\n        if (!this.canUpdate) {\n            this.form.controls['time'].disable();\n        }\n\n        this.subscriptions.push(\n            this.form.valueChanges\n                .pipe(\n                    skip(1),\n                    tap((updates) => {\n                        this.updateNode(updates);\n                    })\n                )\n                .subscribe((updates) => this.updateEntryExpiryDate(updates))\n        );\n\n        if (this.data.node && this.data.node.entry) {\n            this.fileName = this.data.node.entry.name;\n            this.baseShareUrl = this.data.baseShareUrl;\n            const properties = this.data.node.entry.properties;\n\n            if (properties && !properties['qshare:sharedId']) {\n\n                this.createSharedLinks(this.data.node.entry.id);\n            } else {\n                this.sharedId = properties['qshare:sharedId'];\n                this.isFileShared = true;\n\n                this.updateForm();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe);\n    }\n\n    removeShare() {\n        this.deleteSharedLink(this.sharedId);\n    }\n\n    onSlideShareChange(event: any) {\n        if (event.checked) {\n            this.createSharedLinks(this.data.node.entry.id);\n        } else {\n            this.openConfirmationDialog();\n        }\n    }\n\n    get canUpdate() {\n        return this.contentService.hasPermission(this.data.node.entry, 'update');\n    }\n\n    private openConfirmationDialog() {\n        this.isFileShared = false;\n\n        this.dialog\n            .open(ConfirmDialogComponent, {\n                data: {\n                    title: 'SHARE.CONFIRMATION.DIALOG-TITLE',\n                    message: 'SHARE.CONFIRMATION.MESSAGE',\n                    yesLabel: 'SHARE.CONFIRMATION.REMOVE',\n                    noLabel: 'SHARE.CONFIRMATION.CANCEL'\n                },\n                minWidth: '250px',\n                closeOnNavigation: true\n            })\n            .beforeClose().subscribe(deleteSharedLink => {\n                if (deleteSharedLink) {\n                    this.deleteSharedLink(this.sharedId);\n                } else {\n                    this.isFileShared = true;\n                }\n            });\n    }\n\n    private createSharedLinks(nodeId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.createSharedLinks(nodeId)\n            .subscribe((sharedLink: SharedLinkEntry) => {\n\n                if (sharedLink.entry) {\n                    this.sharedId = sharedLink.entry.id;\n                    this.data.node.entry.properties['qshare:sharedId'] = this.sharedId;\n                    this.isDisabled = false;\n                    this.isFileShared = true;\n\n                    this.updateForm();\n                }\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private deleteSharedLink(sharedId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.deleteSharedLink(sharedId).subscribe(() => {\n                this.data.node.entry.properties['qshare:sharedId'] = null;\n                this.data.node.entry.properties['qshare:expiryDate'] = null;\n                this.dialogRef.close(false);\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private updateForm() {\n        const { entry } = this.data.node;\n        const expiryDate = entry.properties['qshare:expiryDate'];\n\n        this.form.setValue({\n            'sharedUrl': `${this.baseShareUrl}${this.sharedId}`,\n            'time': expiryDate ? expiryDate : null\n        });\n    }\n\n    private updateNode(updates): Observable<MinimalNodeEntryEntity> {\n        return this.nodesApiService.updateNode(\n            this.data.node.entry.id,\n            {\n                properties: {\n                    'qshare:expiryDate': updates.time ? updates.time.utc().format() : null\n                }\n            }\n        );\n    }\n\n    private updateEntryExpiryDate(updates) {\n        const { properties } = this.data.node.entry;\n\n        properties['qshare:expiryDate'] = updates.time\n            ? updates.time.local()\n            : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, OnChanges, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\n\nimport { ShareDialogComponent } from './content-node-share.dialog';\n\n@Directive({\n    selector: '[adf-share]',\n    exportAs: 'adfShare'\n})\nexport class NodeSharedDirective implements OnChanges {\n\n    isFile: boolean = false;\n    isShared: boolean = false;\n\n    /** Node to share. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-share')\n    node: MinimalNodeEntity;\n\n    @Input()\n    baseShareUrl: string;\n\n    @HostListener('click')\n    onClick() {\n        if (this.node) {\n            this.shareNode(this.node);\n        }\n    }\n\n    constructor(private dialog: MatDialog, private zone: NgZone) {}\n\n    shareNode(node: MinimalNodeEntity) {\n        if (node && node.entry && node.entry.isFile) {\n            this.dialog.open(ShareDialogComponent, {\n                width: '600px',\n                panelClass: 'adf-share-link-dialog',\n                data: {\n                    node: node,\n                    baseShareUrl: this.baseShareUrl\n                }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        this.zone.onStable.subscribe(() => {\n            if (this.node) {\n                this.isFile = this.node.entry.isFile;\n                this.isShared = this.node.entry.properties['qshare:sharedId'];\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ShareDialogComponent } from './content-node-share.dialog';\nimport { NodeSharedDirective } from './content-node-share.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    exports: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    entryComponents: [\n        ShareDialogComponent\n    ]\n})\nexport class ContentNodeShareModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { SocialModule } from './social/social.module';\nimport { TagModule } from './tag/tag.module';\nimport { WebScriptModule } from './webscript/webscript.module';\nimport { DocumentListModule } from './document-list/document-list.module';\nimport { UploadModule } from './upload/upload.module';\nimport { SearchModule } from './search/search.module';\nimport { SitesDropdownModule } from './site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { VersionManagerModule } from './version-manager/version-manager.module';\nimport { ContentNodeSelectorModule } from './content-node-selector/content-node-selector.module';\nimport { ContentNodeShareModule } from './content-node-share/content-node-share.module';\nimport { ContentDirectiveModule } from './directives/content-directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { FolderDirectiveModule } from './folder-directive/folder-directive.module';\nimport { ContentMetadataModule } from './content-metadata/content-metadata.module';\nimport { PermissionManagerModule } from './permission-manager/permission-manager.module';\nimport { RatingService } from './social/services/rating.service';\nimport { ContentMetadataService } from './content-metadata/services/content-metadata.service';\nimport { PropertyDescriptorsService } from './content-metadata/services/property-descriptors.service';\nimport { ContentMetadataConfigFactory } from './content-metadata/services/config/content-metadata-config.factory';\nimport { BasicPropertiesService } from './content-metadata/services/basic-properties.service';\nimport { PropertyGroupTranslatorService } from './content-metadata/services/property-groups-translator.service';\nimport { SearchQueryBuilderService } from './search/search-query-builder.service';\nimport { SearchFilterService } from './search/components/search-filter/search-filter.service';\nimport { ContentNodeSelectorService } from './content-node-selector/content-node-selector.service';\nimport { ContentNodeDialogService } from './content-node-selector/content-node-dialog.service';\nimport { DocumentListService } from './document-list/services/document-list.service';\nimport { FolderActionsService } from './document-list/services/folder-actions.service';\nimport { DocumentActionsService } from './document-list/services/document-actions.service';\nimport { NodeActionsService } from './document-list/services/node-actions.service';\nimport { CustomResourcesService } from './document-list/services/custom-resources.service';\nimport { NodePermissionDialogService } from './permission-manager/services/node-permission-dialog.service';\nimport { NodePermissionService } from './permission-manager/services/node-permission.service';\nimport { TagService } from './tag/services/tag.service';\n\nexport function providers() {\n    return [\n        RatingService,\n        ContentMetadataService,\n        PropertyDescriptorsService,\n        ContentMetadataConfigFactory,\n        BasicPropertiesService,\n        PropertyGroupTranslatorService,\n        SearchQueryBuilderService,\n        SearchFilterService,\n        ContentNodeSelectorService,\n        ContentNodeDialogService,\n        DocumentListService,\n        FolderActionsService,\n        DocumentActionsService,\n        NodeActionsService,\n        CustomResourcesService,\n        NodePermissionDialogService,\n        NodePermissionService,\n        TagService\n    ];\n}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ]\n})\nexport class ContentModuleLazy {}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ],\n    providers: [\n        ...providers(),\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-content-services',\n                source: 'assets/adf-content-services'\n            }\n        }\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ]\n})\nexport class ContentModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentModule,\n            providers: [\n                ...providers(),\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-content-services',\n                        source: 'assets/adf-content-services'\n                    }\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentModuleLazy\n        };\n    }\n}\n"],"names":["moment","filter","merge","map"],"mappings":"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"}
